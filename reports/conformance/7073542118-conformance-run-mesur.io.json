{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ed57cfaa-ff04-458d-98d1-26e20c48027b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0aa705de-4c3d-4294-8cf5-2e577e0788ec",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5182b28-0765-4abe-80b1-02783e6adab8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "42837638-9c87-4596-a23e-343a93102e11"
                }
              }
            ]
          },
          {
            "id": "0c67a50b-b3bf-489e-ad54-a4006134bf17",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f422419-f510-4ea3-8ed8-6c6ebbd660ce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "95cf6952-90d9-4b07-ae0a-7b0f12ad4346"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "200c8479-f3a2-4d64-beb1-254cb87850fe",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "511e5044-01cb-445b-ba52-f428fd829dc9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ece35b05-ef0e-47f7-8567-fbb2bfffaeff",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e020372a-b39e-4885-bdd4-747e35721ff4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ae006df-bc84-4261-a838-ebce5fe549a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21eb9290-908c-4651-8f27-79d1270b11a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59ccee6f-3d26-4b83-a30a-eb6a0b640dbb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2140911-aae1-4166-a666-b6f284984319",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6effd27-63ed-4a25-97b1-7a1de5ea675f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd2f5d17-b93c-40b5-a59f-0e2675f78985",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "232c7c45-b7af-41a4-94e1-51560b9173ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "320c8493-d248-46ce-8b12-f2cd4a2465f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b00c522-23b5-4572-8ed0-7b8e298675fa"
            }
          }
        ]
      },
      {
        "id": "3eaec30a-28fa-46b3-87ab-5ec743cdae70",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a3d1b8ec-3aa2-4439-8e90-72e26e5705a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6648af61-65b8-491d-a5b6-d8f260d21e9c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d41a376-ba9b-40ae-b028-0188db33e27e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f41d023-4a99-4df9-b693-6bf34f992121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed5ca668-2a8f-440d-8da4-0a16f9957e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a4e5ff-6399-487d-b9cd-ff7649daa5bc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5912f58-564c-4f1a-9cc7-a1521614b0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "feb49cc7-1ffb-49d4-a19c-6ddacabb566c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b53c3c0-c83c-43d4-a334-59a47748f431",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666f5ce2-5f0c-4d83-955a-f263f77d3323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2e5fa56-b7cd-4b65-82a2-3fc6fb46cd21"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6db7165-9d1f-46b7-bff6-bfe0bc015e48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0959d8d1-ca1f-4369-9c9d-630b2dfe47e9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab553d55-db37-4474-8c39-32dd7724ca79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e78f0d84-bf8b-4232-8f48-d85f5979fcdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf8e8c3-91dd-4a02-92fe-2e11f38ccf90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5bb70b-d638-4a1b-a46f-040bf501c7af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d32664c2-c669-4015-9ef2-3960148c0e2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2151b28-c646-4cd9-a9eb-6e16ee011984",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1cde366-289a-4534-8dc2-2be99209c8a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0da07790-9024-4c34-bd69-33566ede5abd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88592617-bc01-4e31-8457-1cc4b9a3d8d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "adcb502a-a963-4728-ada9-f7de65253fc6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff264a5a-fe86-493f-9391-98fb75f615f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e1d3d4b-75a0-4cbe-8e2c-78848500de7f"
            }
          }
        ]
      },
      {
        "id": "bf5a23ae-ba52-4c58-84c9-dbc0b25e143b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fe2269d2-2bad-4f41-8a84-5863d2bf6385",
            "name": "Negative Testing",
            "item": [
              {
                "id": "670d80f2-c73c-48ed-b234-1a22d6f438b0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "45fcf778-021c-46a1-9fe3-20d2e192d69d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661e5c50-2b59-4624-a405-8c8f0a88284f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6bab02-cf75-4808-ad3e-b0565a88e6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7537150-52b6-4956-9903-5b13524567ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2345fc51-c1c4-4379-b474-7bfa5bd8b8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278d0373-7667-41f5-9b3a-75cb06f128d7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb32975-453d-45eb-a4cf-de9beceb27ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3b6a84-5654-4758-b8b0-31815c8a22ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d583c1f4-6fd5-44b5-a783-64d860f2c41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8919157-1ebc-4bfd-b594-b47b7e9fac27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d061237d-f1af-43cf-b46a-30caf3fda0f6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb741480-ee7f-4a81-849c-e6fe9a3f7387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b11625-2897-48ff-aba5-0bc559ce2b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44167691-d164-4a04-a854-0f5a75a33ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61408097-9b5f-4270-844a-059767b174cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ff76a0-42af-4813-a1cd-eaa7da49f1cb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f73a7fd-cdbc-43d7-a0ec-bea04c1ac9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f359d7b3-0cda-4062-a7ec-632d032d22cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba766a8-69d9-43ba-a840-b4daf6dbbd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0929c5de-7d4e-4589-a892-f439d774c5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61748c38-f5b1-41cd-91d1-de7bfd99a565",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8700dc40-ede5-4d90-a3d3-b5388692c746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15be5821-a4a1-401a-857a-f3572111fb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e151ac0c-025d-411e-9389-ac91aa2c26e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cb061c5-e84c-44c1-ab5c-c5ee5f9c6402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f40359-899b-448e-837a-5c9033e8e999",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308e2838-1fb2-4e11-8dc2-6d824db84ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a56047-a40e-4514-8c3a-b610861f1494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd79e4a9-9f83-47be-8529-67a3825db41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bb7cb3a-6273-49ea-9a38-fe8c2f8b79fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711b7156-8ef6-48a7-844f-4dd697532282",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df254ea-2b35-43a5-9ca8-ad9abc47ce92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1545cd-30bb-4fbb-b147-37e1acabadbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad721ed-a7a9-43f9-a2c2-11eec25719c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3650686-63c4-4095-ab9e-043438bff13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7817530-b4a1-4827-8bb9-3e171e6be98b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f5f9d4-cdd0-4bf5-a97c-4d1e973618d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2953ec64-ab7b-4d45-9d60-955b3834959a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e338cb-ea19-4a21-9186-58f5a651b231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "988afe83-6c09-4045-ae9a-30b7014b5e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18421113-a878-4995-b104-c8560466f8e2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ae4770-f1bf-4680-ab0c-6b520db12bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde836b2-47ff-48d9-b2dc-74e5aaaf876a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b7897c-816c-4227-842f-31cd1cb179be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f052ce3c-1b8a-4efa-b880-9242ee47a15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4147b6c-55a2-479e-8f42-6bfc7ca66a93",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74aefee2-6b1e-4ad6-8e58-d8b5eac1cdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2078139-61eb-4fde-b286-2394536c3638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f0fc01-34b6-4d23-9ba9-4ebd9eb39c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eebbe0c-1f2c-4670-bb9a-bb8e381e1001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c88f2d3-c82f-4282-8dab-ae3693e208d4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22cb49c-ef72-4db2-8d55-50a752569046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635c87b1-93fb-479c-932d-486587b78088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf9d608-f4a1-42df-a61b-1eaa3331fd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6618e976-66e3-4e9c-8329-5a009968f2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96ba7d4-cd61-49e2-91df-72416657732f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2de6d6-8b05-4320-972b-a2ef13d6a9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae438cc-87ca-4d79-86ef-45c5c7430910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d088945-b71b-4733-863d-3aa60109e2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c6ed310-8ca3-4832-82f3-cb86b460f461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37677527-b806-4a61-87b1-c37344314a58",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dc4266-fdfb-43e3-a69f-6f4103239d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eda68f4-5829-460d-b02b-f54c9a28598b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ecdf8d-6eed-408f-8174-3fc5a2d83124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d10966bb-d280-48a4-9265-d719f27886f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60900707-82c6-4e80-972b-53e93c4f0910",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c642057-2ce1-4215-b376-59aa85c97656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2963809-d5a9-43e5-8f7e-63131336895f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b331c95-e147-4c15-b10c-b8fc24f86609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad21866d-b7eb-474c-bf57-ae54c5bb86a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9102689-4d89-405f-a94f-17f3e0cc18c8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c6bedc-88eb-4ef7-9114-cc749d55c02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671d14c7-6f33-41f1-9483-a0e5a8fcbe6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c49c34b-72ef-4638-a7cf-d706f1c97e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "084c9e6c-3ce1-4735-86c2-d70998066d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a857950-02d1-4ede-b508-6b8e4692d915",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317a94c7-ce8f-4e34-a6d1-39ea0fc305aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f079d72-d0f6-4215-92df-2f826ac24ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4621220a-b671-4356-abd0-a8701532e634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f39870c-3588-4189-996a-2286ee541ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94905ce-6127-490e-bd2d-fc348dcc3d3d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bec5b7e-c946-40c0-9031-914a90dcb9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1e0d98-95f6-4df2-956b-8bdc237881f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e59797-e68e-4a77-aa99-6c658a30a8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2b68278-a2ed-4d00-a9a2-3e7a4fb3672a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d48888-ea42-4606-8f78-d7c39bf947fa",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6f8b61-8151-42ac-8210-7f0c919c2ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab707859-88c5-4ce2-a86b-b4f08f623a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509f8991-141c-4cb9-80c7-e546998ba87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4668652b-b381-4e02-aa93-b121e7a40499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22621d9-19cf-4565-a4cd-ae04ce37810e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61d6e4a-f500-47d6-b642-f378b87d7487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a58be9-b837-4372-ba4d-87687032d7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a89960a-c207-4dd4-a6d1-2e01eba7e4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83ea6c80-9ea7-4194-95a1-35a8f88f52e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dc6ebf-f177-407c-ad0d-74b34d25659c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25981620-801b-49f2-b6ee-658ab4272394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3ac1ef-305b-4f94-81a6-d27acac0a408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2c7426-ade4-41cb-94f3-43d3cc33a890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8df46850-72aa-420d-90b2-e7aab451613c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e72cf7-8b68-42e5-916d-539546e8b6a2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1882ad-d692-4d18-a65e-5ca37c08431a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b292efc-0cbf-470d-8c95-4dc42236d239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b12a60-630b-4961-911f-1fa882d5c400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de102d1c-5cbc-4c3b-ba36-7c5f9ade36dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b9ff51-97fa-4b72-b6ad-33134ca36d9d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a4eb01-ada6-4272-805e-d42fa9667f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f028e5b7-cfa7-4b09-9963-6dd2bd523a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b53c85f-b6f1-4b53-a93a-64a9c442774c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b276c5b7-1d19-41a4-a45f-85d228752a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee928ff-cab7-4f0c-810f-fd5abf92d330",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331a5000-ce52-420c-886b-dc6b507756e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7a598f-ba07-43f0-964f-2964ae9a31f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8da2419-6b4a-4fc7-b4c0-4f4c8878a8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48490e46-fa92-4d09-98b3-d737ac3d1ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ac3365-cd4d-4072-97d0-43c79cce3db7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0248459e-aeee-4d12-8e09-39dd264c7838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6738760b-ae9b-44ab-a8c1-74cdcf8fac8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ccb1f6-0559-4e27-8914-f7336ff465e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9c88f4-73b1-4139-9f4a-9ca136e16ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f8c32c-53b8-4136-a7cb-1a494a054049",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ce5bd9-f17d-460e-9a17-3a39dfc6382e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff400830-98b2-442e-ad07-7915260b4dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8ed5d2-c99c-43ef-afee-003e5a026383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "074461b6-3d7f-4b6e-8483-bc4d0840ce66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3f37d8-0f05-4f61-ad78-6df60593986c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c29da9-1cfd-4444-b4ac-f4077d893b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3374a06-b0ae-4b72-a858-62017f6acdf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5705a2-df90-4dfe-b100-3d2b530ea918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3ae8dd-5983-495c-b098-9396fba2d2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcfe928-56ad-42af-be58-8b35c22e1ebc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d966062-cb0d-411c-8bfd-62f12ffd0cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d732f9-6b2d-4d9f-b40c-67b5fcfb5b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6ce4f7-4eb6-46a4-bdc9-f4e33e071098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "899af371-3079-4f05-a8ca-068b34a8f310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409f5c53-8deb-457a-bf32-754be618c6b9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e9efd7-3e6f-4ea8-99d9-49e977e0cc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e4662e-b164-47b0-b7fe-4c0b0d5b12b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cc1b76-9b88-41c6-b8b9-9a3abb978aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2b1309-29bb-400a-8f94-0ee57572c969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e252c71a-3701-47eb-819e-e76d426b95dd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9833b10d-d994-4185-a5f5-1743478e6742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a352dc-8979-46b3-85d8-a32efbb4a9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3859bf-9f75-47ee-baec-828465c9119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22b9f894-4f8a-4d43-b37e-2197b2b7691c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395bb402-a485-4657-96ad-9f0c17376030",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22232f9-643d-43bd-85ab-08cb9c08d780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe56adf6-1211-4036-876c-3e6250b9b247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cdc17e-1b6e-43fb-9781-45074d467cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc74bdae-b7b9-48e1-af32-9b8f45ac442b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a42f593-63d3-4cac-886a-44d421591b58",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0097c27c-94f7-4e8c-8ae7-132cf75043ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04cf4c72-86b3-4e90-a41d-edbab34adbe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7798a1-136b-4596-8032-ea5a089c3a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "759066cc-7301-4f7f-851b-9a9fa5db9285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0506b28a-2ab2-475f-9013-8c2cd6af01d7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ba5faf-af45-469c-8521-a977a5f756ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e42997-c1ad-446c-b80a-e4cdbf125cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8fb571-50bc-40af-9c91-fd95ec37152c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31917957-ccdd-4b54-889b-a7578d598c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80097289-a230-4a94-86b4-0c55f1d45d4e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e636e5-73ec-465c-b4f5-93b2160a05b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819e20f7-4b21-483f-b87d-c426e82c1099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78c69ea-b683-475a-b4d8-d60f397f8b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14ad5cd0-eec9-46db-aad5-f81dab2c090b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c94f093-d64d-446b-bc0f-477ada8ab14f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33978133-e592-44fe-9f4f-d883d8ef527d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63999b40-17ea-4dcc-bfce-c55aad1cd165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bac4808-e602-4d86-99c2-7f489dda37f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51f23286-b7d3-4b8a-89be-771baf8525e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2506a1db-006f-4863-a19f-d94089250e73",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a452a4c9-0e47-4d64-8a87-3bf3497c3744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffc4b56-ab3c-4893-9e21-21e92fde645b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f9e098-e9ea-44a1-85dd-6fa7fdb48d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1d626b65-ccc8-4879-b8f9-37b1b8cb90ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58440343-22e6-4878-996c-80225df6ecd6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9969c72-b03e-4282-afe2-ca334245e061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85244c42-f053-4cb9-960e-c4c0776c5c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89b0bf8-a94c-48ad-80fd-8011d40867aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83832c79-8506-4556-9b46-476e20e600b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47722be9-f070-42a4-8228-bb4894ceeb1b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb513593-b4c3-485a-861c-36debe33107a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e1bb00-3900-4e04-b4c2-8064200be1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c636cdda-0788-418d-9804-3a6b10c843a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84adcc3c-e9b2-4677-95a2-2ff8d3ce1a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464da84d-ec80-4309-b72f-f94b3716ba2f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d442109-e47d-417e-84e1-a1f244af4eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de3cd70-e322-46fa-97ec-ba15fe7e090c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4299e9f7-7a43-44f5-ad2c-39e8b8807aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d30e5a50-8726-45e7-ac4d-1c0de469349f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178ab487-5196-47d3-8198-14c90fb49a3a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2920f2cb-c48b-41d1-bfcc-f1d8262b2efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40181bb-07ad-4745-a298-a8c04aeca90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864e4f95-cc49-4b8a-9d1e-8a8dedff9f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2d29b4-3e0d-4f01-bf2e-c4aee79ef3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4d1c92-839a-4f2b-b8b1-0b2674355662",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed713b8e-94be-4b0d-8a05-3729f0068a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add860ee-2c81-4109-b6d1-e5dab8132759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29ebfef-c6f2-4ed1-86a7-c78ef43cefd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c430cc4a-52e7-4547-8c20-82cb208660e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5db54d-6941-489d-bd00-3cda3499c3ba",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5ed27b-f8ec-4eeb-a0fa-666c75cf56ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b9d62d-22ec-4f8e-a871-8875e5b53a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb18ea02-33d2-4e66-8794-0c0bf4f33d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e56279d3-4902-4bfa-b2c1-3a3515abce0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07cafbe-2168-4645-9e94-a4b4bacdc263",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c476cdfe-5efc-466d-b6e6-df2bf8e736b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767e2282-e08b-4610-a165-8f536a088f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46af14ac-d560-4a1d-b839-fa98901636ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a94ff92b-06e3-437b-82bf-ae476cbf979b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45aeccb-63a0-44e3-ad0b-0c0441bc9388",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72ba171-9052-4214-8119-c8400e17f34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d969aeca-8866-4e99-bb37-8f7e8681a258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8950f3e4-9eea-46c4-a4d1-4304312c38f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4655f5fa-d17c-4d11-ad95-50bb3c6db200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd2baed-9c0d-4c97-ba6d-e471f69af1fd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0988d37-5a0e-47a8-99bd-fa06c7f16b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc200d86-944d-4ac4-9011-05403768f7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80d8594-9bed-4b4e-913f-510804ac636b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b288710e-4477-4099-b513-6648e38e4f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890a71ba-e9bc-43b8-9611-003a01fc567a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00abdee0-f359-446a-81a7-36c5ac5e3b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bc8e38-371d-4709-a90f-d3d5fd8c29f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95493d05-4f06-4850-9e50-4c8cd94a5ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61e3f42d-5019-4aaf-bc56-92cecffcd323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b323a1-fddb-4fd1-83b1-5a76972559a2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fce479-6415-4ab2-8e1d-8a5303d219bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58ac56c-a053-465f-9eaf-1f319cb726ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0de8c2-94e1-4a8e-aa7b-720189483db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "302f21c3-60ad-4ae2-b56c-c62cd6bd5adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35025b42-8135-4fc9-90c3-42c11dc5ff7a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0386927e-d85d-474b-89f7-1e12e54432a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd987bc-04aa-4ca7-af90-f954e752189b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3dd5b6-c8bb-42f5-a250-34da9e6b6021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14319eed-89f5-420c-815b-8517d29bc70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d59f0ac-3139-4464-b04e-f356fd2b45a7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e0d027-4e30-4a38-bda6-0120ef071322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d04b096-c80a-4f7c-ad95-a28283499469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f607e919-367c-4ddb-945c-db5ea374a641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16ebe7a7-2b31-4eff-9070-9605c9a16fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb8b143-5673-441a-a1fc-56bf2afc15ae",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ac600a-01cd-433d-bc7f-f4a6385cd5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e010d9a2-4921-4d98-a1df-2d3fb19beecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5b0222-2995-44c9-a907-51f12b35fec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ccfdd0d-b7df-4d21-8071-fc61641823d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274c33fe-e3cc-4165-8c62-463e6b49ccea",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a073df8-22db-4fb8-8134-ca2ee05196b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0945db-dc39-4c71-8496-5770ecfff57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec083676-db8a-4326-b702-529c33308229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "109ec498-6d86-4227-8819-82d6390dd352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5235519e-fd96-4393-9f3c-4d68de7a7c8c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865c1e90-edfb-443d-ae31-19a566f6ce34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37df83f1-a202-4573-b5de-288824c309d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ea3b8b-4f76-411d-b01b-2b182151f1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0947c5e-bb3e-4e97-bf50-fd429aec595f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17d2ede-7c8b-4b1d-9510-e59865fb1604",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f302bb11-4c98-4b37-8eaa-161f10f1415d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a71996-a7f7-4c4b-9279-51b8cdb6f0d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd38dadc-6a03-4efb-bc93-c5d689502f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf994ce-38dd-43dd-801a-84cb8d27f6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a61c91f-67d1-464e-9142-7ea601963594",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d45bf53-b448-4993-aefe-251641e4ab0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46eb09d5-301f-4a53-a026-56f5cc4b006e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ca06ce-5cdc-4f4c-9909-5b89a151505c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "789671ee-058d-4bdb-9e77-7ba78ec1df96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1d7c1c-cded-4907-9fd4-1ad14dbf80f9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b842d3-2cec-409f-843b-c8ca7249ee0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706eea43-182c-4fa9-b910-54b061a2eb39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc8043e-d676-4a38-a316-f2b101478bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "900fbef0-edb7-4e27-8243-a370d1bbf800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356feeef-bf80-491b-9c94-de3d73caa310",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d9eecf-46fd-4bf2-a868-286b54a3a734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d2757a-a619-4bb6-b9f1-4d31b3644d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb00267-5f4b-45b6-a05d-f8c8b61945c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf9b9e3-5727-4a85-ac7e-9cf95d7d02cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d447a6-8930-437c-ab25-6cd0f828889e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73a871c-6e01-41fa-9f0e-1a613a098de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c131dba-011b-4cb5-93f7-ed09fe1a3251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f22435-bd02-43aa-bf60-9889c86eb738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "65b3a719-1a63-4f5c-b6ee-d8c0a1c2b720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15af936-f13a-4249-9e59-bfb1e90a39aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc3787f-73dc-4b8e-bf3b-25d73f982864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e25942-d9b4-4ef4-b4b0-4fa977acfde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9477afe2-4a8e-4101-855f-aeda9379f422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1dc9701-1342-4a00-8578-b77aae36726b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507f185c-8642-42d3-8c85-1c6b059c62b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc6f599-56e7-4d00-b4a4-1c50a6f98170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181872be-823e-4206-8823-041a2a973b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdeb0c4-4570-4708-8428-00426d2aa5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5eefb0-d95a-41af-9f2b-f593b93b6ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4520b400-c38c-4ac6-adac-cc16de2879f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcde3fd-19d9-46d1-8a52-a3a57aaba61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3680903a-74d3-4a46-b719-7db1f747c7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e85841d-c0c2-4157-9da2-58a089d465f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "53d18316-142d-4efa-bcb8-c5631add27ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2418978f-db52-426e-a193-1929cb1048f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9902b052-9e7e-4dce-aece-fb47f5812a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd54c09-1b69-4efb-8da3-e882b18c7095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1c7e0e-712b-4c02-bd91-87bb37588f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2986309b-8b8d-4124-a403-e548a2780b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e500728-8557-4d80-9a6e-156ddf73e23a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe2df32-a169-4d47-b803-a0a891dd1da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5ac491-e28a-4cd8-b9d1-861d1ead5cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603c9d41-8db4-4324-80e6-a6997694a7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bc11c8-cfdf-494b-bd6d-920a904f71d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78323567-7354-42d5-98c6-430b63b3ea66",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05bb5ce-c631-418a-8017-c2b5dab5773a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2670f90-0f30-40b1-8d4d-507c04ea86d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69ba092-74c6-4cd1-af81-0ab589694241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "55c01ff0-5ecb-4fc3-a0bb-696ea926de87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d688cc73-686c-4d50-86a9-2e493bdc6349",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d0f967-dcb2-4d9f-907a-3e1bed0d2458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c15fc8-629b-4132-9baf-b47b69a30c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4feda23-5bdd-43b7-9509-b0ea06fefb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e07029-b1a4-43aa-ac9a-f28d63030958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da6e3ae-ccd8-44cf-9ab5-e0f220d57124",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb2a8e8-ce37-47ce-bce4-f2097f8df5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35205d2-5dfd-4e47-af8c-348ccb39b1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbec4dff-145f-4f98-8d8a-f0ae210c8e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9cdc38-6b5b-406d-8ebc-1dfbdd7206b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c085e1-4c8b-408e-9276-d260df060680",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99732046-662f-44cb-bb62-67ea2f771b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa87a71-1261-43e5-9554-cc43de24766b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da891fb-f3cd-473a-92ee-649a8e103744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82d09976-2e7d-49c3-ad2a-2920731bca72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee3d533-5b3a-496a-8075-c8eae8725993",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5910df5-a16e-49bc-91df-4968dad66c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5feed4-0b98-4219-9c2c-bf6366d9949d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5632e82-501a-42ca-8755-5e64651f318a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cee4d535-12c2-443d-92c2-a247bd06bd14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9851a839-95e7-463d-9d4b-0f2c6ed3f982",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7611a63f-e476-4d24-ac8f-d11b94a7f655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52864314-65f5-46a1-9071-607735cc6133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb1e785-da3f-4bde-9682-d1e3b412173d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a67e1c1c-cd23-49a3-9dd9-0b1faf0c7d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3277deb7-f170-4e6e-889d-da8f9476b862",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bc5275-0d21-44bd-bacc-25af7151cf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2ab3f2-9088-4ef1-bf2f-5225a7720d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fff9bcb-9f32-4441-8953-d7c29178fe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b435dafb-2615-4692-9010-beff0b379825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144c6c63-097f-4243-b5e4-f59692789203",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4d16fa-93da-427f-9e6e-3a2a52ce340a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c928c6d0-8ebe-49e9-97df-7938e1827d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceda5efa-99ea-4e82-badb-5fb96b60e451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be912457-ce42-49b0-99d2-53b24cd0b2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47732eed-e78c-4649-a0f7-c621bbc51394",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c161bd63-1986-44d2-907e-cfe0341836bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09999049-2a32-4050-94ac-dc8786fe103a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378be708-58d3-44e0-ad79-547a64def0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b170aedd-a1d4-4c5e-9aa1-dbe47e423eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855ad40e-4cf3-4454-a26b-3b44fef5e751",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c08ef9-9bda-4e5f-ba9d-624cbbb36537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c998c4e6-7b39-45e1-a42e-fdaf09f65b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09db3176-2f9b-415f-9d5b-10bf5a52f09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39280ddd-2a3c-4a7f-85d4-99f7c8a10d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb4ccac-8970-45dd-bde4-995a54b41b1a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bd4f6a-5ea2-4d5e-89a5-439cc3ca2914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23149124-b0a6-419e-a7f9-d6793a3fa98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c346f235-c99f-4c72-8478-bb5c4351dc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cca52485-04a2-48c9-b9b2-c6e6a574d5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0da7a1-7cdb-4211-8de1-f3603c5f3d52",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e00d8c-8885-435e-8088-c0d6b4be5c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0eef44-5b1b-46ce-af54-b9e50f13e1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafa49ce-88f8-4aee-84f3-a9c6c8234b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72d1c800-5b15-4a3c-b7c9-912fc5c3c6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cf5de7-2464-44c5-86dc-95f6af865e22",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ef4bcf-e378-4c4e-bdc5-89003ca90817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6160b0-eadb-46c4-9e82-b42ebda06646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe7d36b-7a1a-45e4-9349-bd91015208f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5bb9eba-7116-426c-b810-7c34381632e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e741febc-c900-402c-8084-d63f7a7f6fe0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cc32e2-bbce-488b-b6f6-499d56c0830c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e69d5b7-b90f-46a1-b18d-75ece839361e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25283d19-102a-407c-8dda-77a677181172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2c7659-6131-45d9-a7e6-7009d2d46339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02271d46-f16e-4dc6-afb9-97e23b61ee2a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ea0c74-24c2-4f25-b436-541cacb681b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf01c6b-1136-4d3d-bb67-d07d78f66ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2835aab3-2fad-4bb9-a0db-44a1f1e1995f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c94def3-45c8-4b64-bb97-2c67ceefe760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03169e8e-e249-4e51-8a88-40cf531893af",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ba5dd1-5c0f-4c42-a0a1-c0adb1e76cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed313d3d-7b3b-4067-b6c3-1a252e960066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e5a2e8-c4ad-46dd-ad9e-e1de08d4eb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e0f053-55e7-43f2-9e9d-30854fe6457a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7f06b8-b8e0-46c7-ab58-a0b68540a1aa",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf658411-4a64-4273-891f-e91411788ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8a9893-5230-4463-8128-9b9589977a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b9c25a-70b7-4e72-a6e7-7e1c3c46cdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb46ddb7-9cce-43e8-bdc4-88b2de11831b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f64adb3-6f50-444b-8a51-8232f4c432eb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13421c92-237d-44b9-a496-eb2a67a2e1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453dc77b-57ec-4cf8-97b3-d4fe8b1d5014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e228c81e-ad2f-4bd3-97de-11581a81f80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed995035-cf4e-4d67-849a-5b65539e4fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91e094f-ece0-4923-829b-15244a2a7000",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a863b8d-e792-41e4-910c-74cd8c11b450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501c3b08-e2c3-406d-9670-1efda9dcb7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77e92d1-f880-4be6-ba6d-2217bf1214a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb0e011-435e-4cbf-b77e-b4f63fddc5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca62bf3-f481-4ed2-92a6-f3b9108dc292",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5adab5-5f2d-4c16-a8a2-4811bc4ec8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a82e01-1af3-46af-a0fa-dd0d06c586c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d597e88a-d34f-43c4-9fce-691303ff21d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9710ef1f-6b2c-4735-90ff-c136972f15d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52867388-599e-4511-8f22-3c02b581007d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101851cb-5468-4cb2-a429-159bb3f2383f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1f653a-9cb3-48da-9a0a-3817437907a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b702396-52da-4b61-9f29-aa70e872d108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dda99cef-c16d-45bc-91cf-41b1aea12a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf4a921-ed92-40b8-8366-691e44b9831a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4079934-523e-44eb-8adc-d5fd141b13df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018f19a9-861b-434f-8e45-ee0c095ad26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830876c2-3827-4e60-be76-83f0ed9cca6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "903a3d3f-7727-49ed-836e-f81816b7ae30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8769d163-97cb-4555-812f-4a6f7459bce9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d641f17f-a0ff-4cce-8d08-97df07e197f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594bc730-f3c8-40c8-9d24-494f3db65dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffff69aa-6808-4cc5-9d8e-777b2e30e5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8fe9301-9d68-4026-8d24-5e84c86acd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1638b6ca-acff-4efc-8215-b474b0d6c7b8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb7a5cc-60b2-4c5a-b06a-4651b91913fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33b3967-3082-48e9-9de8-917991785fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093e4b33-f592-4e81-a047-712653946b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3eb29f-f73e-474e-a35e-38175d294e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6653e278-07fa-44b4-baec-1778a5338f01",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bdd3f6-1eae-472f-b674-a2c9864b57de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee851275-366f-4128-8836-2b58b0b4d85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54c5056-9697-4bee-a708-5eeb18a08ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14049281-2003-46c9-b227-66c29fa0bfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7d33c4-c2bf-4f1f-aa47-40f276502b0f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7a41b2-4517-47a5-bb6e-369b1d2fca35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82e04ce-9517-4c9f-8ef4-cc8ee61166b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3cb7a7-6fe1-46c1-8979-a8fcef38bf95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0046664b-9ade-404b-a3cf-ca94e99fffbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0691fc-380b-440b-ad1e-c501d606232a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92a519e-0823-4b63-836b-57aa2cbfc60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239d2efc-4755-4a33-908b-8f65ccd1b312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981a370f-3bfe-4f10-8a05-07d266d807b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2b796e-2009-473b-824d-0351ae5a12a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c555f3a-a90b-4197-b6c7-7c99bdcbe236",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e29618-b615-4fb1-acd5-716044364a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd273a4-9187-4019-a0f6-4bc5c01a1102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06cff53-b7d1-406f-a71e-0941ef090c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "05f184b3-03bc-4130-81ab-42d1f13c2e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d652c856-f664-4c9b-b1ac-488fb0884b38",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47434d56-12fc-405e-83ad-3dab63e18087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e0dd48-9d33-4694-8959-db446f12f39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8777ac-9fbc-42bd-a973-befb570dd171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7af4c7a-8d63-4fa0-9f15-442803854399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2dbc09-a289-40e3-991a-0f6f0b2799ee",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa0e89b-0471-49aa-8533-a41e6af8fced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ede102-6306-480b-9977-041db691e26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01068d42-64f2-4e08-b698-9a76b1a0ebc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0564363f-189a-4ba2-988e-6a8ac245fbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974f4fed-87a6-4ba5-a82d-8d037eed6991",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06713f38-974a-4074-854b-5d213d540a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4aba9c30-41a2-4008-9ac3-9528febad4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968c5d87-50c7-496f-a7ff-966c05fec2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8427d447-ba9d-4897-8fc4-4efbd4f4d3cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad45ab39-e1a0-4226-811f-cebb2470fcb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4cc7b59-1b01-4ce9-8e42-57ee6fb9cbf0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d87d9c-e1d9-48cf-a789-e3bfebdd206d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5068181-7396-41fe-9a9f-e56544ff88c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e82e50-6715-44f5-9459-42d8664023c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbd1fb9d-4a17-4fc3-9254-c5f1232e1cff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3f49a4d-3e6e-4b3e-b2b3-39cac693d3af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3b225c3-7c09-45e0-9a17-1cb323c34248"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89ef187e-54e7-4efe-821f-13d860de8ae6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72a4be96-7e0f-4c5a-a762-89f4938be69f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21431c4d-9d85-4607-99f4-bf2b6fd1f8ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd3b04ce-0a75-482e-8081-78d1fc407752"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5f32c365-f0b0-486c-8e48-0a9e3bb5e6f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13b940eb-8eb1-4ffc-9ec9-da8527b4c0a9"
                }
              }
            ]
          },
          {
            "id": "f042bb12-7983-4f1b-bd06-772392c410ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fc408f0-8535-4d81-aceb-97fe774f2311",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "385cb5f1-baab-4dc4-b8cf-0361ad4de74b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1789071-74f1-4fb5-9be4-1c33eb45ecb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ba34f0af-5412-4749-be41-1961e6b3883f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235d9fbe-d304-4604-aa57-6db25050834c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa27f3b-19b5-44ac-a29f-b4ae9c3973fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e7b780a-cc0a-40a6-abaf-abf5c732f292",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2178e3fa-7425-48bd-9576-514296c8c340",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0a4971c-0c4f-4a46-8f98-5c08d32bc6e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37b2b683-6ad0-44ab-8770-cfd46c0c2610",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a418a3c5-1dd0-4948-89a1-1e90614252ca"
                    }
                  }
                ]
              },
              {
                "id": "e894dbc1-3596-4dad-8498-67254a40e8bf",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6b2404f-1cef-44b0-a590-88a43d048ee4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "242f9582-93af-4c4f-b361-99f463561026"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75684d0f-ba92-48c1-a5d4-04c1e4159238",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9bb1edfb-ca7e-4fff-9933-a0dcf027243c"
                    }
                  }
                ]
              },
              {
                "id": "cd042617-4759-4726-be3c-f551ae37abb1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28739160-2797-482f-809d-870b961a6756",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "271ab0a2-f67c-48b7-b00b-3e831df2d36e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0426bd6e-409c-4c12-bd93-53d21c5ea6a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6fbd6ced-350a-479e-834b-a9caf4ad840e"
                    }
                  }
                ]
              },
              {
                "id": "ce225107-518a-4288-a27a-f5a24a228811",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a02bac0d-4607-4aee-8fd1-44cfbb32e00d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e893d10-5fee-4209-98f0-3f9a8524267c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb1d02bb-4366-4972-acd2-59865a472274",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "596be450-684a-4880-80e9-564921439beb"
                    }
                  }
                ]
              },
              {
                "id": "1322f348-919c-4971-b599-e562e10efeb8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69b40e29-6de3-4c46-9504-d24f4712cb6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef7d7f12-2b6e-4ffd-b792-f30746fd3bec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffc844a7-7ff0-4a98-a32f-a669625a788b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9dc8ae9b-9bdc-4f26-b9bd-d6ac90929a77"
                    }
                  }
                ]
              },
              {
                "id": "31067014-f417-4d6b-a256-4a9cde3576ce",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9fb7207-e4a0-4c43-b1b2-1d24c847395a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec74c84e-3c99-449a-8fbb-c3d90014e884"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9571bf8b-4ae3-4f0c-a5f7-df6e78ac3b6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "237c2bbf-a09e-4e56-ab73-7438f24e18d8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19e746ea-d224-44d8-a42a-b635b883e519",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f727bd70-bccd-45d9-a9be-412edc7ad3a9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ff473dca-0290-423b-8dcf-f9c0b5c566eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73a01d85-6bb9-4352-b386-bcd5bc370190"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da80186c-a530-4287-9a51-e9f4b62a1a2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "25615dc1-baa0-409e-bf9b-a065324e7c2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d6bd61f-c793-433f-aa31-38937519502b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bbd5a0e-4eb4-4de3-8b9d-dc4c7ad98a13"
            }
          }
        ]
      },
      {
        "id": "064e72cd-1d7a-4061-8022-ed052952d0cf",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f0a0a7db-991b-44e9-b895-659e7eaf1173",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aeb6fd85-ba63-4e81-be50-1349a10ca246",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c4a8fc9-939c-4a0a-baaa-6335640a627b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b03b8e0-5283-468c-acdd-e08a026e6cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425973d0-3820-4b00-942a-97c57f46b330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0d7115-cabd-4a04-83d8-ec95162575e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cc61e5-ffd0-43f9-96e4-bb42fc8d6ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54e2c4c-9dd9-422e-a516-c8aa45c4d8f9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191a4956-73d3-4a54-b3d6-b820fd854781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90893860-c6b8-4dfb-880a-cfcadd9afd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3841f41c-5d31-44cb-af3b-2cc8f0294a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a31dcc37-89ed-4f34-84c1-9b5238e10659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa40dd01-3fe6-4223-80eb-d19d410f8b79",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358139f3-ab09-44dc-b520-2f242ffac03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46728651-d3fa-467a-8390-895ccd3dcccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f989a771-8299-4d88-8855-e0355ede1f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4898148-1534-4709-82a7-c78a08ed2413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c1d7d9-d767-4617-9cb6-75e00922ba40",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2b72f1-6a0c-43ed-a514-59dae30c308e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a145ce-74d2-47e5-8f87-acc2fcafb4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056ad6f0-ab4e-44ae-99b1-b636d345283a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6017d07-1d99-4732-ada0-ba4a3669a421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97125322-e0cb-452b-ab19-ce8dcbbd07e5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7e7cc2-9e33-42bc-bc35-e15cd05ea8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7becfb-d5ee-48e3-9224-b97559f4b5eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134a67f7-aacb-471f-b4b3-e08d644956b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c3f4fb-db3a-4ab9-ae3d-27dd403f7d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd29168-292c-4278-8312-afd483cae385",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a242e1c-6435-4b94-9ac1-a7e12a0de14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79aff514-b837-4a27-b155-0848575acdae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27402b36-f20f-42a1-97dc-ffb70ddffb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3cf12a-2af6-4a6b-a304-d6c8e8642f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fde9766-25d0-447b-802d-e299fb07fd68",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25283bb2-cb27-40a9-8ade-9800343df309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7cf23a-8d9d-4abf-aa87-fd5d5b6f7ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc59491-1a9f-4716-9e5f-69d964d0dc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "12228ff2-350c-40f5-8db8-8edc8aac800f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c1086f-a9f2-4181-9404-23115fe639b7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6ef15e-6644-4fe4-9dca-728f2fcdbe28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f298d68-fb31-4b06-9248-16804e6542a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea480e7c-b786-4a6b-ae2c-3671e8ce4b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3a1aec-b999-47f6-aad8-470bb5f1742e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc3f120-3642-434c-8f54-a3d2d9cc8431",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cc56dd-faa7-4843-87ce-7d3e12246485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195180bb-791b-474a-aa03-46c976845501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab25ca8-c50e-405a-9eb4-5041be6cea16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "403318e5-bcbc-4342-ac7d-c12469f56ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c597899d-f773-46de-816d-dd868e3a8ee0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b0b22b-a324-4f6b-b06e-cee1edb32490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a794e1-1c9e-46c6-b96f-e9b474c6842c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31ba7d2-6bc2-4f56-8760-f016edd54db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e574fa-e09b-4ab4-9511-979e61525bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87672585-da99-4514-960a-188e47346369",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18966a74-7b7f-4280-8ebb-de22073563ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ffcd57-6ea4-437d-b604-527c72198768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015f99ca-3942-401b-bc83-1d839ec820db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1e304db0-aad8-4445-8906-c1ebcba2fef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d386713-568b-4575-aa4b-62549d63ee56",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea8c595-1e24-4312-9410-d82fdff8f1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed39fa0-4fbb-4e2f-8762-179e1eebc038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250bb7d8-bd06-447c-8086-49e17b4b5833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45d35b64-8219-4668-bbad-dfe3cc9a93eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d1a0fa-e3ba-4f41-b238-ce12894adb96",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af77c01-93e4-4a9a-8e2d-76c4965ea3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a87530-47dd-4ad9-b96a-db1e02a720ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3d990d-b885-4f39-a889-3670f01d326e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "341c54d8-4f69-44a0-b145-0b9e068697c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c163c21-4b5d-470c-829c-fa8836659c25",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150f0013-c811-41ee-a8cd-92cbdcc5e9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec45ec3-ede0-467a-9557-f9e6024c7322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72c3570-d5f2-413f-b611-5168cac34a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a29174-dfff-410b-94dd-981175272d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2765d41e-43bb-484c-b4a4-0305108949e0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cdef84-b1d6-48af-a753-e5542a9fd980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6211489c-c4c9-4a94-85a5-868d108cb9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67cbed2-7f3a-4ddf-9f34-c33db6e15f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2e1b5d-2761-4d52-8e4d-1f5883e91c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3aa9e4-fadf-46c3-95a7-2c4661b3dbd9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4391b4-1670-426b-9c71-8d3bc0482317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad83130c-69f3-48e8-a16b-74cd2058edb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac98ad4d-9324-4496-a7e0-c8d40c6c71bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "971d8958-721f-48b3-988b-4ac469d41eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcfc9d7-fe3f-42a2-90db-301448401f6f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602bfbe4-ebd1-464f-a59b-8a0b47461a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc73e1a-1948-4a37-ae61-5c522cf63354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d987dd1-7ac6-4d02-8864-b6cfa382478a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc42798b-fbb2-4a99-abd6-c010d52c823b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547a31ac-9383-4d51-8ee6-8e29f756477a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9054419-fd68-4dab-8a55-3d88c32b30ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf40ac3-3810-4398-a45f-355b05ff5739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd089fc-2ddf-4504-9fe8-61b260066266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1561f7-6acc-4da2-b985-a2a92312ada5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383cd27f-c8ec-4c27-a2c6-14794ec150ae",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1233260-8cd1-4179-9a85-edba5c12bd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4efd7a-79f6-488c-a845-a8e38f212225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320a0e58-e2c6-44e0-b818-921c4352bdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec93065-89d6-4a03-b80c-156a4f0b4764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48d98a1-82d2-4479-a01a-18307bab4f55",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73446791-b842-4cd7-80b9-6176ce8bee79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070095cd-be2f-4aa6-bcdf-0bed2e5511e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809c1aef-5908-47ea-9158-c6d363e18a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4e6423-7ea4-4154-be84-1d53ff75dd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869dd63f-49a9-43ad-9436-4cf6ee4cb717",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0c56e3-3111-4320-8db1-b18309cfbe00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2a0ec5-343c-4249-9232-ad9466afa97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b49423-890b-4785-b80d-8c44979b1d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "634aeae7-df43-4c33-8b9e-68b2aa848ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecdffca-46db-404d-83ea-eb56091bc206",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d814f3e-0fee-4b26-bc2c-9b22e70c3633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87455eb4-91a3-4134-b219-c0f43902d53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48df3f5-2aff-4b52-a771-a56d12bc7d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e781af33-0d29-4016-a8f1-21021e5182d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4d6982-a1a9-430f-99f9-0540e61e4ce3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ac75c2-0d6a-4598-908c-a00b7a7adc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52949d7e-cb07-49c3-8ffb-8e1c78fb3551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1781442d-3ae9-4391-9b73-1aa258ce3ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4070b5ed-71bb-4144-ba7e-03570014f5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cf9004-fb49-4565-a35c-e05e756adcdf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1c2abb-04ce-46de-b1ad-f32d236f5293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8408b287-29b1-46df-b3e3-7642deff17a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d65f3ee-9f8e-46cf-bdf8-c90e4efbd99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4afb091b-f726-4762-a3da-47106052e3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7c88cd-540d-482a-90a0-06652137c168",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635ffbde-00af-4944-8c4d-02b9348d0e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf713ea9-c107-4c7d-adaa-a8a6b52ffd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755a6b92-79fb-49c4-bbce-b488f123a52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f311ae-22bc-4390-b541-1ee84716b711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c18f0b-a95d-4e34-ae64-b2a1a9433922",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c5109d-9a8a-46a9-9292-fcf9b24711b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b8215a-fbef-4aab-8716-da3dca2e57d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6e8bf0-964d-42ab-9147-45c808d584b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ccacb9-c7ab-4926-bfd1-54517ea7e6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4717645-b335-4fad-91d3-8fd069df6f4e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385969f9-0a97-4e08-a7e3-84d58fadc6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e069dd-b156-44f5-900e-d873bc4891e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00a7a47-16c9-4889-9c1c-ac641fe23bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "948c0afd-4094-4056-ac18-78e32a1e686a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4925fc83-d00e-4153-bd49-361b669247d6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0b2c23-9c66-44e8-9937-cfc60ffdd2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c254f231-eda0-48ad-9d35-66ef7add63cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce3e959-1410-422b-9dd0-10f407c8e880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21267170-cef5-4d19-a488-709455a62ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28b5afd-503e-46c8-83bf-08799b42c268",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db98618-5b84-4401-9620-855756b9fbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43210909-d8ed-4369-8790-0f1eea3aa654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fa9015-c730-4a7c-89f6-621ca9c0adc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c95d462-3ccf-4b34-8b0a-30a04483e526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3129897-a4cc-486c-b8c1-6877a54cdc2f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2da8e5d-012f-48b9-b59d-5b43ce9d645d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71193cac-7069-443b-9f48-3802a5d58103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fda0ac-e19a-4b67-95d8-bef5e54936ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0419a978-937a-4620-98ab-6e134b55b13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fc3e71-6790-4e81-b4b6-1706992cfc71",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32dc19f-0cae-4d01-9781-3316a3855335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa840a03-4f60-4496-be13-874fc16f5caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ff210e-6aba-4d6d-94a5-03434105ea8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0034928c-f04f-4478-bc6e-aa62d997ae10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a79b39-c2d3-4f7b-a3a8-262b44f31725",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ed48f9-98db-4e5d-94a0-3bd0ea9fcee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c547c6-cdcc-45f7-895b-da7c4663ddf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad4ccee-1b7a-4147-b8bc-b8fa67a7bea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f26d40a-ad2a-4762-bdb4-756b8177027d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31f6d31b-6260-4831-84ba-fd34f65eacc1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f9c8df77-2567-4bcb-89ff-26b3ac5f2f8b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f31553-aa72-490d-a789-25ca839b35d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b87a1e7c-91e0-4fdb-93d2-e70d115d9f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224ac731-1110-4833-a1d2-cc4d0c6c08cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7666c9b3-be55-483a-a686-d19a634f2286"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef3bd9fe-b250-4717-8ade-af11dd307f82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66c1b70a-f2ae-4bf2-b527-8e1771a22e19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20657659-635a-4ae4-bcaf-a75a5d472253",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c178fd0b-e08e-4984-be21-f225675bc33a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "321e0c44-9353-4ef4-8028-b81e40c945fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2185c34b-d10a-4cc4-9e37-ecd2badcb287"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f8c371d-56e0-4ac7-b515-e6ed693db390",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "290c3f7b-3f9e-40f2-992a-1fe3cabcab52"
            }
          }
        ]
      },
      {
        "id": "672bb02e-8f37-49a2-b95d-89d2e0baad32",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4054e89a-eb65-4113-8357-ea374b60d00a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2aa13c0c-dd1d-44d4-ad48-eff18848388b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "30cf9e87-4822-4f7e-a35f-ec6bb685f382",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bfe87b-7adc-4879-b3f7-da16f0f4b8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6d9e19-adcf-495f-9c60-a49e1608533a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da7daef-c551-49da-bcf7-f21b2ae54ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b64014-97eb-4e59-a3f0-826ab23cd3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e972ea58-af1c-426c-952d-b2d20e3e8b76",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21ff6eb-ab65-4c69-b9c0-3fcb03437ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd275b1b-4556-4325-8099-52436c2c2eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d4e992-0007-4093-aa15-1a35860ad2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3265621-0b69-4b3b-9729-5a638f57cea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8a59b2-2e43-48ce-b7ab-b1561966b043",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55144ed5-d842-4450-aa9a-65d2f815ff49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a0556a-d4dc-431a-8539-0a2316e67722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef60ef5-1d20-4c25-92d9-444611e124d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7634ec6-5e9c-475f-b465-8f043e62db0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d674a8e2-d33f-4e82-9931-be83e8088d17",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b11059-8518-44d8-98d1-8e754d515240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "034b566c-add4-4276-94c6-5433a08b4a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01151d39-37ba-4ef4-a459-fa93cb3336f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5d6ec5-3919-4501-a0c1-48f5abd015f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3483e7c7-037a-4c18-9ade-2bd12146a0f9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fe54b3-485a-4e0b-9471-b254264d8847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9976f0f-ef36-4ed1-b8ef-0cab581159ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3048731-fa76-4a80-b9eb-2005685ea8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e00ac91-39ef-4093-8f03-4e3044ccd7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806cb194-d117-48b3-b25f-f6256b13bb8e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c67272-fbf5-4b8a-be9a-36d3fcfdd440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172430b3-0029-4887-aa2d-0c48f77ff4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb73440-514a-4dbe-91f3-621529cc85c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c991fb5a-877e-4660-8316-49e6bae1021e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002ef056-f5bf-45ef-b32f-26b5a67c5d03",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06589aaf-0097-450f-bddc-b4b43c5f3e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4382c5ab-c2df-4110-a199-077845c7ae86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fac971-58dc-4561-b17f-4ab620ba80d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "73817b5c-e9f9-4af1-bd0f-7d2dd0cfa260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5228d5-3aef-47ae-ba19-f582cf039d15",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8eebd9d-16b4-4bfa-a8e1-db5e08c28e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3faddbb6-2cc4-47bb-a403-57465d143cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb56dde8-c1e8-45c8-85c3-c0f2ac10ce16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "758bc18f-b122-4228-b087-c6e474dbfe40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3218ce-d7fe-4106-bcb1-b9de4050d1eb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00243830-a68d-4c21-8ee9-a7c0ecec31f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15663e54-b847-475f-b17f-813c8fa5f18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81560dd1-c735-432e-9da6-d63f48e87926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc484fe-ffba-4070-a215-62d74ea47adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6fa1bd-fe81-46ba-8ca6-1afb2d07d32e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d47ed44-53a6-4fc4-bbca-8617ee9d9cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d96bba1-072f-4810-a9f5-dd10e1d08239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece13809-7624-4423-ab60-49e22fbe4ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cee94ba-4a73-4f56-884f-3f2de979347f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14d3648-5647-40a4-ad9d-4d47a79d0e93",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f3e8ef-d170-4045-928d-f7c1530b1fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2adb97-645a-47f2-adfc-d4e6d62fcf0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1464ed5-de45-49b6-bc24-9247c0f56e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c95c9aa4-1c25-4fd2-9993-49788a70b299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdcf38d-0c4f-4386-b090-56f396c1cd0a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5a41d1-6662-4e61-8e15-48df359b8289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ffabdd-bca3-487f-840c-62a8e3589dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396c1312-40a6-4a3c-8b77-8d34fbe3c4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7335de1f-dbf0-4698-8610-12430af84296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2383c6d-5fb8-4457-bd3d-60784e2c9788",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003c4fa5-4032-4cbf-bccb-9b07a854ffd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f0051a-35ba-4479-bbcc-2af9adca7555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f9acd9-7951-4189-a3a7-9af047e7f197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45315a97-e463-4a97-ba84-c868d3d7c4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf94c84e-d38f-4f57-b4ff-18bcb1699773",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39413583-b6f0-4278-b1fc-699fa77f9533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2188aef4-74ce-48cc-871b-cd5ec022c043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356499d6-b4c5-46d5-a4e7-c3c01c13256d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9ca99e-31f2-471d-aecb-1da902a31f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55817f7-cfa4-40d9-94db-f2ccd35c5859",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a8ad68-cd62-41f8-a2d0-eae65e65b91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a683f97-f5a4-4cd5-9223-3728f94fbe08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46edd5a-f5f5-40a9-8b41-9cb3b06100cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "577a10f3-a72e-42eb-8721-427df6c05f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f1522f-9959-4a2d-9f46-8551e2335fd7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cbf12d-f867-474e-9b22-96094b24ffb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd14d5ba-f98d-4396-bd3e-5f288c27d475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef6b357-a69f-4219-9709-ff69a41d4eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5bf5ae-9871-4d5c-9448-a9aefcf3a703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746f80a3-7665-47e1-8d26-e23517f79428",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a865834-db74-4403-b69e-28beeced01e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b830aa-b4c9-4292-8542-f2bd18ff71ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d13673b-243b-44f5-b7ee-8fb33b32f208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b42a2d2f-58ff-4bf0-b6bd-caf1f713c3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf191edd-5e94-4be5-8add-98b3577048b2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee7875e-4edf-49db-b6c5-0fa567debc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6888e68-306e-4835-bc38-cf2dcfb893d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585b2842-61ff-422f-9fff-e844689d7fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20650f40-ab21-4c74-a854-f7dbf203ebde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cfb4d4-f04d-42b9-b8e4-a16b1855a0ca",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cec585-1444-4874-83c5-c9be4bf03d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4737aa3-831b-45ee-b39a-92c62db9001a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9cdcdd-616d-4523-941e-03a932c6d209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd357288-5268-4bee-9494-8ed280f2e551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0798315b-1a93-4b48-ab44-1b86b331bd91",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db056680-0980-4188-863a-62a947455c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb709a9-411a-4c3c-9c30-57720846b8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b8ead5-ef52-4c22-bfaa-e12e31cd6115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9221b51e-6b21-423f-b013-02a79675cee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2c821e-e73d-4734-a8a8-d23c413725ca",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d883bb-02b8-47bd-8dd2-77eac9cb4ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b722c01c-4ce9-4e60-98b9-f69ba713e07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7817ea42-54f5-4c3b-9691-4db40f461b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97a22391-7109-4c67-a13d-82275dfae006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3e77f6-208a-4edc-b800-68ea3fa2447f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86db77d-341a-4a0f-a802-4bb6d9f6c053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2423460-941f-4e75-b404-77e0609efc36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b894a2-b184-46b0-ac6f-ae1f2ccce943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0bf5e0-94dc-4051-a8b4-214988b46d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14b7aa8-8627-4ea6-80a7-0bbb5d31055b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c99e8c-3c1f-48c5-8b1a-70f480024ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349a0dca-bb2c-4806-b2ca-40bf09ec10c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718e082f-5186-441d-a814-03d6ad8112d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b20d5c15-df64-4fc4-acee-f80cfed7c925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5423a23-8f04-4564-9447-72e106c3ad12",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148cb4c7-ebbc-4e4a-bba1-5b96d4a4f860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497d07a5-eda6-4917-aad6-8a9338e89cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687ead6c-4fcd-417d-952c-d8c811e8c1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8ad071-b90e-42c6-a2b7-dafcc3fe47fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7876b4c-1f02-4268-97d9-d6239429cd2f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d6307a-c3df-4283-a134-a964066ac088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a066b0-7e09-40f7-84b1-7839cc2127b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a11e1c-2484-40c3-9762-03e146d7961d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5645fb73-ce74-4244-8062-dcf7deea597c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa6e1c0-9fa7-48ed-9ca3-5cf5138934cd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310f068f-9aad-43cf-b487-15c7f4921014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305dc4fe-f821-44ca-9b93-6c5afeaacea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e587d6-03ca-4376-8146-942b66b878c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2810323-d1a4-460f-8f62-143422708624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5b0756-63c2-459e-99cb-dd856a44ee7d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc1c666-1745-48f0-8f4f-11900e9a2973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552fe54c-9dc9-4193-8b14-7c74deb6633b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b45f41-003a-493d-bd72-72fe4e22f900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb29feb9-f8e5-4811-92ea-0b965556b7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca46ce4-acd4-444c-97f1-b72f5ced4416",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea4cc66-f59e-42ad-82be-4c4d59d757ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1891c5f9-2c2c-4511-993e-c3bdbac8079b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73ce30d-4a2b-4e4a-bbc6-5a00ccdf2c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1b7970-ab53-40e7-9f2c-6e41422d5d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ce43c1-a569-4fd3-8138-267e842b87bb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769c164c-7397-4528-aa9a-b722b6662473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7d6ea7-1764-41eb-a3e8-3309094bc24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3288b8c7-a724-4fee-861b-6f4f122bfbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31abe953-23a2-4b8a-af89-e317fd9d7c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b51fdfd-2e1a-4739-8ffa-0d73a2fe22dc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ba4a4d-3b1d-4d73-8ca4-66fb0d10f1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfff6238-259d-452c-99ae-fd1d986ba3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10174e3-ba31-470c-b81f-4869258e3fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75d7da63-5573-4a32-8e4b-91ba35e0de0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e42480-d836-424b-9c62-23c1a240d304",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1706d523-d4e8-46f2-8484-7ad14fa61c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2367b234-387b-4807-8890-f28d6f581e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe37d96-66c0-49c5-ac6a-8ba955b04324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb8b038-cec3-4f54-9c03-7ce6fc108aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8633b4f8-9a18-48d5-9e19-77872ae6fbe2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cf5b01-a65f-4ce3-a472-25b53bb476e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f5e402-2b13-428c-8de7-bf077a625f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a84827-bbd1-4741-9d87-cf290bca396b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "128023cd-1283-4f03-a155-30d0444b87ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5dacf3-f193-482c-b22d-f020001bc945",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af3a4d5-1ce2-411c-95dd-1a066d2b6d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edb65f6-dd60-4ddc-b9c1-7d9d1c16e467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caebbb5-392a-4b44-a393-5f4f81d09f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e24a47-bcc3-4be4-8adb-c352539f22a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1923c625-af37-4281-8632-1c768573029f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3399c8f2-6567-476f-bf4a-d2b2aaf79399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e210ea0-ccec-4bf7-8b04-6814e5b43898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9856266c-7f2e-41c3-acb1-1169a15a7f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10e22481-41e9-4dae-814a-9027d60856f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05802413-4a07-4b08-908b-31111d898b6e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5ee8b1-cb3e-4cf0-be2d-0be90770abf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e204e8-9967-4048-87d0-428cc35a316d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7b71ab-b932-445d-842e-04c0f15aff06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "592c7b92-44ac-4c94-96b8-29e213e61532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f976c458-5578-4afe-a5ef-bdec5e5723bd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3803b54-cbb2-4e49-ae84-6c0163d68c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e61d817-881d-4451-8454-ad84adb9696f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c4c9ab-b2fb-4ac1-8e92-aad00191da19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63aecae0-b793-4745-be37-649c2a7a4b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6d5887-bf4e-47ea-b7a8-cc1b044c2bfc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bc12b8-b33b-4cdc-90a7-8f3f01abc68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "decc7a45-7d72-4a97-a45c-c3c338026f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82de288-66e2-4276-a0ba-5f11b56570b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b253500-f40e-4632-8e75-0fee80d56b40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5fe08ded-9fe6-4d2b-8c80-cc1b1396b568",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fcf8f08-a790-40e4-b2ad-3c4ea433b776",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102a0b48-9f85-44be-a04c-3e7588ccf794",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "71ad5653-c8ef-4371-a6cd-ba78d358ba2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b21ee8-c7a2-4d16-b2f7-b0575e00cadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb9138f0-2543-47a6-b320-a97f3fdbeb1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb5e0d29-653e-44b7-9eb7-9bda190b2f51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "361924dd-69a6-4a5a-a36d-19e0291fc98a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7710a60d-ae27-40b0-85f8-ef7c5c33e824",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7291d17-921c-4f5c-95fd-66d6937723eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af29856e-1d62-4041-9798-10fe9ea7850b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d78fdf34-b72e-4fbb-9722-ae2387e9bdd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8a7f96a-0f79-4f86-abae-61f074df6ffd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26ea9a09-d300-49b1-a02c-9add73b68222"
            }
          }
        ]
      },
      {
        "id": "a9217445-01e2-47b4-ab0c-321c168a32d0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9ac0bc1b-63fe-4ea5-8e26-f8532134f83a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f02315bc-a61e-4392-80c4-54e3b56fbaed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d870200-2ad9-4739-99ea-7b1111a0fe49",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91e4d97-9f53-407d-a5d1-69e83fc14dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2999ead9-450a-4719-8ed4-189f0b8b02d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36e3eae-4630-4086-9153-53c6ef4c36b3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ae0610-ea7a-4507-bd27-310ecf95d841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbdefbe-f2b8-4366-a601-ada5eebcacb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e080aa0e-53fd-4d41-8005-a84eb4bb1069",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb62c10f-9c03-4126-87f9-3db8038a2d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8e490f-be48-4be5-8c55-e80e3f6d6a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c2f8a7-2271-4f32-ba05-d486fb6ed16f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f81c59a-e184-4734-aacd-bdb5be3b5308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78d4e70-4c89-42e1-96f9-6f79af5dddf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe08416b-6cec-48d3-8171-1551aeca02b7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813669d4-5e63-4b31-9641-e6e25b630930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5701b4d4-3fb1-4a74-8a89-e18eb4ee2a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc0131a-8aca-4348-af9d-90e364c7139e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5178ac7f-f1ee-4c72-ae57-61a60cc580b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c88b861-ffde-4185-a35e-98227b29bb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acef28cf-a464-42fb-ba2d-835a2311cf3d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f183f7b8-aa57-48b8-a73b-c816f80bcf9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2d3716-faf9-4ae1-bc97-172bcdaceff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f933e98c-a05c-4acb-9088-c0dc34e178bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9285968a-c3f4-4c52-9aac-54f2a6984256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2f1a71-3494-4fbe-a2f0-4b2131b64653",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad782b5-b8ee-40cd-a398-0760cc90877a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550cceca-baef-489f-a2da-d4bee4614923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87ff64f-8150-49bf-8502-3d73a4f6c0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14dd83ad-c395-4de7-98ed-c78d64a1a507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530c4a29-16da-4f6e-ab5b-2051b1a5b278",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b4a50b-a59f-4f10-9818-b96bdff308fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4dccb9-5a5d-4f4b-80c3-8fda2e36b2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc562d9b-ab9b-4143-9ab5-c09085c09f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fb1102-9e84-4439-a951-0475885f8a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c9cf08-70f3-439a-9f94-08fd6f511e6f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09808927-4c4f-4129-93cb-bc8f63c22661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67f8fe48-1033-400b-83bf-efef593947c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcd3a40-1ad2-4c16-97a7-b6b9b9f20dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813097b1-af51-47f4-807b-ff5b917574e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf62884e-9814-49f6-9105-621a9c2de707",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d314fb4-4ae4-49d6-a6bb-510cc84ca4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f64064e-048b-41af-bc91-d4bc55b343e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2bd32b-4213-4ec3-863d-eb4bb40ba9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a096f2-e6c7-45cd-a035-de501a4d1ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbb2043-b7a6-4386-99f0-fdba61d6d4eb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debe953a-c25d-4123-9b6d-4e6ba7ac39d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5efa27-3f8e-48d8-8c4b-a166664b1c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b79d1f3-591e-49d3-8eed-3d2d534f7a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e1b9a7-fd0a-40f9-b2f9-608412da5e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a391b4b-a16c-4dc7-9041-4b2e1751d9fb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11583a8e-983a-4c8d-b0aa-2d668b1508b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af0ccf5-0a29-4e21-a5ad-bdabf7e66d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff8eac4-e7a9-4672-90df-23b5104cd372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3ec86d-8624-4306-9170-671011810fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f864add1-d67a-49c4-9574-c0e31acd786a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3baa23-5464-4769-aef0-da0c4bf5de97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8bedbd-1166-487f-9b5f-fe2f797d96d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1828b7a6-a65e-4063-962f-8be78c991e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df0f735-5ac1-453a-b864-4a72b1fd47a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4111a91e-f2b2-4657-85f9-e6b86f66986b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe01ec40-37cd-459a-83cc-114d2461bf8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c4c731-fb01-4f97-bf98-e193a363d666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9118db-ee40-4176-a290-add4ba8c5054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f764d489-bd09-47e2-90be-b7a7d0095a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12648db-94f0-44dd-9050-18b13f481dec",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218246fe-f383-451f-ab02-f2cf14dbd933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c71c48-5626-463e-ab41-6f7f1dbd7b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058c57a6-442f-4612-9ca3-097600c23e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8cb9cc-22ea-4c2a-9983-52f9e53e5d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d0552c-d1a3-4d6f-b9b2-298aee1bbfe4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403f2e7a-65c6-4f4e-baf4-8367b3939cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390aa4eb-b64d-4b05-a35c-62882d97a076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad29d28-6d71-44fd-bb28-7d733cae70bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62158e96-3b73-43c7-ada0-2cc6e6a89176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238fee32-c0f4-4606-94ab-0eb7813b3d30",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e5eecb-832f-4086-8e9c-2324f41b4728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0aa0c6d-0cd6-4c40-b003-7a4971861679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2eddfc5-1bb3-40f5-a9c6-89ff0c64aa60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faea8cc6-a027-41d5-aa84-8218a3453959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f8d91f-4a2b-4eba-a9a7-f8875bf70b24",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1a2359-baa0-4bee-956b-29b4066ad01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e7373f-2b19-450f-b9dd-f88c79003885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7df29c-b31f-49ce-b3b6-73f5ce2527aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848d1cee-d578-424b-9702-dcd81820bf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c628f114-94b5-4662-b745-f971b719ed4a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa1c464-edad-49d2-90af-e0a9b3af8368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477c7089-4cc8-4e6f-b9ae-3ae8f6a6167c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ced635-b141-411b-9089-9b9d9b1f8445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d8d569-8a98-43ac-8bd2-8cba7da0cb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691b26c9-4344-4c7f-94cd-9e6ad8a4b557",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b0e386-2e94-4a43-8fbf-dd086409f9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e37e4b-6aed-413d-b855-aab1d15cca5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40de189-2a7c-4716-a684-91607bc3b36c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4ef331-bb35-43fe-bd9a-334514199e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cec88c-2cc8-4cbc-b5b2-92257e9f5055",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfc16ef-0be2-4ed2-9623-edb7ecc817cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12844219-9b04-48d6-9fc5-8fcc923ab998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "976b5f11-4989-4953-bd44-b884dcd175fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c278a0-0bbf-4476-970f-929d29ceface"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865731fb-f1ae-49fe-8b07-0f8ddffe0ed5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595c9f7b-e7b5-4fe6-b4f3-396374b38901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db99e33c-6084-4eeb-abdb-2df4137fdfa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48b0fbb-1c25-457f-bce9-aa2b1f00efa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64905131-3a68-44e9-ae53-bb165b1c3d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db458ccc-6fd0-4ca7-8432-6faa5b3c8c23",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eb9d8c-8755-4de9-a9dc-9cd2f000c062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7cd3176-bdba-4c84-84d4-ca54114ea793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca74d27-d6ee-41e7-9077-1d3f8efc2f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32d0038-161b-4e07-a534-1eb6502db605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171058b9-1258-4f0d-94d8-b2b5fa58ffc8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6eb13f-5f81-4c71-94e8-1b94dbf8f247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5e8995f-ec0e-48a7-8cb9-597f056e5da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe39815f-9680-4a3c-ae41-53873caa41a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2aac9b-93f5-4ad6-9983-f504b303f9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e421d39-529f-4876-96fd-ffcd4c8c309e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae32d02-921e-4558-83cc-cb256e90f728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adddd2ed-fb55-4061-b154-5999087f9863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8960a9eb-3725-477d-b9df-fbbe3513aa4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60cce33-c21a-40ef-9bf8-399a00af1b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fa6270-594f-42ff-a7d9-bc82737f284f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144a4a80-c749-4ee2-9b9f-370b9d58fbee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eb74289-e78a-4577-adec-57fdb67a5871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d38ab3-d2f3-44b9-8fcb-b9a37f7a8762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1121df-de8b-4768-833b-d3c1c9b96e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03123708-8fcf-43ce-90e8-d400ceaa5513",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8614f6d2-4776-4277-b957-a0924641d49c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2ec2ab-32cd-4362-8063-5e04dd06c17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a74375-adf2-4e3e-9360-9b15adcb42ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd12fbb3-d6f5-40ba-8d30-52dbd78090f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134e5da5-605c-48a0-9313-67e7d3573b3e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee14fe9-20a8-479f-8382-b6c2217eb1fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43c57bea-77e4-4a04-9807-33306473ad10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc1bd01-0ef8-4407-857e-c77fae104a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d7a4fb-0b36-43da-b637-bc40b4955347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85fe4b6-6527-483d-8f9f-97154c27cc32",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a099e49-b346-48f7-b956-63031f0eb43e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f300d5b4-42b5-42a0-95ac-1e9fe4eb8f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d753c6-7397-4af5-ab7a-7698c27664b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1653327-a4f8-4321-b6b9-5a47e7aa1b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a4a209-3d05-45e8-a9a3-70b50c096b68",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25a2b00-37fd-4a28-95ce-220dd85e4604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fb73436-527d-414c-babd-420f23ee2e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377c1bb3-c789-4dbb-ad27-281ffe9cd1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe53b123-0d0c-444a-aef8-fd04cbd8bfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4083c34a-3b02-46f6-81d8-93e5c2c04e02",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea70e85-9378-4a19-8e9b-2cbb69331eab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ddc3e60-d923-4925-987a-2e55dae4318c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eb6d2b-ed83-4c52-8c55-9a0afb54ecff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099dd28f-c5e9-460a-b152-b09bed63b673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e0ff16-3423-4844-bfaa-d0008fd94350",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ece0de-80d0-4b1e-a7b0-da54317ba5c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39e56712-f77f-47f2-b69c-1d590487c6f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a330abc6-a9fd-415b-9af4-2c79f5c96025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00702033-5f9d-4bee-878a-de267bebecfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344620e4-a00d-4459-b041-1e55b8825936",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2467983-bc81-4813-b233-e4a55f00f591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "452a3a84-0154-4f8d-ac68-2838550421c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a448fdc-96d1-4cf5-ba37-f858e40e8878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f862792-70e3-4898-9bdb-283cf8956efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01713cc-5dd7-4157-a8d5-37beb02c8520",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e715abb-4999-4fb1-a789-6827941acab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacd0e11-1e64-4ad1-8a59-8f7c0959c1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5fad1a-da08-47ab-b835-4eebbb8488fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cede2e9-9694-44f1-9bb2-7e4729ddc613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ee59b7-bd4d-4aab-a35f-4f4408e60c88",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489bdcf9-3ecb-4493-a370-129727e76d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269d0433-b995-422c-880b-f89de64d18d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b8a830-63ef-486d-92c7-3ac11fe96123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6127e103-b7dc-4d4f-a21a-198926d84ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cda6a1-fadc-4643-a539-1b8b24c4db72",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4191dd44-7f0b-443b-ad87-c03393352f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782f4517-d5b3-4a5b-91a4-57a40839242a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22375ab2-d7c4-4138-ac9c-c77120ac2af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baac6671-ce17-4527-97f4-18f243e8117f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b42f161-963a-4131-9f04-b661569bea3e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caecf3c-72d0-428c-96c5-c08d96359643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e3fb9a-0f64-4bdb-ba22-d5bf6915161f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f381265-f681-45cc-a660-131478bd1909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36a555b-c847-424f-bd6a-888168f8a4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efcc1fa-fc1a-4392-8171-a8be508d32f7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a8e3a0-3d37-4fe4-8d6f-0e1b3bab15d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a27434c-8662-4aff-8695-fde52839c229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a3045b-250a-4551-b626-19c0acc6a39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ab335e-265e-45b8-995c-21ec8e5fad07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d7b063-2db2-4ea7-b41d-da9651248a17",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6aaa1c-c1cc-4e4b-9d75-64264a10daa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdfe419-4616-4d9b-a1b3-7f64dadab997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106d4674-7a6b-496f-902e-7963f39f19e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e347465-b080-4e84-aa19-486f8ed10826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16c4b8e-3355-4672-8c99-5091881ed158",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bd8adb-35b5-467d-af7b-aa4ff52c9496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca62b12-124f-4fa8-b9f7-d6163d6d0a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59e9b95-685f-49b0-ae74-64eca37c6e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4e6504-af1a-4391-a733-fcc2bd1edff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92313cb0-335c-4fa4-8cad-3a0308ae6a50",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df6abd6-3ab3-456f-a849-74380f639ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c49317c-8414-4001-9da6-92e2394fde2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb83d89-579b-41c0-87ef-9a95ec84d77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded8cd44-ed14-4651-9b4f-b8f04d6d18f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae97eadb-0204-4201-b71d-77cd9be7ec8a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6895d531-8c13-42e4-94fb-03e4df91d761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafddd6f-e559-44a1-8716-349803f4152e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b4831c-4648-477f-88d3-8c6c6bd5251f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5462f66c-a7de-428b-a729-3696c06ed408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445399ab-3a58-4cdd-970a-4d344ed6f559",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85adf174-6fcd-4e60-ab63-cb88b137fae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6e530f-b609-4309-9b16-cc5a3868101d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc1b56b-9aa7-40a6-8c07-bd6eb569398a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777f6cbe-5c5e-408a-9ddb-806b2a0a8a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5761e079-2365-4bf0-91e5-63b118838403",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56726ab4-5280-4f21-ae5b-7791c6490bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8fffca-0430-40ed-bf1c-4867d344322d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36d0630-da93-46d9-9aac-f5debd90ca7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cec9d24-e6ec-41c4-a825-2c57a2392a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a65d66-9f77-45d0-9569-7abe450ef269",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfadd39d-1b88-415e-a15a-00d54bf9def6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec852419-5573-463b-9a5d-8dffb51cdea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd80f88-7c75-4125-8c6c-4b1f5dfd8e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a59a87b-dbf5-43db-9811-6a23ec22d98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd99f11c-22b9-4e61-87e4-c087c609c1bd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759e9553-1037-41e8-9da2-417c113ac831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb66a8d-b143-472c-bb2e-482ec06e7515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db48722f-513c-47fa-ad24-dc1ec6dd4642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7e3128-b76b-4b27-bb6a-1a53fd365dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760f8894-e05c-4d1e-aa3a-294220c20427",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d675bf-c380-46e0-a755-be8ecc5e3af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c018838-dd7f-480f-a3bf-aea3717556a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "811ae7ba-5457-4c48-9aa3-950be141d97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb630a5-2f7d-46d7-a6b6-eeceb2d4a0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6442d8c3-c9a7-406d-af6a-347216d77638",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95974f08-ca35-483e-97a8-e96eed2091c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77d3f2f-1f1c-44ef-8027-6b550b9fcb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ea828d-7317-4183-bffa-a2f39b8dde0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deda7d9b-64c6-4daa-ad4d-90c2b05cf2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b06cfe7-c30d-4feb-ad98-e5ecabd19c7a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca518016-1ee8-482e-842c-94b3928409aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a776a532-6c5f-4d88-ba9c-987dd019a55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c06ac6-4726-4b0e-91be-d2694d511f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0e003e-6fb3-4dc3-a566-3759684cd568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2368bfc1-df7f-455a-810d-ea423dfd8e77",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50feddd7-4b5e-4b36-876a-0f3fa9309ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae68c0e4-b000-44c7-818a-a3e826507658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f7c723-fb9e-40c6-ad57-6d3b6f2f75bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf1ed50-1434-482b-a296-10ae8c3f069e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c696c5-a97d-4ca2-96a8-b6a89f7ddad5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f230f4-284c-4c4a-a8d5-4977f5742858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "979fe8b4-b0a0-427b-8273-10c14f755867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fc895e-6509-4e2c-b5c5-d46742057991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c49fb61-68fb-4cbc-8f0b-a048baeed4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030de233-63d0-4dec-8d5d-9a3932c1c78a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea192d3-58b1-4682-9fa7-a8241213e422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fcfc00-23ff-4658-a9a8-8afab4c945c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f045dcaf-2447-4387-8a1a-da2a588685d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d36507-496c-412c-861b-2682ae47fcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f76b2a-36e5-4ca9-a587-b0458555b5f6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8284faac-92d4-4bd5-8e99-5fb10f61f2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ae22df-fa1c-4141-b5fa-c96a270279f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be6d661-e99c-4cf5-b184-95dc3bbcc7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1da85a3-38d4-466d-b392-14ce07005aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ca5782-f57d-45da-a1ca-126c2313de17",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7948aef3-6d27-4e7a-8dce-626b978a2a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd8fcc4-0d52-4961-b83f-d05bebb37ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2325450f-9753-457b-9f37-2502b6a50cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d648ee09-2311-42da-b12a-64e4a4f0c07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11cdc75-ce86-47ad-9d37-ec6b3d9faaff",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78b5401-83bb-4fb0-8b51-e04574a8e36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244fc186-0aed-4e59-b232-d48b9236714b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7343ecaa-e1e2-47b6-863f-252abd38c0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1761d806-ecdc-477c-8dd1-9d5ce8596023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea04285-e9bc-4a35-be98-d0628a7cb7db",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d19482-4cc6-48dd-9488-d80d13688fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14135ac9-f9e4-4331-85f2-7232ba366f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57a36d2-0a89-4322-b174-609486bdb385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da76f89-5a68-4993-b13a-ad87df289a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7af0496-6418-4cec-8ba4-5ffe4fa6dcce",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73622633-10ef-44e1-9fba-e3180a44d1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935e4a68-29ef-4de1-88e5-9f53f7435016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f80a6c-3b67-4127-80b6-e2ed6b1494df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc23c5f7-5cfe-4ce5-8d2a-965975866977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf7042c-60ba-4114-95f1-0e0f549c57af",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efbe866-fb61-4e2b-9135-b094085626bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb575696-6819-4bbe-99a5-1e4ddb97aae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9994b4-2ce1-4420-83f4-c1f0864cbdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0494eb8-c8a6-421e-9e10-dde8265908bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e8ff8e-fb39-4a44-9ee5-c45820f0f7b1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9968fd-3f7f-4614-8002-30d167e267ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26e53b2-f8fc-4178-8176-a23dedb80ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed917eb-4c4a-42ad-ac73-4e2b5c664436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5d1472-4006-48e3-80cd-9e227d83e568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbc000d-f13b-4432-baab-49b0b87bc297",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14916244-a23e-4c99-9f20-780e303b3700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97622a47-7f93-4e40-bf98-a162771def93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fae801-b000-4afe-8150-c59987e59188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311c3be6-5d95-4a5e-a049-c7159a56a4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2df263e-8b15-471c-b3d1-8f3234e66f74",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8acc865f-319e-46a6-894e-ca1c5621c0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533b08cb-ff0e-416a-8f5c-283528ad3b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b1ad44-86fb-44e3-86ec-f7443878c307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f90e01e-7ac4-4c22-a380-8e77d685e67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7765121-ece4-4634-9657-f5b1055e4d55",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e87467-2edc-49ce-8217-bbf5888a6d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4a1c42-9adc-42f8-b551-2149c6c57bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4da7f9-85bf-4f96-beff-a2f411d6838f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e651878-5e3e-42f1-a329-7ed2ae6c6fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff87b150-1e08-4eb8-89a2-9a235de3d57f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738e8e14-9adf-4bc3-9b5f-105eb7420d9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da7bba1f-509f-4865-a093-d3d477edf603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe74133-84e9-4b01-a07a-ab9462334d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c25fac0-fa17-48ef-bdca-a58082922539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f40a7c-e48c-4821-aeb9-5f0ca78a09e1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c0824d-d063-4f3f-8d95-8b93c389e98d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70f8fed3-c6ff-4ffc-ae0f-fe3f28c930bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2a2b8b-3658-4e9b-bb1e-8a1a80be78e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b6d6ba-d9ff-4aaa-a0f7-1860b1f96338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468cb935-6050-4139-9fcd-97e12c1e75e4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6460d4a-2d31-4f79-b888-7f42305b8881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8d94370-edd1-4ef0-9ec2-897b19a3d835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b167083-2037-441c-9512-8cd988625e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfd03ae-324c-4e10-94b1-acc635e016c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193b2810-7082-4804-9bf7-02ddd6286b45",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90cb7b8-de6d-42ee-8159-8769256ef105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd35549f-2608-4035-84db-6c9c942ecc77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "354e90fe-b051-44bb-b9a4-c5db46687cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb73df41-9f33-4184-8e3c-3f90fb9bb5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1753846a-9a15-4250-9a23-10e90e06a0f7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5839aa8-776d-4170-b6f3-c9bfb24a29ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7521273-fa3c-4dc7-a133-040fb34ce8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d60810-7837-45d5-9b0d-a4fa3b7001d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9897fe53-341b-497a-b652-fe7bd71fb566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d55c369-1cae-454a-b342-d08c73fcac26",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22738dc2-dc06-4745-a66c-b68caf57bdf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a801371a-f4c2-41df-b7cc-9326febc6e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e184c7d-4ea2-49ae-beb5-e5d091cef2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b2a446-3afb-489d-a922-fee5e1cead64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871324a6-7cfd-44a2-9b27-b43903cd612d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869a519b-993c-407b-91f5-80a549d9e274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "783e4014-221d-4956-a8ba-803aa992b676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a539b8d-73c5-456b-a77c-442d964c8058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6eed4b-cfa1-42a7-84da-7f7eb55cd26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74279680-f10f-4ef0-bccb-5f973dab7b85",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9b5742-868f-4a61-80e3-f33fc7a37bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb9bcce0-863f-4df3-b65f-035516d2a5c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e1c2a2-9ebe-451d-b43b-039f302b0bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b26611-883b-413d-896d-df3acf6774de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6682a9-924d-40a8-80a1-8d623244fbd2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17225d23-1b62-4e65-9b9e-db25f8620f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfaf70b0-e709-48c6-be58-a683bb666fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7363cd6-77f7-4119-805b-1147e0744655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49c359f-b50d-4699-9db0-ad894cfe9610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c5e8b0-7b00-45bb-af31-32658b738029",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380b6e8e-7a36-4fca-8d8c-23a811827ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "892f803a-c0da-4a4f-8741-801710cea1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18ce238-76ab-48c5-9292-b971a7f5a1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559cac0a-3ecf-4878-a286-6fb22287050a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1804b98-8273-4e19-95e1-e73815647725",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ae41f3-d272-4bc4-a259-288d6042f554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910cd0c1-bae3-4039-9e28-fb67abeff558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dca74d8-76bd-44e4-8d7c-84c825092dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e27a07-ccfb-442a-8161-af50cb2d050b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b315820-8a0d-4c1a-8103-16dd5dbb70f2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe25023-9e8b-4469-96b9-c0034f7a5cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22abe27b-ed30-4810-9cb9-ebb8eadeabe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8ba1fc-8b60-4e32-8d30-7bcfcd8da424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47468515-66ef-4a9d-914f-772b7a36b4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e03282e-6ed9-4fc5-8b5c-7f37613fb7e7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2771e705-0162-4fbf-bf33-c3b3196fb0e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d48234d2-d8fd-4c45-b8a2-1b4d7387d605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d219c9b0-f09f-4b46-8e79-da5facbc6f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace333b1-1495-4725-ae1e-115f496f5c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0184c797-6455-46b2-b07e-ee7f4016bba9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7edf5c8-9888-49ad-b5f6-c926584c967b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756b2ded-c607-4720-9827-848bf3c2806e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee16301-0cff-4489-9bce-c96eb3b06f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2d12b7-7e6e-4762-9358-330b618cb6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2034d0d-386d-47c7-a2e5-8301d5324f87",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c6f916-9cbc-4220-aad5-ec8d4396817c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b98290b4-8d26-4368-9588-06afc0a8cd86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb12ba4-8265-4ec4-808e-ba71490ce826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652b56f7-c233-49ef-a731-397366e5b3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8c13e8-782c-4875-bb91-ef8d8d8b010e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75433e30-cb3f-49fe-9e38-ca10a0907dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b254f90-935e-4044-8370-653872768e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5052ed4f-9947-41dc-ab06-7e9c05fcabee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72067a11-8b0c-49ac-8834-c493e5618f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555c2858-e9f6-4942-a3af-369aff6be54e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ec6a20-30b2-466a-8629-325ff2c79eb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7865f9f-0e03-4513-96ee-b4b450bb16ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0bb034-776c-4a3f-9725-98a84c42baf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5409e0a1-27e8-44bd-8015-2be92643297b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bedd85-c856-46fb-b601-3c75a7ec8125",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99700519-6e57-4ce7-930f-1ffe06d96187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a22802-592a-4620-924e-0ab44cbd4b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756b8f2e-f6d9-492d-97d5-f4ad806cb9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed94b208-e4ee-45a4-ab0e-090ab6b2c4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c71f28-24c7-4d41-9240-643913b9613f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61897353-8ad3-4ce6-a227-91d2d313a5da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60407a36-9108-4761-a675-24e91ec5f1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f849e055-df71-427e-a111-aef213fb36b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a14301-4203-4cc8-8345-6bfebee98bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af0f6b0-286f-40e4-989d-8b74e6debf3e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d66f49-581f-4869-995e-6e1e34536d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a68cec-0e42-41a8-b7e9-a65767bbaaac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c3c938-2ce2-43bf-9bb8-e4934c69d95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4dd663a-80eb-44a9-8ae2-e57274d2b0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459588ca-c70d-49b2-a41e-dca78edddc17",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff7648b-f8b8-4c36-b20a-12e9d4c0f4a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02ca6e0b-ac2f-4354-89c6-d7370822fdca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190fcfa3-975c-4be7-9d16-7cb92fb32d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14114e7f-3ab0-4cb8-b71a-ca2c2a0fee58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e613a7-091c-466e-8377-0b53dfb5679e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db8282b-b0a7-4589-b1e0-b12eb826288a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89bf8527-36f9-4f00-a0e2-0fcd79d17e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d64965-0fc3-4901-96f4-d16b073491ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f3f4de-874e-4b61-9f67-dce06990627e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f410a8a-a6d3-4a2a-9119-9c0c46ada2a6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb03000-5dfc-498a-9303-76f793535507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a41fc86-9cfd-4bb4-a26a-cdae234ad81a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24e8573-f8da-4b79-b477-712b2fc60fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa740840-0b18-4ce7-bc2d-ff96b8bce3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6b3e0b-6bbd-4e5b-91bb-b3ba796d34c9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e37cb4-ee8e-4533-83b7-9676a67d4189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8383c51d-c2f9-4186-bebe-f1dfb8a8c228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efff9d7e-bb48-4a0d-b8d9-59c4fc6cacc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada2508a-f0d0-4e2a-87f8-061a70459e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a514cd-8f0e-4b49-8cf2-e741e9187db6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb83b81c-77a9-4f50-8919-a4860112611a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38fce2cc-f588-4c67-8a2c-636674d3dc77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f50473-7739-4c2f-8a08-9db79b0710bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bedabb4-0ac0-4e4b-b01e-d12f225cf557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d686cc61-e560-4cc7-ac34-741349026007",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9616771-fee7-419d-8284-7729fd00d21c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1fe702-c0d4-43ec-951e-325fd92ef62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab92697-e500-478d-83b7-0fca7fb3cf4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010d04d4-6136-4621-98bd-8ef025eea2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc4688a-1653-4722-ab34-5cf99beb3c21",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e26514-9b0c-41a2-b932-292e8046c8dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50403a87-b9a8-4e3f-80c5-d477518c9130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1caef734-6640-4409-b6b7-2ab3480a8887",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1006111-54f8-45d1-8d4b-849dd1324b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b36505a-1f43-41cf-88e0-efbfcc4a7e13",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3498ebd2-114d-442f-96f2-4876083ff125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7ef3bf9-53c2-4755-b65c-397c2bc15324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c051dbd6-5617-4ec0-bcd8-bd66e0a98af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace3816e-2d6d-46cf-b78c-a17f6cd0e3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdc9e9b-89c9-4f9b-be44-2189e8952ad7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ad1dec-906b-437e-884f-2c1e122f147e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd2749a9-f894-4f11-9c7a-00f0c0848169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489f1d45-d460-4eff-98af-e0e19f2869b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f56c60-2c09-4a57-967a-aa31b93a35bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8d0502-44c6-4aee-82ec-592ef70cc892",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2b1e62-9b8f-401d-9214-72b8896243a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9491448-99cd-4704-9131-fd1010772b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67c2390-ee67-4ca7-aab9-dfa0d2338267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c075a82-97d3-4159-b62d-d8c21071c377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c7b6f2-8ef4-4442-b626-47e42143c397",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ffe54c-579d-4238-9478-8e93a2fcb6e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec4e68da-590e-4f0f-bd4d-c11344f26e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5a75c8-3f26-492e-8f67-22f3e88dab8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c283a57-3ffb-4a85-aa95-2eebf512ac93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9896a826-10cf-4bbb-94f0-4673c90bc25e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab5fd75-9c55-460e-9fff-c75e0f1cbd0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd04dc2f-056a-4211-87b7-e04404d43b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25971fda-c760-421b-bc60-bc431b232b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363f3f4f-412d-4b92-a5d3-4369b5c1d98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cec8f5-1b0b-4dd2-af38-348275be3f20",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dde0170-9308-4b0e-84f2-1f2ef91927ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "414c2243-9906-442e-bb92-ae88e6a2e25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e50001-a4d0-4f12-86c7-3b7aeeaed62c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e13ad7-22df-41ee-8fcf-8175b6cb9da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dd1c06-cdb5-41a2-aa40-696f53bbca67",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78267a8b-41ca-4d6e-b740-69495e2e941e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a3372e7-ff47-456e-b312-6d6d8d366eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4ae469-2376-4d6c-a6b2-3e6b9888b986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd1f73a-6b3e-4acf-b31b-cf6d11fe772c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b0983b0-7e63-47dc-a20d-1ebeeec94f63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1670acab-38e0-4c26-8309-3ae45a98fc04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6729c02-87fc-40ff-94a0-cc0c19900184",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba7ed842-b33a-462b-82b7-b95b4a17150d"
                    }
                  }
                ]
              },
              {
                "id": "bd7a1fe9-4b92-492c-89ba-f8ef872ae994",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73d8182e-0342-4128-a3ca-bc10b54a2993",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b859b445-4253-4dae-ba8b-f68b1da69e51",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1135bcc3-4f45-4690-9eb1-b14ca4294702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54a1c5e-5119-4c3b-bd14-b787bb9cc901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "425ee623-ba64-45c1-8782-fb452f65af64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "899eefb9-9f0b-4cf7-98df-b21d9f588397",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71ae7e0b-b7f3-4476-9897-a0b39a8112af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8d5bcab-bdef-4268-9a36-01e991feb263",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5d8c57c-4408-4ac9-b5b2-1794c2fa5ad5"
                    }
                  }
                ]
              },
              {
                "id": "6d0ce862-5c23-4dca-b826-0d6d85d764c5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7b7c6ee0-4ddd-4334-8b9b-5d3564412166",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63e0567-17a3-48ac-b892-6c76ad057cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a685ae6b-30da-44e5-99e3-39b17efabb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2be5a2-6960-45c4-bfc5-1526f51bdc04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be2db1f-e19b-4366-b72c-95c2a819587b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "57e953eb-4c20-44f7-8418-3de49ee90df7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "baff575e-4162-40f6-8191-9f17cf230126",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b69a3b3-1f16-46cd-8240-366d9e7c85e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "45a435ab-69cf-4885-9551-b5f214972790"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "908f8fe7-7547-454f-9332-50ae4608343a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9045fbb5-c14f-47ad-b227-6d6479f2559f"
                    }
                  }
                ]
              },
              {
                "id": "f4a93978-e16d-4ea2-8bd0-e1489b1f723e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "885adb5e-cb48-4bc7-8643-8b1830505e33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ee708552-46f4-45de-8b77-d92993adadb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af43c6a2-06dc-4381-861e-34e3f0059781",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc9b3f7c-8b4a-496d-92e5-3d507957971b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07aa1df0-8437-49b3-9f58-756f4f4a42e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5da955ae-3d64-4bd1-8400-d77920250b12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e560fdbc-214e-4a1e-848b-74cad127a205",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67c35800-3a51-4a63-aaf0-867bff74d47c"
            }
          }
        ]
      },
      {
        "id": "ac8cecba-752a-4bbd-8ae7-af19ce1f1b75",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "26322cb7-3bab-416a-beac-bd1bc5cf57f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e157f1c-5bcf-421f-837b-84b33b99daed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3250f2b9-a51e-40a1-8077-86f7cd2c95b4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dec4de-4829-4db9-9ce2-7c1dd6923ce8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "307b510b-3639-48c7-9a44-c9112c101896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc4622b-6fa5-40e2-b580-84a2fff54994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9782a0f5-783d-44ec-ab08-0d68f2446e9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a7172f6-006d-4fee-a94c-c76e6114df1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8fe1d44-5ede-4654-8c0a-1f03dcdb44eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4a65ea9-f820-40fa-8af7-d7c5c00a4e83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9678bb5a-2721-4117-9863-023a7be21690"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "425d93d0-8384-433b-9d34-95dc20d075f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c58828d0-d568-4566-b103-d870a9324a55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faba4d7d-f734-418f-8eb1-055494f26b4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07ea3e64-5260-4d05-8f97-c8931f08a42e"
            }
          }
        ]
      },
      {
        "id": "5ef0d3c0-a799-42d4-bc87-59d68b715dd5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "af7596a8-42cc-43c0-82e4-96e6d7220646",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8b40b74-00ae-4a05-80ce-12b415fcad38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0675d8a7-dd93-478e-a57d-ba81deb36fdd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32565c9-7ac1-4fe9-a6ee-14f9f98de7f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f66afae-3972-49b7-b3ef-7cf02724e6ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb0240e-ef7c-4c56-b94e-f1e4aa2f2b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "074fa244-7bcb-4a67-8470-c1e68241e5cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d15ef7c-e73f-4825-880a-e0a51e92fd4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1f40f67-b7c6-4338-8f9f-a90b953a4413"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1982325-9438-42d5-95a9-cc729928e6b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6469196-9bbe-4476-bf17-4a1b401716bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78bdf78f-31db-4701-b76c-d0ea51a3962e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8440454c-bb31-4f1e-9558-cabb5170877e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e13f1cb-2d75-4c02-922f-e0ca07b84643",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cddb79b-fdb8-4370-a93b-687f74d9a2c0"
            }
          }
        ]
      },
      {
        "id": "a4d02e46-1234-4fa0-96c5-927c26bb652c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bf3776ac-cbd6-482a-83f0-d9abd934dc69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89f04e5d-f528-4f19-b387-a81c5d625514",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1dd9c2e-3a61-4b59-bb30-b59379ef76bf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1e42df-e033-46a0-ad5e-81621963548e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac49346a-bcfd-455e-915a-50c3fab256e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa9f26e-e60b-48d5-9548-cde0577c6a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c346d7a-dcec-4d12-9a16-e0eb654da13d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78414495-dc01-4a83-adfd-910d5014c634",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fbf8421-6791-49c9-8fc9-a4cc1f912ec2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3251b6c-9cdd-46fb-8cdc-501941d12efd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "178eaa56-c971-4935-b801-c4579227ec4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ee6afda-5297-40d9-a46d-c7c62e132d5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ebcc134b-9ca8-46c5-b682-feb8c7e3fd97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2adaf6a2-ea25-4e57-9bee-a2a964abe694",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05230272-7902-4e4a-b019-88a32ca8e784"
            }
          }
        ]
      },
      {
        "id": "b8dfaddf-324e-490e-a0a5-3ea012adde54",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8b49f8a-fecb-4423-bb01-29798421b67b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27f4e3c9-d347-4271-8887-6c86f4e1aec1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "78ae21c7-44fa-436f-8149-1d6eff305660",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8683d7d5-d0c6-430a-84cf-60290332ff3f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab065510-8c77-4439-af62-3651072aa930",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.740350877192981,
      "responseMin": 2,
      "responseMax": 260,
      "responseSd": 21.314749523400593,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701563879024,
      "completed": 1701563890343
    },
    "executions": [
      {
        "id": "0aa705de-4c3d-4294-8cf5-2e577e0788ec",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c18cd3df-abd5-48c3-8055-51f04d16547f",
          "httpRequestId": "8e142ec4-09d3-4006-8a14-cd46c16425b2"
        },
        "item": {
          "id": "0aa705de-4c3d-4294-8cf5-2e577e0788ec",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a4e70df6-a9df-4f0c-bb5d-f3a8a7596427",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "0c67a50b-b3bf-489e-ad54-a4006134bf17",
        "cursor": {
          "ref": "8d1e0fbf-a140-4457-b457-a801929a8734",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ff856209-4372-4a5f-b632-bb8a4dc2bf0c"
        },
        "item": {
          "id": "0c67a50b-b3bf-489e-ad54-a4006134bf17",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "25ff950f-dc01-4da4-8344-d3f14bfcdb2c",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "ece35b05-ef0e-47f7-8567-fbb2bfffaeff",
        "cursor": {
          "ref": "8436f7e8-9743-451b-b9d9-382d0274d199",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1d86f074-c152-4bec-ae96-11e27844abb6"
        },
        "item": {
          "id": "ece35b05-ef0e-47f7-8567-fbb2bfffaeff",
          "name": "did_json"
        },
        "response": {
          "id": "cccaa2ea-b247-43c7-a8d6-70a9bfa11a7e",
          "status": "OK",
          "code": 200,
          "responseTime": 155,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d41a376-ba9b-40ae-b028-0188db33e27e",
        "cursor": {
          "ref": "8ac4c800-a373-49b2-9879-ed1e7e1432d9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "93dd6da3-ba12-4152-a542-0e247992d012"
        },
        "item": {
          "id": "0d41a376-ba9b-40ae-b028-0188db33e27e",
          "name": "did:invalid"
        },
        "response": {
          "id": "5261d9a2-dba0-436d-9d72-87842e53f13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d41a376-ba9b-40ae-b028-0188db33e27e",
        "cursor": {
          "ref": "8ac4c800-a373-49b2-9879-ed1e7e1432d9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "93dd6da3-ba12-4152-a542-0e247992d012"
        },
        "item": {
          "id": "0d41a376-ba9b-40ae-b028-0188db33e27e",
          "name": "did:invalid"
        },
        "response": {
          "id": "5261d9a2-dba0-436d-9d72-87842e53f13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a4e5ff-6399-487d-b9cd-ff7649daa5bc",
        "cursor": {
          "ref": "8af88ea6-cd3c-40c9-9394-0c0ca77489e8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1316e29c-0532-4b60-938e-f0617914617e"
        },
        "item": {
          "id": "82a4e5ff-6399-487d-b9cd-ff7649daa5bc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f9f7d41e-d6c3-4e69-a909-461e05440fe4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b53c3c0-c83c-43d4-a334-59a47748f431",
        "cursor": {
          "ref": "87d83739-86f6-466d-adec-be420fd2a7c2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b80b0e1e-dad6-427e-8ded-832fec161118"
        },
        "item": {
          "id": "1b53c3c0-c83c-43d4-a334-59a47748f431",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "61cc8ab6-640d-405b-9a15-57e2f8a01164",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0959d8d1-ca1f-4369-9c9d-630b2dfe47e9",
        "cursor": {
          "ref": "d141f06b-f1c4-470f-a717-1eecf7fbfa91",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4d37221d-7b4f-491f-b02f-5874835b5a39"
        },
        "item": {
          "id": "0959d8d1-ca1f-4369-9c9d-630b2dfe47e9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "255334ad-b268-4a82-97e9-989b3d7c33b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2151b28-c646-4cd9-a9eb-6e16ee011984",
        "cursor": {
          "ref": "4160a6d7-7316-479a-8434-be07ea70b19e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c58fa1a7-fb9e-47f1-9996-074a67305400"
        },
        "item": {
          "id": "b2151b28-c646-4cd9-a9eb-6e16ee011984",
          "name": "identifiers"
        },
        "response": {
          "id": "02bd5221-1028-4ece-8eae-092a42578dab",
          "status": "OK",
          "code": 200,
          "responseTime": 156,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fcf778-021c-46a1-9fe3-20d2e192d69d",
        "cursor": {
          "ref": "4d414574-9284-44e6-a5d3-c50ae30ebbe8",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ec741ce9-01d8-4b47-b714-ae704cf44d52"
        },
        "item": {
          "id": "45fcf778-021c-46a1-9fe3-20d2e192d69d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e482b735-f20e-40e4-818b-e66873675ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278d0373-7667-41f5-9b3a-75cb06f128d7",
        "cursor": {
          "ref": "d00af649-2d75-4815-a263-2401b6e502c5",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "24421ce9-d379-44e1-a7ed-84ea7465ac2a"
        },
        "item": {
          "id": "278d0373-7667-41f5-9b3a-75cb06f128d7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5af71fb8-a406-484d-9aa9-c7df4bddf264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d061237d-f1af-43cf-b46a-30caf3fda0f6",
        "cursor": {
          "ref": "7df8dbdf-8bf9-4b5c-b126-910657421705",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "edee6b85-7c71-4563-9e38-2e1cda320512"
        },
        "item": {
          "id": "d061237d-f1af-43cf-b46a-30caf3fda0f6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "20028818-2892-4b8c-bc91-ddb2c5c9bb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ff76a0-42af-4813-a1cd-eaa7da49f1cb",
        "cursor": {
          "ref": "10ae302c-8af1-4588-923b-92b4760cd984",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fe748cef-5777-4808-996e-80292c15e1e4"
        },
        "item": {
          "id": "b8ff76a0-42af-4813-a1cd-eaa7da49f1cb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ad6db8ac-88a1-4282-81d1-95c297312b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61748c38-f5b1-41cd-91d1-de7bfd99a565",
        "cursor": {
          "ref": "d1cdc175-8447-412a-b6af-06ca0ea62c16",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b5b878bb-dcc0-40a0-9f31-b4c36efb0811"
        },
        "item": {
          "id": "61748c38-f5b1-41cd-91d1-de7bfd99a565",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cb7122aa-1c3f-40d3-b0f6-6fe0d6eba374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f40359-899b-448e-837a-5c9033e8e999",
        "cursor": {
          "ref": "97fb306d-9a2d-42f3-b5b6-ad615cca0dec",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9d87a887-ea83-4646-9c9b-755818453dc5"
        },
        "item": {
          "id": "54f40359-899b-448e-837a-5c9033e8e999",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ef902615-1548-4bb1-a30e-12071d5f8a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711b7156-8ef6-48a7-844f-4dd697532282",
        "cursor": {
          "ref": "2fca3995-182d-4c3d-9aa6-aa060046a070",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d191daf9-854f-42f0-90b9-a537a648b997"
        },
        "item": {
          "id": "711b7156-8ef6-48a7-844f-4dd697532282",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f57df44a-753c-4680-aa40-679a9009715b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7817530-b4a1-4827-8bb9-3e171e6be98b",
        "cursor": {
          "ref": "df3c3e78-6e30-443e-ba43-5c2e663510e1",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "549c6c19-9ea8-4171-8098-376810875266"
        },
        "item": {
          "id": "f7817530-b4a1-4827-8bb9-3e171e6be98b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1077e962-c87c-4174-9c89-12d032f8bd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18421113-a878-4995-b104-c8560466f8e2",
        "cursor": {
          "ref": "099a691b-4134-441f-8bcf-b903424156de",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d248eac7-1ab4-4544-8409-fb4d16ddab2b"
        },
        "item": {
          "id": "18421113-a878-4995-b104-c8560466f8e2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c01893db-5c47-4f78-9596-53373187b888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4147b6c-55a2-479e-8f42-6bfc7ca66a93",
        "cursor": {
          "ref": "ca43323d-337f-4272-bbc7-992b17009a6e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cae48bdb-1147-43fd-af51-d93f5030b48c"
        },
        "item": {
          "id": "a4147b6c-55a2-479e-8f42-6bfc7ca66a93",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8160f86b-e4f6-468e-970c-5ad4eddc1c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c88f2d3-c82f-4282-8dab-ae3693e208d4",
        "cursor": {
          "ref": "e8cb0a78-a251-447d-9a69-0edd0230eb10",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "22360ea3-6989-43f6-88c8-440319e7c60d"
        },
        "item": {
          "id": "7c88f2d3-c82f-4282-8dab-ae3693e208d4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "27307f7f-e8db-4ee0-805f-f38df47ff574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96ba7d4-cd61-49e2-91df-72416657732f",
        "cursor": {
          "ref": "bd150566-b444-4914-90e2-fc6e7f595a83",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f0233d27-91b5-44ed-9639-3796884487b9"
        },
        "item": {
          "id": "b96ba7d4-cd61-49e2-91df-72416657732f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1760b4d5-bdd4-480a-9c68-88e9c154126b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37677527-b806-4a61-87b1-c37344314a58",
        "cursor": {
          "ref": "c75bf9c9-21d3-461e-96a2-9c90b695ff65",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7ef47460-c983-4985-9eb7-0fa75e54034c"
        },
        "item": {
          "id": "37677527-b806-4a61-87b1-c37344314a58",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4aab935e-d60b-442b-b9e0-ea6ab0360d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60900707-82c6-4e80-972b-53e93c4f0910",
        "cursor": {
          "ref": "0dbaf581-fd1f-427c-9cb6-9ec8256c64b5",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a5990da0-974d-40a2-a2fd-619df54b02de"
        },
        "item": {
          "id": "60900707-82c6-4e80-972b-53e93c4f0910",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d31851d6-501c-42d6-8b51-b8304e9583db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9102689-4d89-405f-a94f-17f3e0cc18c8",
        "cursor": {
          "ref": "e3f92b37-ac0c-4d5d-9e31-8a935bfcef3d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "017eef74-f84d-4fd9-b285-ca98ec15222a"
        },
        "item": {
          "id": "d9102689-4d89-405f-a94f-17f3e0cc18c8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a900c7d9-fd19-4228-aafa-449dd031e7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a857950-02d1-4ede-b508-6b8e4692d915",
        "cursor": {
          "ref": "36c5538b-f983-49dc-bfe7-da26cd5ad182",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "db2e43f4-6451-4f6d-b105-21bc40928f6a"
        },
        "item": {
          "id": "3a857950-02d1-4ede-b508-6b8e4692d915",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5b27f8fd-7ca7-4ea4-bda1-736d6ef05e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94905ce-6127-490e-bd2d-fc348dcc3d3d",
        "cursor": {
          "ref": "71d3cfcf-a87d-4b4d-ab10-4ba3a5edd88f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5bf7a316-ff93-470a-beeb-92eb5f1dd723"
        },
        "item": {
          "id": "e94905ce-6127-490e-bd2d-fc348dcc3d3d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a36d84a7-a741-497c-beb1-6b3d37a842cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d48888-ea42-4606-8f78-d7c39bf947fa",
        "cursor": {
          "ref": "f02c04f5-e6b4-4d95-9fe9-03b77ca31764",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "73abaa47-36c6-4276-aec7-70d756dbe36d"
        },
        "item": {
          "id": "27d48888-ea42-4606-8f78-d7c39bf947fa",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "320f46d7-8bc5-4b02-b774-c88f394dc89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22621d9-19cf-4565-a4cd-ae04ce37810e",
        "cursor": {
          "ref": "40e9d5f6-ce05-4f74-9ce0-3810738d90eb",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "972884eb-05d5-428f-9676-12c5723e8586"
        },
        "item": {
          "id": "e22621d9-19cf-4565-a4cd-ae04ce37810e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0225eda4-6040-4798-903b-361b5e3001d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dc6ebf-f177-407c-ad0d-74b34d25659c",
        "cursor": {
          "ref": "3f6672c6-350b-456f-b674-1503abaaf2d2",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e4882a4e-aedb-45ed-ae1b-4a4287f106a7"
        },
        "item": {
          "id": "88dc6ebf-f177-407c-ad0d-74b34d25659c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "218074ce-4271-4e16-a5be-7fb71710e97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e72cf7-8b68-42e5-916d-539546e8b6a2",
        "cursor": {
          "ref": "927739ba-98b9-47ab-b5d9-c708d8d53df7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4e5ebc7b-888c-45d7-8de2-b7c7b3a50da1"
        },
        "item": {
          "id": "c4e72cf7-8b68-42e5-916d-539546e8b6a2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "12dd9d45-a8d2-460b-a22d-f4dd47eed5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b9ff51-97fa-4b72-b6ad-33134ca36d9d",
        "cursor": {
          "ref": "bc599b84-5d6a-4711-860e-e58a911c64f9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b7e7780c-19b4-49d6-9825-99e1679c2944"
        },
        "item": {
          "id": "77b9ff51-97fa-4b72-b6ad-33134ca36d9d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "91e4d6d4-ddb0-472a-940f-1d8b93a70408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee928ff-cab7-4f0c-810f-fd5abf92d330",
        "cursor": {
          "ref": "acde6dff-7e13-4905-93c1-e7cab837ab3d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "054e3681-acf8-4a25-8371-5556dadf7d91"
        },
        "item": {
          "id": "7ee928ff-cab7-4f0c-810f-fd5abf92d330",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "eadca537-29f6-4fd8-a179-838f2387970d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ac3365-cd4d-4072-97d0-43c79cce3db7",
        "cursor": {
          "ref": "fb702ee4-e1bd-470f-bf15-87b9adaebdc4",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4aab7b1f-6bc1-49e0-8cf0-efbfe3a78968"
        },
        "item": {
          "id": "d3ac3365-cd4d-4072-97d0-43c79cce3db7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1bf101a3-38d9-4ad0-ae6c-cc2dac4a5475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f8c32c-53b8-4136-a7cb-1a494a054049",
        "cursor": {
          "ref": "cd4b43c9-4d3e-4d2e-b48d-ff6561516923",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "753dec44-37ad-4661-885c-94b4c504865c"
        },
        "item": {
          "id": "91f8c32c-53b8-4136-a7cb-1a494a054049",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b1dc4b3e-7b26-49bc-b115-e2c5836ad6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3f37d8-0f05-4f61-ad78-6df60593986c",
        "cursor": {
          "ref": "4a4f1ced-20dc-4bb8-bd82-4d68b15256c0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "82f473a8-41ff-4fed-b303-ede33e9e03f3"
        },
        "item": {
          "id": "fa3f37d8-0f05-4f61-ad78-6df60593986c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ea4bbf7e-5d4a-41c8-a912-9ae35d43842b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcfe928-56ad-42af-be58-8b35c22e1ebc",
        "cursor": {
          "ref": "d5a8b532-c323-4753-9e30-e23a3c476c68",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1c014484-fdc5-4f71-ada0-d94ad1f8238e"
        },
        "item": {
          "id": "9fcfe928-56ad-42af-be58-8b35c22e1ebc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "77f2469d-4bfa-4734-8291-5dcf2a6bc4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409f5c53-8deb-457a-bf32-754be618c6b9",
        "cursor": {
          "ref": "7141c107-307e-421e-8122-1c7e5179d842",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "473a1a06-9823-46d7-b69e-1e67cd7940ba"
        },
        "item": {
          "id": "409f5c53-8deb-457a-bf32-754be618c6b9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "91a8d2e5-7c19-407e-b951-947657ce9f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e252c71a-3701-47eb-819e-e76d426b95dd",
        "cursor": {
          "ref": "0c3534a5-bf7e-4a40-9284-a02dd2484284",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e2fc2add-92c5-44f5-8413-e5987bf41e47"
        },
        "item": {
          "id": "e252c71a-3701-47eb-819e-e76d426b95dd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "396b3c7a-8b0e-4eb5-8427-00ccee747f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395bb402-a485-4657-96ad-9f0c17376030",
        "cursor": {
          "ref": "479cddda-23f8-41b1-b95c-064ef95271c0",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e82150b3-1428-46c8-8c7f-1470c5acc101"
        },
        "item": {
          "id": "395bb402-a485-4657-96ad-9f0c17376030",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ca033894-201c-4dc1-905c-519017c10558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a42f593-63d3-4cac-886a-44d421591b58",
        "cursor": {
          "ref": "ee94579b-fece-4ac8-8af4-4a2866d8e6f8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "17e4da9d-3fbb-4878-ba55-ec372d9d40c3"
        },
        "item": {
          "id": "5a42f593-63d3-4cac-886a-44d421591b58",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2439528f-c739-4da4-8ed1-c950d04c1a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0506b28a-2ab2-475f-9013-8c2cd6af01d7",
        "cursor": {
          "ref": "24858c37-ac29-49ea-95a6-baaf65f30a86",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "458f8ce6-48c7-4f63-ab32-7a6b359bc064"
        },
        "item": {
          "id": "0506b28a-2ab2-475f-9013-8c2cd6af01d7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9bbb3e07-31c1-4709-90bf-55cf80a65b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80097289-a230-4a94-86b4-0c55f1d45d4e",
        "cursor": {
          "ref": "85e021cc-e83d-4b20-a7e5-3bf4f94c1f9f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "98ac3102-6dce-419a-989f-8ff1da908c37"
        },
        "item": {
          "id": "80097289-a230-4a94-86b4-0c55f1d45d4e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "81cf0770-9bf1-4079-b25f-f538dafbb933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c94f093-d64d-446b-bc0f-477ada8ab14f",
        "cursor": {
          "ref": "86a6663d-deed-4132-a111-1ac4c309949b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fca27223-8829-4a41-a83d-11f4f72c9ae7"
        },
        "item": {
          "id": "5c94f093-d64d-446b-bc0f-477ada8ab14f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a3b74130-53c5-4009-b8e4-d0332a2cb08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2506a1db-006f-4863-a19f-d94089250e73",
        "cursor": {
          "ref": "ffa033c2-63eb-478d-8c5c-f5020729a6d4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0f1fce3b-0f1f-4d7f-8d75-5b2eee9cdd8b"
        },
        "item": {
          "id": "2506a1db-006f-4863-a19f-d94089250e73",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6683e359-33a6-4e01-b4a1-bbd5978b6926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58440343-22e6-4878-996c-80225df6ecd6",
        "cursor": {
          "ref": "8062c2b4-3220-4a91-9157-f49e37d034db",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f66b295d-1501-4389-8626-01ec28839f3c"
        },
        "item": {
          "id": "58440343-22e6-4878-996c-80225df6ecd6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ca9c6e6d-924a-4807-9209-af622e3bcaa8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 30,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47722be9-f070-42a4-8228-bb4894ceeb1b",
        "cursor": {
          "ref": "76d8ff6d-072e-46be-994a-c9d27114f27a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "80a7a392-c50a-45a8-bbb8-5b87de02ed74"
        },
        "item": {
          "id": "47722be9-f070-42a4-8228-bb4894ceeb1b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "61a57c31-39a7-4016-8dd7-e0de42e79174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464da84d-ec80-4309-b72f-f94b3716ba2f",
        "cursor": {
          "ref": "071b3d40-bd8d-48a6-8711-c19736f07741",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b5fc4d4e-c4f8-4848-9bd1-0320a28d91a0"
        },
        "item": {
          "id": "464da84d-ec80-4309-b72f-f94b3716ba2f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "21e3b5ab-d9b5-421a-9417-bffffec51f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178ab487-5196-47d3-8198-14c90fb49a3a",
        "cursor": {
          "ref": "1974a6ce-53b9-4355-a7aa-015e58e0db49",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dc937382-3fec-4d78-87f5-c1c04c1231a4"
        },
        "item": {
          "id": "178ab487-5196-47d3-8198-14c90fb49a3a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7aafb8f2-f2d1-4458-b928-5344b4f50ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4d1c92-839a-4f2b-b8b1-0b2674355662",
        "cursor": {
          "ref": "b4b1719f-dc42-4435-ac6c-30279fd176b7",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a8200e31-b1fe-4e0a-94d1-781f841587f5"
        },
        "item": {
          "id": "aa4d1c92-839a-4f2b-b8b1-0b2674355662",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "deb0e3c6-75c5-42be-a75c-1e42a4d7fc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5db54d-6941-489d-bd00-3cda3499c3ba",
        "cursor": {
          "ref": "26c223c5-8f9a-42d5-848e-d5f562441cbb",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "65bf54a7-c966-4a0e-8461-29ec3577e35d"
        },
        "item": {
          "id": "0b5db54d-6941-489d-bd00-3cda3499c3ba",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "11f91b95-c9c5-461b-9d54-21dfbdc2edca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07cafbe-2168-4645-9e94-a4b4bacdc263",
        "cursor": {
          "ref": "ad3c1189-01c3-4feb-9fdd-ff36b9fbe97c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4d64cbc0-8049-4b5e-9934-9c25dad8a2b6"
        },
        "item": {
          "id": "e07cafbe-2168-4645-9e94-a4b4bacdc263",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7ecceeee-3692-452f-9f10-c3a165b63e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45aeccb-63a0-44e3-ad0b-0c0441bc9388",
        "cursor": {
          "ref": "0d0627f8-f05a-4368-b5b9-fdcbe3c09347",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "228fbd24-4c15-4430-b319-bbbcd81b6e04"
        },
        "item": {
          "id": "c45aeccb-63a0-44e3-ad0b-0c0441bc9388",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "45c8a66a-8f9d-4946-a0a5-213e186a27b9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd2baed-9c0d-4c97-ba6d-e471f69af1fd",
        "cursor": {
          "ref": "5d6596a2-9323-45c6-829b-0b1ffe76d6fe",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "eb666bf1-6afd-4bbd-8b60-14e7d45d54e7"
        },
        "item": {
          "id": "0cd2baed-9c0d-4c97-ba6d-e471f69af1fd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4551fc3c-586d-40df-aef7-7f8a559cd093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890a71ba-e9bc-43b8-9611-003a01fc567a",
        "cursor": {
          "ref": "2b007207-59b7-4392-abe7-4e21cfb00c39",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9a7e56c9-fe07-4096-bad8-066af7376df4"
        },
        "item": {
          "id": "890a71ba-e9bc-43b8-9611-003a01fc567a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "61b34acb-b2fc-42e9-8cad-be40c468994a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b323a1-fddb-4fd1-83b1-5a76972559a2",
        "cursor": {
          "ref": "264e5103-2b2b-4591-90b6-836b368fa300",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5e9eb6f0-665a-472a-81e8-38719ef4050d"
        },
        "item": {
          "id": "b0b323a1-fddb-4fd1-83b1-5a76972559a2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5918c92e-5848-42c1-9ec5-e8382e11f999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35025b42-8135-4fc9-90c3-42c11dc5ff7a",
        "cursor": {
          "ref": "403952e6-4e1b-491d-9d20-5aef19ca1053",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a5a496b4-f41a-44dc-a0ed-314b41a92534"
        },
        "item": {
          "id": "35025b42-8135-4fc9-90c3-42c11dc5ff7a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1af4e307-a921-46d3-9ce1-b45ee2945e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d59f0ac-3139-4464-b04e-f356fd2b45a7",
        "cursor": {
          "ref": "65e8fd2b-40a2-45c9-b70e-5eca9f832621",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3e92a03d-c44e-4a4d-80f3-0fb9a4a71173"
        },
        "item": {
          "id": "3d59f0ac-3139-4464-b04e-f356fd2b45a7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "19a63ed1-4142-4812-afce-e5774dd08380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb8b143-5673-441a-a1fc-56bf2afc15ae",
        "cursor": {
          "ref": "46b8dd49-27cc-4072-8f1e-0afc1887b69d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dc9c3fd8-c4df-47b4-9a66-06e7b0fe0049"
        },
        "item": {
          "id": "aeb8b143-5673-441a-a1fc-56bf2afc15ae",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "87040b50-eb8b-4731-a7dd-cb42df227df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274c33fe-e3cc-4165-8c62-463e6b49ccea",
        "cursor": {
          "ref": "2b4f83c5-696c-425a-99d2-4e3e260f2d77",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "40ed7988-f6a9-41d4-a7d8-53206ddced02"
        },
        "item": {
          "id": "274c33fe-e3cc-4165-8c62-463e6b49ccea",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7dcbe071-f6c6-44ad-8a61-601b38d96185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5235519e-fd96-4393-9f3c-4d68de7a7c8c",
        "cursor": {
          "ref": "0d31bdc9-ee9f-4555-b590-a828e0b2bb0f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "da679de2-04e8-43f6-9ff3-992fe07404b1"
        },
        "item": {
          "id": "5235519e-fd96-4393-9f3c-4d68de7a7c8c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d7924e55-ef73-4e12-8bd6-7edd583511ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17d2ede-7c8b-4b1d-9510-e59865fb1604",
        "cursor": {
          "ref": "f63b0c08-8968-4aea-954a-fc2cd80c4945",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0c14817d-2119-47d5-8940-b071ecd79976"
        },
        "item": {
          "id": "f17d2ede-7c8b-4b1d-9510-e59865fb1604",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4bbc1aeb-64cb-40f7-9b2a-850f7caf1a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a61c91f-67d1-464e-9142-7ea601963594",
        "cursor": {
          "ref": "c36ea3e0-ff91-4b4b-ba15-e8a3c501e065",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4f40f67f-ded1-4715-9105-488723bffe72"
        },
        "item": {
          "id": "4a61c91f-67d1-464e-9142-7ea601963594",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b32be874-c5f1-4c3b-acbd-b693dfadadc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1d7c1c-cded-4907-9fd4-1ad14dbf80f9",
        "cursor": {
          "ref": "74441601-7cdb-4971-9238-6a28e19b7b72",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e2b21dec-aa86-498e-b7d7-7d986efda97e"
        },
        "item": {
          "id": "ef1d7c1c-cded-4907-9fd4-1ad14dbf80f9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6fa08cba-fdd8-4aef-8584-db4f67648a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356feeef-bf80-491b-9c94-de3d73caa310",
        "cursor": {
          "ref": "55981cee-4f14-4875-a02f-95d3d0e20dd8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a0f9a5b7-ebec-465e-a112-cb438697c275"
        },
        "item": {
          "id": "356feeef-bf80-491b-9c94-de3d73caa310",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d4f4cd93-88e7-419f-93cc-c54c4f33d835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d447a6-8930-437c-ab25-6cd0f828889e",
        "cursor": {
          "ref": "a34a9c7e-b1bd-4e3e-8bd0-617f69288da1",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2eb63e7e-20c4-429b-9b89-c5ae08dcc506"
        },
        "item": {
          "id": "17d447a6-8930-437c-ab25-6cd0f828889e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0b5ae40f-552a-449b-b1aa-9d43c114f9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15af936-f13a-4249-9e59-bfb1e90a39aa",
        "cursor": {
          "ref": "ab63b060-54a7-46dc-af7e-30d6e3740679",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a210e412-ef63-44b3-bdc8-9daee9f6aa1d"
        },
        "item": {
          "id": "d15af936-f13a-4249-9e59-bfb1e90a39aa",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2e0002f8-20f9-42bb-9888-10168c070714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507f185c-8642-42d3-8c85-1c6b059c62b3",
        "cursor": {
          "ref": "a2cecf3b-9ad3-4527-9681-e71b01e465d0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7cd2722b-d1fe-4753-9509-af87ae075b0c"
        },
        "item": {
          "id": "507f185c-8642-42d3-8c85-1c6b059c62b3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4788df4a-f799-4d9a-addc-aea31f6c45ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4520b400-c38c-4ac6-adac-cc16de2879f3",
        "cursor": {
          "ref": "4fec7c8c-9a3b-43c2-b846-1c4540cbf30f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "157c3904-1d8b-4ec3-9c89-aa4bbe068962"
        },
        "item": {
          "id": "4520b400-c38c-4ac6-adac-cc16de2879f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "68e9a2f6-b2e2-4efc-9823-fcf92d0e7383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2418978f-db52-426e-a193-1929cb1048f4",
        "cursor": {
          "ref": "d79b899e-e009-4d54-adef-27145705b302",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "022ce5ed-a38a-4c3c-944f-4ae17e5bd42a"
        },
        "item": {
          "id": "2418978f-db52-426e-a193-1929cb1048f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "71878e71-0c84-4a03-8171-6c2629e77986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e500728-8557-4d80-9a6e-156ddf73e23a",
        "cursor": {
          "ref": "402ac480-d0c1-426b-89be-44ea7a323355",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7f378f99-0d14-490e-ad84-d12acd3e9120"
        },
        "item": {
          "id": "1e500728-8557-4d80-9a6e-156ddf73e23a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e7dbf14c-7389-4dca-9d25-3ad70e6fdf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78323567-7354-42d5-98c6-430b63b3ea66",
        "cursor": {
          "ref": "cc5b3cec-5090-4e6e-a567-6895b647af7a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "82a0ae53-639d-4779-8a81-5def93507f88"
        },
        "item": {
          "id": "78323567-7354-42d5-98c6-430b63b3ea66",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f2a68743-895d-4855-9c71-92e0f8bbfe43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d688cc73-686c-4d50-86a9-2e493bdc6349",
        "cursor": {
          "ref": "79049123-7593-495e-948e-d11be049ce22",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b0470dae-6ae1-42e3-a0dc-cc6d6af1e79b"
        },
        "item": {
          "id": "d688cc73-686c-4d50-86a9-2e493bdc6349",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "60f63286-78ec-48ff-b9ab-8db81631502c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da6e3ae-ccd8-44cf-9ab5-e0f220d57124",
        "cursor": {
          "ref": "52cb2e1f-8369-409e-b1b7-6cdb643d0661",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a5dabeab-9ebf-4ec9-9dc8-ee2fd11c085c"
        },
        "item": {
          "id": "3da6e3ae-ccd8-44cf-9ab5-e0f220d57124",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6c5136fa-cb25-4084-91a0-fceb36d153bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c085e1-4c8b-408e-9276-d260df060680",
        "cursor": {
          "ref": "d0ee508b-a9e8-40dc-95a6-83b98ad07b7e",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "445a1250-35a0-4ce8-aaa1-3ad595f3cf20"
        },
        "item": {
          "id": "d4c085e1-4c8b-408e-9276-d260df060680",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5b0961f6-fee8-4047-a886-dda1669a4f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee3d533-5b3a-496a-8075-c8eae8725993",
        "cursor": {
          "ref": "ab46cc6b-5efa-4a95-aa8b-f8283f6d01f3",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a4c77d5d-94d7-45e1-bac1-31a3a425bbcd"
        },
        "item": {
          "id": "dee3d533-5b3a-496a-8075-c8eae8725993",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1f9b50b7-ac50-4b6a-9df4-611e242c8b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9851a839-95e7-463d-9d4b-0f2c6ed3f982",
        "cursor": {
          "ref": "2a6cf445-2672-484e-913e-4cac5b1020f7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "78c09cbd-ca8d-474d-97e3-d9ce981f805c"
        },
        "item": {
          "id": "9851a839-95e7-463d-9d4b-0f2c6ed3f982",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a0954f79-7ab4-46d2-a875-15335c986e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3277deb7-f170-4e6e-889d-da8f9476b862",
        "cursor": {
          "ref": "fddc099a-7fbb-45d4-b394-7f0efffa3d19",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3b015d5c-4372-446b-b2d7-0a1cc23fdb39"
        },
        "item": {
          "id": "3277deb7-f170-4e6e-889d-da8f9476b862",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dae9deb0-e17b-471b-a48a-b047b7e66960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144c6c63-097f-4243-b5e4-f59692789203",
        "cursor": {
          "ref": "df1e5e79-d820-4f38-bfaa-488855dfb1cb",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1adf2725-3bef-480c-b711-ee774b8c910a"
        },
        "item": {
          "id": "144c6c63-097f-4243-b5e4-f59692789203",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "11834b24-2ace-4555-8f0b-67dfec4ed36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47732eed-e78c-4649-a0f7-c621bbc51394",
        "cursor": {
          "ref": "2b82e42c-4efa-44aa-b8fb-2a0b6c6ea2de",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9abf9b7b-ab0e-4633-bfa6-b03c84bbeb3c"
        },
        "item": {
          "id": "47732eed-e78c-4649-a0f7-c621bbc51394",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e6350831-e97c-4823-b93c-d1d460f9c4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855ad40e-4cf3-4454-a26b-3b44fef5e751",
        "cursor": {
          "ref": "87a779c2-15f4-4432-ba6c-ccd28a1585c0",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b346861e-2e37-4eb6-8d1f-18fabeac32ea"
        },
        "item": {
          "id": "855ad40e-4cf3-4454-a26b-3b44fef5e751",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "521c92fa-70aa-43ca-b73f-f92c969b3c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb4ccac-8970-45dd-bde4-995a54b41b1a",
        "cursor": {
          "ref": "4cd8d8d1-6482-43f4-b157-5391aec4f7b2",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "688ca24a-87a2-4171-8e1e-79f110b7e0e3"
        },
        "item": {
          "id": "3fb4ccac-8970-45dd-bde4-995a54b41b1a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8cb628bb-61ca-492d-9310-354aae49f0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0da7a1-7cdb-4211-8de1-f3603c5f3d52",
        "cursor": {
          "ref": "c9ab88cc-47bc-400f-9727-d4f9e0ac0057",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9fc39de9-8189-4f62-b1d9-992fa1a6ffc1"
        },
        "item": {
          "id": "ea0da7a1-7cdb-4211-8de1-f3603c5f3d52",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8d499a67-07bd-4fd6-94b5-59ab45995081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cf5de7-2464-44c5-86dc-95f6af865e22",
        "cursor": {
          "ref": "23d35628-2a69-4c14-84c5-ba5f879606de",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b6920f84-9f34-471f-8acb-f7ec9eda7349"
        },
        "item": {
          "id": "18cf5de7-2464-44c5-86dc-95f6af865e22",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b74908cc-e3f6-4f39-aeab-c9f365e4bf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e741febc-c900-402c-8084-d63f7a7f6fe0",
        "cursor": {
          "ref": "cf1ba361-06ec-420d-a76b-c22fb9bf1ad3",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9cb2ecd0-d055-4267-8d23-054111a52bb5"
        },
        "item": {
          "id": "e741febc-c900-402c-8084-d63f7a7f6fe0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8c19baf8-84ea-4e14-9414-bf9c6f550713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02271d46-f16e-4dc6-afb9-97e23b61ee2a",
        "cursor": {
          "ref": "e0fc0b07-e978-4cd4-8a90-3ae6e47edb5d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f7dfd349-d204-4701-86a8-11eeac0207ce"
        },
        "item": {
          "id": "02271d46-f16e-4dc6-afb9-97e23b61ee2a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3ed5c6ae-ae75-438e-9305-73b26c1564a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03169e8e-e249-4e51-8a88-40cf531893af",
        "cursor": {
          "ref": "42927d67-be8e-4205-9b99-e177ed7d3101",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "951f2a57-e508-41d1-9f71-73f0b010fc9b"
        },
        "item": {
          "id": "03169e8e-e249-4e51-8a88-40cf531893af",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1811ea57-2239-4b1e-8316-7fb97fa06adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7f06b8-b8e0-46c7-ab58-a0b68540a1aa",
        "cursor": {
          "ref": "c76e1fdd-1cac-4871-9c7b-70e914b7c358",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d1948899-2d35-4370-af26-cef5254373a6"
        },
        "item": {
          "id": "5a7f06b8-b8e0-46c7-ab58-a0b68540a1aa",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "280348e6-441c-4ab7-a539-39c995204ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f64adb3-6f50-444b-8a51-8232f4c432eb",
        "cursor": {
          "ref": "3922cc8d-7cac-4f29-829d-ae640864490a",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7cb008f7-69e9-47b7-8a2a-84c6410fd8fe"
        },
        "item": {
          "id": "7f64adb3-6f50-444b-8a51-8232f4c432eb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5a7df3dd-df70-415c-8336-57d708ead2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91e094f-ece0-4923-829b-15244a2a7000",
        "cursor": {
          "ref": "8d761d88-a49c-438d-beec-e59c83cf198e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8d0a4405-2f02-4e2b-87f3-f829c3c82693"
        },
        "item": {
          "id": "a91e094f-ece0-4923-829b-15244a2a7000",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2fb3d0fd-e4d8-4a3a-8973-34fb3a4652f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca62bf3-f481-4ed2-92a6-f3b9108dc292",
        "cursor": {
          "ref": "6dc88a0d-0990-45d9-ba56-e7649df295f9",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "63bbc473-75b9-4bdd-828a-f305e021d39b"
        },
        "item": {
          "id": "5ca62bf3-f481-4ed2-92a6-f3b9108dc292",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ccbf6db7-597f-4fa5-8920-d795de883ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52867388-599e-4511-8f22-3c02b581007d",
        "cursor": {
          "ref": "8275bc02-1805-4356-a1d2-4dc41f50e37f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1118a2c0-e658-4eda-8747-2678f114340d"
        },
        "item": {
          "id": "52867388-599e-4511-8f22-3c02b581007d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2fdc268d-78e4-4a52-b958-e3948b3cd4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf4a921-ed92-40b8-8366-691e44b9831a",
        "cursor": {
          "ref": "1e2671a4-29b0-4e50-9a7d-e22f413b7378",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "00d3bfca-4727-4273-8040-3d06bd3bcc24"
        },
        "item": {
          "id": "9bf4a921-ed92-40b8-8366-691e44b9831a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7df1c7f8-5c21-4fa6-9e0e-b1083b3b4846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8769d163-97cb-4555-812f-4a6f7459bce9",
        "cursor": {
          "ref": "e687a465-4918-496a-8c96-e8a3d567fcb4",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f244fe0f-6a16-4818-aade-e82f316731fe"
        },
        "item": {
          "id": "8769d163-97cb-4555-812f-4a6f7459bce9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b63e631d-477b-4d4a-941c-042e8194aa51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1638b6ca-acff-4efc-8215-b474b0d6c7b8",
        "cursor": {
          "ref": "f829760e-1201-4354-8c9a-bf715f57292e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "52095924-4f72-468c-971b-0472d499218e"
        },
        "item": {
          "id": "1638b6ca-acff-4efc-8215-b474b0d6c7b8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "75f5629f-0d4e-460e-a112-637fdaeb5984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6653e278-07fa-44b4-baec-1778a5338f01",
        "cursor": {
          "ref": "7fbbd0b3-9c20-46f2-a06c-6bd53befe310",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fcdfab1f-9845-4ecd-9b41-5b9995e9689c"
        },
        "item": {
          "id": "6653e278-07fa-44b4-baec-1778a5338f01",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "76c196d0-7065-4069-8db1-a02d415d698f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7d33c4-c2bf-4f1f-aa47-40f276502b0f",
        "cursor": {
          "ref": "e530c78f-3efb-464b-b4f7-a2d6b31e0be8",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b2aefb5a-fd5d-4334-8d6b-bd3cd6ac110d"
        },
        "item": {
          "id": "0e7d33c4-c2bf-4f1f-aa47-40f276502b0f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4d23096b-8c93-4e7d-ad77-52fbdcbff98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0691fc-380b-440b-ad1e-c501d606232a",
        "cursor": {
          "ref": "05cd8f04-31c3-410f-9c5f-c93ec2d9c576",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c8822ff0-ef78-4d98-85b5-9b3b6a4e754b"
        },
        "item": {
          "id": "ae0691fc-380b-440b-ad1e-c501d606232a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "225ccd18-869b-4f53-b188-e7393a53b1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c555f3a-a90b-4197-b6c7-7c99bdcbe236",
        "cursor": {
          "ref": "9ade8d8c-2c3b-4588-b6cb-0d49eb1bf32e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bdcf7146-f086-41e2-817e-e1362ca10ba9"
        },
        "item": {
          "id": "3c555f3a-a90b-4197-b6c7-7c99bdcbe236",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "52ba51df-961c-44b8-b12d-aecb6802864d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d652c856-f664-4c9b-b1ac-488fb0884b38",
        "cursor": {
          "ref": "5bc19acc-28d4-4eac-9032-858df241277a",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "231e6e5e-a1ae-4bb5-9d85-56347b2cb716"
        },
        "item": {
          "id": "d652c856-f664-4c9b-b1ac-488fb0884b38",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "811d89a8-6aa7-46aa-958e-2c12ee06bcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2dbc09-a289-40e3-991a-0f6f0b2799ee",
        "cursor": {
          "ref": "d327e744-e76d-4105-84cd-773896c44f2a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2fd25efe-8931-4aff-a545-4038031d3c56"
        },
        "item": {
          "id": "3c2dbc09-a289-40e3-991a-0f6f0b2799ee",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c1a94bee-f296-4d36-a552-f49ed15b5134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974f4fed-87a6-4ba5-a82d-8d037eed6991",
        "cursor": {
          "ref": "22ebc364-a28c-454c-9ab2-8f5e5581dfaf",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "eb8daab0-f636-461a-8f09-30bd104b8056"
        },
        "item": {
          "id": "974f4fed-87a6-4ba5-a82d-8d037eed6991",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b6559ff2-b850-46e1-8d42-c4bcb63d17d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cc7b59-1b01-4ce9-8e42-57ee6fb9cbf0",
        "cursor": {
          "ref": "a05f246f-eec3-4f09-af80-1fe3aff3b413",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d57303a2-932d-4d33-ad5e-93129c4b5b6c"
        },
        "item": {
          "id": "e4cc7b59-1b01-4ce9-8e42-57ee6fb9cbf0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bcaf46b6-14ad-48e1-bb54-3cd46fb77f13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385cb5f1-baab-4dc4-b8cf-0361ad4de74b",
        "cursor": {
          "ref": "5c339908-61e1-4231-965e-4dbff48e964d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cd7b57bf-a3a3-492d-9434-dd28efe63a05"
        },
        "item": {
          "id": "385cb5f1-baab-4dc4-b8cf-0361ad4de74b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "eab22b5c-c6aa-4415-aef7-de09ad11a579",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7b780a-cc0a-40a6-abaf-abf5c732f292",
        "cursor": {
          "ref": "f957e7d5-b985-4013-bdba-aa260744a049",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "35e31def-b020-49c3-a230-971bdf6a2723"
        },
        "item": {
          "id": "1e7b780a-cc0a-40a6-abaf-abf5c732f292",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3133a262-f7ec-4e5a-b61b-b5e45553735f",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e894dbc1-3596-4dad-8498-67254a40e8bf",
        "cursor": {
          "ref": "4e7bd489-2c53-42ac-aa79-478ce1d47332",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3565a1ca-f624-4173-8490-64f4ec3afebb"
        },
        "item": {
          "id": "e894dbc1-3596-4dad-8498-67254a40e8bf",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4930a5de-1492-40df-9f3d-fed032b1da25",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd042617-4759-4726-be3c-f551ae37abb1",
        "cursor": {
          "ref": "625ae6a3-a33a-4289-bff4-61575a6a9ce8",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5fa95297-641a-4a45-89ff-a6891541bea5"
        },
        "item": {
          "id": "cd042617-4759-4726-be3c-f551ae37abb1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5ac67916-9301-4525-a3b4-7ad5511020b2",
          "status": "Created",
          "code": 201,
          "responseTime": 41,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce225107-518a-4288-a27a-f5a24a228811",
        "cursor": {
          "ref": "2de603e9-2fdc-4507-9796-d785aa45c5ce",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "36159a8b-8583-42e9-b085-a22e7752e00f"
        },
        "item": {
          "id": "ce225107-518a-4288-a27a-f5a24a228811",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "423c3d96-11f7-4de1-b34a-f92110ce246d",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1322f348-919c-4971-b599-e562e10efeb8",
        "cursor": {
          "ref": "2da6c43a-79c9-408a-8671-f951a824dc4a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f68ad531-6ba4-4264-9286-d0f03a4c5957"
        },
        "item": {
          "id": "1322f348-919c-4971-b599-e562e10efeb8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bf6efffd-e31d-4d2d-9d22-7675e10843bc",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "31067014-f417-4d6b-a256-4a9cde3576ce",
        "cursor": {
          "ref": "7722159d-3bb5-4850-a744-ba6138ed4c9e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "327e2cf3-00e8-4f10-be68-427677cfb54e"
        },
        "item": {
          "id": "31067014-f417-4d6b-a256-4a9cde3576ce",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9a9b479f-49ee-46e8-8cd3-ca0bc377abb6",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4a8fc9-939c-4a0a-baaa-6335640a627b",
        "cursor": {
          "ref": "ebc3f84b-9b2f-4f4b-8984-10395390c723",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "108d43a6-2ab9-4fc5-9a28-cb2932b2294c"
        },
        "item": {
          "id": "5c4a8fc9-939c-4a0a-baaa-6335640a627b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c5d978d7-3173-4cdb-a597-e280cfb01f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54e2c4c-9dd9-422e-a516-c8aa45c4d8f9",
        "cursor": {
          "ref": "7670cb38-bea5-40e6-9520-c62e9ad182c4",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "749ec0ee-eda8-458f-a1c1-1fc8efb5f893"
        },
        "item": {
          "id": "b54e2c4c-9dd9-422e-a516-c8aa45c4d8f9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a31f1a85-f75d-4c78-92c6-f4d4d4a48fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa40dd01-3fe6-4223-80eb-d19d410f8b79",
        "cursor": {
          "ref": "fd9518a1-bab8-437e-9e10-54d68fe6fa69",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1b74d116-9e48-4fbc-bb58-a28506ba296a"
        },
        "item": {
          "id": "aa40dd01-3fe6-4223-80eb-d19d410f8b79",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b25bba20-97e6-453b-9aaa-d2586c305946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c1d7d9-d767-4617-9cb6-75e00922ba40",
        "cursor": {
          "ref": "a4bb5a1f-b848-4576-bf25-f9df11cc2a23",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dabe9148-63ba-4985-9e7a-b4a32d478bca"
        },
        "item": {
          "id": "f4c1d7d9-d767-4617-9cb6-75e00922ba40",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "119f3f6e-3977-4fe4-a297-ae00961008be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97125322-e0cb-452b-ab19-ce8dcbbd07e5",
        "cursor": {
          "ref": "877c691d-41aa-4bbb-9684-7f23bcca64dc",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "41d9d1d2-35fa-4d8a-a05f-53660159319c"
        },
        "item": {
          "id": "97125322-e0cb-452b-ab19-ce8dcbbd07e5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "65650d41-dbdd-4ed4-93cf-f66d9d3e46c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd29168-292c-4278-8312-afd483cae385",
        "cursor": {
          "ref": "8b235300-b540-45ae-b945-89b071e11015",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dec8ed5d-8cfb-449d-b046-15afb6bf9cec"
        },
        "item": {
          "id": "5bd29168-292c-4278-8312-afd483cae385",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "06e927f0-ffd3-4f95-b286-ac98af824a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fde9766-25d0-447b-802d-e299fb07fd68",
        "cursor": {
          "ref": "9598f6ba-ddad-42c7-bde3-4bed2d4f9046",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9ba5c090-fe8f-47a0-b624-966641fcb390"
        },
        "item": {
          "id": "7fde9766-25d0-447b-802d-e299fb07fd68",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a23772b9-c343-4846-9caf-3490510afeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c1086f-a9f2-4181-9404-23115fe639b7",
        "cursor": {
          "ref": "8ee8954b-cf4c-4a16-ab8a-c37e08e366fe",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5ba701d9-feac-46ba-8c5b-520614a56c90"
        },
        "item": {
          "id": "67c1086f-a9f2-4181-9404-23115fe639b7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "57b9016a-f9ae-4cce-abe3-f5d6201e3fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc3f120-3642-434c-8f54-a3d2d9cc8431",
        "cursor": {
          "ref": "d9ef958b-4d86-465c-ba84-f353bd7947f9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c075a2c4-a549-4083-a27c-e29fe92e0696"
        },
        "item": {
          "id": "0cc3f120-3642-434c-8f54-a3d2d9cc8431",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7cca4341-c002-4115-86c3-f653055ab14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c597899d-f773-46de-816d-dd868e3a8ee0",
        "cursor": {
          "ref": "cf03ae27-8f20-49bf-ade5-2a8cdcb9e933",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2cd03663-c0cd-4cce-a1f5-27dbc238538b"
        },
        "item": {
          "id": "c597899d-f773-46de-816d-dd868e3a8ee0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c94f295f-894a-45ee-bc99-08f9af4cfdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87672585-da99-4514-960a-188e47346369",
        "cursor": {
          "ref": "b2b1ca24-fe85-4a82-a100-a3aac2456172",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "344fe5f0-1ac5-43aa-ac63-deaa8880d88e"
        },
        "item": {
          "id": "87672585-da99-4514-960a-188e47346369",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e562d38c-bda4-47df-89d6-3a175ad43692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d386713-568b-4575-aa4b-62549d63ee56",
        "cursor": {
          "ref": "fba1efb3-6bfb-4102-a1d8-c95a3e25d357",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2d108f1b-275e-458b-b977-e96633889083"
        },
        "item": {
          "id": "4d386713-568b-4575-aa4b-62549d63ee56",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "61726de1-63e0-4bd3-8b68-9f19ad81dbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d1a0fa-e3ba-4f41-b238-ce12894adb96",
        "cursor": {
          "ref": "a8b9d7cc-30d8-4aab-bfad-012155369993",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2e08f561-38fa-4274-96c5-476316464a04"
        },
        "item": {
          "id": "c8d1a0fa-e3ba-4f41-b238-ce12894adb96",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b97b0931-36a0-4500-9ed8-9fc88ac58650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c163c21-4b5d-470c-829c-fa8836659c25",
        "cursor": {
          "ref": "423969b7-7773-4ba8-b4cd-777842e5ef9d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4c17c3fe-54e9-4fd0-9098-59b960e666e4"
        },
        "item": {
          "id": "6c163c21-4b5d-470c-829c-fa8836659c25",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c9f4149b-d89c-4e55-a820-091f4f03f05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2765d41e-43bb-484c-b4a4-0305108949e0",
        "cursor": {
          "ref": "e9614150-1658-44f5-acdd-83270a554999",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "56a40100-be7b-46af-8209-a9a51cc67089"
        },
        "item": {
          "id": "2765d41e-43bb-484c-b4a4-0305108949e0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e7115559-78bf-4259-b8fc-3b20694fcbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3aa9e4-fadf-46c3-95a7-2c4661b3dbd9",
        "cursor": {
          "ref": "d600d2c1-2e87-4830-ae7e-a17f41c89e68",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f6f1d2fe-c99a-463a-a83e-d3c58e08a435"
        },
        "item": {
          "id": "ce3aa9e4-fadf-46c3-95a7-2c4661b3dbd9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d8ee2887-436c-4c1a-911d-ab744613c93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcfc9d7-fe3f-42a2-90db-301448401f6f",
        "cursor": {
          "ref": "d84d2efb-98b2-4ec0-b095-50c8daceb502",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "33ce7165-0b68-4f2a-bafb-3293a2044083"
        },
        "item": {
          "id": "0fcfc9d7-fe3f-42a2-90db-301448401f6f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6db7c7ee-356b-4b32-ac88-9a7026ae4a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547a31ac-9383-4d51-8ee6-8e29f756477a",
        "cursor": {
          "ref": "a056a256-6ea8-4e65-8055-b44452b36890",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0cc6ebf5-cd62-4df7-9ce0-0d20ff9264c9"
        },
        "item": {
          "id": "547a31ac-9383-4d51-8ee6-8e29f756477a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1e8bb07b-5575-4c4b-88ce-ab5167f468b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383cd27f-c8ec-4c27-a2c6-14794ec150ae",
        "cursor": {
          "ref": "26b2d909-8b9f-4b78-88a8-375c06c475ae",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d3fed6db-179e-4636-a596-5313be02ce28"
        },
        "item": {
          "id": "383cd27f-c8ec-4c27-a2c6-14794ec150ae",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "301a42ff-8e4d-4e45-af77-a4602936a534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48d98a1-82d2-4479-a01a-18307bab4f55",
        "cursor": {
          "ref": "e8cf814c-a2b3-4707-b22f-ff90a6c6fbb7",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "404476a4-88c2-4ab0-b78c-411db271ef29"
        },
        "item": {
          "id": "b48d98a1-82d2-4479-a01a-18307bab4f55",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "32a97869-e221-4c3f-abc1-18b6a9fc7892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869dd63f-49a9-43ad-9436-4cf6ee4cb717",
        "cursor": {
          "ref": "e866b2af-b428-460b-8546-e7ee2dd6ee0d",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9d48e009-5823-480f-80d7-e15a6f805663"
        },
        "item": {
          "id": "869dd63f-49a9-43ad-9436-4cf6ee4cb717",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "af793965-1d38-4826-9d20-ae521eeb31a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecdffca-46db-404d-83ea-eb56091bc206",
        "cursor": {
          "ref": "844587e1-fbed-47f4-920d-2523d0521403",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5c645bd3-1eec-484b-bbec-59ca01c8080c"
        },
        "item": {
          "id": "6ecdffca-46db-404d-83ea-eb56091bc206",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e3646b11-9350-4ba5-9093-d757db31e7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4d6982-a1a9-430f-99f9-0540e61e4ce3",
        "cursor": {
          "ref": "42f4787c-8a00-458a-b356-8554bb60a5a2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c820bde7-f77d-4945-a659-ca4a48b835c9"
        },
        "item": {
          "id": "1e4d6982-a1a9-430f-99f9-0540e61e4ce3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a48aca67-c0b2-4048-afa9-4548e9371add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cf9004-fb49-4565-a35c-e05e756adcdf",
        "cursor": {
          "ref": "c40a45af-8920-43a2-86fd-d67bf512cc3c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "737cc06f-a289-4dcf-87ac-5b8d62e82adf"
        },
        "item": {
          "id": "f6cf9004-fb49-4565-a35c-e05e756adcdf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "92e373bd-f552-4251-9ca8-9a4f49be5083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7c88cd-540d-482a-90a0-06652137c168",
        "cursor": {
          "ref": "d29d5bad-a664-450c-9a8a-a6e7021778b7",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1daef2f6-d48b-4bc5-b886-5c223698b160"
        },
        "item": {
          "id": "5d7c88cd-540d-482a-90a0-06652137c168",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "118eb76e-e964-4bb9-9602-9d1a95ac97f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c18f0b-a95d-4e34-ae64-b2a1a9433922",
        "cursor": {
          "ref": "80f05b68-d9fe-4b40-bff0-191dd24fa938",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "215b8d95-8680-47dc-9b54-3b5f7b5bff6e"
        },
        "item": {
          "id": "82c18f0b-a95d-4e34-ae64-b2a1a9433922",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9c515cb4-68e1-481f-b6ec-31dccd8bc37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4717645-b335-4fad-91d3-8fd069df6f4e",
        "cursor": {
          "ref": "bf2b3cac-3632-49a6-9701-80203fb34925",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "369e8e1b-44ed-4e9b-961a-53161d99f86f"
        },
        "item": {
          "id": "b4717645-b335-4fad-91d3-8fd069df6f4e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8f7e7629-11dc-4317-95bf-859482f8fa67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4925fc83-d00e-4153-bd49-361b669247d6",
        "cursor": {
          "ref": "2a4a2e25-157f-4980-bef0-5b766c61633b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "115c21ec-451f-4ff0-9400-d066bcf5795b"
        },
        "item": {
          "id": "4925fc83-d00e-4153-bd49-361b669247d6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "415c5460-385c-4456-9bc2-e2ac3e9c1d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28b5afd-503e-46c8-83bf-08799b42c268",
        "cursor": {
          "ref": "688976e8-4026-4943-a706-5fd9e91ea5a6",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "76e7f2d8-6d8c-494c-8a37-436b00582037"
        },
        "item": {
          "id": "d28b5afd-503e-46c8-83bf-08799b42c268",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e2538721-1dde-4033-bc19-c64fa272abc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3129897-a4cc-486c-b8c1-6877a54cdc2f",
        "cursor": {
          "ref": "d63a2f36-7bd0-4f3b-8f3c-7e10501dced5",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f745995e-5904-4367-9dfe-0d77bf1a9b2e"
        },
        "item": {
          "id": "b3129897-a4cc-486c-b8c1-6877a54cdc2f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b768a190-1d7d-4c0d-a4b0-149f36f84446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fc3e71-6790-4e81-b4b6-1706992cfc71",
        "cursor": {
          "ref": "39d35498-238b-4e34-8b8e-73052a6eba04",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7de32cfa-6782-43d4-85c2-1e12dc0ce16b"
        },
        "item": {
          "id": "33fc3e71-6790-4e81-b4b6-1706992cfc71",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "27eaf8d0-8eea-44f5-8dc9-f75617c1b917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a79b39-c2d3-4f7b-a3a8-262b44f31725",
        "cursor": {
          "ref": "a0dfe590-049b-40da-973c-b2d847967cf5",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "abf37568-3721-4242-a691-c1606d47c042"
        },
        "item": {
          "id": "d6a79b39-c2d3-4f7b-a3a8-262b44f31725",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "233c2ff3-076d-483e-a742-4d1bf7aa464d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c8df77-2567-4bcb-89ff-26b3ac5f2f8b",
        "cursor": {
          "ref": "b2dbb794-adb9-4e40-80ea-a3dc575db136",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "91ce9366-9ac5-4960-bee5-ffc7de3585bc"
        },
        "item": {
          "id": "f9c8df77-2567-4bcb-89ff-26b3ac5f2f8b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "839caac5-5032-45e6-ad44-7360fb92f042",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cf9e87-4822-4f7e-a35f-ec6bb685f382",
        "cursor": {
          "ref": "47db996e-3bff-40a9-8641-42c10ab923fd",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bdf16506-4c13-47da-a8ff-40549859abc8"
        },
        "item": {
          "id": "30cf9e87-4822-4f7e-a35f-ec6bb685f382",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e1b84450-a76e-41ea-b947-31db3ef46e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e972ea58-af1c-426c-952d-b2d20e3e8b76",
        "cursor": {
          "ref": "8e9ef0f4-2af2-4215-b86e-269edba1b13c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "23ae2260-ee65-4166-b3f6-6bc685766879"
        },
        "item": {
          "id": "e972ea58-af1c-426c-952d-b2d20e3e8b76",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "12d98c49-b42d-4a10-890f-7a5fde85e332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8a59b2-2e43-48ce-b7ab-b1561966b043",
        "cursor": {
          "ref": "4bd395a4-4cdb-410a-a3ac-841bf9d46e13",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ced002d0-0406-48e1-b141-12fee1a8b7fb"
        },
        "item": {
          "id": "af8a59b2-2e43-48ce-b7ab-b1561966b043",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6e51cc96-3c19-4dfa-8e73-8cea236b61b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d674a8e2-d33f-4e82-9931-be83e8088d17",
        "cursor": {
          "ref": "21b70d8a-a46f-4ae7-b3ae-c530e59d150d",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7a9a6b37-ebee-44ec-ad97-51ee35fbed6b"
        },
        "item": {
          "id": "d674a8e2-d33f-4e82-9931-be83e8088d17",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "254fcf81-b64d-4d2c-bc91-6ba171505ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3483e7c7-037a-4c18-9ade-2bd12146a0f9",
        "cursor": {
          "ref": "18ced867-5999-49ef-8a13-19bc3b21a613",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d91515ef-2964-4ecd-aa29-ca794bc6edb4"
        },
        "item": {
          "id": "3483e7c7-037a-4c18-9ade-2bd12146a0f9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "43763ba4-3260-4025-a142-a7a5c8d6ffa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806cb194-d117-48b3-b25f-f6256b13bb8e",
        "cursor": {
          "ref": "979a9f3b-77b1-400c-82e1-f3d8a514e737",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2e235292-59e1-4870-baec-bd2f7103b57e"
        },
        "item": {
          "id": "806cb194-d117-48b3-b25f-f6256b13bb8e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "12a32a3a-300f-42dc-a79b-6667741b5260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002ef056-f5bf-45ef-b32f-26b5a67c5d03",
        "cursor": {
          "ref": "e6cdb057-164b-42fc-af6b-ada2febe0a16",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5d7a2bf8-e9a2-4c73-8635-e1253690a1fd"
        },
        "item": {
          "id": "002ef056-f5bf-45ef-b32f-26b5a67c5d03",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cb7fb39c-4209-4d5d-8240-790e143182ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5228d5-3aef-47ae-ba19-f582cf039d15",
        "cursor": {
          "ref": "c061ce0d-a469-48a8-b6c0-83c1d6ae8c52",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0d5e7803-632a-43e0-8088-7f80b7d14484"
        },
        "item": {
          "id": "7f5228d5-3aef-47ae-ba19-f582cf039d15",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c5fc3a79-a585-42a0-8a3d-97ebf8194b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3218ce-d7fe-4106-bcb1-b9de4050d1eb",
        "cursor": {
          "ref": "516c166d-c98c-459f-bc87-8d5e848065ba",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "39e94824-dfd8-4caf-944a-75b53c47ffec"
        },
        "item": {
          "id": "1f3218ce-d7fe-4106-bcb1-b9de4050d1eb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "99b8f2e6-babf-45c3-98b5-b7197ba44ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6fa1bd-fe81-46ba-8ca6-1afb2d07d32e",
        "cursor": {
          "ref": "83927dc2-039b-4f35-b088-f4b17820f21f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "63706bbb-c65e-4de5-b752-879f8cbb9689"
        },
        "item": {
          "id": "1e6fa1bd-fe81-46ba-8ca6-1afb2d07d32e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "86d34917-94c0-45c0-aad0-0f2c8c607f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14d3648-5647-40a4-ad9d-4d47a79d0e93",
        "cursor": {
          "ref": "5daeb80d-bc5b-4404-9b92-c2332796ba8a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8f5014f5-fe77-409b-bd8d-d84ff6f5d598"
        },
        "item": {
          "id": "b14d3648-5647-40a4-ad9d-4d47a79d0e93",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f2b181f4-47d4-4921-a7cb-db491906cede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdcf38d-0c4f-4386-b090-56f396c1cd0a",
        "cursor": {
          "ref": "d9238334-a3ef-4773-91df-8eff97e55bfe",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0808cd76-78d7-4c71-85a3-330828ddcaf2"
        },
        "item": {
          "id": "4bdcf38d-0c4f-4386-b090-56f396c1cd0a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e8a69f13-096b-4eef-82be-7bc061871397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2383c6d-5fb8-4457-bd3d-60784e2c9788",
        "cursor": {
          "ref": "eb4d8e19-b29d-47b0-992d-92de5d2fdfa0",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e9760ebb-4343-4e77-b0ea-eddeea93ca26"
        },
        "item": {
          "id": "a2383c6d-5fb8-4457-bd3d-60784e2c9788",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8537b6e4-8618-439b-813d-f07f39e11208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf94c84e-d38f-4f57-b4ff-18bcb1699773",
        "cursor": {
          "ref": "bb8ad18d-f257-4e91-8658-1466c6cc6af1",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "94900a33-67d8-4b49-8575-f36d0f53c8ca"
        },
        "item": {
          "id": "bf94c84e-d38f-4f57-b4ff-18bcb1699773",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "12854a6b-24c1-41d7-ae3b-06765603665b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55817f7-cfa4-40d9-94db-f2ccd35c5859",
        "cursor": {
          "ref": "4422376e-1f65-436f-b59e-888348b60639",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "613315f3-c418-4b48-aa50-8244c04826c2"
        },
        "item": {
          "id": "c55817f7-cfa4-40d9-94db-f2ccd35c5859",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1cdd3e41-a93c-47b2-af5a-e71f11b5116d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f1522f-9959-4a2d-9f46-8551e2335fd7",
        "cursor": {
          "ref": "7e8c3cff-8821-4aaf-8838-e6051654bbb9",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "621ae9f4-04b1-4400-aeb7-ffedf9f4e70e"
        },
        "item": {
          "id": "44f1522f-9959-4a2d-9f46-8551e2335fd7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a45afcb6-4ec9-4c1e-b789-0d3b1eb5674f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746f80a3-7665-47e1-8d26-e23517f79428",
        "cursor": {
          "ref": "f5fea589-b40b-4126-97db-89117710cd9d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e5913d9a-36f4-4f14-9127-b8b9334a48c6"
        },
        "item": {
          "id": "746f80a3-7665-47e1-8d26-e23517f79428",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8b6e0920-0ff7-43ea-afc1-5b9f621ae34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf191edd-5e94-4be5-8add-98b3577048b2",
        "cursor": {
          "ref": "d3cdbde7-4dff-45b9-8545-026e47c2e34f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "948174ad-4542-47c9-bc87-cbf76b78caa5"
        },
        "item": {
          "id": "bf191edd-5e94-4be5-8add-98b3577048b2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "73df254a-4a86-4473-b63b-280dd71d035e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cfb4d4-f04d-42b9-b8e4-a16b1855a0ca",
        "cursor": {
          "ref": "ac736b78-e9b3-41d3-9bb4-aec5f9388f28",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2a0687bf-9352-4725-a5e6-c747ef6dbe74"
        },
        "item": {
          "id": "f2cfb4d4-f04d-42b9-b8e4-a16b1855a0ca",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2c3bfdec-ff40-458d-9b1c-677bd028290c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0798315b-1a93-4b48-ab44-1b86b331bd91",
        "cursor": {
          "ref": "f8ec7bd2-6cb1-49fd-a597-891559380222",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2688942a-beda-4b45-8553-ba01d2fce649"
        },
        "item": {
          "id": "0798315b-1a93-4b48-ab44-1b86b331bd91",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f9eb8bcb-5d06-47b8-b53a-e50fb4d432d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2c821e-e73d-4734-a8a8-d23c413725ca",
        "cursor": {
          "ref": "076e56fc-a9ce-48de-a5e1-10a3b213b587",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "599df26f-5dab-4d19-862c-de93db9cb03e"
        },
        "item": {
          "id": "bb2c821e-e73d-4734-a8a8-d23c413725ca",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "96035cc0-820e-43dc-8595-674d7bb36e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3e77f6-208a-4edc-b800-68ea3fa2447f",
        "cursor": {
          "ref": "c044613c-b717-4705-828c-6c265c4a7cfb",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b8486c9e-8c43-4458-bd11-dadde996f9aa"
        },
        "item": {
          "id": "2c3e77f6-208a-4edc-b800-68ea3fa2447f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f681303e-6f1a-4279-834c-f0fc3d22f7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14b7aa8-8627-4ea6-80a7-0bbb5d31055b",
        "cursor": {
          "ref": "60993cfc-5cac-4cf2-a91d-a8fea30e60b0",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aed54b48-2a49-4294-b473-c856ab416165"
        },
        "item": {
          "id": "f14b7aa8-8627-4ea6-80a7-0bbb5d31055b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "481417fc-8203-4ce6-ad3c-9b19e5136ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5423a23-8f04-4564-9447-72e106c3ad12",
        "cursor": {
          "ref": "0da0073f-3fbc-4e71-a85a-9ce2e1e3088a",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4cd98679-e1da-481e-aebd-1ed824c2f538"
        },
        "item": {
          "id": "e5423a23-8f04-4564-9447-72e106c3ad12",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7cbeeda2-8138-466d-a523-a654b9cdccf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7876b4c-1f02-4268-97d9-d6239429cd2f",
        "cursor": {
          "ref": "cbcf65c0-521f-4ef5-8e6c-51e471309025",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3ac3a7c0-eb86-4bf3-8628-0846bd75985e"
        },
        "item": {
          "id": "a7876b4c-1f02-4268-97d9-d6239429cd2f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "09f6f2cb-65e4-4a87-a34b-dde8af400f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa6e1c0-9fa7-48ed-9ca3-5cf5138934cd",
        "cursor": {
          "ref": "d732ee39-011e-4c73-8c3e-37b1af91787a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cc277540-c985-49e2-8fe1-6d0c03119033"
        },
        "item": {
          "id": "1aa6e1c0-9fa7-48ed-9ca3-5cf5138934cd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f0af9a89-7314-48ce-bb40-87245d6c88c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5b0756-63c2-459e-99cb-dd856a44ee7d",
        "cursor": {
          "ref": "93c20d7a-bfb5-4562-86c1-4c6312f08b95",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d0681c3b-86ba-4e75-891b-6a2b46705fd3"
        },
        "item": {
          "id": "ee5b0756-63c2-459e-99cb-dd856a44ee7d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a07570e5-33d2-4e99-aac0-1ea2c99d51e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca46ce4-acd4-444c-97f1-b72f5ced4416",
        "cursor": {
          "ref": "402b6f84-50dc-4656-b949-e9e11f87a4b6",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ca86ef9e-e6db-4f54-9ba6-13e2b12826c4"
        },
        "item": {
          "id": "1ca46ce4-acd4-444c-97f1-b72f5ced4416",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0be8bf5e-ec5a-4122-b646-c9c291cf1407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ce43c1-a569-4fd3-8138-267e842b87bb",
        "cursor": {
          "ref": "32750fe7-5d0b-4c52-b493-7211a8bcabcb",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "766f2f89-0709-4188-8375-96230b866c88"
        },
        "item": {
          "id": "e8ce43c1-a569-4fd3-8138-267e842b87bb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c996af92-2f22-4dd6-8a87-69d28c10a132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b51fdfd-2e1a-4739-8ffa-0d73a2fe22dc",
        "cursor": {
          "ref": "bf14667f-2d43-483a-8061-455e3dbb405d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2a23631b-f465-4cd9-8880-5fc2d387f822"
        },
        "item": {
          "id": "8b51fdfd-2e1a-4739-8ffa-0d73a2fe22dc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f555080a-bd90-4be8-a4d0-6753c71921ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e42480-d836-424b-9c62-23c1a240d304",
        "cursor": {
          "ref": "453fd5dc-d3a0-4bf7-9404-9db704921ea6",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8f664b4d-cfbe-4c2c-95fa-077177c2e6d4"
        },
        "item": {
          "id": "17e42480-d836-424b-9c62-23c1a240d304",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "64254629-7516-41fb-b4cf-0fa505d45b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8633b4f8-9a18-48d5-9e19-77872ae6fbe2",
        "cursor": {
          "ref": "9699f4b8-b5e1-4d71-84f5-71ce6cfe1009",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0eb2f767-ebc1-4098-ac38-d74740ce3921"
        },
        "item": {
          "id": "8633b4f8-9a18-48d5-9e19-77872ae6fbe2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "28e2d552-8368-47dd-bdf8-42c447683a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5dacf3-f193-482c-b22d-f020001bc945",
        "cursor": {
          "ref": "91cf1b39-d54b-41a0-b7c1-a8f1e8870b0f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "28926115-0bdc-44d1-acba-7fd95faccf43"
        },
        "item": {
          "id": "2b5dacf3-f193-482c-b22d-f020001bc945",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3eb66d94-1bc8-46d4-a6ce-23388971431b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1923c625-af37-4281-8632-1c768573029f",
        "cursor": {
          "ref": "2e9b2c4a-fcc2-4611-af85-fdd92dd0e5f7",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3deac873-e09d-4de1-bece-09bef3f0ba40"
        },
        "item": {
          "id": "1923c625-af37-4281-8632-1c768573029f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0bce6867-fe3d-4cb0-86bb-3a021fbeb7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05802413-4a07-4b08-908b-31111d898b6e",
        "cursor": {
          "ref": "d0b8f61b-0ce1-491e-8a90-faf04223c760",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2106e376-64d4-4518-ae4b-3dd494587e26"
        },
        "item": {
          "id": "05802413-4a07-4b08-908b-31111d898b6e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5ff608ae-83e3-49eb-8a4c-c21031201bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f976c458-5578-4afe-a5ef-bdec5e5723bd",
        "cursor": {
          "ref": "7b252be9-00af-4f1a-a0c4-3d229729738c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "02521313-820e-43a2-93dc-624a3b37b335"
        },
        "item": {
          "id": "f976c458-5578-4afe-a5ef-bdec5e5723bd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ef0f8e5a-4397-4a61-9b1a-21bedfd13b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6d5887-bf4e-47ea-b7a8-cc1b044c2bfc",
        "cursor": {
          "ref": "a8b03ea9-ba0b-458d-a714-3d309aa14d76",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e894ba3f-d90f-400f-95a8-afbb3894b8d4"
        },
        "item": {
          "id": "8d6d5887-bf4e-47ea-b7a8-cc1b044c2bfc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "04dab87a-ee5b-444f-9da4-f68511b3d0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcf8f08-a790-40e4-b2ad-3c4ea433b776",
        "cursor": {
          "ref": "55428595-2171-44ea-8621-57443413da09",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9fc4e33c-50c3-4234-baed-4c4dbcd779d5"
        },
        "item": {
          "id": "7fcf8f08-a790-40e4-b2ad-3c4ea433b776",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6f22ec71-6ccf-4a47-8363-ece758393b1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d870200-2ad9-4739-99ea-7b1111a0fe49",
        "cursor": {
          "ref": "9ad412a9-d243-4589-b9ac-cad36947fc0e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9b714bb2-522f-44e9-b0ec-5356031a42a5"
        },
        "item": {
          "id": "0d870200-2ad9-4739-99ea-7b1111a0fe49",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e64c5fc2-f941-4a8b-a46f-cf524e0e1851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36e3eae-4630-4086-9153-53c6ef4c36b3",
        "cursor": {
          "ref": "82588177-7e1a-4981-a9b3-84dc26701d50",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "22ccad56-35bf-4539-a993-9f1b85890359"
        },
        "item": {
          "id": "a36e3eae-4630-4086-9153-53c6ef4c36b3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "217d52c7-2448-4a45-a7f2-8c989ccd44ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e080aa0e-53fd-4d41-8005-a84eb4bb1069",
        "cursor": {
          "ref": "03535258-926b-4681-aef8-8a652f68a764",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "079108d3-1086-44a6-b34a-4d6f5814f411"
        },
        "item": {
          "id": "e080aa0e-53fd-4d41-8005-a84eb4bb1069",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "836b9c69-5fa0-4413-bc5c-43b43eb789d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c2f8a7-2271-4f32-ba05-d486fb6ed16f",
        "cursor": {
          "ref": "20ce05a6-79fc-4dd7-8c4f-757d612eef81",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "065cf58b-a019-4539-9874-4752cb275e52"
        },
        "item": {
          "id": "f7c2f8a7-2271-4f32-ba05-d486fb6ed16f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "224b73f9-b872-482d-b161-c774942e0928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe08416b-6cec-48d3-8171-1551aeca02b7",
        "cursor": {
          "ref": "1c42e179-8c33-4ae5-994d-8280a5eab505",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "76b72fc8-648e-4805-962c-abd6143b755e"
        },
        "item": {
          "id": "fe08416b-6cec-48d3-8171-1551aeca02b7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0502f2f8-d46d-4114-a583-5d26872678fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc0131a-8aca-4348-af9d-90e364c7139e",
        "cursor": {
          "ref": "4f41bbee-5dac-48b1-a33f-60f4d74e0778",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6eedc584-e808-42a7-b320-ba233edd0f99"
        },
        "item": {
          "id": "7bc0131a-8aca-4348-af9d-90e364c7139e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "61dabed1-b4d5-4600-b782-e3b05dfb393f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acef28cf-a464-42fb-ba2d-835a2311cf3d",
        "cursor": {
          "ref": "81628d3c-ae9c-4ba2-aa1b-595fb7d4c801",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "54d85fb8-f65b-4d5d-b37c-1aa02a78bbfa"
        },
        "item": {
          "id": "acef28cf-a464-42fb-ba2d-835a2311cf3d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "30dda0a1-ac92-4ada-9aee-931d11b3cd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2f1a71-3494-4fbe-a2f0-4b2131b64653",
        "cursor": {
          "ref": "4c6eae23-d46a-454e-8358-c8061ad40413",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dc2461c8-7642-49bc-b26e-f6f104fdb0fd"
        },
        "item": {
          "id": "cd2f1a71-3494-4fbe-a2f0-4b2131b64653",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c3867f2a-e139-448e-8cd1-4254d46afc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530c4a29-16da-4f6e-ab5b-2051b1a5b278",
        "cursor": {
          "ref": "8e24686a-3555-4edc-ab57-d602e85483b7",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2db98d1d-d0b7-4726-826f-c96ae8db1263"
        },
        "item": {
          "id": "530c4a29-16da-4f6e-ab5b-2051b1a5b278",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4c37db15-ec6e-47f2-aecd-2790e083cdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c9cf08-70f3-439a-9f94-08fd6f511e6f",
        "cursor": {
          "ref": "c2bf1b13-66d0-4807-a723-08cda9c3b9c4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "15974ba3-7cf1-41f9-a31b-8f84644bfd85"
        },
        "item": {
          "id": "e0c9cf08-70f3-439a-9f94-08fd6f511e6f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "eefba3a7-5933-4a23-be11-fe386bdee230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf62884e-9814-49f6-9105-621a9c2de707",
        "cursor": {
          "ref": "85862ac4-45d6-4cc5-a593-b17261eb1e14",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7557abbb-ad9b-4882-89b3-b427672fb2db"
        },
        "item": {
          "id": "bf62884e-9814-49f6-9105-621a9c2de707",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "fe272037-2b71-4629-ae25-de93e2730be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbb2043-b7a6-4386-99f0-fdba61d6d4eb",
        "cursor": {
          "ref": "e71ee901-3e90-46f6-b223-3619910e672c",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e7e49b7c-3ad3-4791-93ec-14e142d76f5c"
        },
        "item": {
          "id": "5fbb2043-b7a6-4386-99f0-fdba61d6d4eb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "aebfde2f-b2e9-4ece-b30d-bdd4e4e98987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a391b4b-a16c-4dc7-9041-4b2e1751d9fb",
        "cursor": {
          "ref": "80ac3fcd-6b1e-4edd-8f3f-b6593c411e38",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6ffffc6a-45dc-47c0-bb12-7cd429c27cb6"
        },
        "item": {
          "id": "7a391b4b-a16c-4dc7-9041-4b2e1751d9fb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5753f88c-7b90-4fe6-9b55-7f82dbe6c013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f864add1-d67a-49c4-9574-c0e31acd786a",
        "cursor": {
          "ref": "3011e31c-4320-4a70-bb0d-e499cb126edd",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3c4bf867-3d3a-4b6a-ba8c-c4e16b0f5547"
        },
        "item": {
          "id": "f864add1-d67a-49c4-9574-c0e31acd786a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4bbb5855-4a8d-4149-8985-207757192aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4111a91e-f2b2-4657-85f9-e6b86f66986b",
        "cursor": {
          "ref": "84b04c2e-a443-4301-9ab9-0b0fa89602ce",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bad4b749-98f7-47a8-a57f-57c9fecab895"
        },
        "item": {
          "id": "4111a91e-f2b2-4657-85f9-e6b86f66986b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "db81fe58-ace8-4e63-97bc-519ec3a6bdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12648db-94f0-44dd-9050-18b13f481dec",
        "cursor": {
          "ref": "32eda047-121c-4048-b455-c51bdedaabe1",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "813e34d6-d960-4156-ab07-ca43345b7b4e"
        },
        "item": {
          "id": "d12648db-94f0-44dd-9050-18b13f481dec",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b252182b-322b-4abc-bd9e-739e2e927dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d0552c-d1a3-4d6f-b9b2-298aee1bbfe4",
        "cursor": {
          "ref": "e8b93e68-f88d-4159-a062-98098cc27a63",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "16002e3f-7435-478f-b5c2-a0010776f3d9"
        },
        "item": {
          "id": "29d0552c-d1a3-4d6f-b9b2-298aee1bbfe4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "28e9df3c-85b2-463d-bec0-cce6b33b3d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238fee32-c0f4-4606-94ab-0eb7813b3d30",
        "cursor": {
          "ref": "f24c7696-b5cd-4d4d-9ac2-217c8da07bb0",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "10563f50-801a-41c7-91b8-63bece6d69b3"
        },
        "item": {
          "id": "238fee32-c0f4-4606-94ab-0eb7813b3d30",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6118f7ec-926c-417a-a1ce-ed9217cc1c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f8d91f-4a2b-4eba-a9a7-f8875bf70b24",
        "cursor": {
          "ref": "0711f385-094e-48a2-8291-a03c69f1ebca",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7b62c92b-3fb9-4cd7-9b72-19a5ed5622a7"
        },
        "item": {
          "id": "08f8d91f-4a2b-4eba-a9a7-f8875bf70b24",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "81ec44ac-ad14-4837-b19d-7a918d58027b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c628f114-94b5-4662-b745-f971b719ed4a",
        "cursor": {
          "ref": "e29304ea-0a52-4423-a423-c075e95a0966",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ed8bda28-9378-4d92-b4a0-741a27821fa9"
        },
        "item": {
          "id": "c628f114-94b5-4662-b745-f971b719ed4a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "183f9fdf-1130-4cdf-859e-6dd28be62392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691b26c9-4344-4c7f-94cd-9e6ad8a4b557",
        "cursor": {
          "ref": "6d0c165a-b34e-4b5b-92ad-ea37619104dc",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fc3ceaf1-ffbd-4ace-8488-f1dca188389c"
        },
        "item": {
          "id": "691b26c9-4344-4c7f-94cd-9e6ad8a4b557",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "191e3d05-b439-4037-983f-e60ce65be4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cec88c-2cc8-4cbc-b5b2-92257e9f5055",
        "cursor": {
          "ref": "af810b24-8189-4148-b4b9-05e34a1f057e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "be6a9a21-119f-4cf6-9509-8d64241dc51d"
        },
        "item": {
          "id": "07cec88c-2cc8-4cbc-b5b2-92257e9f5055",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9173bad6-9391-4476-a014-f4eac6bb4c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865731fb-f1ae-49fe-8b07-0f8ddffe0ed5",
        "cursor": {
          "ref": "a36bf52f-d207-4e69-84b9-0316a2663ff4",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ab1429be-86be-45bc-8d94-0f95e3e154ef"
        },
        "item": {
          "id": "865731fb-f1ae-49fe-8b07-0f8ddffe0ed5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ca15e337-3044-4ab7-ac32-8de3ce08121e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db458ccc-6fd0-4ca7-8432-6faa5b3c8c23",
        "cursor": {
          "ref": "81170bfa-d08f-4996-89f6-64ec0ceb6d0b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c4fb4d83-e343-4f44-a23d-2c5a01099c7d"
        },
        "item": {
          "id": "db458ccc-6fd0-4ca7-8432-6faa5b3c8c23",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f29a5bde-f9df-4ea3-a97c-552a6577f011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171058b9-1258-4f0d-94d8-b2b5fa58ffc8",
        "cursor": {
          "ref": "ec2dd41e-08e6-47a9-b49b-f822dc8b9a66",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0b140cb8-b812-44c7-88f4-5317c9ca7a52"
        },
        "item": {
          "id": "171058b9-1258-4f0d-94d8-b2b5fa58ffc8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "48c7a369-54e4-4e88-9e1d-1e2b5d1f842c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e421d39-529f-4876-96fd-ffcd4c8c309e",
        "cursor": {
          "ref": "a7f51506-0032-44b5-b7b9-a67043cd8679",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fa3e2239-3187-44d1-a2ab-c7976dcaa955"
        },
        "item": {
          "id": "9e421d39-529f-4876-96fd-ffcd4c8c309e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2178b23c-2a6b-46a1-a900-1415fc129f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fa6270-594f-42ff-a7d9-bc82737f284f",
        "cursor": {
          "ref": "f29dd0b1-f7c0-47e7-a3c7-f35bbdf09dd3",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "68ee6f99-af70-4e1c-9d7f-1239d17f727c"
        },
        "item": {
          "id": "71fa6270-594f-42ff-a7d9-bc82737f284f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "57935b87-8180-4856-9f2c-c64c941ccaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03123708-8fcf-43ce-90e8-d400ceaa5513",
        "cursor": {
          "ref": "30480a95-11c2-4fac-b9d1-10a5e6250aa7",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4b389174-c573-4582-b534-39b7e7ae6e72"
        },
        "item": {
          "id": "03123708-8fcf-43ce-90e8-d400ceaa5513",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "25857847-3006-4660-967b-6adc173c695a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134e5da5-605c-48a0-9313-67e7d3573b3e",
        "cursor": {
          "ref": "8a102d6c-5321-4bc9-8681-32f15a8eaaee",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fc049847-afc3-41ec-8f79-d3bca1b47eb3"
        },
        "item": {
          "id": "134e5da5-605c-48a0-9313-67e7d3573b3e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "65671ca5-5fa2-4685-aeaa-9e9e82f4f09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85fe4b6-6527-483d-8f9f-97154c27cc32",
        "cursor": {
          "ref": "c013ae94-f2f6-4ba9-ba95-008298fa3aed",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "eca6f984-38ea-412d-8d59-1f8fa2cb3770"
        },
        "item": {
          "id": "a85fe4b6-6527-483d-8f9f-97154c27cc32",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6c367fd9-df87-47d0-b30c-53c806589e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a4a209-3d05-45e8-a9a3-70b50c096b68",
        "cursor": {
          "ref": "88806803-a369-4997-9290-18e305a5f666",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ad16e5b5-304e-49aa-91b6-b63d3d78bcee"
        },
        "item": {
          "id": "36a4a209-3d05-45e8-a9a3-70b50c096b68",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "72457d11-c473-4056-89f9-16f1a12ef246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4083c34a-3b02-46f6-81d8-93e5c2c04e02",
        "cursor": {
          "ref": "5a43bea0-308d-408a-ae3c-493ddc1d8796",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "49bceb95-7675-453c-99ea-292fb7da198f"
        },
        "item": {
          "id": "4083c34a-3b02-46f6-81d8-93e5c2c04e02",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ed5393e7-3af7-498b-8aaa-2f9f156f41b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e0ff16-3423-4844-bfaa-d0008fd94350",
        "cursor": {
          "ref": "2fe0dd35-c622-402d-9e74-ead433c2e733",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ddb25745-22e9-4e91-a4a0-7f67ffab065a"
        },
        "item": {
          "id": "c0e0ff16-3423-4844-bfaa-d0008fd94350",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b4301236-a803-421d-8c8e-e769691df183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344620e4-a00d-4459-b041-1e55b8825936",
        "cursor": {
          "ref": "732187a4-5377-455b-ba5e-fe995a968cf5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ace34b3f-ebec-43b4-a9a5-ef56cedcdc96"
        },
        "item": {
          "id": "344620e4-a00d-4459-b041-1e55b8825936",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "08b831ce-e52d-45da-bc68-b958802aad0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01713cc-5dd7-4157-a8d5-37beb02c8520",
        "cursor": {
          "ref": "361709c6-cf27-49ea-b2cc-da1fdb6fd8c3",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "79c37d65-5156-4b1a-b391-d12b14e3d7bd"
        },
        "item": {
          "id": "f01713cc-5dd7-4157-a8d5-37beb02c8520",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "905566fa-84f4-472a-b04b-794cdcb81509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ee59b7-bd4d-4aab-a35f-4f4408e60c88",
        "cursor": {
          "ref": "b7ec6719-196b-49b0-947f-9dddccf3bd53",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d0aca3bf-842e-418a-a52f-01dcb1f84065"
        },
        "item": {
          "id": "30ee59b7-bd4d-4aab-a35f-4f4408e60c88",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4f878601-f5b0-4da6-949f-de478a2fd20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cda6a1-fadc-4643-a539-1b8b24c4db72",
        "cursor": {
          "ref": "9180f2f5-b5f7-4408-8564-76f6f0282df0",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3eb2d6c9-0fe2-4798-951f-28e88415d92f"
        },
        "item": {
          "id": "d9cda6a1-fadc-4643-a539-1b8b24c4db72",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2b47e387-8ec9-41fe-8d05-90c89e2efef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b42f161-963a-4131-9f04-b661569bea3e",
        "cursor": {
          "ref": "99892ace-a47e-46ce-802f-28c0efc4b269",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "58cf6ca3-c620-4ea0-a7e1-9cebdf5ae1d3"
        },
        "item": {
          "id": "1b42f161-963a-4131-9f04-b661569bea3e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6c67633b-1a77-4daa-b7da-47ccafed0c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efcc1fa-fc1a-4392-8171-a8be508d32f7",
        "cursor": {
          "ref": "f115c3ac-f5a3-44b9-a4c9-2288542f105c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "34b1545e-ddd3-4e1b-9da0-5203d2d6da21"
        },
        "item": {
          "id": "3efcc1fa-fc1a-4392-8171-a8be508d32f7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9a2db98d-1929-42fa-b7b3-520a78d54e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d7b063-2db2-4ea7-b41d-da9651248a17",
        "cursor": {
          "ref": "f610fc33-125a-4bc5-acfe-276aef078824",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "900841eb-3c20-4045-ae1f-42d74de953e4"
        },
        "item": {
          "id": "a0d7b063-2db2-4ea7-b41d-da9651248a17",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1604c124-073a-47fd-acba-2c34b5a5dd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16c4b8e-3355-4672-8c99-5091881ed158",
        "cursor": {
          "ref": "9760c32a-b174-418a-ac6c-8d4154aa8012",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "04497280-2c98-4e54-9aa4-09a1e7a94eb5"
        },
        "item": {
          "id": "f16c4b8e-3355-4672-8c99-5091881ed158",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f15bf723-28b4-4f75-99ea-b8ffeb8304be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92313cb0-335c-4fa4-8cad-3a0308ae6a50",
        "cursor": {
          "ref": "41c48b51-8367-4c71-aa57-b086f9cee174",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "40f0645b-c345-48de-8a2a-e91334a2b53d"
        },
        "item": {
          "id": "92313cb0-335c-4fa4-8cad-3a0308ae6a50",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fc234d18-e6e7-4d32-96ed-d86541c30cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae97eadb-0204-4201-b71d-77cd9be7ec8a",
        "cursor": {
          "ref": "c000dc7e-a565-4800-b9c8-a2d16ab6dfce",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "172e1b19-65ff-488e-b7a1-34b8e62cf9de"
        },
        "item": {
          "id": "ae97eadb-0204-4201-b71d-77cd9be7ec8a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b19de7bd-2a18-44b5-a8cd-45b48acc2618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445399ab-3a58-4cdd-970a-4d344ed6f559",
        "cursor": {
          "ref": "e84bef46-18ed-48bb-83e9-115316a574a3",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2a5c22dc-e72c-449c-baf3-8e4fa6627c7b"
        },
        "item": {
          "id": "445399ab-3a58-4cdd-970a-4d344ed6f559",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "96af350a-7d03-43de-b1b2-cfd56383cb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5761e079-2365-4bf0-91e5-63b118838403",
        "cursor": {
          "ref": "1f3d7869-cae9-4614-9384-1987c163f394",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "af881272-917a-4ea4-8564-7753208b663b"
        },
        "item": {
          "id": "5761e079-2365-4bf0-91e5-63b118838403",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6a2da8a3-8d6b-41f2-ad69-5f4e4939aadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a65d66-9f77-45d0-9569-7abe450ef269",
        "cursor": {
          "ref": "e3d581f2-b8a4-4f75-92de-0a7762d118da",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d71dc952-3219-4214-8aea-8cb71829926c"
        },
        "item": {
          "id": "70a65d66-9f77-45d0-9569-7abe450ef269",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5347bfff-7810-4a24-b2c6-29e5b642d29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd99f11c-22b9-4e61-87e4-c087c609c1bd",
        "cursor": {
          "ref": "c2a74f97-9936-4a42-8181-25872f679c29",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "351065cc-9cf2-4dff-af15-ff6f2c377d6d"
        },
        "item": {
          "id": "bd99f11c-22b9-4e61-87e4-c087c609c1bd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "de74126f-2a6c-4152-8cb2-6ddbbf69ac71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760f8894-e05c-4d1e-aa3a-294220c20427",
        "cursor": {
          "ref": "45d9182e-092d-4b1e-85ef-6c5654e41136",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7c1cca3e-7653-44b9-9ed8-ccc4248b4ce7"
        },
        "item": {
          "id": "760f8894-e05c-4d1e-aa3a-294220c20427",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ba943acd-3c43-48c6-bd49-2b2015db6ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6442d8c3-c9a7-406d-af6a-347216d77638",
        "cursor": {
          "ref": "1f8d2c5e-1b29-4b99-ac9a-e6946024d2be",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "85558c52-3cad-4c12-813b-5dc035e69c80"
        },
        "item": {
          "id": "6442d8c3-c9a7-406d-af6a-347216d77638",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6b69c1da-e723-4070-a365-ff750d07c54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b06cfe7-c30d-4feb-ad98-e5ecabd19c7a",
        "cursor": {
          "ref": "2662e82f-09f0-42d1-bf25-0b1b0c715e1b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bcd2390e-1cc4-4112-8401-00f265462935"
        },
        "item": {
          "id": "1b06cfe7-c30d-4feb-ad98-e5ecabd19c7a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "eaa53a57-57e9-4d92-b096-f51faf33351a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2368bfc1-df7f-455a-810d-ea423dfd8e77",
        "cursor": {
          "ref": "6b222ea0-a8d2-4e7c-9c3c-1063bf492f82",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a6c0bc07-68d8-4129-9a66-92ac24a72641"
        },
        "item": {
          "id": "2368bfc1-df7f-455a-810d-ea423dfd8e77",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "11c9bc7b-1604-4e6e-88a7-f9b000f8f7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c696c5-a97d-4ca2-96a8-b6a89f7ddad5",
        "cursor": {
          "ref": "e0f78773-f0be-4442-a9e2-501137d70dad",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f6ebaf9a-7de9-4c35-9c32-8c5ccc0bf923"
        },
        "item": {
          "id": "12c696c5-a97d-4ca2-96a8-b6a89f7ddad5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "374874fe-770a-433e-b96a-2e18e4b99d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030de233-63d0-4dec-8d5d-9a3932c1c78a",
        "cursor": {
          "ref": "e69c4455-2f87-4119-877f-dcc37e4c9bc1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6dcc9cb2-9969-4195-92c4-68dece2ca821"
        },
        "item": {
          "id": "030de233-63d0-4dec-8d5d-9a3932c1c78a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "df614e8a-cb53-42ed-9381-c9ea3ffc3101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f76b2a-36e5-4ca9-a587-b0458555b5f6",
        "cursor": {
          "ref": "e25766d9-a577-423d-baf6-2b13ef0a9512",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "70e7efa9-a7a5-42d6-9162-2da728a3a2ba"
        },
        "item": {
          "id": "b9f76b2a-36e5-4ca9-a587-b0458555b5f6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "931bc7dc-2594-45c3-990c-0edd8c6eece9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ca5782-f57d-45da-a1ca-126c2313de17",
        "cursor": {
          "ref": "6770ac41-cf34-47ce-9ca1-6b9ab4f4900a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7666817d-e4d2-4aad-bc29-8b9ecaca5c1d"
        },
        "item": {
          "id": "d0ca5782-f57d-45da-a1ca-126c2313de17",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b2c6db6a-2024-426a-b704-fa8e7c6d975d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11cdc75-ce86-47ad-9d37-ec6b3d9faaff",
        "cursor": {
          "ref": "ce5d0e6b-b91f-4556-9174-5b124fecc086",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4ae23dae-b0f4-4857-89ad-6b8f12ab5ecc"
        },
        "item": {
          "id": "a11cdc75-ce86-47ad-9d37-ec6b3d9faaff",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0aac96c2-4fd9-4c3a-af85-feeb7245ae71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea04285-e9bc-4a35-be98-d0628a7cb7db",
        "cursor": {
          "ref": "b6f098d3-b322-4c78-a147-f619c3a42ab5",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bbb9f392-3f43-4415-9497-35aa48ce7159"
        },
        "item": {
          "id": "3ea04285-e9bc-4a35-be98-d0628a7cb7db",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c78d0da7-aade-4f4c-bec3-83d1cebd0d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7af0496-6418-4cec-8ba4-5ffe4fa6dcce",
        "cursor": {
          "ref": "2bc1c721-f826-4899-951e-08fc913ec678",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "11eba79e-4bbb-44bd-8b70-f2079b7ea711"
        },
        "item": {
          "id": "e7af0496-6418-4cec-8ba4-5ffe4fa6dcce",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d7f3fde5-d5af-45c6-9faf-2e1f343a3d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf7042c-60ba-4114-95f1-0e0f549c57af",
        "cursor": {
          "ref": "106f807c-a32b-4964-829a-f77f90e42713",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2e4a96d7-80ae-42d7-b816-a0328e4cf7e8"
        },
        "item": {
          "id": "5bf7042c-60ba-4114-95f1-0e0f549c57af",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b238aea6-3bf7-468c-9325-b6d640323179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e8ff8e-fb39-4a44-9ee5-c45820f0f7b1",
        "cursor": {
          "ref": "43a674d3-32a1-480a-aece-b6ab68edff18",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1ddbf37c-7ccc-4013-ae56-3d63ff2a781c"
        },
        "item": {
          "id": "66e8ff8e-fb39-4a44-9ee5-c45820f0f7b1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f76eed8b-9276-40a4-8182-af6b4d69041c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbc000d-f13b-4432-baab-49b0b87bc297",
        "cursor": {
          "ref": "d89cb98e-a30c-4329-91e0-9ab4a7e3ab84",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f8163eb4-51db-4384-8d6f-f295a3be6124"
        },
        "item": {
          "id": "ddbc000d-f13b-4432-baab-49b0b87bc297",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e8730deb-92e7-40c2-a610-5b38c500a79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2df263e-8b15-471c-b3d1-8f3234e66f74",
        "cursor": {
          "ref": "281da03d-9f19-40a4-a59b-2144f4c8efd2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a9070ab5-0ca3-4a6a-bc78-ee71f194450f"
        },
        "item": {
          "id": "d2df263e-8b15-471c-b3d1-8f3234e66f74",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "69355edf-4750-4b3f-af5b-e4c1f2c37daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7765121-ece4-4634-9657-f5b1055e4d55",
        "cursor": {
          "ref": "f3324fc8-ebb6-4a96-9dbe-85789b3173d6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "43c42062-d3c6-4c33-abd1-3dc11fa27db7"
        },
        "item": {
          "id": "b7765121-ece4-4634-9657-f5b1055e4d55",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cee027d6-4cf8-4b04-8465-d6d689fd2907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff87b150-1e08-4eb8-89a2-9a235de3d57f",
        "cursor": {
          "ref": "76863ed2-5e92-4923-a54d-cbd1fffd4d7f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cdfb395b-e663-4250-912b-13355219782c"
        },
        "item": {
          "id": "ff87b150-1e08-4eb8-89a2-9a235de3d57f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "eaf37a4e-5068-41b2-b56e-0535dd31a91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f40a7c-e48c-4821-aeb9-5f0ca78a09e1",
        "cursor": {
          "ref": "8ee26f0f-3d92-4026-9c53-01efd38c6910",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b1025ad6-4e5f-4345-8bc2-e582cb717f7e"
        },
        "item": {
          "id": "f2f40a7c-e48c-4821-aeb9-5f0ca78a09e1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "995253ad-3d6d-4ba4-ba10-a233a55893f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468cb935-6050-4139-9fcd-97e12c1e75e4",
        "cursor": {
          "ref": "cf2fbb9d-ab5e-4a16-ad7e-b8e5c1d1fbd3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b3e33d55-de67-49fc-b302-9005b45b07bf"
        },
        "item": {
          "id": "468cb935-6050-4139-9fcd-97e12c1e75e4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "866933ca-ee3c-487f-ad2b-d4296bd248f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193b2810-7082-4804-9bf7-02ddd6286b45",
        "cursor": {
          "ref": "fcb90e88-464d-475d-a990-d39f75f2e32a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ee8d4b02-2703-4815-9f27-20e1556f578b"
        },
        "item": {
          "id": "193b2810-7082-4804-9bf7-02ddd6286b45",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "42f81a43-a64e-4589-ab45-4df5e311ff4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1753846a-9a15-4250-9a23-10e90e06a0f7",
        "cursor": {
          "ref": "65a79377-45c8-436c-8452-240ed7eff180",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ffe6384c-cdd4-463f-8432-3c2b1289130d"
        },
        "item": {
          "id": "1753846a-9a15-4250-9a23-10e90e06a0f7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e0d8d067-c136-44b3-8248-1f8ab610c82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d55c369-1cae-454a-b342-d08c73fcac26",
        "cursor": {
          "ref": "ac94cd61-63b7-4533-a26f-fdc333b0e7ad",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1c87ddb8-1361-4b5e-96ca-149b01132a0f"
        },
        "item": {
          "id": "1d55c369-1cae-454a-b342-d08c73fcac26",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b5a5e75b-02c8-4f88-ac42-5face1cacdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871324a6-7cfd-44a2-9b27-b43903cd612d",
        "cursor": {
          "ref": "863329e7-d148-48bc-ab77-b4e6de7584e8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0721eaf2-b6d1-4e5e-a573-d5b32ac5fc79"
        },
        "item": {
          "id": "871324a6-7cfd-44a2-9b27-b43903cd612d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cb4be76d-f055-4297-a70a-bd25c76d5249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74279680-f10f-4ef0-bccb-5f973dab7b85",
        "cursor": {
          "ref": "a3147eba-2fa8-4945-b2ff-fb2e2309b0e1",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e1b89d28-77a6-44da-8a04-cab01f22c285"
        },
        "item": {
          "id": "74279680-f10f-4ef0-bccb-5f973dab7b85",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "973a9a23-94df-4d84-88e9-7801cd4aecc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6682a9-924d-40a8-80a1-8d623244fbd2",
        "cursor": {
          "ref": "3323e346-5c55-4453-97d1-0fdf419894f2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fa7bbf62-ed82-43a7-8b31-83fa35b0fdc0"
        },
        "item": {
          "id": "2e6682a9-924d-40a8-80a1-8d623244fbd2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "924e9f10-efbc-46b8-8808-688ae2cac771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c5e8b0-7b00-45bb-af31-32658b738029",
        "cursor": {
          "ref": "1d6306d6-ce61-4efe-8d6d-3d65fe3215d9",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d1ef183a-3b2f-4abc-be68-e3f56b29b150"
        },
        "item": {
          "id": "67c5e8b0-7b00-45bb-af31-32658b738029",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f90dbd51-72ae-46f8-b321-2c5e04e7b8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1804b98-8273-4e19-95e1-e73815647725",
        "cursor": {
          "ref": "07af55e0-1b97-4afc-a82b-3a4177eee569",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9225b26b-d81a-4c27-b2e1-f4f0d33e951f"
        },
        "item": {
          "id": "f1804b98-8273-4e19-95e1-e73815647725",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "71f90650-b4c3-47bf-befd-05bfd52f52fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b315820-8a0d-4c1a-8103-16dd5dbb70f2",
        "cursor": {
          "ref": "6f9f583f-6c56-4b75-b522-062a0ddb4e27",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fbd032cd-65a0-4881-956a-72d22d3d1b06"
        },
        "item": {
          "id": "3b315820-8a0d-4c1a-8103-16dd5dbb70f2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "219ba8aa-b4cf-4bba-885f-eb5ddba03f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e03282e-6ed9-4fc5-8b5c-7f37613fb7e7",
        "cursor": {
          "ref": "f6707817-fc4e-4495-a342-9cb78ced7ee3",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d896af4b-74a0-4c7e-be08-2f9cad5c0e0d"
        },
        "item": {
          "id": "5e03282e-6ed9-4fc5-8b5c-7f37613fb7e7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "17f6a276-a3df-4725-8928-9625804f405d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0184c797-6455-46b2-b07e-ee7f4016bba9",
        "cursor": {
          "ref": "425663c3-110a-499a-9343-eefaec570043",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9686d2df-1475-4e09-96bd-54ccbb3fdd88"
        },
        "item": {
          "id": "0184c797-6455-46b2-b07e-ee7f4016bba9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "64147f23-7c63-46db-81e7-3beb21a6d911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2034d0d-386d-47c7-a2e5-8301d5324f87",
        "cursor": {
          "ref": "3b672981-88eb-4149-b49e-6b6d6491eee8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5022c27f-9a66-4aad-9bd5-67e745aff308"
        },
        "item": {
          "id": "d2034d0d-386d-47c7-a2e5-8301d5324f87",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a8b604fe-93f1-45de-af50-f302258b5771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8c13e8-782c-4875-bb91-ef8d8d8b010e",
        "cursor": {
          "ref": "a802f1ac-5e12-4eb8-887a-e1468f470c52",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1fb25a77-9432-43ce-8577-930f8b12f90a"
        },
        "item": {
          "id": "1f8c13e8-782c-4875-bb91-ef8d8d8b010e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4d9df428-b719-49b7-a8b4-d6ff127d56d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555c2858-e9f6-4942-a3af-369aff6be54e",
        "cursor": {
          "ref": "89bac942-9bcf-481a-b75d-c27ac37428b4",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ae20e34b-5f30-44e0-ae74-da41359c9d27"
        },
        "item": {
          "id": "555c2858-e9f6-4942-a3af-369aff6be54e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a2144016-66d8-4330-ae18-4af9c1700182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bedd85-c856-46fb-b601-3c75a7ec8125",
        "cursor": {
          "ref": "423f90cb-1761-478e-8f34-22449a7bdcb2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "91e8a6d7-09b4-4d75-93a2-b71fc8106d64"
        },
        "item": {
          "id": "52bedd85-c856-46fb-b601-3c75a7ec8125",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c4ed2335-9747-4d41-bfc6-78f2deb992ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c71f28-24c7-4d41-9240-643913b9613f",
        "cursor": {
          "ref": "6e05a3c3-d28a-4344-9c04-17b1541346c2",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "836b5a4f-14af-49ee-851c-392a23756a9b"
        },
        "item": {
          "id": "f9c71f28-24c7-4d41-9240-643913b9613f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2e526239-1d3f-4492-a28b-a898e26dc0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af0f6b0-286f-40e4-989d-8b74e6debf3e",
        "cursor": {
          "ref": "36b341ca-d029-481c-9c6c-ab4e368bf913",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ffcc4da6-629f-4a87-89db-018152a40f7b"
        },
        "item": {
          "id": "4af0f6b0-286f-40e4-989d-8b74e6debf3e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f834f2b8-2105-43ff-8b5b-59decb35e37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459588ca-c70d-49b2-a41e-dca78edddc17",
        "cursor": {
          "ref": "ab5518d6-0ac2-4dc1-adee-119705f338ca",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "aaf1cab8-6aa8-492d-abb0-6187e44998e4"
        },
        "item": {
          "id": "459588ca-c70d-49b2-a41e-dca78edddc17",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8fdc907d-3fe9-43b9-93d2-ce4412303c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e613a7-091c-466e-8377-0b53dfb5679e",
        "cursor": {
          "ref": "c202a08c-0ea1-4b32-b878-16870df76c7d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a7aa42ca-a10c-41e8-bba9-10c88767c04d"
        },
        "item": {
          "id": "75e613a7-091c-466e-8377-0b53dfb5679e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "27c3a218-2b63-4835-8e95-1100bf8471fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f410a8a-a6d3-4a2a-9119-9c0c46ada2a6",
        "cursor": {
          "ref": "bb869c23-cea3-4dd7-8a0d-fec367bcbfbe",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "15dbe2ed-5af2-4c6a-98cd-4e2621778569"
        },
        "item": {
          "id": "9f410a8a-a6d3-4a2a-9119-9c0c46ada2a6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "15bd30e8-9d02-4ee5-85ce-77c68464dbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6b3e0b-6bbd-4e5b-91bb-b3ba796d34c9",
        "cursor": {
          "ref": "dada05da-9e0d-45a2-911b-4f1f96fdbc3c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6a7e1de2-e5e9-4187-9f4f-3f3798284fe4"
        },
        "item": {
          "id": "5e6b3e0b-6bbd-4e5b-91bb-b3ba796d34c9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2582ad41-09c4-4804-b7a4-f04f29140bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a514cd-8f0e-4b49-8cf2-e741e9187db6",
        "cursor": {
          "ref": "de8688ba-4a04-47bc-8b2c-b02cd3545a83",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bc3728c5-3861-4d1d-b397-1db94cb4f46a"
        },
        "item": {
          "id": "93a514cd-8f0e-4b49-8cf2-e741e9187db6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9559aa61-d18f-4f09-86f5-2c3305d9c59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d686cc61-e560-4cc7-ac34-741349026007",
        "cursor": {
          "ref": "048df530-0954-4718-8fbf-002093f4bc2f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b7c85124-509d-4150-9ac5-3da7cfb10495"
        },
        "item": {
          "id": "d686cc61-e560-4cc7-ac34-741349026007",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "35771fca-059a-4fc5-b86e-1ba478808c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc4688a-1653-4722-ab34-5cf99beb3c21",
        "cursor": {
          "ref": "ec2f4091-530f-46f1-9810-3b84c17e63e8",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b67961bb-57c6-46ee-a78b-d6816d293e8d"
        },
        "item": {
          "id": "abc4688a-1653-4722-ab34-5cf99beb3c21",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "98a6ef45-b681-4661-92bc-1b980aa3a75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b36505a-1f43-41cf-88e0-efbfcc4a7e13",
        "cursor": {
          "ref": "64c137af-69ef-45f3-9d7a-6d44a033f4c8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "695b207b-5f47-491c-999f-e297886a7e10"
        },
        "item": {
          "id": "5b36505a-1f43-41cf-88e0-efbfcc4a7e13",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "25677eb2-f8ea-4481-a9d9-a2ccf92f1fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdc9e9b-89c9-4f9b-be44-2189e8952ad7",
        "cursor": {
          "ref": "a725d6c9-b3e1-47e9-af98-e79da67fbab5",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1df505f3-b6d5-4520-9165-2fe47f358c2a"
        },
        "item": {
          "id": "efdc9e9b-89c9-4f9b-be44-2189e8952ad7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9861ead7-c9bf-4f3e-a574-e5a673dec1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8d0502-44c6-4aee-82ec-592ef70cc892",
        "cursor": {
          "ref": "363bd72f-f653-4a31-b9b9-9323d138db75",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a39f8d5a-dca8-4f43-b365-89071f04c80e"
        },
        "item": {
          "id": "bc8d0502-44c6-4aee-82ec-592ef70cc892",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e53ecbbe-f6f0-44fb-a5f9-b05ab2c42491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c7b6f2-8ef4-4442-b626-47e42143c397",
        "cursor": {
          "ref": "e6773cc0-e87f-4901-983f-709a8e61483d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1a67fb71-96d3-46f9-998b-13a6ed9c4eab"
        },
        "item": {
          "id": "45c7b6f2-8ef4-4442-b626-47e42143c397",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "221451fa-0101-420c-95a0-6f9f678e1b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9896a826-10cf-4bbb-94f0-4673c90bc25e",
        "cursor": {
          "ref": "070d74be-9f49-4e9d-a847-614ee4339bcd",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "81653906-9d47-4634-a717-797cc44a9acd"
        },
        "item": {
          "id": "9896a826-10cf-4bbb-94f0-4673c90bc25e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7df9c1d6-fad8-44cf-9bd8-db4d67765c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cec8f5-1b0b-4dd2-af38-348275be3f20",
        "cursor": {
          "ref": "0fa39c6d-4dff-4eb7-8795-a1190c3b958b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2c135ba3-72c4-45f8-99d6-b9227f0682f3"
        },
        "item": {
          "id": "29cec8f5-1b0b-4dd2-af38-348275be3f20",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e194101a-d97d-4db1-822c-e3d6d7c5309a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dd1c06-cdb5-41a2-aa40-696f53bbca67",
        "cursor": {
          "ref": "a1b743a8-16a2-4d0e-bf1c-ab8756c4bb02",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9ebbe8fd-43ea-47ee-b618-6f26fbb77a91"
        },
        "item": {
          "id": "08dd1c06-cdb5-41a2-aa40-696f53bbca67",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "11f32293-b949-4f7f-908e-68f9cd76c089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d8182e-0342-4128-a3ca-bc10b54a2993",
        "cursor": {
          "ref": "2879630b-6a64-407f-8258-012c956a7c4f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "01fe1a1c-ad09-40d5-b2aa-55692124339c"
        },
        "item": {
          "id": "73d8182e-0342-4128-a3ca-bc10b54a2993",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "08c49c64-ddf4-4fb9-9109-3c5da06acfba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7c6ee0-4ddd-4334-8b9b-5d3564412166",
        "cursor": {
          "ref": "c219cb4a-fd56-457a-bc27-071e004e525a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9694e343-a6fb-4f66-9c7a-a3cea8002eac"
        },
        "item": {
          "id": "7b7c6ee0-4ddd-4334-8b9b-5d3564412166",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8bb7ee43-9876-40e3-8e1c-01babb5c4333",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "baff575e-4162-40f6-8191-9f17cf230126",
        "cursor": {
          "ref": "b225bd5d-a811-470e-9a4c-f2822ca24e14",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "387746f1-7930-409d-9775-e69cc1d7146d"
        },
        "item": {
          "id": "baff575e-4162-40f6-8191-9f17cf230126",
          "name": "credentials_verify"
        },
        "response": {
          "id": "28ee527b-9605-4785-a4df-6404227a563d",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a93978-e16d-4ea2-8bd0-e1489b1f723e",
        "cursor": {
          "ref": "350cfbeb-7842-4169-90af-adfe301c02a6",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f85c6901-e17d-4415-a719-7a2a5b48a443"
        },
        "item": {
          "id": "f4a93978-e16d-4ea2-8bd0-e1489b1f723e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b5190096-9ca9-4290-97b1-12bb53c86f76",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3250f2b9-a51e-40a1-8077-86f7cd2c95b4",
        "cursor": {
          "ref": "be9d9c57-efed-428c-b945-2b0405ccc2f9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8b8ad926-3cb5-414b-b28e-342e49016ac5"
        },
        "item": {
          "id": "3250f2b9-a51e-40a1-8077-86f7cd2c95b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d04c87f4-daad-41bf-84d8-57b50c3f9974",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3250f2b9-a51e-40a1-8077-86f7cd2c95b4",
        "cursor": {
          "ref": "be9d9c57-efed-428c-b945-2b0405ccc2f9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8b8ad926-3cb5-414b-b28e-342e49016ac5"
        },
        "item": {
          "id": "3250f2b9-a51e-40a1-8077-86f7cd2c95b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d04c87f4-daad-41bf-84d8-57b50c3f9974",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0675d8a7-dd93-478e-a57d-ba81deb36fdd",
        "cursor": {
          "ref": "df81cb24-690e-4e8f-9bb6-eaef3d9172d6",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4c0a193b-da69-44ef-8639-51dcc83a4588"
        },
        "item": {
          "id": "0675d8a7-dd93-478e-a57d-ba81deb36fdd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5939f190-117f-49bf-8f99-0558e9611fb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dd9c2e-3a61-4b59-bb30-b59379ef76bf",
        "cursor": {
          "ref": "9e8fd4a8-a991-4fb7-a507-1fff45baaa1c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "efd8dc33-f71c-4ab1-8737-3505e00d0678"
        },
        "item": {
          "id": "f1dd9c2e-3a61-4b59-bb30-b59379ef76bf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "176c4494-024b-4b7d-91f2-a29c70871733",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}