{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c3f44512-23e8-4fa0-9f8b-cf3d78fdaae3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8debec7e-90a4-4969-afff-246c0bc598de",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad7247fd-3edd-4fcf-82f1-b36699c73217",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0360cdc5-8d03-4408-9278-78fe7fc002de"
                }
              }
            ]
          },
          {
            "id": "b9aece11-ed62-4cad-ab68-cfdfbe0fad67",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "112c427e-46b5-4a6e-be08-38fc19808d83",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d9d9540b-3b05-4a59-91de-c8f20716bef5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "900b521e-01a3-48f9-8be3-96929acd33fa",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fdcf173c-41b7-4b6f-aba1-cc80ad31ce92",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1387473a-3f9e-4eb6-9351-e79bf4ca309d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63fa53e0-df94-4fe7-b752-70297d803bda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68c9b4bd-aa88-4603-86e2-7c5b9c42be2e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1d2a399-2480-49e3-b3f3-e002c3f0bc38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53f7f666-ed61-4af6-8dd1-ad7708e79e68"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "101f0f4e-a617-4966-be30-de9d7b543c3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ccf073ea-a11e-4126-8bb8-68323bd8bb8f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1176f37e-a91b-423e-93cb-8268b41e3987",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ca7fb413-7d54-4aaf-896d-eac17615cf62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "448d4f97-5e41-43ac-914b-f6fb43d2928d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85e2ce89-98ff-4ed0-a07c-fd865b022f88"
            }
          }
        ]
      },
      {
        "id": "edf292b3-7bd0-43b1-a7b9-7292a8c9c6ea",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "038c61af-3d4b-4699-a3b2-9abdf3d84966",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e14df221-5252-416f-8991-e347c50b846c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6f829712-e42f-4443-9b2d-0f2fc093522d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e49571a-761e-4ec4-a413-016b648bac35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9255775f-f7de-46b5-9b17-ce2ff6032b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d0bff0-d9d8-4bc7-a336-b2c8d7fe49f6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286fbed0-127b-4f3e-b322-290d8c336e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c5cc1a3-e387-41c6-9cee-24e9b32513b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec2e64e-6e1d-467b-8405-b17aa5c593fd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0f5dc5-2f68-4cad-a0b6-bf6ba305d1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13ff53aa-fbc9-44df-bc81-391bb8ce428d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f89d10dd-ec22-4a25-9c3a-82f3c6890e25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0939d6a-2a12-422c-b1b9-8068026d7a66",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac83a82-d3b2-4fc5-b1c8-2f585a2c7fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84a1a806-3a82-40b3-8584-e5b28cc8f913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cebe069-1edd-47d2-9d28-d0a2a0a85286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09adcb9-b55b-466c-baed-bcd25f0560cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "30f0d8cd-7da2-4547-9836-ef4a089820fa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "044d914d-2a23-46b5-b459-3d3f75b6db50",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cf97a1b-d035-41ee-abaa-7f6bc6ed5b46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a85b7d9f-846e-4177-9c05-e3ccdeb6d7e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40b351c3-c5f3-41ec-a5c7-7932e73ea1ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "38330366-27a7-4436-83c7-878a8f5a63e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3366315b-8f04-48ca-99c8-f192f46d3407",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb26513a-3f54-4c1b-b79a-72f463dcfe11"
            }
          }
        ]
      },
      {
        "id": "ce941244-18e9-45cf-ad41-7e422adaa0cd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d45e26de-5250-4728-86f6-eb3f51bcc761",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e976d4d0-dfeb-456a-9347-24f6fa64b445",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9be0184b-e8be-4961-9ff5-1ed3f3f2c637",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f14b25-216c-4fab-a143-46db4d335a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b6b601-5840-45d6-8450-3c1a8ba25f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b930de-8a91-4c99-90aa-9c011f098fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03dda720-43f5-4a97-a962-7eedf725458c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2234a1dd-a2e8-4d07-a74f-be1ebe5418d1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca0cbed-6ec8-47b0-b0ee-b923d4f90345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdef0c3-d4ea-46c4-b1a8-e6b8c46809d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8491d32-6f6f-4bc1-9bc2-0231c59e9255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d61a9adb-c9f1-4326-8da5-7fe893936330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3a1259-d3c6-4539-b635-014b553006ba",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f6de48-f1e3-466d-82a3-c549350e2dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850b8dc4-d536-47be-b804-aac82a7999fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6cf544-4057-4690-9e93-28199e46f789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "421a020c-a1b4-4f54-8322-83250b49fb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f02939-c73b-4c0e-ab47-0422d3704aba",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0eb105-c1e0-4122-ad54-b8e56312ff92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0ef3ca-3fd6-4147-977b-868749060ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90d20c2-b6f9-4332-80c9-3bc7b4ed900c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fd1c490-4571-442c-aff4-4128ad429d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d20f238-ee7c-4f06-9d43-2adf3d56cfb7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8ce260-cb9d-4c01-80e6-8846c430d669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a72567f-c155-4273-bd65-c561ebd580fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2804c9ce-207c-4e06-ae6b-c36811db2bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2275ed7-93d9-4187-b1a6-828d7c8a2913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af5123f-7849-41d8-b71f-133eb55a788a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d543986-3bc6-4916-8a50-72b4e42e8a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e995fb-aca1-4c67-9fa3-c5949b06a744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8769e0-f09d-4b78-aeb5-90bb4851da70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87775501-ca63-4fbd-819f-5bea050b55ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f5b014-d917-4d09-91f7-6d71f7054242",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eba960-b488-465d-a48f-503ca994779f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1a6dd8-3527-4ce6-b740-7d063111c97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d2548b-8c42-41d9-8af3-9f13b83dda48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a73322b0-4174-4529-8971-a034f4fa2abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08127817-140a-4e12-92c3-95dde7f3708c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1344aecc-a158-48db-a64d-e00ca956a11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ead5ec7-e622-4360-b3b7-f911fef2b3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7439673-c889-4f35-982f-f4f7cf906895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f7c3d06-d210-4b18-9613-9a9470e9ea63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7035f35-34ca-461d-a6ce-942d3b8b2000",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b305aa-5873-4a2a-8d73-0fa8c8febd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d89c7c8-d6c9-4ecc-afa4-428e34f1251d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba7a0cb-12ee-4027-8767-590010b219ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd3b7aeb-9f08-468b-ad1a-8993b7813e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb59a2a3-d45f-44a4-a7d6-6a9abf83f0bd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9359e7-2d25-4555-a75f-b92f64812ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbf059e-e729-4f2c-8821-54c9ef4a84db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9e1803-7f31-4659-9ab4-73e1990bf270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "202b52ae-8214-4f15-88bc-a9ac61387252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0735c3a2-9245-4460-bd28-f0062ba459d7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea61901-02df-4754-a7dd-34cecf904436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48640ecf-632e-4122-a78d-dda2a4594d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29198a06-548e-4946-873f-6b4716539db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b16f0ea-072e-473d-89ff-86f6947b340d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ac6fc0-5702-4917-a570-21bf237f6997",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149b6516-ae38-486d-8902-246bcd87a48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bddb70-b8df-4bfc-96a0-249ea18c0cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a25246c-8316-4bcc-9ac0-bf4cb8549e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9c4a966-96f9-4604-b391-9a7eaa464156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650dab9f-aea1-4e1d-9da2-7467d3c74485",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71099336-7353-4735-85c0-5a43826d3460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ff4328-c72a-4e6a-a85c-69433bbed389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a401e17f-fc9e-4b0a-8da4-8662c1fbba98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05373c4e-d9d7-4238-8baa-ee4a9605f1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154e96fb-5e1e-4b7d-a68a-a8a4e0526b6f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe068fb-aa1c-43e7-aef4-9ade8c39e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f00e5a-bc78-4087-b3bf-5faf0cc6a60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10a2296-518d-42d3-902d-d2d80fd6abf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "676941f5-485b-4ca7-820f-4aed2d0164c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988dc501-a92d-4f05-bc0c-9d0a36337d99",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f65cdbf-7f3d-4e64-a002-4aa3d0712a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ccf0a6-f6f9-4ed1-ba25-48cb6ef11bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b773e886-17d9-4c28-84a8-e9b7da29abca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24eeaf54-a5fc-41d4-ac59-f8728c132560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee610bf-fcad-460e-baff-83b7e1651648",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3067f274-cd59-458f-bd2d-1cee42281fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6485fb1-d04c-4e6f-8b51-011891efbb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50682818-36bb-4a20-b8a9-595912d287e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daf7df63-9496-4e30-9b62-7fac1c9bb05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c23ff1-b9fe-41d8-a653-394cebc79ad1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df70109d-961f-4633-bee7-5211c4694369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1338d4-86fd-4dd1-964b-a7f53a51ed07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5078f1a-f93a-45d0-8c92-2efa594765ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d03eebad-a5ac-4d60-9209-27232a56405f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9229e0d1-d1f1-43d9-8061-7f42baef940e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6471df7c-5c9f-4d55-8d19-9b5629ea264d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9b3083-b478-4468-b8c7-1b9a3c02d2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d039039a-6c7a-42ba-910f-12cc4637eec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a976b230-0658-4e58-88ec-ab80bcf4f8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc65369-410d-43d2-b0a1-f16c1f9a7f56",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05ea800-6ecd-40bc-a1b0-5a527f97b24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9e3406-cd89-4bcb-92d0-5b9a2382486f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c68c3c8-0efa-4abc-8e93-469ca5c7c7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44cad844-7806-440d-9601-8e749d0c6200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a4ed0c-3450-4533-87b3-27bca1b8a257",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bd0645-2764-461d-9de4-e2978be6eae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f23abd-ee44-4c70-9f5f-158397830111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee85635e-b1b3-41a2-9338-50a26343ec39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e4062c-62a6-4ec7-8bb5-36a2aa924e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd7ac8b-3a25-4a4c-a68e-6a31134ce78d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134bed57-07e4-4faf-b0c3-f5f535d9140e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b39c46-3317-4a51-aca8-7384f3f9afb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a386eb-1d67-4db7-b38b-9e8f51bb80a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c555f05-b364-417f-ae77-397b9c660d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0a3e03-a97a-4bc1-8ea5-b8c5e4244b02",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931f6938-2676-4782-84be-e92a3cd83778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004d6767-450a-4161-834e-8f18bbee6ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288ad030-6bca-4eda-b8d1-52e85367841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9718c4-6dad-44fd-b65e-34e8d842eb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08615845-c9d8-48c1-be0d-5badff6692bc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c8af29-0720-4f0f-90ae-6db197053c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e55eea-4a52-4758-a867-4675d526dfaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0661cdb9-d640-4a6e-9b5a-2e2f9c729da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7061f521-de5a-4651-9e93-76a67074092c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca26f7e-ed9c-4381-b603-323ae74b9b00",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ad6385-d20d-44f6-8a89-024006d1e955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1284d0-5729-4bb0-9f97-53d3916256b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2062d65-1771-4d9e-be8a-182fec622ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "64c3b9d2-2226-4a78-be5e-4fa8fe44bcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c953b92e-cf32-4663-a087-c89c671aefc0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d240090-7a30-44d4-a1c4-1be55a6e277a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd2be9e-8a73-4f3e-991b-d02c4cf185e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5ac1b1-ff6a-4292-bbce-5a3c8cefdfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26029920-c348-4103-8f07-a3b18d67c941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2249f56b-e99a-4940-adc9-518edc8fd60f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da5c096-1956-4e7b-b838-3df5f23e397f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dae1d5d-56de-4e3f-9a1c-4ff00057ff20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b60f4fc-bdc4-44c6-a1c0-d4d0d9022a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26f170fa-c337-462c-bf82-de680f7e831a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74c29c8-9ead-4489-9755-f1d26000c163",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfd5f50-7393-43fe-bba1-902a6b801f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad7cbc6-91cb-4b81-b1cd-e453b7b95dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987cc39c-fd21-44e9-a714-16a2e13dc440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd4898c-4e7c-431e-a860-6ab87a1fb799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db37e605-1fcf-42c5-b583-fd7a656f2328",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28ea4ad-0de0-4bbc-9716-f15650d4ad23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18c45fe-f920-487e-985b-0c4049a5c5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44a4414-414e-4014-9e2f-2389aba389f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72c79d99-e8db-4223-84dc-41fc7606217d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7592985f-e485-486d-a0bf-b5e21911ade9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc903f88-58b5-41e7-b7db-8d580c23f28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58746c34-39f1-4c36-a770-600474eaaf22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5f55ad-88d3-4e46-b2b8-ad47eb6acfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0464c7-f546-4cc8-b991-5db671ca0b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd54077-72dc-4db8-9b9a-462b3c6dddc3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0960c699-eb8f-41c4-9020-01738801fe86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53731536-7ca1-4acb-8bc5-1543f82e793c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4013a22f-64df-447d-84d3-27e192f630ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "491580da-5d70-465d-baf8-084b4d593b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dac935-2dfc-4954-ac04-6e287416ccb1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ec695a-4d51-4f0d-9034-9a0bab11acee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe97f822-1fa4-4413-b28b-3ccb1620cc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a52827-a46b-4334-ab40-af74c0a8e498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9407cf9-9d79-4ccf-81ef-f28092eabc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a69dadd-1315-40de-a687-d3a0f2c4cd19",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b70eb87-b708-43ca-9a57-57e3d1903f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccddb18-d1a1-44f4-b803-e3137db26f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53675293-b66b-4fcc-9db1-3aebbf97a090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2460b3a4-965e-4d10-84d7-304180c9e273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e161c1-907c-4e39-a3ff-9023ced9ec58",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6fc9a5-1f55-4f4c-90f3-15551b9b03bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ee5f3b-e262-468b-8d2f-db6d631b02f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbb2e5f-b054-4aa9-9655-ee58c9317975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f923b2-0a51-47f2-8f07-97bf926ce452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7984e5-6156-4d80-a163-bf4cc47cdb16",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5769215-a213-4c58-b669-0e2463e87d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8802db24-36fd-4006-831f-2a2052527741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be07589-804c-4954-b4ee-3c1eccd3d95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17eb2c93-c412-44ec-a7c1-2b8aea7b67ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158a0901-7d10-4fd3-8d43-04d456413105",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a65a3f-9579-48f1-a2c9-a173246d456e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8840884b-5393-4f4d-b047-def5b344bd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a0ee9a-8d2e-41bc-9d4e-343a19603661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9804c645-9245-4e3c-bded-b8d4cca0da6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eb7413-ff69-40a8-a2a6-6ab0e2146680",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cec6d00-2f83-4756-9aac-e8e9c3221e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6018f6b-05ae-4573-8959-e7f46d73e2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e1d486-558b-48cf-9b7d-08f508c4c6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6b7ee8-8279-4a35-9fdf-b053aebb94b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4785dbf-b388-4cd9-b96e-67e5d176789d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb53a74e-c500-44d5-8771-ffdf8fa6f73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f11e807-9901-439f-b001-8dd1f87cda7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef2d89b-da93-4f12-80f7-2504c8ac71a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0725053-55fb-4eea-a968-6348db7c4653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02edce4-ab50-4748-8cf3-fa25f3dcfd30",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0855e74-9fee-4b3c-ac9f-60a6d8c7bf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0926ed-7d4e-44e1-ae42-acadaefcba4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82251e1a-d523-423b-ad5f-a6de58dd2201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33c6bb5a-f403-4f88-b120-3ee58f812b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dba482-c918-451b-836f-124c88f2f6c4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616bfcb1-6e2b-4a36-a12e-28360475e429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4383d08-b117-4a8e-98bf-b6fad24cc5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16acb426-a746-484c-b966-10f635b48a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "23f89d7e-453e-43b0-8e06-ad5ab11fe153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99161332-c3a4-4ce7-a526-d8f1e9ff3f45",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cbc434-1c70-4823-ae3d-0fd324562387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98ecd10-8266-4179-85fc-4a6e25daee01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ed5b15-5a18-483b-baf6-c7a920ba775a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0dd14ea-18ca-418f-a207-77e6ef66e092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b1963e-fc2b-4dc8-a9e6-22dfc601ed72",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee474ecf-94fe-4087-b5a0-442cb4d724b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451ef13c-f274-4d5c-a4e0-6183a6f575f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781a9f9d-ea1f-4be3-a9ee-cad09bcfb73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d26fa3-74a5-4884-a241-8fefd836d649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1565ebf2-d7c0-497e-a4c6-b1017e67cbf9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f953471f-b688-4c4a-ad11-ac30f5af048b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29275ba-459e-44a3-8680-e9dd16655349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bbada5-f820-4aa5-9e60-e9a154e4b6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f5334fd5-a38b-4a37-b446-fe69d2f024e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c66088-9a77-4d5e-bc31-703e63065272",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73486fc4-3650-42d4-a304-e5c754b4f148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b940f787-7402-47fa-9393-528c19e21639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36535a48-b9a2-4ec2-9a09-955865508f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6028e26a-50d7-46aa-99d2-ddb494428817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d6f75e-2bb1-441c-a4b2-81e31869dd2a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e52b6cf-a844-4347-b67e-8163a9ab8cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff089d4e-7f22-4496-b996-8f8ca92e620c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b255913-3c34-430f-b38c-15a81117934c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef5dbe7-5d50-4133-b4f2-cbf6e0cc302e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d18daa-a9c6-4af3-8fe5-c67150edf86e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60ccb9a-2ca1-4391-a836-f728cbff2b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0435d3b-72a2-4a73-80f2-07756091601a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d545c96-0fa7-4d80-983a-b5f5b041b510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0000d7e3-f961-4668-aead-72b011d9e279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992d2793-0abc-4089-965a-58ae4aba3555",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bbff42-f03e-47ff-9541-e89aa23aa271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2cb47f-ccf2-4f53-b606-e5a58d82a24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a5f079-c522-4a19-8417-c6aa668e5dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db38ebc-fd52-4e5c-90b9-b287a58e7dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a03fe4-630c-4ab6-81c9-d8d70c92eb5c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cb2d96-1753-43cd-bb2f-85cd0bff9029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6190df-d04c-4ed3-993d-39f7aa3a2f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a0ccfc-2934-4300-9d8b-21ec1f027c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c18eef17-7411-44ee-8613-e8fb87ead47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45963a1-dbce-43c6-aba9-b8a8a0b8df4a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c733f1-4cc2-447f-b701-2b082c8c7f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f331c482-322d-44de-a6f8-370622d10bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc94681a-af14-4c8f-85bf-8917527f09e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "500649b1-1428-45de-8c7b-3dfd9ac32c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83256ce-8695-4568-836e-3e2f05ef4801",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182068f3-3f03-46cc-8c32-917a5fc0e773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f251ce9d-54dc-45de-bbf6-c61930773f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273b565a-d263-4c1f-a3fd-79d1338b0e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "979b91e2-53e2-4eff-8e47-f1a5d748c760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5189a085-f3e5-411c-be4e-dec1f029dfca",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470e1e88-7855-4174-bdc7-57804b8e0e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4f2344-6c73-4880-9ef7-3ab56dd583f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8912d12f-2881-4170-a177-1017aec3f63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e22301c8-c5d1-4be2-850b-0163e56b9f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1364f009-7651-4874-a910-6d92a4ae40a5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6081f209-5854-4689-a112-1c23698b463b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856aeeb5-8c86-40a3-aaf1-77ff5ee8c67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481b6e36-69ae-482d-933e-2c6ff1cebc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "959c1026-fc24-476f-a86c-54a3532996a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93936a7b-e925-4423-9298-915eb3fe82a2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30c553a-9aaa-47f7-ab41-b1b68cd9452a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f744e1a-d7cd-492c-b50f-824db0cd0f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5510020-2c6a-4ae0-86e9-4f610c222322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "687ba0f6-adcd-4706-baa2-85d22c091aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c041d20-d06d-43da-8207-6152c8407ced",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff4a7f3-c780-4a6a-b427-42f1c0687366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509e0013-f145-4437-a5e0-559d6fb96e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1940f532-bb1f-4fc2-9f5d-d37283578b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "780869ae-b4fa-419c-b9ed-59e893f96bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a337c12-c3cd-481c-8ef5-42f20a72fbea",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a3701c-c7e9-4138-bcf8-df84d60a06e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea032da-ea91-4105-a91a-b42d08aac6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956865e3-27ee-49a7-ad63-c326fa8df572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7b365b-2ac0-4284-b717-48639ce62a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d5f49f-7dc0-495a-a6e3-0d9893b4ce66",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f26bdc-5efc-433a-ad45-cbb69a53b38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141ae99b-10cb-4013-8fe4-44efa7f87650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d16e3a1-6233-400f-8725-9f8680c4c646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "808477f1-dc70-4fe6-8c04-9753bc6503b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743d2165-046b-4f43-8fa8-43b980674266",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761404fd-3cac-49fb-88f0-815abef6035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2babf6-e0c4-4c27-a5d6-9435d84e99ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd184608-49d3-4030-a781-c9f30054b215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "29b33e0d-e504-40d7-b779-1fa1dfaa93c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdb9d1e-e104-4ce7-ae86-a127c6a64571",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179721ff-f9d6-45a3-86b4-55411e504f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218e9fc2-cb62-46ef-ade1-24e2b5638ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a231600-4e16-40d7-9b4f-5a0a08d4ddfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b938f1d-0956-4269-b5e1-5cd262e7f875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0c9455-c528-4a32-a3fd-cdd9dd70db25",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd189931-77f8-4420-ae26-d725b622627a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ee6674-2d2c-47ad-b3b4-44e146c592d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9021a9d-7b60-407f-9a0e-b9baf9c21a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8822196-74b7-47bc-acdf-324cada56e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c21be9d-c00a-4712-8d79-193f2fded6c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76e4f35-f756-4d9c-86f9-94470680ab82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7d5b05-c0ce-486f-a3cf-f3600da14e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce177ac-14de-495e-8599-b5895dc5546c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a322bb9-0864-433e-927a-69babb7e7a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39df7216-490c-4455-8296-06ff5805521e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2e05a7-7f2c-4acd-a8b8-61e846b18a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dcc16a8-ab4d-44ef-96eb-84e668a9812c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5987fe-3d35-447d-b29d-0ef0e2548ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d54d9ae-4afc-4f29-a40b-a60e5a454a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abcabbd-47e3-464d-93bc-fe1e628438bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41f891c-5321-4bbc-a507-aa6d3bf02dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b7fcbf-9470-4c77-b9e7-a288be57ab9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c090b5-c2fd-4a3b-9245-7e3b9c043567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "947caa01-2599-4ba1-9ad4-5b6714bcd989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782ebe93-287b-4d76-a27c-e02fedc7430f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2e3f71-ba10-4ad8-92a3-7b3f289dadf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9d81a8-57d8-4bac-9d3c-6842ad23e29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6b13c4-0747-4b3e-b5c1-72d19eca4f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6731e04a-f251-4067-87f1-ec966afa05fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96d5fc6-a926-4f1b-99a8-7180d9d1313b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e19537-e329-40f9-91ed-7305cdeccde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4311a70c-6223-4c4b-b86e-6c37962752a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705c5cae-2516-4499-ada8-9d1752f293f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9082ba4-2748-47ee-b2fe-a4aa76088c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8702f3c1-03c9-4efb-870e-01d64b9a0030",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b0b70e-9be2-46fa-8637-bfdb533fe59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21351faa-be4c-462b-a4c2-6b459e8ab6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1caa766-47f3-416c-a6e7-03b3e4e00f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bef4580-1aff-447b-b531-830e716dcda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faacd084-e621-4b25-ad18-9b9255d17753",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de98c046-2055-40ed-97f0-4ce9febbd661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09520f7e-a645-4dcd-af48-c9eba3d32427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbd039f-ee56-4807-8bae-50fad24365c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25926eb6-c91a-4b52-abe1-d580b8fc601e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b69f329-f60c-4775-a3f4-037be6ad6455",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd2e935-7223-4f5b-b009-cc4cd5fff3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ce140a-098c-46ea-af43-53d954bf30b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191f8ec7-d91b-4d7d-8d47-2cd4ea0e2939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff47d1fd-dc7a-471c-b143-5184c6a178bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4016a14-66e2-4603-936f-bf400a38b2f7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b793e6-10b5-4601-8343-29a3ed6c7136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3643b6a9-f25d-48c9-8716-455a7ae99b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc8b68e-928b-4645-9da4-a0378ee64135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9aafbf4b-fb33-4e5a-8fa6-aabce5130780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed81c7a-3982-44ca-aa14-be54c1adccd8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d851b15-bc74-4ced-a8b1-c64cd370a64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c6cd8b-9469-4754-8c4c-e27448e3ed3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba96338-2d21-4cbf-8bd5-261c415d16db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ceab6cb-5d79-4ac2-a5fc-42acd859a966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06506018-bec7-41ae-967b-677e6b8dadd8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97157b5-865b-4ec4-9b50-05a1c564caf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e35de0-4eec-40e9-8120-a83a4107e314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38e7b3f-fd4a-467d-ad09-b711eccb3968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eeb1f20-8b86-434e-bd7b-035717279790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939af523-6042-49d3-9001-e1d228d544cb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9de544-4ef7-4f72-b63a-3f6af13bbb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebdd1ec-2e10-4b53-97eb-db101bf05459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adba68da-6404-48ef-8ab6-e64a9e9dcd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5c971c-b527-4803-a73c-8adc916d996b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae9696a-20e7-4963-b720-ee1e41e467f5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b8492d-9b61-48f8-8c2f-4a4ccacaa33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbe459a-52a6-4b72-a4c2-edea71df3e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8033bf-cf2e-40b7-8070-b11d835b05ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2518f843-2308-4627-9a47-442782476bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7de4da4-3405-4666-84a0-827a2d957e37",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f911eb3d-0879-4a4f-b2b2-30fcb85ffbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3861d4c3-5f86-4a02-9600-233a0ee581e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c707612e-52c1-486e-b16e-b94ab7531c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14aa4fb0-6e47-4b3e-9f33-e6b284ec1f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed91a826-039f-4a30-8685-01672c0ed323",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0030702c-c7ec-41d3-8e61-9c60e82c0994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976c5063-085c-4618-907e-86c420afa0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f561eeec-e880-4151-87fb-308bac326a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9db967c5-b41b-45c0-b388-31c977b230c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852c24f2-3543-401f-9c8c-64eb4ef072d8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02d3696-d796-4f87-a2e0-53694ef57ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2d222b-806b-4b23-a21c-42deb056ad92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfedc177-a4a5-42d1-9d95-7e490bf5b3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74a1a918-5ffd-4c2b-9341-d553d68e32fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc6aa9c-c5cc-4b84-97d5-7ffb2da6bc3c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c994557f-58f8-4622-a513-7b245c850ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a98b304-bb42-41e7-b69e-798c6d823c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8575427a-b019-467f-8dd1-477056aab9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df15962d-1a41-4b5b-886d-bd3b4e132110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab23f3d-8fc6-4a1d-b6e4-fc08242d40ab",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4658a3-c8e1-4a5d-9b9c-be534103dec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8eb2c3-cad0-4239-a248-3ca792ddaff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea2efbb-76d0-4077-aa65-fc219bee0355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8b0840-ece4-4fa5-8305-a5766e01a697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8477439f-ca7a-4151-8b33-6a5cf4537a5e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b13d1e5-bdd0-4bd3-b857-c93650a3e372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd6b8f6-e4ea-4410-ab92-fbfe847c18bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a838d2-b6a6-4fcf-a3c0-7634c95fe59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7fd0b0-85ae-4614-9c8a-3ba8d20aefd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4f99a3-721c-4f5a-b884-44d980f4fa27",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec55fa3a-cfe0-4c6c-a617-695d1074cec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3522b5b-b9b0-4228-a666-233b58dd0e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0677a74-28a0-4c9c-95cd-ca77bb537b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40d87f1f-511b-461b-be6f-3c495b2e9593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced457d9-3f4e-4d5c-97ad-77e65a7e50cb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0520c5-9a95-43a7-a639-e39f6d72b101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d874315b-1144-42e6-b5ac-cb5d54bba1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f07853-6c74-4aac-9fc0-ae01c6e582cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93ed5d7f-1abd-4ef8-9e72-1ba596711da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a686d3af-ddd0-4c39-9fc5-206f9f925206",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb0d7a3-6d4e-4a48-bde7-95a11044c800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17669346-8e1c-4f41-945a-7a20b3631837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ead7f7-5cc7-4cb0-83d0-79030e652651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "039ff770-391f-40ee-99ce-1e0f4bc05681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf526765-72bf-4407-baf8-42ac46fd3d8b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e9e3fa-56bc-4bf1-a392-4f3111b1ac78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03d3799-6d1d-4b15-a99b-110ea3aa83ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2f0525-ccff-4d9c-b8b1-207bc304de76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab363e2-0454-4c15-917a-4b81d5a6964b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d262c9-d3ab-47b2-9626-3689ff84dab8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dc3955-6ebb-4b15-a3b3-b89f4af180b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64decaaa-ea08-4a56-aee9-d5e83234d19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f81877a-77ed-4ec1-b960-c294a053a35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "132c56df-e133-47b5-b372-be7d8565ee3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35aa2728-a5aa-430d-8c09-a970ffef4987",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c833505b-7409-4a01-806b-acd5168f4a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cd4410-878e-474b-a06d-ca6f10b3d70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85abd086-8b36-4f0e-a476-31eccdd96589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db826315-1bc9-49b4-a3e9-50e4c48513fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcfc429-2cc7-444c-861d-dbdaea2b1817",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a86637-62ef-4416-bb67-612588dae328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a588d7-6bd4-4b73-9e16-d912e80dcb34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2902a7-b69a-481f-a4ea-c7c5bf34c8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3c97c6-f0c5-496b-baa7-0735927ec047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fc3c34-c73a-46db-8b8a-5aa31f4c78ec",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4399dd-8368-4a51-897d-ad526a47033f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0b885e-146d-462f-b4c9-08bcceefcd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cb6855-bd1a-466a-b0fd-c60c55a1c37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70d3d4e9-4b55-4b61-a5e4-aec2d9c16ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c022c627-b49f-4122-a4ab-b74079b6fb16",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95daf820-33d5-44a4-817e-8ccceefbc7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a460e536-e11f-4901-a765-364da210d18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbb8679-b5fd-4297-a584-0f8205da9300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c60994c-6bd0-4c37-a4ad-04303b4cc0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166ca6ea-aa08-4364-bdbc-40dcf2c385de",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3900cb4c-9fb1-4f6b-ac82-66065621c5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1008125e-db48-4325-addf-add68d7941f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd0f8ec-a1b7-47dc-af1c-753ce44345c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "07b6f1a3-80cd-44cf-b9e4-c2b2bb88f042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27131d79-5a98-4ea4-96d2-a8db23013c48",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e941c28-e03e-4f8d-9c38-f3b40e346ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25aff943-8442-4084-8f9e-9fd8a29bbf25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdc8c46-edfc-4dde-a153-2f0600ce6845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d23ccd-d502-43e2-be63-b9c88e77b74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d0e8b1-6d3d-46d9-a6ed-f1215d43cd2e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4557ad87-44cf-4975-aa69-01a720e8cfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c3a4ab-94ca-42dc-8b82-374ea58f0558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2381759-d0ea-4733-a4d6-df83847679cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b28a3726-a08c-477c-b5af-d598e378f95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f110962c-ace1-45a7-ae02-cb69f589ba10",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb28e4f-620f-43c0-b615-2fae7312b8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc8ab7f-89f2-4bcf-a07c-828d4b4c58ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56857e74-b0e1-4fa0-b60e-48521013f7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "10f4f982-2409-48b2-b088-ff44a79d063f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de65415-5a78-4d21-86f8-4d9502d59cb3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4111aaad-ac6e-4d1b-bc73-3ecab6835650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53adb35f-7924-4b71-9585-bc732a477c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d948a5b-321f-4747-a098-6268276660aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0f85d7-c92a-4eca-ac1c-d0545090a33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4b2a67-8d19-4c33-96e8-7fbe6db2452b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5402c93d-6b26-4617-a828-e21ef73f8113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "06627cfb-c5c5-4739-9c20-58a29cc8849e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf2a4c2-1e6b-4fe5-98eb-cda685bf100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8926279-a7d9-4e87-9fdf-1c6f85da792a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2a1e327-fa07-4775-9a72-ce671d61f20d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0ae14161-b906-4a88-a7d2-6377d90920ce",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d4976c-d33d-4e5b-a692-c6e52b1831b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c45e07b0-210a-49c9-ac94-b6d4591d7960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492d6695-fee9-4838-aa6d-19f5bb231b6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84a2ba16-a465-4170-8740-a5401150ae12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dbcf860-1edd-4a68-b5da-0f8f3dd9072d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a1f5d23-f15f-4757-8a48-b6e031018c9b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26f118c2-35bb-416e-81d7-dd9d34e207b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39dccf97-ca48-48ec-96e9-6e07fb62427f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05fb2064-0b2b-4d5c-9d69-39ce439d6a12",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4d66dff-5a2a-47d5-9fc5-7a0bd6d3c6ad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ece683cd-b556-40fc-b841-7e0229965e29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13ab4c83-53ff-42b0-942d-c75b38c3aa96"
                }
              }
            ]
          },
          {
            "id": "9be25ac8-160e-445c-9978-daf32121f9f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73a03bc4-1d95-4d04-958b-c53d92795575",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "71838f41-cefe-4a65-a7fb-b29ed47b2bfa",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540bf678-cfc1-410f-aebf-1d3aea0e65ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9b986d9c-dba4-479a-ae26-ae34fca8696e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2df503c-c232-4a6b-9fb7-f9ef3e6c1507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3506929-3a9e-44e6-800b-103f62a9f286"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f0390444-ab35-48e8-9cbe-4ab71b8a558b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1517924b-5e65-4009-a8b4-0b38e3828a92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "31c2b30c-6f13-45dd-ac99-dadfb2d8b346"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6190e5e-775a-4ecb-934d-ac3bbda1de33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6a873aad-3ba8-4033-9b69-83907481d495"
                    }
                  }
                ]
              },
              {
                "id": "275a5e81-6514-4f90-a6e4-fe0a30fa67c8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5a4845c-80ca-4090-86c4-34689a9128a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46dcfcd4-b6f4-4539-9f19-5c8cbb60a399"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c67a12f-e320-4b15-89e5-9b8e0b2fe053",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8a7ebbe-e8c3-49f9-860d-88b4d37365b6"
                    }
                  }
                ]
              },
              {
                "id": "99e777a2-9795-4033-ba69-2bfc17dcc338",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf1f139c-db0d-4e9c-b258-05c2df09f7a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30df6ff8-f272-4c2b-a936-ebe49532c75b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e64509d2-d8de-4b65-812e-e55c43209654",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b9ebb83f-cd43-4595-84b3-45d345a3457a"
                    }
                  }
                ]
              },
              {
                "id": "b0a36286-d4cf-42ec-a8c2-fe9b58a62958",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d5ee5fc-781b-4df8-b297-8fc7537aae3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1789658-04b6-4bd8-b05a-78ba5c42ec22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9e15853-5416-48ea-a870-a5ac12ed4836",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a063209a-e6d7-4046-be30-f85c80cf147e"
                    }
                  }
                ]
              },
              {
                "id": "722dffa4-417d-45de-9082-7a33eb83a20c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0402c30b-ac4e-4bf0-b865-456f6c0bcce6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5be9d712-fdd7-4191-ab12-4e429527e3d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e92601c2-8940-401a-9f83-0e89190229f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "166b0794-6685-4173-9090-bb288c6b023f"
                    }
                  }
                ]
              },
              {
                "id": "26a8fe54-73d6-4553-893d-a107aef00979",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33fac037-0a8e-4896-b95e-ce3e42f7f25d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fc71572-0cc5-4d1b-9e44-bdcb653bd709"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f46d074-ce6a-486a-9107-0033818df773",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d96caa8f-ca92-40dc-bdbd-fba013017ce5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6773354-4de4-407e-8de7-f3e1979ee8a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ce6f8b5-2694-4dcf-8294-741463418809"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9754c61a-dfe8-4f0e-b85f-d2f0559ed8f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e24480c6-4699-456c-9c5e-f2da1dd4156a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41a91d09-156b-42ff-85d9-5a1f8bb40fab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e14b887e-d16d-4190-a952-9dda3f03bdf6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7140baf-7c1a-482f-ac9e-8eae2dcbe834",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "788469d2-a9aa-4656-94d5-86740d88a8c9"
            }
          }
        ]
      },
      {
        "id": "1908d7e9-e882-4adf-9644-1e6cb93616ac",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "228a28f1-22bd-4614-9ba5-06fa80cf7f22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ba66772-7b2c-4208-8eef-4199022e46ac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f884d062-54d0-4382-825f-775774200165",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec18bbd-e264-45ec-a953-37b32572e3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2b5d22-faee-421e-86bd-94e71bc3d427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda00c9a-6cc6-4de2-b4c8-cc12ed94c012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae71d94b-76b7-4171-9378-4f387f0f6414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5668ad1-ccb3-47a6-b33c-754e47497c01",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdc56e4-82cf-45c7-90fd-51b6337c89e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29403a8b-3802-427d-a602-dc12af058455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d020f096-7876-41d5-b8e0-e9087845414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dba9e668-a708-451e-a7e0-da709bbe7395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce01df3-4c88-40e5-b246-153b129b1dad",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c004e8-a3b5-4d42-9ce8-7266e19a49e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfaba2b-3cd0-4663-b405-019c55ef9534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebff7147-93fd-44c5-82fa-23f725e844a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19643559-f864-4323-85fd-f35462ffbca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8831cbf4-8374-4850-b568-3d99a58db37b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f45fd0c-f72f-4eaa-bbda-ddd8f0b0a331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb98c5ad-23ed-4061-97d1-19a0db4dddec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1596cf6-bcce-46d4-af39-9c9c0230533e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c55321-7a05-4bac-9c89-9909c3e4d333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdee4a7-1cfe-412a-9714-d406690e7555",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aca97aa-b878-4e4c-afdd-e914fc8b05d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8985ac9b-820b-4ba3-a01f-3a7210cedfd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7383de5-5034-4508-bd86-8103b3587709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0695bc2d-c089-4127-84e2-74d934979db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa33f626-67ec-4b14-95c8-089d5721188a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba6bf19-e4b8-442d-bb01-59eea0ed89e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621fa306-0f71-4b48-bf3f-c1bb351f7904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1269ba-e785-4530-b4ba-8303f2d47ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58203f83-f06e-4034-8285-365f90b5412a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f54aa3a-d3d3-4c1b-b4f2-06deda50b1a6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492aa0c3-96a7-4f24-a281-24754c5a7e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279927a6-2eb9-449c-9c35-ea862dad0698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0540f30-34d8-4b72-a3fb-b934cf8d02ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b72408-546b-4ecc-8d16-6d67628b0e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0650f5fa-b174-467d-b27c-e07e8feb66f8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d268b8a-7b60-4efd-8408-a95139f67bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3972b1-0f11-46ef-8aaa-0af4fb17edda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c82a042-c978-4271-aacb-ae8a37f7d993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c88460-ea97-402e-83f5-f589b50232f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51eec8bf-4fd7-4966-abef-9b6d20beec3a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f30dec-70f5-410e-8633-425f7d2be411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17bc4683-0fa0-49e6-9ea1-cb02efa52b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a1385e-2b76-4ec6-b786-15ca8b0a7a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6679f395-c4ec-4a2f-ba23-f5e1a8211e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9c8e8a-0f30-4f20-b0e3-04ce4b0c55b4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dde218-7267-48d3-8c34-d54682522c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38a361e-7f18-4367-b6d8-c7288693a4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91e8240-98b6-43a1-bcbd-99652b074986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d68964-8ec3-431c-9aa7-eac5ddaf54cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8df441-d1be-4ffa-aa17-bceb67342e2a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1513a1e7-6ad8-471b-affc-6354273d3c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c24020-dc5a-4c1b-9a72-cd40c9eedafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8838a7c-c1c3-44ed-b121-c7e376e03690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7079ca-1295-4f28-8da3-ebd2a3cad784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c548fc1-e837-417a-ba6b-a71ea74536b1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffbe44b-4f8a-48ca-be5d-e1f397726b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d916aab9-4e1e-4a96-8b93-64b5000fdf3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d70c907-76a3-4e9a-a3b7-c8cf6e06691f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "831fb150-63be-4bc2-9c4d-45aeb010e33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a7d548-b5d4-4a08-b763-05ae63aa92c4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0416b7fd-63bb-4657-a36a-fbcfd5182a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201f8fbb-9db1-4bfa-b818-1b8ae90463e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5becf614-6c7c-4467-a9ff-f7633c92f231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b36c750-8370-42d4-a2b0-e1691513085d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d02475-7182-44cb-b883-a3881e004c31",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee23e474-fa30-4c6c-8311-08494295b136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8932cb-2d8d-4021-a3c5-2aab0ebb0bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080db081-3be2-43e5-a526-3eec09d0ad09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8c6bfb-decc-464d-bb25-320ae248822e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb03b73-19c2-4f63-968e-4f4176edc7ef",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22b4cf4-753d-4bfe-8629-5287a0a1caf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585ab1f1-5412-4d2f-b25c-2f4cba744aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9a6c93-5177-4918-a48f-129d7b4981e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c12f6444-e9e3-4a0e-8a62-82463a3a43e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477517ee-c88c-4695-859f-80953fe59cac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b933efc6-a7d4-4eb0-ab3d-652469ba1088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866529b5-3ed5-4c26-88a8-f974617ecbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5a7dec-8e11-49d1-a632-f0076b7753b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5d6e6b-3124-4cf1-83d8-2caad8503041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea3c38d-f16f-41d2-a005-6136caf2d0bd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de77c31-2f67-43f8-be3a-1e2741ce6f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf9cf4b-bd67-4903-a4e4-b8c9938a0567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69135bf-916a-4220-a2ba-17efc42778e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c8894e-3d44-4691-b062-f63227884df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cd8f98-db64-40ae-8717-bf0b2d6f07f8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9901972d-d75e-4225-9efa-7114d7079e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a6bff0-4b43-4b12-ae45-b1df6735eef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d5bc21-1c47-447f-a94b-6dafb5ac65a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a42811-1e0a-4092-a1ec-d578b09ee96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfd7281-642a-4f8a-9352-65bd3675ca4c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3e9dc8-8aa8-46a7-86c6-2447a83b4510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2fcbabc-044b-4d0f-a7b7-8e4cd147056e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d003435f-fd03-49d5-9481-47921578e577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae63d15-0cb6-4526-8dd0-9c44f72c4aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a377edf1-5393-436c-9456-7f2e4baab4b1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38958fe-63b6-40d5-95b4-cfd205bf0d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dedab06-0441-4dbb-80c9-efb35dce5ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deab0745-d1fc-410d-8ab5-76db0fa53e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36669074-8c2e-43b5-b33f-7c681abaeb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7e95e7-88e7-48e1-bf01-de21b284c396",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57d52fc-5c74-4c0f-b3eb-5fdc244da71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24309a08-a1f5-4979-af27-9a13eb149be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254bb8b4-d9c7-48fc-9795-5fe5ec338326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "624f300e-d96e-4a96-a60d-1dd09b3ee6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561b4e08-9856-49d3-8ed3-134280b1e9a5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cf597f-00a9-447d-97e1-100408d7a5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8462285-fd90-473b-affa-eb9d506e8759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3007a58c-ac00-424b-a567-67f8cf8a14e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c90a65a-2a9d-499c-ab7f-09addb624c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75dbd41-53f5-4d76-a40d-3299734f069f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937c6a9a-988e-4172-b015-cb2c97708ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a7cf4b-2cf4-4696-a04c-8bf69ee3d337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d00bbf-a311-4813-8f57-15f685407e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84da921d-a02e-4750-95f1-19ac9605eb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48bcaff-8140-4490-96b1-a93e85c88061",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c67186b-396a-45a4-b3fb-e2006396b7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06a94c4-0f0c-49b6-bda6-eca5c5d0206b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66b2c1e-895d-4b67-afe2-85e64d6b1852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bbef3b-d85a-426f-a395-0fb04c793542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ba4984-57fb-4c1c-9e2b-6a10fd49d3d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbb6f2a-2b1d-4e96-a736-39dc55366b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e686afe-bd0b-41f0-a7fb-24b84fa690ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1909e989-35f7-4513-b200-ccbb27cd456e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd3b82a-7891-484b-aa8c-f96028afcc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f05ed5e-9633-4c65-9114-4182192b44d3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc6bb7e-7a2f-41f7-9674-70ea79cd291a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146cd464-2226-4f21-9ae3-69a944208713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaed903f-cad3-4183-8c40-020453649fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7633c13b-3784-4dbb-8c5b-63ac004e359e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beeb50d3-5d3f-4835-90c3-deac1789382d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb50aee-ef25-4c46-9e77-129a86d60b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4343562c-fc2f-46c2-bd6c-574e8f9cbf59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120af634-b5e0-4a8f-824d-909f576b3a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8aab5d-735c-48c4-a3f9-4965b47066ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225641d7-1371-41e2-8bac-2bb512f677b3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6d9513-9aef-4f77-9195-b00d6b933db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89df4130-4e04-4d34-9484-07b308fcf340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89623f6-6dd5-4f7b-afe5-b90016e1e9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b79e24-5852-4e69-9935-20178dbbeea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c0c659-c7df-41eb-90ba-e31b2b2b46db",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8f0e1d-9938-4018-b76a-ee4faaae17db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302395e2-1d04-4b24-a3f0-f7aeb21c9fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccff47d-0685-435e-8707-695569cd5057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf83cc8-d833-4fac-8c5e-862adb376af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d2bd0b-d484-4d77-a4be-4ecc6204d7a3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154f2ba1-48b2-4ef6-a7ee-6af88e26cf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb3e03e-263f-44f1-8b81-b2b6fbe502d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a764f70-9db9-4cc0-b290-cc1d332ea19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3634cc20-2124-41c1-98c1-f5fb526a1a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cafb95-b0ef-4d8f-bc09-e327abf3d8ed",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83ee9e6-93a9-4008-841e-7b43d04c6483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104f906b-6297-4fee-9c4f-62e107a2f8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb50e1c9-e834-407d-9396-67812e04210b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "362c1938-58b1-4937-adb0-b7025a276370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0834135f-0c23-429b-a485-a4a1a41c03fc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c3d23c-d010-46ac-af3d-e4507588f941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b725a2b-7f64-4aed-9b78-eff71635fec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20542ed-2552-4c0a-bf08-88a4a2b217a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d88c1202-ab92-4b9d-8820-634af81031b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d857294-79a7-4267-813e-d9c44b933f0c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45f9ac9-c462-4f97-8745-7bea65651a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4db8b5a-2814-47b3-a3a6-c116f93f82ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b9b4a1-ff59-4f29-970e-a82b350b32f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2255bf-5c4d-4394-b1c9-6d49fecb66d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab6dc5b-297d-4579-a127-8693cc984dc2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bec27c-20a1-4946-86c1-8c87ad9de99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72575cbf-f3cc-4fc3-88f8-f31592e0087f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e250d389-0b84-4450-9a77-4fb5826830a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6f1aaf-6227-4eb6-958c-e079861736d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77135ccd-78b4-48b6-9e89-2c9e35db81b6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a5afe7-8aa4-41c7-9f1f-6c6fed2aa9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce0fe6a-39e1-419f-904b-d21e0a64b78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d0063e-f10c-4a60-8bd4-ff68f6b8a6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8438cb0-826f-4185-b3c3-c664092b5fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0609049b-318e-4f04-9b14-059e1bb70103",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ea8bba-6863-483c-9ba5-0604b1c332fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f214d1b5-bf0e-46b7-8d3e-a9f53902119b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46733e88-123b-47c0-ae3a-38344eec2522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95986785-b2ab-4d4a-bf1c-dedf9e4382b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fc1cbc-157a-4020-8562-ad6f46023eae",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a3ef56-466c-4311-afda-341a91505294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd90ccc6-be09-48b8-b7bf-f9246badb084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698909af-935c-4b80-8641-e3d8a4d2b321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab08c4ac-d5e1-4199-bdc9-3dc3978de9d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "78073936-adf8-46f1-b7bb-96c23efbce93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ca18bde-cb69-4969-9748-7f55d3355f06",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d569272-cc0b-4958-b74b-d58f6d302691",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4a95dc48-9a2d-4f8d-bf84-f2a2ed009892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a314d9ef-8da2-4ddb-a573-110edf91d724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6edd9a36-fe41-4078-a363-9192e4783697"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be88f21f-1263-42ba-bc27-339265d671c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b095e0a8-ab5f-4a44-9006-321b944896fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a03a6255-b3cc-4008-bf3a-d4d8f45fc310",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "705f3cca-efeb-46d2-bf30-abad3134f652"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b9d5346-a9cd-4048-84d0-db5368700ae0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3ef1626c-28f1-4cfd-ac46-a0d9658cb99e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6542267f-98a8-4e17-9fc4-8f9981dff454",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "642ab9f5-265f-4233-bf3a-1fe24cb91e3c"
            }
          }
        ]
      },
      {
        "id": "dbc57451-faec-425c-abdf-ffedfd1cb893",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7953f94b-b205-4652-b79c-71d444ea3fa0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0361cd47-a23f-4b2e-af1f-4b6344efd298",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a147af12-e9a4-4685-bbfe-84ca80f3b1df",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ffc4cd-4da6-41e4-95b8-c3981c0db8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b963b23b-b887-405e-807b-fa80989218aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc638cf1-822e-4d34-89e9-31e5eda075e1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2dc61f-9c00-4afd-bcf7-507b511b19f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c58ee15-2a73-4aa4-b620-2822acf9ac7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bde3dd-404f-43b1-8026-1cfaa4c38b86",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f5ce8f-45cb-493b-8b68-1d8d0f03a308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139dd82f-b197-4f78-bfea-4c64f903e6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364ba1e5-0241-43f6-81a1-5cc9bccf2a95",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2382a0d-f9f6-4697-a233-e92c268e9069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e7721b-f785-4ae9-a5b5-d6da0e777c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd41473-6f4f-403e-9c56-498a0510f63f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0100d0-834a-4906-b1a3-9de9b382b65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41347289-3455-469c-a5ce-edfc308bcd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f13ebf2-fc0f-4c98-9e88-b6e82dd34d2a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d02f294-0bb6-445c-8858-d6ccf5cd2628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7fb8670-d1b6-4722-9bd0-ab01f22b9820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8228012a-e3f6-4ccc-9cd3-12b4b52117d4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2939c5-0279-49d6-a52a-033b6d0f0857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b93dd5-abdb-444b-a003-d3f213ff3daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6894ca-115a-4a02-ae53-a79c6e7d969e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e25db05-5885-40b8-a601-a7c81bdcfad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed88b0ea-06b2-45e9-a4e7-143a01939310",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5485f8-5f5d-4bdf-b54c-27a6f643e42e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdad4e3e-e3a5-44c2-95fa-40076877a815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202d5053-72c2-40e6-9711-61a0003e8f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129522f0-cf6b-471b-9dd4-8fa5393477dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181df9ae-ba5a-431a-babb-b8f568a746b2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b9af72-adc4-4a4f-a079-a0494ddb5d16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf71b41-716b-4eba-a590-eb766fbd5f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02607e10-f922-416e-9e1f-a405a6f5b765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2ae48e-8955-408f-88a7-611d1d46a056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a88d72-065a-427c-9703-e88c0e255594",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa984b9-7008-4afd-acf9-8ed6c4cd16b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3103a822-bda4-404b-83af-c2f051d44ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809f6d72-8366-48ba-8e84-3274bdee25a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd66a1f6-9895-414c-8e95-f932de34edd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634448bd-d7e5-4d1a-8f3a-8429e3a33696",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e89a01-f786-4d21-b25c-ae99b987ef36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feda731f-a81d-43f5-a8ab-7ab7fd0809e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c18fa78-a89c-408c-b04f-f450e2e8c403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b8f98c-4030-4568-850c-1841a70e9889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc633091-9ca8-4a56-9207-9b919f12c212",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42784485-c3d6-475d-9c21-8b85217a2228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6341889a-c28a-4662-9d50-354d00e0de04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6623c69-fbbb-4da7-9645-5fb8dc772e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd004b4f-9956-4ca8-a266-389c4f0c1fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f084980e-0bb8-44f9-879f-7ad8810b43d5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e80214e-1910-4e1b-8b58-b04cc2b0eda7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5706017e-bfb2-48f4-9fd6-04eda2b812e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1fd31d-11b8-41d9-9293-94045768f5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7247d3e-49eb-4a35-b905-fe25d2b48507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afefec32-3fea-43ce-af95-c2f31998768b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c309781-ebd3-4657-8f8e-2a14a7461630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f487304-3859-4f00-9464-bdfc5c034708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d21d4cf-558f-41d9-a73b-0d40532ea20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa45faf-c190-4799-befa-2fb4c94c01d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be1ce3c-efcb-4410-b15c-30d65fd0d994",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b3a1e9-7cbe-425b-8570-bd830e240ccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e633f0-d13e-4131-8988-a64048959060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14d6e3d-ece1-4f39-bd7f-449cf591aa7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23644f84-8ccd-4e15-89fd-0decd97c21b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eaac62-0f1c-4853-a6d5-b8a889541679",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e02a13-4013-47c5-a99d-09f5c19dc93b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b31261a1-4002-435b-a76b-f6ae077fa8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6015b24-5aba-4892-8ee7-2766df8f8192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6b75c7-7a79-43f8-94b6-e866d8cb390e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af9a3bb-c3c3-499b-b69f-cb1ec138b321",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c97010b-d79d-4294-95b8-09af06a4be7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c852987-8a3c-436b-adcd-e366b0145749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623ef082-cc1d-4b0d-a3c9-8d1e127776ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653d3261-c165-4122-bbed-b35b36eebc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9244e064-cd8b-43a4-bd65-37a326f0bd5d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306397d3-5a4c-49f5-b2b7-8a5332ba91f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeffbc31-d5dc-41fe-9023-ddaef2376499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02bb6d9-636f-4e85-8812-a4e30018fbfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd90de4-a5eb-4386-8ce0-ab56c2f94973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed859f6c-ed5d-4e94-85a1-25d84ddea15a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaaf68ff-069c-4226-9efd-44a5a757dc34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5214b8-5e43-4bdd-8b1b-d8158ca54139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2039cd27-c6d2-4b09-a437-c9181a7b48b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169a7a26-584b-4f0c-8cbd-f7d08121aecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53843034-12aa-40e5-9aed-281dea0a3612",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405da920-fbf6-4779-936c-a7bbdca46483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11cd750-2ebd-4ef2-85dc-00ad489eb815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee04382-1fc7-402c-afd1-2e893899d85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ff2340-e8d1-4685-8f95-e4ec19f73c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f29589-6b5d-4fb5-adcd-da33b0968fbe",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759fccbd-f23c-47ad-b8c2-2c13c6badf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f803e0-9331-431a-9e58-9a2cab1ecfcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade14e2a-e884-472f-88a8-5e460ddaec6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea2e580-e143-4d10-b865-0a0d2768c929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeac0bb5-4c31-4781-a901-837c4a5634f5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0393a5-187d-4cff-9fb6-663afe384a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec321a9c-4bca-4cc6-84b4-a1ec3ad1be29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3063a7b9-8abc-45e2-a5f5-727bdfd2c03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc8c6ed-bd87-4cc0-af9e-3a64ef2a0474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e1ce89-5bf6-4eff-9a8e-8c1d8217ae63",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eb34be-2fe6-4681-8725-d22bed642148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fb094b-6aeb-4f3b-8819-a9443e51d889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1345d2-51d0-45b6-8bbf-14b20f60eadb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae2919d-8ff8-4c02-a916-d359c23f1328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1561b846-5f56-4893-960e-5c435e03aa4e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21410895-f3bb-49d0-ac9d-593e4bb399f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e174123-d0fc-45be-8a05-ca4212cc6fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a09b8c5-7d4a-497e-b442-6c7a79c5b990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1905c3f-e475-4f8f-a917-6e6817abf311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d1386d-ba74-424b-bab9-8e44f9e7e704",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef516f10-29d9-4e3c-9774-991460bb3036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b5c7b69-b1db-4ebb-818e-110300a27f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8604eaa6-4e98-4b22-81cf-4f162b1455ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b37f704-fb83-45eb-a7fb-b2080ccca6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9247ff7d-ebc9-402a-b8df-b3a2c737ca3a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde4000b-c38b-46a7-ac27-8f9e890ab384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59456a24-3bc3-4f76-85f8-26ca6f4fbb70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbce0ff-2b6c-4a4a-aaec-1b4041283779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f563e85-8b43-4487-b2ce-7355058e9a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d7e35d-61b0-4616-81cd-d400ef4ed6b5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfbec11-7d62-4de1-a668-3a94fc884cec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0077cfbb-2fc3-4d9f-ba6a-ef6b9b82b626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e4080f-0d34-411e-956d-ccd25d791204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de8af44-cf79-4add-a3dd-07d20fde0f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3669087e-064e-4d62-9d98-fcc123b97f0a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f53fb3d-596b-4f4c-a879-1702425d033e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51033bd6-807d-4b76-aedb-bee844de86b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4108373-9a0b-4c5d-971c-c36401e0a690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c69f84-0f9a-47b2-9729-b2d15d1aca8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d3a81b-2362-4b31-8ea0-1e9591169654",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b603518-83cf-4e52-85df-920194dc4ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3b5348b-b84d-424f-a1d0-b312f98c9d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3d8921-a0b8-4d56-aff5-6934c0a10c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257c234d-a2f1-41a3-aa6b-e703068c568b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6f58db-6598-4406-992e-df1ee70508c1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768a4e5c-626b-4327-8f1c-7e2d306b8600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b0f946-f213-460e-ba48-fa1427471f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bca104d-2df0-43c4-a088-f9d95a02435c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed33dd8-2cd3-44f2-985c-e819b1ba7098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3e545c-e34a-408b-a9c2-6d167e9cb5c7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817a95a7-68c8-42d9-9028-34f097525c42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f8c2415-df9a-42f6-b264-f44ed03be0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13a2e1f-f978-4bcd-8ad6-8f7058c65919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce9963d-ef33-466f-8c97-2906004d9168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272746ae-540d-49b6-8029-6d7d87490da2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b43083-c78a-481d-82c5-e1308a23adc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa77038a-2624-43e5-ac5c-bfe8b54dc54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1972731e-0cbb-48d1-87bb-886bb1c6451e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab319047-356b-4d6e-bb0a-433839e731f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623c8bba-9eb6-4c8c-b1fd-677bcf51b121",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe49dd9f-94f1-43b0-ae04-b595f40f4ae9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c138598-57fe-4ecc-8c00-036fa0c0f5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c64b5ad-246b-4911-bd47-ade4460df9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24a3f58-713a-4a7c-9001-58210d181c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c3f93e-c372-4eac-8571-b4122d4e2121",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2825b98-fbe7-4fa9-9580-b73dbc30584e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f48959-75c8-451e-9ff5-1acf0de7a279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e033a24-a961-45e7-aff4-3473d37cf2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3eac7e-8550-47a9-9dc5-8f813aa016dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d795e0b5-8214-408f-b2d0-e8d1211d8d36",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8497ae52-ea3a-4f1f-a109-9eac24bfd184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94862240-8b85-4499-a39a-536a79e9e689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6d46a8-cc74-4192-9488-72ab4b82d0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a18bcf-35aa-4c09-9e41-448c5d884df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531b5302-3670-4223-bc63-54153102a3f7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222b9e51-3942-42d0-819f-f3ba05ac8880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b23d251-3e9d-44e9-8dc2-561288897233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbb7386-a400-4801-9109-1e01dbac9f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e4aedc-1cf1-4c82-9514-9161ba51cb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3c3943-8832-471a-8456-146d7f6b23df",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7284cc7-dcd6-4bc4-b041-a9fc3ee1dedd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e20daa-e405-4afc-b321-0a64bd7d5891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7feda652-0914-4cd7-82a9-0adb1bfb819a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635c4e48-bd49-44df-a0a5-0c054bc7562d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e605d826-b0c1-4fdc-9d4e-1d2b083433b7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32db88e1-7d68-4af9-9a21-1891b63c02a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5572c94-ee28-44ee-ab18-359a1ec4dab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67b3357-1261-4b1f-8f95-776de5962be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70afb703-f59f-4b83-8afc-21d93cf932b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e126d79-3512-464d-b185-cdf274dd656d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a046009-1395-49b0-8d84-efb72b6bd8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1514b82a-0c21-4a3e-ae76-9685e8c0eb3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fff0ee-0d02-4681-9035-9d0bc049cfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3cea169-df76-408b-91d2-b52ddf32d92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb529d2-55c7-4a07-80c5-e4c930806561",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d940d63d-e150-4979-8077-ad5fd7853f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499cf5c2-d330-4cc4-8a20-97425b1e5f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430f9879-3bd1-45f9-9f98-e24ba6438668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3771f157-d8b8-47b3-a7f6-7331f6863849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a65fb7-3709-43bf-a3d1-609c13779b2f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59551451-ca5d-4446-a701-9d6d7153c892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0501db80-e99c-4d9d-9acb-4753fc46d1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0366922-5fd7-47c4-b067-98d7b5938515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4067d78d-7293-41f9-9770-58603d5bced3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2438a917-c623-4b3e-88ea-ba9ca4886cbb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd63562-d0fd-4163-9cc1-20b793645c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bb4f68-2947-4da1-9d93-3e3cbcff0edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b900b137-266b-4a02-be8a-90842e641bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f009aede-97f2-47b6-90f4-adc3ac40403b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c642ad-61bc-4ea5-ba02-ee8c6049e134",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cd2ac4-8080-4c0f-b30e-c4f140404913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7fe516-4f63-4e89-b3ec-e34c4bf21b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d994f434-7358-42f3-a643-7dd4a0e005a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedc4246-831b-4d17-81ab-c1a1ef93dd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fc742a-a1df-4be1-8291-36b60ffdb7be",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3585de-4cfe-484b-a9f4-15a163743bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf751739-66ec-45d9-9749-b62c396900c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8d2db6-a8c0-41a3-b8f3-2c87e4450a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1e30a8-b912-4b3b-887e-eb1678e31645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e756c9ca-df8f-41c5-8e14-933261851652",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152c21d7-44e9-4571-ad14-02ea7b32a52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee6971f-92f2-4816-95b1-5e642d45d058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14594ef-4b4b-45b8-8fa8-b1be13c7e72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be17c89c-f1b0-47f8-9439-957e6eae6d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924697e1-5e22-4b6b-a45f-c02520b6c47f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd8e260-dc4d-42e4-9740-c9bc136c8ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca2c167-b8ec-498b-9d3a-e6b71144a6bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c0710c-a653-4fc7-b341-3fce7ba6583d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45510412-be89-42ed-a5f6-c37d91e7fd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f24107-2c97-4caa-ba24-84e102171b69",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a73da4a-8210-4948-bf58-01403ff96870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd53d06-25e9-4877-aff0-04ed1d8e2e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830f861e-2ef8-4a08-9c5f-5b22ca522b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd586f2b-f339-43ee-a10a-3f8c8e62234c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3467ffb9-202b-4826-ba4a-264763120dcf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27192732-d84a-49c8-a7eb-ebf581c00a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8118771d-d1b6-4ce1-b946-dc50fd403e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3697f22a-483a-4e1e-afee-eabe656c9841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043e4358-2e27-494a-9550-e8d50ee61be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e973cb-ba37-43bd-aabc-62e610a5029b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9106e1a4-a33e-4b84-8ab1-51d1b14e8506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2331e7-273b-466c-8480-d4269c0aefe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277a56d4-9602-4525-9127-1de824f49d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbddb17-d73b-40c4-9fa4-b6d7ef6917ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e828c96a-75c7-4e0d-8424-95a076f1b67f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61d9f79-c696-411e-8bf0-8a4fc6bc30a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8da60b-76a2-41e4-b7dd-653bd6c5fa70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e309df-a85e-428a-8f10-4975f10716a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51982b8-ce92-454c-af63-44480929ed7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4d5227-d66d-4011-930a-35b1a4150e1d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9f145d-7889-48b8-9f73-fd0bf6edc875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa49191e-ce22-4519-8d03-70d8194aa1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1bbe4f-726d-45e3-8adc-017724ef26a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb37bf7f-bbce-4d79-9698-a1a70d7def01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04614cbe-073b-468f-bac9-adcec68b1be6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9941a032-f5fa-4280-bbf8-9c820d95d625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46347a9e-601e-4438-a70d-103eb36bab9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c9d1a5-9a81-473f-b038-73c4c42682f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff89213c-b049-44ae-8243-e809563d38bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76f2252-275c-43b8-9238-f88c276f39d2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1d7299-fb97-4b4c-b4e4-3e12d4475652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f62a37-2a1f-4c91-bb98-58df65123302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c537d6f-936a-4b06-957f-781f06808381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d4c1bb-959d-40af-97dd-98b7afc29ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5085d3-fae6-48c0-94d2-a36ede41f96b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c65226-ca9e-4b90-9308-67384a5f8ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca4fd2c-e650-4df2-8981-6e49247409d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bad80f-ce74-49c0-b045-a7e7469b89e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad107f76-82b5-486f-94f3-b4198792449d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80490c8-e8eb-491d-8c81-7058ebab55d0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ac227f-2f20-450d-bb0a-f2eabbf3b9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf177775-43af-471e-b18c-4ce6f4b23097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd861eb9-c1ee-47eb-b44f-dbd2a4e0432f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cba9ae-4011-4053-9859-459e6753bf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e004ed-aa62-4675-8a87-d8b7e3d64f3e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224b2667-93c8-408d-8c27-19c2ebc0ae44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0270325d-027d-42a5-9a4c-5afa4b12137c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f217752a-2239-4f41-8edd-bf38626779a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcb1ee3-10a7-46d6-a661-c66a4a47b305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e710e8-3efd-43d9-9ba2-cec92df6e3a6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf10cd5c-29de-48dc-9482-522ba8be49f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63920c90-4afc-4176-946b-766cd05d45ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f8a7ce-1d6b-4031-8840-c0b95284b657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e546ed8-75c1-4dbc-b34d-c0ff802a481e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e670ac-bbad-41d6-9b59-4d3d23a90fc1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4995d50c-4b2f-479d-9509-1e248d2222bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490c308c-14c1-427a-b097-f223f96bdc89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa70d583-4e10-4d54-8439-2e0e09c70e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d30ebf-8d08-4ef1-83ea-129705bbf525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed281678-e1ba-4735-9f8b-fd289e82a118",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d6225c-f462-4517-93a2-b5a302b287d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f725a0-e72f-40da-9c14-2968f676faa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2e895b-d243-4778-8e7d-e0b857a7ef0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49989dbc-f0eb-4c35-b104-5ff5ae925d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f8d7c3-ef13-4c07-9769-eb0ef49f7aa9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7424156b-efe0-4a9d-878f-3354b76ce0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbb5ad7-834c-47ae-bd1f-8b53a34a1ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b74d50-802e-4ea8-87cf-57c122e9a9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c215d31d-8725-45e8-a6f9-32b3d12d200f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0837a5fb-9c65-469c-8cab-dfc3e2eaa525",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195cdbf5-c66a-42e6-9c47-af64b2804c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5459d6da-844b-4949-be02-04b168182d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152fb5e5-3407-4ea5-9a27-bcc563173826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f7ec29-3012-4da0-9cd8-2298dec34b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a740e1ac-fee9-456f-bd06-f0515842bef3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79deb7b-e9c1-4e4c-a147-262424d0144f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48cffe56-26d1-4c17-937a-8eb2b561d03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8458e5dc-f30c-471c-87b7-9800c51df7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d636a36f-d0f1-46de-9cce-4ec53baf667c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2da7e1-1753-4504-be2f-bdb0d4881dfa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff796f4-4ad0-410f-aec5-7414104b3d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3581b66-4ca3-4872-adfe-f153a2dcf6b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0006d2-b1d6-4aa9-bd75-5dcdb9dfa5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8f54f3-5988-402f-a8ea-26031b38e8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128b2ee1-b846-4d34-a400-476c97da01ba",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195fccf0-88b4-4bcc-8f18-fc9b66a5c3b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da28fbd1-214f-460e-8f6e-c3c2eb3fc3ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5141ab-5e23-4e04-a49f-61a010e6fcb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d9d175-e3f3-4f58-bbdb-e2e85e272e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7ae78a-49a5-4db0-bc49-8a023e0a79ea",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb93e2a-a1f1-4a6e-8f39-013c6ff38616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c1ab1ab-12fd-453f-8431-dc4e798e16d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83912b9-dab9-4e8b-8c7c-799f2f960710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89495574-61a8-4e8e-a384-9868e6bccc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653b89c7-4210-40db-9c0f-396986b96d39",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1823b58-0e7b-4f86-b804-fefd01a19978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7e868f-68e0-4f56-a95a-dd121bb58426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d916f1-99e9-42a6-9204-ee85037243d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d5f00d-85a9-4b7a-a523-ad9b4b1ab007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8568407d-ea9e-481f-b69b-81e840fe925e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ee55af-ed18-4dde-a5a8-42a7cb15d432",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872a6da1-1141-4832-b5e9-72d51a16f269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdfbacf-5ff6-4950-be9f-12dad9d2ee51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159e2e9c-3fb1-44b3-9c14-b5962722e503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac583745-0fe3-4e0f-b850-f2fdf15b6c89",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753c5bd7-eb60-4f09-a930-f319ce22cdb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a366d30a-d33f-488e-bfcf-b65c488b1eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a768b25-2640-435c-b7ce-1cc1546e7bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af44f819-2822-4e46-9606-6d6ff3c402fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406585e0-0037-4553-b5a8-be2297825452",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b754bd4a-3e5d-46bf-83ca-6282dd5e7785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a284d32e-31ba-4455-828c-1fcf7d3de97f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34282cb6-0a64-4907-8ad8-d9d1d1fdec01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b64d67-fd6d-4be2-8d58-30b1b5772793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ef85f1-f24b-4cdd-98c9-70675d06ddf8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efec351-cca4-4d15-805c-d9ec4652d6af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0ff4521-f7df-4250-b362-a6d9cd5a1000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7869dc-da2a-4da7-aa67-7dca1104e9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c256117-dd7c-45a4-a4fa-3512b7c073ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c37071-16d3-45cf-bb66-7bed8322d19e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbb46ec-febe-4f87-8200-ea583f3b067d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16e39c5c-6f9d-4d43-8fa0-924fc7b48b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c981db9e-a963-4a8a-a9a8-d92655ff6d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da91097-0b3b-4509-b578-9449221b97f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb6a69a-90d5-4952-a78c-78da57843d92",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827d2170-1e1a-4270-b54b-9ce900568612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d33fe8-2872-4e6e-b681-6774f2a45d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df000db3-7188-47c5-80e3-cb8bb2793941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470453ba-8d2c-4794-a542-ff9a2ef1cef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82750d3-5375-4e9c-8a27-0f9b05a1040c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21aa2dab-cacb-4b7d-97dc-223b538cc5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21452ca8-fa73-468b-a550-488efc43e70e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c22bd14-c2d5-4144-ae8b-7ac0cff196bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6719f219-b9ac-4481-b6d8-dfeed55a11cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950cbbd8-eb41-403d-ba2b-5ef938cafd6c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab33fd30-980a-4473-ba2e-49cc2deb9e08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb3e2ef6-5ee7-477a-8ea4-1cbc0710aa79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0510652-96c5-4204-9305-97f40b00a627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eee03a4-e866-49d8-964b-89096cd3b294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5067e6-7593-4c83-909d-efb687b545dc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214232b0-d9eb-484b-9ff6-ced9023da87b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eea6264-41ad-498f-909e-8fe10c6e14d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717b4ee3-a6a6-4e9e-a2fe-431c15c54380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded80ade-4b8f-41c5-ad2b-40bcb1df2011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffff8e7-6545-4ad4-aed6-faa3e1669d16",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d95969-2c36-41e1-ba57-b1bd1bd68ed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bf0262e-e90a-4cb5-9101-ac945fb99cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9784b6-b3bc-4b72-8455-be5cbbcd04a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b032c8-bd2e-4a80-8db4-29b6877a39eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197fa35e-41f8-4771-a73e-11584b2284da",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eeee9d6-2e11-4df1-b3c7-04ee4582d323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78197eec-4d49-4450-a6b4-62efee1677e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c55b2b-003e-49f6-95dd-52ff856a778f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e9f4bc-3bf0-4b44-8480-8d27d018ab1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7ed061-bd79-4a0c-8959-ee4eecf6282e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89648ec5-ef69-432d-a300-9f51acd30a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66c05e91-b768-4d6d-b955-6ff5a7e06d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b883cd0a-6bea-409a-bb4b-a5b2aad4d156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242980cf-6c1f-45fc-afb2-baffcac0554e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73d0504-c773-49ff-904a-4a897a318027",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e35394-880b-40b9-bf34-5805101255c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5849a12c-6ca5-448b-a43e-9fcc264be0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f85df6-2fe4-44eb-9b51-9042146910dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd610176-142b-4a81-a7d5-b0d655a9c84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff47f6e5-713b-4934-a5ed-7e2820589abd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc4e234-1458-4330-a2ac-e96c2f1ba004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af971bc-a03f-4f9c-b26a-952f191744d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02543d3-5f64-4bae-98cc-f120fa63eb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6e6226-a485-46ca-9d03-d6c7c75c097b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcbcded-d766-4f03-ae5c-31dc8c9f76bd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d60e9e-8a1b-43e1-b331-05200e76cf2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "528034b1-b2dc-439a-9245-e14b5ccc31b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f552594-17b6-4bf1-a5e2-46f2444bc2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe1e7d9-dc12-47f0-a77e-58458a063439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e66b1d-cbbd-42ac-9920-695fcec499af",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac93e38-4dff-4cc9-8148-190fa9917788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "723d5442-219f-4c74-bd81-980aa2708b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e6b218-9db4-4d53-91fa-633d2e571c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0e1b61-d2c2-40a3-843d-d2a4ea62a88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee665ff6-1600-49ac-8ad9-4c1d9cf84793",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4476dd-7257-4bd0-a61f-41afda521c49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e646ab4-366f-4fc2-868d-9ec59f5df32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a84576-3a27-44b2-bd43-dafcb425cad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3d0d11-761b-4dee-93fb-ea46b0a4c753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f875ba8-ed3f-4926-a88f-98a7c511a9a4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a801bdf7-0604-4120-b537-1bfd5c6d26f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8358fe5f-d017-485b-8c92-7441f82c9ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c480174-a694-47a2-a970-8afc2155e806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6a17e2-01e3-414b-824c-119e67d5810a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a112910-81df-4651-8143-7f4aa6e631db",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b546715a-d270-4edd-bdad-ff44f3438c3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2279a9fd-c376-4388-862a-0a7ee93b492e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94de77da-c010-4626-9a71-b964fa3c199e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d374cfe-d88e-4499-aaed-fad228df14b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ab8710-75b2-4ec2-ae06-e6202898f711",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744d1395-877c-41e9-8f66-cc356e8b46c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb3bb96-eff1-46e6-b107-f26f3c54dc6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a812bf-1cb5-4348-a476-483d84d5bb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86655b6c-b18a-40a9-8f40-020457245c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c514470-434c-41bf-8ab1-79984ca3b682",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15d8ba5-40e8-4025-972a-e68e0c2ffbb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "791b7581-ddd1-420e-a2c1-cd50dfb3b112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb9afc1-44dc-4212-8223-06ed633dfc4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663c7c66-9632-49aa-a260-76c7f028c0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb38db3-c007-4389-8605-eb492c2325f8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1b701a-f926-42ee-b469-fd1181bbb7c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ae83d5f-9079-492d-97b4-91a8c76890be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ab0603-214e-4fec-a907-fcbe251ef5ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b3de85-2e53-4c89-ba7f-932f6dbf9fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7534907f-5b22-4862-bc3e-24f94a8eac09",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475d89c6-c081-481a-b85c-89db59d015e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b15199-292b-4dfd-a818-c1b3e26bfc84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd35951-d6a9-4ce8-956a-c908280aae83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee6d752-dc7b-4c3a-95fd-9d396221243f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3b1423-7b0b-492a-88f2-a0d71c0d8048",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81897777-e14b-40d0-acee-3d300ed2f8b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26af902d-bc4f-4ff1-95a9-ebe615e5c2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf84b8b-3021-4f8c-8428-74033c0b3670",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85cf1d8-3755-4b6e-ab64-e7d32e8c9cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fed2c73-607d-4672-9bfc-33e7d60e253d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be0655d-a840-4cdd-9957-eb3f74ab29e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c78fd08c-70b7-44b1-85fa-316a896b1f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171d44d0-6662-43e6-8306-3de9b872dba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c558b4c7-9e23-4de4-ba30-d86a640cfef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d804937a-4c70-441a-871f-37dca472324b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646c46ed-2c7e-43ce-9286-3dd1fb950165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94b9ccf1-ae6f-4a0f-811c-498177a5b1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc6c6f3-d9d3-4c75-bd63-41f3958ce0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5f3f51-7877-4d7a-94a2-9a7ffce634f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef26c01-0ecd-412b-bab1-c2712a2dd1d4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f69157-3681-420b-8ac9-603daa5c0169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab1a846e-aa99-439d-9d08-8ab5481e82a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd798841-101c-4f65-8006-63fd3b8d692a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c83ac6-daf4-4b20-ba10-d100cc9a035b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba68f3d-add8-4e3c-ab31-78e6ee048f11",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f9d686-5317-42b6-8a4a-f0695c13a64b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e3c8102-42fe-4866-8b90-b1e2cda88e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "764bf498-def7-4096-b1ef-24dce153d881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a549937-dbe3-441e-bba4-5714fced88ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa334937-e795-4c29-babe-c87e72ee3a17",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2205cb-be97-442d-96f4-7c61e1735c14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "614d18eb-05c1-4056-96ff-b2ee13f1bcff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d7d57b-cfb6-4cc5-812f-4447a1fc34d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71164bc2-0f02-4a0b-824a-c6b7b4e97237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47638087-61b6-417b-9a61-7a18af97abd5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff603d86-27f8-47be-b3ee-49b8707d3076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e352fd-a34c-4e1c-bf03-d5563e771c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b477205d-b347-4bd1-ba1b-1bf28a27a937",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100fc122-13d0-4a51-bc4a-c8edfa9b65a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d897b9-40ae-4cf4-b9ac-3b9c2db8ad87",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27d4bfe-19c5-4f5a-a171-19dcc682e64c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "009df891-991e-499e-939b-85447bc05b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5c2979-9637-45b4-a46d-47840ee97fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8394fa-24c9-45e8-a050-b40f3a4e827a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f508214f-8f52-485d-a45d-20510d6ba3c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b867cf3b-620e-4d5b-aa96-66b2342af2e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4da37eff-4bd1-4f6a-919b-6cd554aa062c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81061027-973e-4b60-97e0-184d14429730"
                    }
                  }
                ]
              },
              {
                "id": "5c5a8112-f461-4993-b564-5f2672486c62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2dfac495-ede3-4cca-841f-3d41b218f3e4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85c8cf3-6eb3-43fa-89e1-149650a8bfc8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "76a1c8c2-588b-448f-87fd-3cc5868f024c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f274a0-d06f-4477-85da-493f974d6cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "698b5e58-ce0a-45a2-8ca3-6a0e2864676f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4117d64e-1547-4dff-9cd1-fd46870c341b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f21cab4d-001c-4f9d-9abc-aee57e9d0192"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcd9631e-211e-4355-824e-237e00bda689",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44f77137-54bd-4c15-8673-69756263d85b"
                    }
                  }
                ]
              },
              {
                "id": "8472ae14-fc06-4929-b439-2e2ca51c6029",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "774c9b8d-5a3a-4f00-8e93-d7fda091de14",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d425ab4e-6b5f-499f-b2b8-27b3a621ec7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "67d0385f-7fdf-4a8a-998a-d6e7dc21b3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91f32f4-0f72-4aef-a61c-bd9cb2c868c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eaa1da7-c689-463d-9f50-b0cb74361f60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e9d43404-2683-423d-89da-9c817fc762fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48c1976a-dae9-4ca8-9086-0db0bc56514e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01b9b615-eb38-4b97-a65c-d5a12223a820",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f05e2dda-ea3a-417c-beda-f51eb7fe6a8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df2067be-5ae2-429d-b633-3918d2c2763c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0444e625-f818-4fcb-b5f4-10527f495356"
                    }
                  }
                ]
              },
              {
                "id": "3a03d86c-f009-4cd2-be4c-dcaecc359f5d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f711939-f9d8-421a-b6c4-3fa3b12077c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ba158cc1-938f-4e9c-8321-a0b0026725b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae992749-c720-4d46-8ffd-e719daf57d7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0d0c2ef-60cd-44d1-8b7d-731e78cf800d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "011dc4b4-79f2-4fde-ba85-c1ea93cdcb3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2ec3a475-db2b-490c-94b9-251b0159bae8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcbafe77-297e-4c02-aad7-ea7e7d743e46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b98189b2-cd66-4f7d-9f20-bf59923245c3"
            }
          }
        ]
      },
      {
        "id": "377c5d7d-0975-44f0-af3d-eb5895d3c2f3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2ecd5251-b5bb-447b-b4f4-344b640842c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06f32617-5df8-4fad-a000-384cb5582cc6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "709aefa3-f1e4-4a7a-9a6d-88910c56491d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c553583c-c8d6-4eb1-ad59-c5efb6bba309",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8c6fae71-842e-4ea9-9c67-91a722eb1312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae636218-827e-49e2-be8c-6c384b8e7f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2be2020c-a400-4ff6-b173-a3cc0e8c402b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84f10031-5a0e-42a8-8049-5823f64cfdc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0663cc0b-c7f6-4c2d-81ae-96316f55b6af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e42c343-a966-4eb7-adb6-a19becfb5b5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd41547a-067e-4084-9ae4-be2d97d3ad76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "970468bf-761d-4872-8fd7-7bdcad112560",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "12558a4d-e990-4f2e-bc4c-a8b1af264b82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f45a17ae-d431-4097-bc5f-506460d517a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32aee36c-cf7a-482f-8466-92d26499b910"
            }
          }
        ]
      },
      {
        "id": "eb848e12-50f6-4104-a6f0-c04c08454809",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a8149edb-2ce3-4841-ae5b-0e6f0942781b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bfe63477-f2c3-4096-a269-8daa85851ad2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30dac7d2-8871-45b9-940c-ffe14649f367",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ba5cd6-2cf1-496f-b5b1-53418b188b37",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69e08ac3-8ffe-470f-b7c0-991f82e8fb71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cf8752-c26c-410c-a59e-056ba9f15109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96df23a9-ee49-46d3-88dc-2e583bab9644"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e4ff3a8-8307-4a85-bccc-d88e164cf114",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af5f3cbc-31f6-490f-bb89-594a7fa656c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3c0a9b3-5bda-4802-a42f-b7288878fa2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "773a42e7-63b3-46d0-af0d-0d06cd88a080"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0b2b5c4-b39c-4e1d-98d2-a5ddc0a03544",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb2ec48c-ab49-446d-b8be-fab4d6c89bfe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "094f3dad-50c9-4218-a2a0-3fab32201bce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50bac649-1eb7-47fd-a75e-01e13414f2d9"
            }
          }
        ]
      },
      {
        "id": "fa8f22d0-eaad-4929-96d7-2ba78b642920",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7a586259-cf59-4159-bfda-1654b96c619b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1885d9e6-202f-499d-a53f-b3d4cd24d430",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b0e6832-01d5-40d5-957c-24e14d7c0056",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b02845a-44bd-4517-a43c-33ad4ce8d859",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e28faa9a-3cb3-431e-ae17-2f332dbd2342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7607129-915e-4e59-9a34-858539d46857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4afcc889-de71-4e6f-9334-38c37ba951b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f85e3b01-23f5-45c7-b042-9ac9a06d3c49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c814375-a274-49e9-aa05-e640d966cee3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "297c5405-8e4e-45c9-9406-1df9e64be755",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68dfbad1-3c53-4051-a665-dcc34dac4478"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "454d5e0b-3058-494e-a6d7-f7ff2bc71b4c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7818c728-41a0-4802-a8cf-be8947a27ef9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6edf6dec-0753-4b35-8ed0-fa162319bb38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "599afaff-50cd-431f-ad33-403a2910634a"
            }
          }
        ]
      },
      {
        "id": "844b4c34-0a9c-4c88-8c03-d68f2c0a5f9e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5ddeefb-b5bb-4894-a15c-2d4fbbbed869",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76ea7e5c-f92e-43b8-9714-df876bce7d5e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d12fdaf3-e64a-4eb8-b970-c1921c5ecd99",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d25a9bf2-16ad-4555-a6f9-00efbda4c676",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1dbf3e8-8e64-4070-848d-8653866303d0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 375.7539682539682,
      "responseMin": 15,
      "responseMax": 10709,
      "responseSd": 1537.5947728514584,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720485545987,
      "completed": 1720485649475
    },
    "executions": [
      {
        "id": "8debec7e-90a4-4969-afff-246c0bc598de",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "883735b4-feea-4b08-a50b-7ef3e8f48537",
          "httpRequestId": "167fed4e-3983-4e5b-beb2-d4086d3de2eb"
        },
        "item": {
          "id": "8debec7e-90a4-4969-afff-246c0bc598de",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "648d4d69-5c5d-45b6-8dd7-5977091c9270",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "b9aece11-ed62-4cad-ab68-cfdfbe0fad67",
        "cursor": {
          "ref": "492d35f2-71aa-4cd5-a7f6-d9acc156db4d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1f4ed604-ab5a-4a8e-b368-957095deec8a"
        },
        "item": {
          "id": "b9aece11-ed62-4cad-ab68-cfdfbe0fad67",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "012a55b6-abf6-4203-a2fc-29f9e14c6e64",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "1387473a-3f9e-4eb6-9351-e79bf4ca309d",
        "cursor": {
          "ref": "a0b6f799-b6b2-45ce-8413-949cfb153f4c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "024701a2-24de-498f-ac7c-222d403deceb"
        },
        "item": {
          "id": "1387473a-3f9e-4eb6-9351-e79bf4ca309d",
          "name": "did_json"
        },
        "response": {
          "id": "5430f7d3-c953-41b8-855a-ac9cbc89536a",
          "status": "OK",
          "code": 200,
          "responseTime": 434,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f829712-e42f-4443-9b2d-0f2fc093522d",
        "cursor": {
          "ref": "a5564c84-e985-4134-9277-56637d510119",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5af98306-1bce-45d9-8f97-5fc13212998b"
        },
        "item": {
          "id": "6f829712-e42f-4443-9b2d-0f2fc093522d",
          "name": "did:invalid"
        },
        "response": {
          "id": "a711f826-3988-48c2-b043-55139a763659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2297,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f829712-e42f-4443-9b2d-0f2fc093522d",
        "cursor": {
          "ref": "a5564c84-e985-4134-9277-56637d510119",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5af98306-1bce-45d9-8f97-5fc13212998b"
        },
        "item": {
          "id": "6f829712-e42f-4443-9b2d-0f2fc093522d",
          "name": "did:invalid"
        },
        "response": {
          "id": "a711f826-3988-48c2-b043-55139a763659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2297,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d0bff0-d9d8-4bc7-a336-b2c8d7fe49f6",
        "cursor": {
          "ref": "2ad35007-c6dd-4f2d-bcd8-eb9044aab2b8",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "eedd40bf-932f-4301-96b5-3b15f278413f"
        },
        "item": {
          "id": "53d0bff0-d9d8-4bc7-a336-b2c8d7fe49f6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a38907c2-fbb5-4de6-ac92-8ad573eab392",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2500,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec2e64e-6e1d-467b-8405-b17aa5c593fd",
        "cursor": {
          "ref": "037d0e63-36f0-4477-ad6f-fe9ef9586034",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "680ee360-fab2-4224-bd28-4210324f6275"
        },
        "item": {
          "id": "9ec2e64e-6e1d-467b-8405-b17aa5c593fd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a501d5da-3ab4-4fdc-8297-c4dd0c579443",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2216,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0939d6a-2a12-422c-b1b9-8068026d7a66",
        "cursor": {
          "ref": "d2092d4f-586b-408c-8300-83a3b52534f9",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7e9de275-b735-4829-93c3-af2dd8d57fa4"
        },
        "item": {
          "id": "c0939d6a-2a12-422c-b1b9-8068026d7a66",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f436d705-19d2-4919-8d19-7423aa816fce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044d914d-2a23-46b5-b459-3d3f75b6db50",
        "cursor": {
          "ref": "3357cdbf-59d3-43c5-8821-11b26355e039",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f68c1337-00cf-4539-8f46-0dd226d595a8"
        },
        "item": {
          "id": "044d914d-2a23-46b5-b459-3d3f75b6db50",
          "name": "identifiers"
        },
        "response": {
          "id": "3801ab8e-bd45-4ff6-8fa5-7f3aa2afec4c",
          "status": "OK",
          "code": 200,
          "responseTime": 2486,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be0184b-e8be-4961-9ff5-1ed3f3f2c637",
        "cursor": {
          "ref": "4335c1b9-1146-4703-972c-22b6f805d558",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7c207e73-4fbc-4f93-b5a0-dea6941e3194"
        },
        "item": {
          "id": "9be0184b-e8be-4961-9ff5-1ed3f3f2c637",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "039cd3c0-77da-403a-8903-2687055d2f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2234a1dd-a2e8-4d07-a74f-be1ebe5418d1",
        "cursor": {
          "ref": "6327136e-ce0c-4568-a737-231b0800d448",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f2c7d2a1-76c5-4529-93a7-bff974b9dd2a"
        },
        "item": {
          "id": "2234a1dd-a2e8-4d07-a74f-be1ebe5418d1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e0d5c32b-6257-4e4d-bb48-7fdf8aac3327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3a1259-d3c6-4539-b635-014b553006ba",
        "cursor": {
          "ref": "6b2e42b0-1d5e-4c12-bb45-bd282115d722",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9671be41-a7f2-485e-978a-297016298439"
        },
        "item": {
          "id": "9d3a1259-d3c6-4539-b635-014b553006ba",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5db82ef1-e158-4fb3-b922-459f9a6ab57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f02939-c73b-4c0e-ab47-0422d3704aba",
        "cursor": {
          "ref": "5a66a9f0-be3d-4783-b9c7-72fa0a74a5d6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4621fcb4-a979-44cb-9223-c8be57768ea9"
        },
        "item": {
          "id": "f9f02939-c73b-4c0e-ab47-0422d3704aba",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b54f7543-ceaf-4bb2-9dc5-01560b7bbc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d20f238-ee7c-4f06-9d43-2adf3d56cfb7",
        "cursor": {
          "ref": "32794aca-97a2-4665-b86a-87c016df9fd4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "20a3a997-ad1d-4b07-994a-d65976823da8"
        },
        "item": {
          "id": "5d20f238-ee7c-4f06-9d43-2adf3d56cfb7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7d43c8cd-8061-46d0-8cbb-cdfd76faae07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af5123f-7849-41d8-b71f-133eb55a788a",
        "cursor": {
          "ref": "c2f58288-52c7-4caf-9ba1-72662e658b9f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "70959071-3267-4383-888e-43827fb3fad0"
        },
        "item": {
          "id": "0af5123f-7849-41d8-b71f-133eb55a788a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f5e6631f-58b0-40a4-9702-63b7bc2ef267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f5b014-d917-4d09-91f7-6d71f7054242",
        "cursor": {
          "ref": "96cfea10-0907-47f4-9d5e-1637436c7087",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e3c075a0-4f10-4c8c-9ce0-2bbc26e4b412"
        },
        "item": {
          "id": "93f5b014-d917-4d09-91f7-6d71f7054242",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8207648a-4e2d-4b5a-8736-c4f76d0a68a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08127817-140a-4e12-92c3-95dde7f3708c",
        "cursor": {
          "ref": "606b5afe-8264-4e27-aa73-032d4de52d0d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "21c40830-da05-4e7f-9598-6ef5edeb8e0e"
        },
        "item": {
          "id": "08127817-140a-4e12-92c3-95dde7f3708c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "927344a1-98b6-46a7-8f4c-55a7bfb890d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7035f35-34ca-461d-a6ce-942d3b8b2000",
        "cursor": {
          "ref": "fb5060a0-e3e2-4f84-86d8-2a26497b541d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cfbb9a82-399f-4b19-9ee0-e62e9dff4578"
        },
        "item": {
          "id": "c7035f35-34ca-461d-a6ce-942d3b8b2000",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "809b6a9f-6308-4dcf-a600-9a3b167fc06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb59a2a3-d45f-44a4-a7d6-6a9abf83f0bd",
        "cursor": {
          "ref": "144fac1f-566a-463d-abf2-b4216f8ff4d1",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "eb462c7f-014a-4a86-b9c9-fd944539abcf"
        },
        "item": {
          "id": "bb59a2a3-d45f-44a4-a7d6-6a9abf83f0bd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a9ceed7f-7bb1-4d3b-bafe-1962bd46d0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0735c3a2-9245-4460-bd28-f0062ba459d7",
        "cursor": {
          "ref": "4d903353-e130-4d03-81db-5eacd098447c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "967fc811-1a66-4b2f-ad29-461b50b38d94"
        },
        "item": {
          "id": "0735c3a2-9245-4460-bd28-f0062ba459d7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5638ff90-dda7-4a91-9b27-0caf5e329198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ac6fc0-5702-4917-a570-21bf237f6997",
        "cursor": {
          "ref": "923904da-efd3-40f5-838a-97f385da18ce",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a66b05cc-3e3b-4d32-a8d0-5b80f38c192f"
        },
        "item": {
          "id": "18ac6fc0-5702-4917-a570-21bf237f6997",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "558ee52b-9e11-4d38-a57d-8d156690ba8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650dab9f-aea1-4e1d-9da2-7467d3c74485",
        "cursor": {
          "ref": "589c7f4f-059e-45b9-8864-a0db7731ae15",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "64edfb48-ecc0-4a1d-a4c7-452c5f4f7efc"
        },
        "item": {
          "id": "650dab9f-aea1-4e1d-9da2-7467d3c74485",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6ef4b426-39d9-45df-a974-2be0b6f1585f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154e96fb-5e1e-4b7d-a68a-a8a4e0526b6f",
        "cursor": {
          "ref": "318c6696-e53b-4e21-8d5a-1970465c8091",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6bcbb017-6e3c-457a-a645-cad59a944e0e"
        },
        "item": {
          "id": "154e96fb-5e1e-4b7d-a68a-a8a4e0526b6f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "852d5af1-586b-4c74-b6ce-76009c215c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988dc501-a92d-4f05-bc0c-9d0a36337d99",
        "cursor": {
          "ref": "c3cabe89-5a43-4135-80ef-939777ff3b7c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e1e79705-a084-4bc2-a05a-0ce831482620"
        },
        "item": {
          "id": "988dc501-a92d-4f05-bc0c-9d0a36337d99",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6b298033-1cb0-4b33-b07e-f792718e85d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee610bf-fcad-460e-baff-83b7e1651648",
        "cursor": {
          "ref": "2e246ff8-90c6-451e-9e7f-439694da9242",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "afaa9181-ac8f-4001-8684-fa4bf4064e43"
        },
        "item": {
          "id": "0ee610bf-fcad-460e-baff-83b7e1651648",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "83258586-126f-4a98-b5b6-31f457149c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c23ff1-b9fe-41d8-a653-394cebc79ad1",
        "cursor": {
          "ref": "526d0fbf-6c42-44e3-a389-d7d931026317",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8f72e87e-e432-41c7-887d-1b016d93dbb1"
        },
        "item": {
          "id": "a4c23ff1-b9fe-41d8-a653-394cebc79ad1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "57f82281-3640-46ba-a383-e9e33a0b4fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9229e0d1-d1f1-43d9-8061-7f42baef940e",
        "cursor": {
          "ref": "8afb3c57-e22e-4483-a3e1-9750dd861428",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2ec80a35-3e45-4634-80ab-f457663ff19d"
        },
        "item": {
          "id": "9229e0d1-d1f1-43d9-8061-7f42baef940e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dd1cd7eb-4ac3-499d-9390-ac52560325ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc65369-410d-43d2-b0a1-f16c1f9a7f56",
        "cursor": {
          "ref": "3155d1f5-837e-47a6-9bc7-e9ac72ad64fd",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "964a608a-2ab8-447c-9fde-e9f34c11e5d5"
        },
        "item": {
          "id": "4cc65369-410d-43d2-b0a1-f16c1f9a7f56",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2e8092f4-4c48-427a-8482-11408ac04eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a4ed0c-3450-4533-87b3-27bca1b8a257",
        "cursor": {
          "ref": "44c5eaf1-8d58-4aa9-ada3-ccb4672b382f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e4fdbc18-4375-428a-beee-f73a14df7457"
        },
        "item": {
          "id": "b4a4ed0c-3450-4533-87b3-27bca1b8a257",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "04364905-2a49-4a64-9c0d-43bcc320b04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd7ac8b-3a25-4a4c-a68e-6a31134ce78d",
        "cursor": {
          "ref": "4ade6d7c-11b7-4cc4-89e6-d8e645b5ca9d",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "09dcdbe1-55b1-4771-98f7-ef039189ac9f"
        },
        "item": {
          "id": "cbd7ac8b-3a25-4a4c-a68e-6a31134ce78d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cbef6f8c-113f-4354-ba87-5b0c350fbfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0a3e03-a97a-4bc1-8ea5-b8c5e4244b02",
        "cursor": {
          "ref": "9dfa20e2-f3b9-4ebf-bde3-9e27d9393bfc",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9d516ff4-c4f4-4c0a-a368-26fa157660a3"
        },
        "item": {
          "id": "dc0a3e03-a97a-4bc1-8ea5-b8c5e4244b02",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "093205a2-7922-4f6d-898c-fc96f9a10857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08615845-c9d8-48c1-be0d-5badff6692bc",
        "cursor": {
          "ref": "9b51292f-aebb-42ea-9014-956df6189dc6",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "45aaa13e-2214-4f91-be19-febca29bc585"
        },
        "item": {
          "id": "08615845-c9d8-48c1-be0d-5badff6692bc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a6b64785-9ae6-4632-9bd6-08c19bdb2cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca26f7e-ed9c-4381-b603-323ae74b9b00",
        "cursor": {
          "ref": "74dc07d0-cd6a-40e3-9e37-e3b3d63442a6",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "70ee5486-e50b-4878-90b6-603b20d49855"
        },
        "item": {
          "id": "5ca26f7e-ed9c-4381-b603-323ae74b9b00",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ac8125c5-51e1-4b1e-8ba4-7ce1a4158992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c953b92e-cf32-4663-a087-c89c671aefc0",
        "cursor": {
          "ref": "17619a48-693c-44a5-b014-675139f42e96",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "02b0117e-6d57-4e1f-ac62-08ec1003d009"
        },
        "item": {
          "id": "c953b92e-cf32-4663-a087-c89c671aefc0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "75f83819-815f-4a2a-8eca-ccd4a0bc7d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2249f56b-e99a-4940-adc9-518edc8fd60f",
        "cursor": {
          "ref": "6fb8f71f-dd4c-4f64-80d9-863caf498611",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d607c83c-155e-4648-ae79-e43dc62b8422"
        },
        "item": {
          "id": "2249f56b-e99a-4940-adc9-518edc8fd60f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "585e4bb3-4104-404b-82a1-5945cfb2996b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74c29c8-9ead-4489-9755-f1d26000c163",
        "cursor": {
          "ref": "3183f865-20bf-40be-933a-c456c5ad94de",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b787a081-f0c5-4bd9-b6cc-1c7689dcb2f1"
        },
        "item": {
          "id": "d74c29c8-9ead-4489-9755-f1d26000c163",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3bab6451-fd5c-40e2-b4a6-4d179069b3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db37e605-1fcf-42c5-b583-fd7a656f2328",
        "cursor": {
          "ref": "ec3a326b-c813-4d94-a2ed-50029ea1ad24",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0aea1252-d7e2-42f6-a22b-f47df6814bce"
        },
        "item": {
          "id": "db37e605-1fcf-42c5-b583-fd7a656f2328",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ed721a1b-89ae-40fb-8f47-ff144d2c31af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7592985f-e485-486d-a0bf-b5e21911ade9",
        "cursor": {
          "ref": "41fcda46-e2f8-4316-aa39-059a79317f73",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b64cbee5-3498-477e-ba58-7e3fdcf6ec64"
        },
        "item": {
          "id": "7592985f-e485-486d-a0bf-b5e21911ade9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "15a268c9-8a31-4068-9dbc-b0266385c2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd54077-72dc-4db8-9b9a-462b3c6dddc3",
        "cursor": {
          "ref": "f12e04a5-e882-4acb-b7bd-765de773f105",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7b79d8b0-db8d-4700-857c-21ab653d14ad"
        },
        "item": {
          "id": "fbd54077-72dc-4db8-9b9a-462b3c6dddc3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9ee40b1b-0505-4262-9c23-db43fbf28a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dac935-2dfc-4954-ac04-6e287416ccb1",
        "cursor": {
          "ref": "b615a8b4-43d1-4ef5-9050-20fa4040909a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b3bc97b8-2a4f-4454-878f-14f9b03dd99f"
        },
        "item": {
          "id": "f2dac935-2dfc-4954-ac04-6e287416ccb1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fda42d23-2449-4cd6-b961-67072b1b15cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a69dadd-1315-40de-a687-d3a0f2c4cd19",
        "cursor": {
          "ref": "087b8004-0277-49c9-b0af-95cee83e3c5f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e0794ec3-901d-4a88-a7d9-db5419b4e439"
        },
        "item": {
          "id": "7a69dadd-1315-40de-a687-d3a0f2c4cd19",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b0a04341-4fc5-44c2-b8f8-1c81ad791e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e161c1-907c-4e39-a3ff-9023ced9ec58",
        "cursor": {
          "ref": "9acf7b8d-ec48-4f8d-98fa-94613326065c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0be8c1d4-540a-4474-9494-8c9f7e1bb0e2"
        },
        "item": {
          "id": "b4e161c1-907c-4e39-a3ff-9023ced9ec58",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d6753b1b-3d5b-4cd6-a915-7bb4e9d53a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7984e5-6156-4d80-a163-bf4cc47cdb16",
        "cursor": {
          "ref": "4d0f6a2b-f7b2-428f-bab0-18cc6b961ed3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3b132254-af1f-412c-82a4-d4e7a7702e70"
        },
        "item": {
          "id": "ea7984e5-6156-4d80-a163-bf4cc47cdb16",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "05991896-c803-4f52-924d-271877499bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158a0901-7d10-4fd3-8d43-04d456413105",
        "cursor": {
          "ref": "fc2c0379-57a4-48a5-ba79-fab8b9953fcd",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "793918a8-18bf-4729-8206-7c6e901c2512"
        },
        "item": {
          "id": "158a0901-7d10-4fd3-8d43-04d456413105",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4f0f579f-458c-45e4-b309-f1cb39cc4eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eb7413-ff69-40a8-a2a6-6ab0e2146680",
        "cursor": {
          "ref": "0796fe88-788c-40be-9146-497374950dcb",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fd8ec138-e731-4d92-b5f3-4e7039bd0edc"
        },
        "item": {
          "id": "07eb7413-ff69-40a8-a2a6-6ab0e2146680",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "080f086a-18ba-4b02-90ff-4f13234ec72c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4785dbf-b388-4cd9-b96e-67e5d176789d",
        "cursor": {
          "ref": "dcb92047-23cd-4e01-a917-9ad0f5ffca27",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a5f0c62b-ca51-4544-9cde-ee415d31993e"
        },
        "item": {
          "id": "f4785dbf-b388-4cd9-b96e-67e5d176789d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "50620b33-8970-4ce2-a901-abb8db2d1b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02edce4-ab50-4748-8cf3-fa25f3dcfd30",
        "cursor": {
          "ref": "11662329-d84a-42d4-9a01-b4879c90c3a3",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8888c355-a393-4e20-b062-1c5e663d36f7"
        },
        "item": {
          "id": "d02edce4-ab50-4748-8cf3-fa25f3dcfd30",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "72d2309c-41c3-46f4-bbbb-3cc25ddf9b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dba482-c918-451b-836f-124c88f2f6c4",
        "cursor": {
          "ref": "66800119-718c-4e35-8f7f-b3aec154f79e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d10a53d5-4b7f-42c5-bd06-12fd0e184794"
        },
        "item": {
          "id": "f3dba482-c918-451b-836f-124c88f2f6c4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "021b8011-38bd-468e-a97e-5ba4f163a0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99161332-c3a4-4ce7-a526-d8f1e9ff3f45",
        "cursor": {
          "ref": "b830a0b1-f69e-4bdb-822b-3fd3dad68bf6",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d127eaf4-5090-4a7b-a0d0-4d65cb061269"
        },
        "item": {
          "id": "99161332-c3a4-4ce7-a526-d8f1e9ff3f45",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a7e92bbf-ebfa-4eb0-83e0-5a766226c78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b1963e-fc2b-4dc8-a9e6-22dfc601ed72",
        "cursor": {
          "ref": "d7e07300-0637-4ecc-bedd-aaa5700c8615",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f87ba99b-3161-4c66-b4b6-1e2c133741e9"
        },
        "item": {
          "id": "c8b1963e-fc2b-4dc8-a9e6-22dfc601ed72",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e46cb87e-9144-4526-b23f-b46fa73ba504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1565ebf2-d7c0-497e-a4c6-b1017e67cbf9",
        "cursor": {
          "ref": "7990370a-7c7a-4859-a8ee-0c5d46c301c3",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d67945cf-102e-4bb9-8745-56889fbfb998"
        },
        "item": {
          "id": "1565ebf2-d7c0-497e-a4c6-b1017e67cbf9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "98defcd9-3135-43ca-bf88-f59de1e74a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c66088-9a77-4d5e-bc31-703e63065272",
        "cursor": {
          "ref": "30e0bf05-6130-4f77-b3a3-baf19b1e9574",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b71fd2b3-c5f9-47e5-aab8-bac36ca57064"
        },
        "item": {
          "id": "e3c66088-9a77-4d5e-bc31-703e63065272",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e0c9f1cb-71cc-4739-8b88-03481de7c904",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d6f75e-2bb1-441c-a4b2-81e31869dd2a",
        "cursor": {
          "ref": "4dfbfd7a-c03f-4e40-bd6d-22b54b57b7e3",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f9d60b02-9234-4881-9ecf-e764dc370e43"
        },
        "item": {
          "id": "35d6f75e-2bb1-441c-a4b2-81e31869dd2a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e4a5e03b-d798-4595-b8c2-23fbe3d9bd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d18daa-a9c6-4af3-8fe5-c67150edf86e",
        "cursor": {
          "ref": "15b0bd8a-a267-4012-80d6-a0145fcb1369",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "982de1e3-aeb6-46e3-9fdd-5cfa435393fe"
        },
        "item": {
          "id": "34d18daa-a9c6-4af3-8fe5-c67150edf86e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1ce149aa-0ba7-452f-962f-aa1a0e11ffc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992d2793-0abc-4089-965a-58ae4aba3555",
        "cursor": {
          "ref": "46772158-b6b6-4c35-875d-29a80e1b4c97",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "92a34c5d-f9ea-4cbc-94a4-f030da1d9a13"
        },
        "item": {
          "id": "992d2793-0abc-4089-965a-58ae4aba3555",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8768a1c7-24ed-4e80-aa68-31a1e87be321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a03fe4-630c-4ab6-81c9-d8d70c92eb5c",
        "cursor": {
          "ref": "e6f54e65-876b-4bab-8b99-109e05d3c50d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e0763796-1b79-4d36-9f74-d5544fcd6ed7"
        },
        "item": {
          "id": "82a03fe4-630c-4ab6-81c9-d8d70c92eb5c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1956f574-b9f2-4ee9-9c17-39b7c1ae09d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45963a1-dbce-43c6-aba9-b8a8a0b8df4a",
        "cursor": {
          "ref": "f70e6451-9355-4b68-8a10-0b37ff93dfcc",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b2f74bcc-d752-4b83-9219-a9ff0f6ca03e"
        },
        "item": {
          "id": "e45963a1-dbce-43c6-aba9-b8a8a0b8df4a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d547aa50-c2b7-4ae4-8792-61974e8526e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83256ce-8695-4568-836e-3e2f05ef4801",
        "cursor": {
          "ref": "cc98ca53-eec0-4221-a944-f82c7768710a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "69b131d4-1ef3-4e83-8677-62172b6c7980"
        },
        "item": {
          "id": "c83256ce-8695-4568-836e-3e2f05ef4801",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c4faba4b-5ba7-4a14-9695-2c6c48e6eb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5189a085-f3e5-411c-be4e-dec1f029dfca",
        "cursor": {
          "ref": "2eba5bb9-41e3-4565-8b7f-091d81553526",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "93dd02b6-0ace-41d4-8523-8f3f658e1388"
        },
        "item": {
          "id": "5189a085-f3e5-411c-be4e-dec1f029dfca",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4f1ce84e-6973-4b0d-85a9-905c6f358b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1364f009-7651-4874-a910-6d92a4ae40a5",
        "cursor": {
          "ref": "c5beae4f-53d3-480e-b35f-9fcd16a92b74",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f84bca31-b126-424c-a7fb-ee1e0cfab699"
        },
        "item": {
          "id": "1364f009-7651-4874-a910-6d92a4ae40a5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "16574924-f031-476a-b8a1-04556a9f9f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93936a7b-e925-4423-9298-915eb3fe82a2",
        "cursor": {
          "ref": "0ebb09cc-e141-43a4-a8f9-ffdfa929d5e0",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a6d768e6-13fb-4f64-8300-62e58ecf2b08"
        },
        "item": {
          "id": "93936a7b-e925-4423-9298-915eb3fe82a2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9608b583-48ba-4cb4-8a41-48b22d3d7aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c041d20-d06d-43da-8207-6152c8407ced",
        "cursor": {
          "ref": "1d1e4f2b-dca2-4f2c-9cd1-46a0dc3bbf39",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f817fbab-6bb2-49da-8e2b-721f5d6a6b66"
        },
        "item": {
          "id": "5c041d20-d06d-43da-8207-6152c8407ced",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2647bb90-3951-4e1c-b327-513311159758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a337c12-c3cd-481c-8ef5-42f20a72fbea",
        "cursor": {
          "ref": "191e9630-5d45-4a4f-9e62-aa5a987a0db6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ec6d151c-4951-44af-8847-63745c07643d"
        },
        "item": {
          "id": "6a337c12-c3cd-481c-8ef5-42f20a72fbea",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ae6b4380-837a-4c33-a9b1-6523a902a3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d5f49f-7dc0-495a-a6e3-0d9893b4ce66",
        "cursor": {
          "ref": "d823bf70-be1c-4975-af7a-2cd35ef4ec3d",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6e93dfe2-fa3f-4f58-b650-0b98c3cd59b2"
        },
        "item": {
          "id": "d9d5f49f-7dc0-495a-a6e3-0d9893b4ce66",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8e04de0f-98cd-4f56-88e3-b30c9e42e9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743d2165-046b-4f43-8fa8-43b980674266",
        "cursor": {
          "ref": "4ecd263b-3b15-40a8-8e01-44a103a1da3c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9fed5650-7bec-4d75-b88e-ae3d9e9bb564"
        },
        "item": {
          "id": "743d2165-046b-4f43-8fa8-43b980674266",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e05b0c40-35df-4419-bd7d-7ff5359228aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdb9d1e-e104-4ce7-ae86-a127c6a64571",
        "cursor": {
          "ref": "3f19b72d-9f54-4b71-b094-caa59eced384",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0ecdd02c-87ad-4802-a0a1-c99d01cbb163"
        },
        "item": {
          "id": "9bdb9d1e-e104-4ce7-ae86-a127c6a64571",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d38f4bbb-c4d3-441e-b822-72f1aee4243b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0c9455-c528-4a32-a3fd-cdd9dd70db25",
        "cursor": {
          "ref": "1c3ccce3-7f7c-4bd2-853a-da4874c7d7fd",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "596395d3-ea5d-4c6b-be46-a604f63fec1d"
        },
        "item": {
          "id": "1f0c9455-c528-4a32-a3fd-cdd9dd70db25",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7b8e4eb9-d5dd-4cb0-b215-b13108263f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c21be9d-c00a-4712-8d79-193f2fded6c1",
        "cursor": {
          "ref": "98f30aef-1259-4eff-b1bc-2daf65eb75e7",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a8df6bce-fbd3-4f91-921c-b9da20c2fe57"
        },
        "item": {
          "id": "8c21be9d-c00a-4712-8d79-193f2fded6c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b5dda4b1-d2e7-4db4-ac97-ff040801dd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39df7216-490c-4455-8296-06ff5805521e",
        "cursor": {
          "ref": "2dc5c5f1-8c7e-4837-b620-598c41877202",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "80bda6ee-0d7f-4328-95e9-8ec90eac5732"
        },
        "item": {
          "id": "39df7216-490c-4455-8296-06ff5805521e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "900a2dcd-3d66-408b-a5ee-880601df4254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abcabbd-47e3-464d-93bc-fe1e628438bf",
        "cursor": {
          "ref": "1deb1477-7849-46f5-98f6-c079b0614f58",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6d103e16-9848-4bd3-b239-7b214ccb088c"
        },
        "item": {
          "id": "2abcabbd-47e3-464d-93bc-fe1e628438bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f790356c-abc5-4744-aab9-022ae3ea508c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782ebe93-287b-4d76-a27c-e02fedc7430f",
        "cursor": {
          "ref": "2d1df56c-df19-4550-bb11-ae02e725fde4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fc8f1ad6-d9a0-4b43-b35c-febe9635f7fb"
        },
        "item": {
          "id": "782ebe93-287b-4d76-a27c-e02fedc7430f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bf306af8-0c5f-4fc2-8c6b-3af485dad7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96d5fc6-a926-4f1b-99a8-7180d9d1313b",
        "cursor": {
          "ref": "3dd67679-8f39-49b5-b77a-a0deba95900d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "900b2b7d-e020-44aa-a4e4-f7b071dedc25"
        },
        "item": {
          "id": "a96d5fc6-a926-4f1b-99a8-7180d9d1313b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "daedd0e5-30ff-420c-98a9-c89f927bade2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8702f3c1-03c9-4efb-870e-01d64b9a0030",
        "cursor": {
          "ref": "35c0b98f-eee7-4b34-aef4-a2b344751f66",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ad99baa1-e954-46b8-a00a-6b2e4daf5b5e"
        },
        "item": {
          "id": "8702f3c1-03c9-4efb-870e-01d64b9a0030",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e5e66a36-44f7-4198-a353-5a36428ed149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faacd084-e621-4b25-ad18-9b9255d17753",
        "cursor": {
          "ref": "78d9f94b-e5c0-40d0-bfa8-357b74133f8e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5d2ad3cb-8bc8-4b1d-b6c9-e9bbbb31b1f1"
        },
        "item": {
          "id": "faacd084-e621-4b25-ad18-9b9255d17753",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "41bc5485-b615-4c78-a58a-b1eababa9ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b69f329-f60c-4775-a3f4-037be6ad6455",
        "cursor": {
          "ref": "8ca37a83-15b3-467d-8d01-d0a33a9a0315",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6465fc82-cf13-4376-b081-7c225ebe33b5"
        },
        "item": {
          "id": "3b69f329-f60c-4775-a3f4-037be6ad6455",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "70fcd25a-efe4-4f7a-88b4-d88cdfc20447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4016a14-66e2-4603-936f-bf400a38b2f7",
        "cursor": {
          "ref": "db0db8aa-e601-4638-9f4d-c6e068c496ff",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "252ef494-643a-44be-95b5-24c1377f57ad"
        },
        "item": {
          "id": "f4016a14-66e2-4603-936f-bf400a38b2f7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a438af88-035d-4a1e-a0f3-94f3442f9781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed81c7a-3982-44ca-aa14-be54c1adccd8",
        "cursor": {
          "ref": "a2131cae-2974-46cd-9c70-024273065ac1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "33b6a94f-bf57-4e20-98e9-cb1e90ae8e11"
        },
        "item": {
          "id": "6ed81c7a-3982-44ca-aa14-be54c1adccd8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "367888cc-d11b-42ff-952d-443ab6f0aeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06506018-bec7-41ae-967b-677e6b8dadd8",
        "cursor": {
          "ref": "a0055f59-9447-4697-9d76-a57684bfeb36",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "52035c5c-7266-4ee0-8be4-aa82d8cadf5c"
        },
        "item": {
          "id": "06506018-bec7-41ae-967b-677e6b8dadd8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "05efae0a-aafd-476c-be1c-45eccd298f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939af523-6042-49d3-9001-e1d228d544cb",
        "cursor": {
          "ref": "39ebc134-cce2-4533-9c96-cc2224738395",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "42cb38db-69c4-4948-a933-618f6f8b8d41"
        },
        "item": {
          "id": "939af523-6042-49d3-9001-e1d228d544cb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5fa94560-df14-4596-b631-fbf2555e9e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae9696a-20e7-4963-b720-ee1e41e467f5",
        "cursor": {
          "ref": "d3fe2c68-e67d-4279-8cb9-0bcbd0e9f4f9",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d116bd0a-114d-420a-a86b-e826d1390399"
        },
        "item": {
          "id": "9ae9696a-20e7-4963-b720-ee1e41e467f5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d0740d7a-c03c-4232-b3f4-27755f595537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7de4da4-3405-4666-84a0-827a2d957e37",
        "cursor": {
          "ref": "8856590f-3a33-4cff-bc55-fe1d04dc373f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "903e0272-012e-4289-8c00-900ebac09443"
        },
        "item": {
          "id": "e7de4da4-3405-4666-84a0-827a2d957e37",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ffc84e03-30ee-47f5-96dd-f91f787c60d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed91a826-039f-4a30-8685-01672c0ed323",
        "cursor": {
          "ref": "f1544eb5-5862-4ab8-89dc-322a89a50fb1",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8347c3a7-c203-43c2-abf7-ff4ed92c92ac"
        },
        "item": {
          "id": "ed91a826-039f-4a30-8685-01672c0ed323",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3db79794-c937-4de6-a949-2ff6f9b6ad73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852c24f2-3543-401f-9c8c-64eb4ef072d8",
        "cursor": {
          "ref": "7b3e5cea-d40d-45e2-a5f9-b78ceb2b60a7",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c8ff1121-d124-4665-bf4a-f1b0cd15a794"
        },
        "item": {
          "id": "852c24f2-3543-401f-9c8c-64eb4ef072d8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4de352df-db75-43de-b580-8ff0d1266488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc6aa9c-c5cc-4b84-97d5-7ffb2da6bc3c",
        "cursor": {
          "ref": "933d67a1-b0e9-48fd-a1a7-437f982c865d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "17792ea7-e8d6-404d-9063-934c88f465c7"
        },
        "item": {
          "id": "bfc6aa9c-c5cc-4b84-97d5-7ffb2da6bc3c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "70938e91-47cb-4ad1-9791-0c9d905ae0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab23f3d-8fc6-4a1d-b6e4-fc08242d40ab",
        "cursor": {
          "ref": "b3ecfa8a-1fea-4c70-b2ca-71e92f1bdaec",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a38959dc-ed49-45dd-a308-ebce1af8b9ec"
        },
        "item": {
          "id": "bab23f3d-8fc6-4a1d-b6e4-fc08242d40ab",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f602118e-0448-4043-9233-0ce3729e7486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8477439f-ca7a-4151-8b33-6a5cf4537a5e",
        "cursor": {
          "ref": "37903584-bf9b-4a96-9a92-516f8152ff46",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a9658ed7-2b02-4852-8774-47d0afb2d121"
        },
        "item": {
          "id": "8477439f-ca7a-4151-8b33-6a5cf4537a5e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ff4b8d1f-2092-4f60-9907-62dc319133a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4f99a3-721c-4f5a-b884-44d980f4fa27",
        "cursor": {
          "ref": "b3432718-4640-431b-a800-9d5e89ab9561",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fdb5c00d-ebdc-45b6-adf9-a868fee3abb3"
        },
        "item": {
          "id": "ed4f99a3-721c-4f5a-b884-44d980f4fa27",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "70afbbb3-b12c-4e51-8041-4ce031a44315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced457d9-3f4e-4d5c-97ad-77e65a7e50cb",
        "cursor": {
          "ref": "5ecca711-0ec6-4c81-b24a-47af322b6cca",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6c484764-837c-4655-a1cf-73ae4448a869"
        },
        "item": {
          "id": "ced457d9-3f4e-4d5c-97ad-77e65a7e50cb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1393b140-b45b-4759-8762-207208f9ef19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a686d3af-ddd0-4c39-9fc5-206f9f925206",
        "cursor": {
          "ref": "f10b3afd-91be-4496-922e-10c96e322e7a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "57f7f3a8-9f83-4f7a-8afa-4cd55fe2d7dc"
        },
        "item": {
          "id": "a686d3af-ddd0-4c39-9fc5-206f9f925206",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1b43cf81-16b5-4651-b464-16cbe05b58bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf526765-72bf-4407-baf8-42ac46fd3d8b",
        "cursor": {
          "ref": "a3be5946-c1f0-47a6-959c-59d821da1682",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "42393470-d4c5-4347-b2d9-a8c5ac523de5"
        },
        "item": {
          "id": "bf526765-72bf-4407-baf8-42ac46fd3d8b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "92d42be8-e59b-4312-b451-083b27c16294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d262c9-d3ab-47b2-9626-3689ff84dab8",
        "cursor": {
          "ref": "bd89bedd-5344-45aa-819c-45ff3536fd19",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a52c34e9-9c9e-4312-aa39-a1f4d168ab07"
        },
        "item": {
          "id": "47d262c9-d3ab-47b2-9626-3689ff84dab8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4af961b6-aecc-48ae-bd95-d62e4bb5f009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35aa2728-a5aa-430d-8c09-a970ffef4987",
        "cursor": {
          "ref": "179cbb2e-5c1f-4f3f-b144-c396c7bd4547",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "348d5fe1-4b16-4c6d-bdbe-0bbf3f06c932"
        },
        "item": {
          "id": "35aa2728-a5aa-430d-8c09-a970ffef4987",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f70d0795-9367-412a-8e25-1a55cd37be1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcfc429-2cc7-444c-861d-dbdaea2b1817",
        "cursor": {
          "ref": "08a8e76a-c562-4458-9717-0ff1028cd79a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "baffbac5-2172-4672-ba02-79c0579cb4d6"
        },
        "item": {
          "id": "cbcfc429-2cc7-444c-861d-dbdaea2b1817",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "55c3d32b-9e91-4543-8084-8cecb03cf8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fc3c34-c73a-46db-8b8a-5aa31f4c78ec",
        "cursor": {
          "ref": "70aa0990-e368-4091-a783-d9a51bb4f0cf",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "22851988-2e82-4130-84d0-637575ba8376"
        },
        "item": {
          "id": "24fc3c34-c73a-46db-8b8a-5aa31f4c78ec",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "049a6895-4939-462b-b18e-e1ef1eda0b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c022c627-b49f-4122-a4ab-b74079b6fb16",
        "cursor": {
          "ref": "2e4ff1f3-67e3-4825-8d9d-07b9bdb096f3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f68af4e8-ef6f-4b7d-95ec-093911a0269e"
        },
        "item": {
          "id": "c022c627-b49f-4122-a4ab-b74079b6fb16",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "de2d20a8-aed3-4f58-a91a-d7bc0ac27ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166ca6ea-aa08-4364-bdbc-40dcf2c385de",
        "cursor": {
          "ref": "86ed6377-ab89-45b4-8e88-9cac86a0b078",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a9892df7-af67-4e3f-ac5f-2f3b005c2bf4"
        },
        "item": {
          "id": "166ca6ea-aa08-4364-bdbc-40dcf2c385de",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f682f06e-ac9a-479b-8fbf-b4d9c03c09f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27131d79-5a98-4ea4-96d2-a8db23013c48",
        "cursor": {
          "ref": "162e6560-ca4b-48ae-a3f6-cb07575c15d3",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "48a74e9c-6ce2-484e-84c8-ac3bbfceaa6d"
        },
        "item": {
          "id": "27131d79-5a98-4ea4-96d2-a8db23013c48",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8356f755-b3a1-4caa-a374-3a498414af80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d0e8b1-6d3d-46d9-a6ed-f1215d43cd2e",
        "cursor": {
          "ref": "e3bd21bf-6f90-4636-9425-17dda8658ba8",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c5e0d5f3-4981-4149-8680-dac8c6ac0f78"
        },
        "item": {
          "id": "81d0e8b1-6d3d-46d9-a6ed-f1215d43cd2e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "403d70b0-b32b-4f3f-bc60-23432583d4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f110962c-ace1-45a7-ae02-cb69f589ba10",
        "cursor": {
          "ref": "f55359dd-a7f5-46cb-a8ae-f77930b769bc",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "08432d44-a0f1-46f8-ba8d-239a2bf93635"
        },
        "item": {
          "id": "f110962c-ace1-45a7-ae02-cb69f589ba10",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e21f4afd-3b79-4908-91aa-a18d9c3ed202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de65415-5a78-4d21-86f8-4d9502d59cb3",
        "cursor": {
          "ref": "94171106-abf7-4d5e-87e4-dac1ecb91888",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ec23975a-4c15-4a38-9fac-22c0ac00993a"
        },
        "item": {
          "id": "8de65415-5a78-4d21-86f8-4d9502d59cb3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "529cd7fd-1c63-4f7e-8a92-c59e1c96930e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4b2a67-8d19-4c33-96e8-7fbe6db2452b",
        "cursor": {
          "ref": "f276df57-4cc5-46fa-bddf-ac76f0de3a55",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "22ecabd2-dd97-4aa5-a4ba-0b9ca0a6426c"
        },
        "item": {
          "id": "4e4b2a67-8d19-4c33-96e8-7fbe6db2452b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4d92ae24-e705-409b-be76-5facc838b861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae14161-b906-4a88-a7d2-6377d90920ce",
        "cursor": {
          "ref": "6b5b6f3b-cfe4-45c4-99d3-b58ac85abe47",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3898baae-889f-4ae3-ac62-11a5a46b3576"
        },
        "item": {
          "id": "0ae14161-b906-4a88-a7d2-6377d90920ce",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8c236095-cea4-42f6-93ae-f8587614d6af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71838f41-cefe-4a65-a7fb-b29ed47b2bfa",
        "cursor": {
          "ref": "ae986856-f5d0-4628-8e94-f8cdf4584daa",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "597aba13-7979-4405-9656-8c0b30c6ef45"
        },
        "item": {
          "id": "71838f41-cefe-4a65-a7fb-b29ed47b2bfa",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0bad4076-6554-4be7-8a9d-5114f9412e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f0390444-ab35-48e8-9cbe-4ab71b8a558b",
        "cursor": {
          "ref": "a3c4722d-de46-4b48-9dac-7eb8fe3758f6",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "51b5a63d-3c26-4e39-93a3-ba42b8c65ef2"
        },
        "item": {
          "id": "f0390444-ab35-48e8-9cbe-4ab71b8a558b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "88a5fa0d-a3c9-4e8f-ba6e-66ef7ce180b7",
          "status": "Created",
          "code": 201,
          "responseTime": 10709,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "275a5e81-6514-4f90-a6e4-fe0a30fa67c8",
        "cursor": {
          "ref": "3f4cb35b-39aa-4bda-b0f9-948305ae450b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "15884d54-a374-47d9-9b2f-6b1729302138"
        },
        "item": {
          "id": "275a5e81-6514-4f90-a6e4-fe0a30fa67c8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "409fedbe-3826-4c0a-935a-fbde875ad481",
          "status": "Created",
          "code": 201,
          "responseTime": 9610,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e777a2-9795-4033-ba69-2bfc17dcc338",
        "cursor": {
          "ref": "e0c394ca-60a1-4afd-a970-de270d189e88",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b2004ece-55af-443b-abbd-ac18b4edbd7b"
        },
        "item": {
          "id": "99e777a2-9795-4033-ba69-2bfc17dcc338",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c069d818-b4fc-4b35-8a55-e041b1b1e7b4",
          "status": "Created",
          "code": 201,
          "responseTime": 9759,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a36286-d4cf-42ec-a8c2-fe9b58a62958",
        "cursor": {
          "ref": "98bbcb8a-01ee-40a9-b58b-1bce356fa781",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bab07496-40d8-45e7-802d-24a4c9338893"
        },
        "item": {
          "id": "b0a36286-d4cf-42ec-a8c2-fe9b58a62958",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c6851836-b07b-4301-a42d-a39c4413f84a",
          "status": "Created",
          "code": 201,
          "responseTime": 9869,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "722dffa4-417d-45de-9082-7a33eb83a20c",
        "cursor": {
          "ref": "d8aeb962-9f5d-45de-a003-0d1f1bc4470e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8124c78c-79ca-4c15-aac5-d95b77c06ca9"
        },
        "item": {
          "id": "722dffa4-417d-45de-9082-7a33eb83a20c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "76040406-f987-484c-abcc-1eab78268a76",
          "status": "Created",
          "code": 201,
          "responseTime": 9681,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-07-09T00:40:16Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-07-09T00:40:16Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "26a8fe54-73d6-4553-893d-a107aef00979",
        "cursor": {
          "ref": "f6e84d10-42a0-43b1-b628-6500f76f4413",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4bcb6272-b94a-4c08-9f22-ae5e4a9e248b"
        },
        "item": {
          "id": "26a8fe54-73d6-4553-893d-a107aef00979",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ce061b84-9446-4efd-99fc-f2a717eaa7fe",
          "status": "Created",
          "code": 201,
          "responseTime": 9653,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f884d062-54d0-4382-825f-775774200165",
        "cursor": {
          "ref": "1a4ac021-fc4d-4bc5-af84-6796e0ddba17",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "90856dcb-e5c0-4cf9-9701-fa359a2dd55b"
        },
        "item": {
          "id": "f884d062-54d0-4382-825f-775774200165",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "abe9a74f-ce17-4d2e-93ff-63eb6d05fdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5668ad1-ccb3-47a6-b33c-754e47497c01",
        "cursor": {
          "ref": "0bd4f4ee-6713-4c63-9b72-bc94e70a6ea2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "58b1ff62-19c3-4177-bcd8-a588c6a128b9"
        },
        "item": {
          "id": "d5668ad1-ccb3-47a6-b33c-754e47497c01",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4a197fe7-62da-4fb5-8399-36467404a63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce01df3-4c88-40e5-b246-153b129b1dad",
        "cursor": {
          "ref": "1ab00315-27ce-4f13-bcb5-93119bdff385",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "09f745b7-bd86-4d4c-9c3f-909f95ab1f76"
        },
        "item": {
          "id": "1ce01df3-4c88-40e5-b246-153b129b1dad",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "481548a8-cba7-4a64-bf59-a64a696b55a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8831cbf4-8374-4850-b568-3d99a58db37b",
        "cursor": {
          "ref": "3724b951-14cb-4236-b0c2-e3692b132446",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c9001139-1b4b-461d-ad78-20dc71667863"
        },
        "item": {
          "id": "8831cbf4-8374-4850-b568-3d99a58db37b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0a440ba0-8879-4a2d-bf17-2d8a0ee81045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdee4a7-1cfe-412a-9714-d406690e7555",
        "cursor": {
          "ref": "3803b45e-4b82-44b9-a0e8-8d45413a1b58",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "99481bcb-1a29-451f-bc3e-5bc2f827f887"
        },
        "item": {
          "id": "dfdee4a7-1cfe-412a-9714-d406690e7555",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "242b5a20-872b-47ba-88f2-045eb25c9a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa33f626-67ec-4b14-95c8-089d5721188a",
        "cursor": {
          "ref": "6ea03f18-1bf6-43d4-b27b-f4014b563dee",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8049c405-c569-4943-bb97-d7136d7310e9"
        },
        "item": {
          "id": "aa33f626-67ec-4b14-95c8-089d5721188a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d0257c11-9348-4b2f-8ce4-a3143ae34ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f54aa3a-d3d3-4c1b-b4f2-06deda50b1a6",
        "cursor": {
          "ref": "04f19d2c-93b7-4740-8460-36e26d4a1da1",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fde17b1b-573a-482c-b6f1-002e49a070ad"
        },
        "item": {
          "id": "0f54aa3a-d3d3-4c1b-b4f2-06deda50b1a6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2472616a-5da0-4199-827d-6e916a937c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0650f5fa-b174-467d-b27c-e07e8feb66f8",
        "cursor": {
          "ref": "b2991c11-794e-4f5c-8e66-c1b56de6e0e6",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "aec9b634-8845-4b6e-9851-53aa975aa5ad"
        },
        "item": {
          "id": "0650f5fa-b174-467d-b27c-e07e8feb66f8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a274b94e-ef78-464c-9d0c-c999d0d32ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51eec8bf-4fd7-4966-abef-9b6d20beec3a",
        "cursor": {
          "ref": "fb27eedc-d78d-4ac7-b928-9703fe171f3e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "98add644-c3ba-40bb-823c-2b4eb2fd62ae"
        },
        "item": {
          "id": "51eec8bf-4fd7-4966-abef-9b6d20beec3a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f030805d-ed9c-48fb-8a88-e01b03691599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9c8e8a-0f30-4f20-b0e3-04ce4b0c55b4",
        "cursor": {
          "ref": "3663b9c4-b449-4e1e-b19e-78872a884dbb",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6bbb87c4-591f-4609-954c-f284f548d9b9"
        },
        "item": {
          "id": "cb9c8e8a-0f30-4f20-b0e3-04ce4b0c55b4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1d133230-0117-4a15-a72c-a79cc4846aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8df441-d1be-4ffa-aa17-bceb67342e2a",
        "cursor": {
          "ref": "a2eae325-3a63-477d-ab05-fb1677227e12",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "930732b6-0b4f-4e5c-b42c-ce5a3165e055"
        },
        "item": {
          "id": "2b8df441-d1be-4ffa-aa17-bceb67342e2a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ff29691f-5c6f-4ea5-85f4-14a702695f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c548fc1-e837-417a-ba6b-a71ea74536b1",
        "cursor": {
          "ref": "2bc97c65-eab1-4f42-b21c-f69265f3818a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "73fedf51-b398-4846-9848-60bede55ddd8"
        },
        "item": {
          "id": "2c548fc1-e837-417a-ba6b-a71ea74536b1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f956600c-61c5-4892-a262-3961e92c43e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a7d548-b5d4-4a08-b763-05ae63aa92c4",
        "cursor": {
          "ref": "44a831b0-56e4-429a-a2d6-f0c118379b6f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b1aa0895-8fca-46a5-b059-57750198522f"
        },
        "item": {
          "id": "d6a7d548-b5d4-4a08-b763-05ae63aa92c4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4f1f82c5-3fc8-4999-8c33-c94cc4fdfc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d02475-7182-44cb-b883-a3881e004c31",
        "cursor": {
          "ref": "c280c4c1-519a-4f9e-8699-ed874de20648",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8aed62f5-7ab6-4c2a-8106-b993e8f48979"
        },
        "item": {
          "id": "21d02475-7182-44cb-b883-a3881e004c31",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "83143f3e-b0cd-4fbc-8420-d598f7a0362d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb03b73-19c2-4f63-968e-4f4176edc7ef",
        "cursor": {
          "ref": "97d3b48e-8170-4119-8843-945372b99f76",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "046e8b61-eb12-40e8-a29c-80b32da08e3a"
        },
        "item": {
          "id": "2fb03b73-19c2-4f63-968e-4f4176edc7ef",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "38001a02-a357-4481-a12f-15084c1a329f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477517ee-c88c-4695-859f-80953fe59cac",
        "cursor": {
          "ref": "63818736-0bd9-4d76-9604-9649689b9589",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "757ab8ac-73f6-4fdb-878d-e31842350cd8"
        },
        "item": {
          "id": "477517ee-c88c-4695-859f-80953fe59cac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b5f5a6f8-a4d2-40c3-a420-904db6eeca83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea3c38d-f16f-41d2-a005-6136caf2d0bd",
        "cursor": {
          "ref": "d9fe0600-f955-4d6e-a108-a4e2c22b6683",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ab707e7c-d0d9-4055-a194-cee52da6507b"
        },
        "item": {
          "id": "1ea3c38d-f16f-41d2-a005-6136caf2d0bd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "39610e07-6b34-4f12-bda1-d4500965c328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cd8f98-db64-40ae-8717-bf0b2d6f07f8",
        "cursor": {
          "ref": "fa9dc516-7e22-41dc-9b51-1f423241145a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "50eefece-b45b-4f72-99c3-b1c625625ceb"
        },
        "item": {
          "id": "b8cd8f98-db64-40ae-8717-bf0b2d6f07f8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f1aa063e-727a-491f-a8b5-619685eebc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfd7281-642a-4f8a-9352-65bd3675ca4c",
        "cursor": {
          "ref": "d214e321-e216-457c-adcd-560a97c15364",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b362c93f-83a2-4fb6-98ea-9bb9de93a01a"
        },
        "item": {
          "id": "9bfd7281-642a-4f8a-9352-65bd3675ca4c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6103c441-266b-45e3-8bb8-2314edbe640d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a377edf1-5393-436c-9456-7f2e4baab4b1",
        "cursor": {
          "ref": "f2a671af-c3c7-4586-8a9a-4c55808835a3",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0fe93ace-b640-4ba5-b84a-c05245197a40"
        },
        "item": {
          "id": "a377edf1-5393-436c-9456-7f2e4baab4b1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ac58daa3-2f79-4dfd-9a11-3ef9464520bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7e95e7-88e7-48e1-bf01-de21b284c396",
        "cursor": {
          "ref": "cf1b0f72-a7c1-4402-90a5-2b8ef31e1c3d",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4e56f775-a484-4806-8e30-9e1b74846311"
        },
        "item": {
          "id": "9b7e95e7-88e7-48e1-bf01-de21b284c396",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a9a41b85-1c51-4504-bd74-0fca5661f2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561b4e08-9856-49d3-8ed3-134280b1e9a5",
        "cursor": {
          "ref": "63450980-d5d8-4988-b4cd-8b12e818b630",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4ac466b9-0918-4e56-8816-e6b54589d72d"
        },
        "item": {
          "id": "561b4e08-9856-49d3-8ed3-134280b1e9a5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c053162a-1ffc-4f26-9172-567d989489cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75dbd41-53f5-4d76-a40d-3299734f069f",
        "cursor": {
          "ref": "a5504aa2-3f36-4ace-baf5-6759590ecaf0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6755e896-90da-4bc7-809f-c500063afef5"
        },
        "item": {
          "id": "f75dbd41-53f5-4d76-a40d-3299734f069f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dea9e9b3-2c45-468a-9072-fa6afe3b8261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48bcaff-8140-4490-96b1-a93e85c88061",
        "cursor": {
          "ref": "395c373d-b244-4402-a8f9-1054fb467d6c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9671b575-d1d8-46cc-88fc-723aec595694"
        },
        "item": {
          "id": "c48bcaff-8140-4490-96b1-a93e85c88061",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c4f75d38-1d69-4ad8-a136-708b18778e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ba4984-57fb-4c1c-9e2b-6a10fd49d3d3",
        "cursor": {
          "ref": "5666901d-8cd5-4b4b-9c70-28c45f3f53f6",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "233a27b8-3e96-464c-8378-6ba6faa2b11a"
        },
        "item": {
          "id": "68ba4984-57fb-4c1c-9e2b-6a10fd49d3d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8c58c5f7-4d7b-4d1f-8a8a-66ff3c186146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f05ed5e-9633-4c65-9114-4182192b44d3",
        "cursor": {
          "ref": "8b59076c-1cc5-440a-878a-59b5a6672d56",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c8c1a975-9c7d-463a-be00-962d3667edd5"
        },
        "item": {
          "id": "1f05ed5e-9633-4c65-9114-4182192b44d3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "130bf413-8794-4cd7-937d-828553899cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beeb50d3-5d3f-4835-90c3-deac1789382d",
        "cursor": {
          "ref": "87fdc81b-5424-4bc3-b35f-7ac25ef8f84e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bc4a207f-0e0b-4546-89bb-7cbab33c776f"
        },
        "item": {
          "id": "beeb50d3-5d3f-4835-90c3-deac1789382d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d295cc73-278e-4c10-8add-0c84df7933c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225641d7-1371-41e2-8bac-2bb512f677b3",
        "cursor": {
          "ref": "3729db3d-e075-4984-b407-b5cd77ffc635",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a647cdb5-1d17-41d6-8198-855e7baeeeb0"
        },
        "item": {
          "id": "225641d7-1371-41e2-8bac-2bb512f677b3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "504a3bca-64d1-401c-ad65-27253c49b376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c0c659-c7df-41eb-90ba-e31b2b2b46db",
        "cursor": {
          "ref": "0dc1a251-3b93-45cd-bb75-08521cd4bce0",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "90e6bac9-bfca-47b9-8a15-3300047b7fbc"
        },
        "item": {
          "id": "87c0c659-c7df-41eb-90ba-e31b2b2b46db",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cb2e4c0d-ec4c-43d6-9a73-c3dee834aac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d2bd0b-d484-4d77-a4be-4ecc6204d7a3",
        "cursor": {
          "ref": "f9b1be3b-2945-40a7-a546-fcbdeaa359c7",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f6ddb8e0-ecb7-4356-9c0b-296ecac4cf58"
        },
        "item": {
          "id": "c2d2bd0b-d484-4d77-a4be-4ecc6204d7a3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "30147dd8-0e85-4221-a522-4db248cc693e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cafb95-b0ef-4d8f-bc09-e327abf3d8ed",
        "cursor": {
          "ref": "74962428-f1bd-4a65-a99a-bebe748b434f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b41999eb-94dd-4995-85bd-92bfb465d571"
        },
        "item": {
          "id": "04cafb95-b0ef-4d8f-bc09-e327abf3d8ed",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "53b38713-5359-4c5a-90c8-abba05bdb124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0834135f-0c23-429b-a485-a4a1a41c03fc",
        "cursor": {
          "ref": "4fa50532-c3e8-4af5-9995-3f3a437e9ea6",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "071a986a-b5ba-48b4-a339-c6d49fcca839"
        },
        "item": {
          "id": "0834135f-0c23-429b-a485-a4a1a41c03fc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "57a0d4b3-597f-4a3a-b398-a1251cadbfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d857294-79a7-4267-813e-d9c44b933f0c",
        "cursor": {
          "ref": "c11b0256-6693-4c99-9788-8fdd55dfe2b5",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d3b235cd-1a13-43bb-a61f-cdc01eab2faa"
        },
        "item": {
          "id": "1d857294-79a7-4267-813e-d9c44b933f0c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7d5ab7f9-0bda-4b4a-9b03-c8f483a4ced2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab6dc5b-297d-4579-a127-8693cc984dc2",
        "cursor": {
          "ref": "7ac9e80b-f574-407c-8c9a-d85f6375ab9d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "49f91e0b-d082-43d8-be91-c86805b0f02e"
        },
        "item": {
          "id": "8ab6dc5b-297d-4579-a127-8693cc984dc2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "01fe8f3b-58e8-43c7-a582-40ef589e5a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77135ccd-78b4-48b6-9e89-2c9e35db81b6",
        "cursor": {
          "ref": "005da48f-4251-48dd-86cb-de41fae48999",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7410c66a-0f6b-4256-8cd1-f85c4cbb238d"
        },
        "item": {
          "id": "77135ccd-78b4-48b6-9e89-2c9e35db81b6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9bf6ce9b-22f9-49de-9cbe-1a5af8512c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0609049b-318e-4f04-9b14-059e1bb70103",
        "cursor": {
          "ref": "989af777-dc5c-4744-be2e-778d29a8a4f6",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "862b7e8c-6e3f-4147-87df-e9926caecae2"
        },
        "item": {
          "id": "0609049b-318e-4f04-9b14-059e1bb70103",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c4484a08-95bb-4e01-b78c-79d6cb3d378b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fc1cbc-157a-4020-8562-ad6f46023eae",
        "cursor": {
          "ref": "a9777650-5d05-4320-899a-e3a053ebb4ae",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "af021f2c-faac-4cf7-9474-30dbb31b890f"
        },
        "item": {
          "id": "30fc1cbc-157a-4020-8562-ad6f46023eae",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6968cdf9-da80-48f1-8362-568879b980dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca18bde-cb69-4969-9748-7f55d3355f06",
        "cursor": {
          "ref": "3633c3ec-9fa9-43db-a550-51531e0408ee",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8a3d9a8d-4556-4d67-8b2c-d2b2020d1425"
        },
        "item": {
          "id": "2ca18bde-cb69-4969-9748-7f55d3355f06",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6332a229-e8a4-4ed7-93d2-6c629af58f2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a147af12-e9a4-4685-bbfe-84ca80f3b1df",
        "cursor": {
          "ref": "87804cfe-d7c1-4dd1-b9d6-6a00a9ce6889",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a165e551-f3f5-4bbc-ab35-abbc1d76a708"
        },
        "item": {
          "id": "a147af12-e9a4-4685-bbfe-84ca80f3b1df",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8c4d8936-c261-494d-a70f-a7dd866e945c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc638cf1-822e-4d34-89e9-31e5eda075e1",
        "cursor": {
          "ref": "975f8a58-ff47-42c8-b956-1b230f60870d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1d15fb2f-1933-4617-87b6-088fa08afa07"
        },
        "item": {
          "id": "cc638cf1-822e-4d34-89e9-31e5eda075e1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "01a12510-743a-4348-928e-48cecc94b5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bde3dd-404f-43b1-8026-1cfaa4c38b86",
        "cursor": {
          "ref": "ef22626c-6428-4d78-8655-ecd0061d1e31",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "77016363-cb7d-4403-9d80-12c245a2c8fe"
        },
        "item": {
          "id": "76bde3dd-404f-43b1-8026-1cfaa4c38b86",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "03648ae3-6445-4a67-a5e9-e8f4c141d8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364ba1e5-0241-43f6-81a1-5cc9bccf2a95",
        "cursor": {
          "ref": "03f13695-0427-4e1b-9784-fa2db76192e0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2cde7217-b406-45cd-8fbc-53aa555e383c"
        },
        "item": {
          "id": "364ba1e5-0241-43f6-81a1-5cc9bccf2a95",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "39662a9e-93d9-4dcc-abc8-aec10f365a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd41473-6f4f-403e-9c56-498a0510f63f",
        "cursor": {
          "ref": "059e51d7-d197-4517-a6b6-d61c6ff05b7e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e0e4400a-13f7-4e9c-a39b-3c1be38d0f2b"
        },
        "item": {
          "id": "fcd41473-6f4f-403e-9c56-498a0510f63f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a6f87f28-5efa-4027-a3de-e34ddddff3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f13ebf2-fc0f-4c98-9e88-b6e82dd34d2a",
        "cursor": {
          "ref": "735c3c37-eed0-4997-907e-08c9a2512e91",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "aae46e37-2925-4686-80a4-58fd63788fc8"
        },
        "item": {
          "id": "5f13ebf2-fc0f-4c98-9e88-b6e82dd34d2a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a839b05b-1cc5-4e57-8c77-9e071d899324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8228012a-e3f6-4ccc-9cd3-12b4b52117d4",
        "cursor": {
          "ref": "678fa099-ba99-47e5-9d7d-b802349a77ab",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "46de9be8-8814-4165-8c49-8cde4b926b80"
        },
        "item": {
          "id": "8228012a-e3f6-4ccc-9cd3-12b4b52117d4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9fffcfe2-f412-42c9-80b5-21b722456c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed88b0ea-06b2-45e9-a4e7-143a01939310",
        "cursor": {
          "ref": "1f528a96-ca41-40f2-8612-04b8de397d42",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7722bafe-4bf3-44a7-8788-2b0022699c59"
        },
        "item": {
          "id": "ed88b0ea-06b2-45e9-a4e7-143a01939310",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "84d10475-6d47-41cf-8ee7-c0cd647584e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181df9ae-ba5a-431a-babb-b8f568a746b2",
        "cursor": {
          "ref": "4f6a27c9-29ee-4264-9c1e-f00eb8e22610",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "747f9199-251e-4f02-9504-3ac5b54fb946"
        },
        "item": {
          "id": "181df9ae-ba5a-431a-babb-b8f568a746b2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b7622de3-7124-4a1d-a8eb-fb5b3cf7b5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a88d72-065a-427c-9703-e88c0e255594",
        "cursor": {
          "ref": "492ee819-3e25-4ca2-910e-3bf0a906f7c1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "700465a4-ec08-45c0-8e96-03f04598052f"
        },
        "item": {
          "id": "26a88d72-065a-427c-9703-e88c0e255594",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "96bf7645-598b-4995-9967-15dd726cdd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634448bd-d7e5-4d1a-8f3a-8429e3a33696",
        "cursor": {
          "ref": "49c3401a-b07a-4462-9659-3bd0f3124f7f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b05029ad-8d6f-4fc1-9e61-f2d2df54c437"
        },
        "item": {
          "id": "634448bd-d7e5-4d1a-8f3a-8429e3a33696",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "461b8fad-53ee-4fb7-9967-b4b99a625e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc633091-9ca8-4a56-9207-9b919f12c212",
        "cursor": {
          "ref": "aac1441a-9c6e-4bd5-a9bd-2417889d8cfe",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b48bef05-b7bf-400c-b394-48c2df798778"
        },
        "item": {
          "id": "bc633091-9ca8-4a56-9207-9b919f12c212",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c99b2fd4-8605-45dd-ad95-4b3881e5ce4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f084980e-0bb8-44f9-879f-7ad8810b43d5",
        "cursor": {
          "ref": "c36625ba-4bd5-49eb-82fb-565595095c2d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d8dab117-afcf-4859-9135-eea58c611bde"
        },
        "item": {
          "id": "f084980e-0bb8-44f9-879f-7ad8810b43d5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "616ae270-983e-4e8a-9c01-2dd3c3322579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afefec32-3fea-43ce-af95-c2f31998768b",
        "cursor": {
          "ref": "f1d25eb1-3653-4884-aea0-b4c7e5c1e373",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d324358e-0804-412e-8e3b-97dcaa8b88ff"
        },
        "item": {
          "id": "afefec32-3fea-43ce-af95-c2f31998768b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3bad7518-0ff8-4c4f-8af6-621a8921235f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be1ce3c-efcb-4410-b15c-30d65fd0d994",
        "cursor": {
          "ref": "e8f65323-9d5c-468c-880b-4643eb7c21ee",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6c8255d7-384b-46e4-be79-52ffd25417cb"
        },
        "item": {
          "id": "6be1ce3c-efcb-4410-b15c-30d65fd0d994",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bc6b535c-0f75-4594-a789-751f8584e376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eaac62-0f1c-4853-a6d5-b8a889541679",
        "cursor": {
          "ref": "d4bc9458-54d1-45f6-9fc5-b024e1cbbdde",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a50c1361-d5d5-4177-b303-fcddc1deeef3"
        },
        "item": {
          "id": "d6eaac62-0f1c-4853-a6d5-b8a889541679",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c73bb821-f11b-436d-bff2-6d6090fe46cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af9a3bb-c3c3-499b-b69f-cb1ec138b321",
        "cursor": {
          "ref": "93e10c92-7e1f-466d-98a0-ef34b00fef93",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "92c5d483-76f4-4a70-955d-159f48213786"
        },
        "item": {
          "id": "0af9a3bb-c3c3-499b-b69f-cb1ec138b321",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e0d143d5-da5e-4e3a-8d38-f9c1960ac76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9244e064-cd8b-43a4-bd65-37a326f0bd5d",
        "cursor": {
          "ref": "bb8bac23-3dd7-42cd-a25a-5cf21dcb09b9",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7d7867fa-adc2-4bad-919a-72ca6c86dfb7"
        },
        "item": {
          "id": "9244e064-cd8b-43a4-bd65-37a326f0bd5d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "54eb2211-7a7c-4e12-9c6b-061a27adf3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed859f6c-ed5d-4e94-85a1-25d84ddea15a",
        "cursor": {
          "ref": "e4f2ad6a-51e3-4cb6-a7ce-cc27fc5cbdc8",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "29764b9c-834e-4cc2-beba-6390086be2a0"
        },
        "item": {
          "id": "ed859f6c-ed5d-4e94-85a1-25d84ddea15a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d59504e1-c728-4833-93ce-7919c279e5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53843034-12aa-40e5-9aed-281dea0a3612",
        "cursor": {
          "ref": "fcafe109-e6af-439a-b84f-3321315b7dc8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "20eb8869-db6e-42be-9aba-c80fc288df0e"
        },
        "item": {
          "id": "53843034-12aa-40e5-9aed-281dea0a3612",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6798e603-131b-4c0e-9a18-a41ff44f307d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f29589-6b5d-4fb5-adcd-da33b0968fbe",
        "cursor": {
          "ref": "e00ad4fd-569b-4cc3-9de4-e5d22dd7454d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1b7a877e-377a-44bf-9938-40052ad02b25"
        },
        "item": {
          "id": "e5f29589-6b5d-4fb5-adcd-da33b0968fbe",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8a222779-d3e6-4910-a4ca-9c9d92894ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeac0bb5-4c31-4781-a901-837c4a5634f5",
        "cursor": {
          "ref": "4e01cffd-5fe8-4ae0-baa4-2f6bb7e79500",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "69a49e8f-ee91-4b30-8623-e10ab1588fb8"
        },
        "item": {
          "id": "aeac0bb5-4c31-4781-a901-837c4a5634f5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "54caa68b-b41c-44f0-9b7d-2f2fb7f32f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e1ce89-5bf6-4eff-9a8e-8c1d8217ae63",
        "cursor": {
          "ref": "c438c10c-d673-45f8-94bb-fd7630faab98",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "20427b6a-fbb9-42b2-a4b7-1f09533548f1"
        },
        "item": {
          "id": "80e1ce89-5bf6-4eff-9a8e-8c1d8217ae63",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a22ac715-d5bf-45ae-81ec-1676ba92534a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1561b846-5f56-4893-960e-5c435e03aa4e",
        "cursor": {
          "ref": "fd4c72bb-a065-4889-a3b2-10f00b138ebd",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "89868990-fd05-4dfb-9ef5-7a8091572dbc"
        },
        "item": {
          "id": "1561b846-5f56-4893-960e-5c435e03aa4e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "81799f1d-c3fd-4dc4-bac0-01b06473b422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d1386d-ba74-424b-bab9-8e44f9e7e704",
        "cursor": {
          "ref": "0b846ecc-58e5-4f26-a397-2a78b7ce0515",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e507f035-d6ed-4b8b-93dd-8a772306336c"
        },
        "item": {
          "id": "b3d1386d-ba74-424b-bab9-8e44f9e7e704",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "077b0c65-c0ee-4d6f-a48c-8da45e82d27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9247ff7d-ebc9-402a-b8df-b3a2c737ca3a",
        "cursor": {
          "ref": "b9e21b8b-9fee-4372-b82f-3a07a0625125",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "857edcb1-2b38-48a2-9eca-721ff885b92f"
        },
        "item": {
          "id": "9247ff7d-ebc9-402a-b8df-b3a2c737ca3a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d61defb1-8a40-4f8b-b4fa-7df8c169c61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d7e35d-61b0-4616-81cd-d400ef4ed6b5",
        "cursor": {
          "ref": "52320fb0-25aa-4c1a-a858-413881dcd883",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f9eb0d36-accd-4a66-9a38-6cf9a6a62eb0"
        },
        "item": {
          "id": "71d7e35d-61b0-4616-81cd-d400ef4ed6b5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c078e3fe-47e5-47b6-a048-91d393323f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3669087e-064e-4d62-9d98-fcc123b97f0a",
        "cursor": {
          "ref": "f55a2ee6-a378-4626-b488-a968461f7a7c",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8ee22642-2254-4465-ad0f-53d534b57d95"
        },
        "item": {
          "id": "3669087e-064e-4d62-9d98-fcc123b97f0a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "13921ed5-df4b-4d2b-a5d0-057934caf945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d3a81b-2362-4b31-8ea0-1e9591169654",
        "cursor": {
          "ref": "35f279a0-2555-4942-a251-308ca168724b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "72695313-4053-4fbe-aab8-6bc7d3a18e5b"
        },
        "item": {
          "id": "a1d3a81b-2362-4b31-8ea0-1e9591169654",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1873d094-a30e-45c5-9f2c-ba2e5e3b17e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6f58db-6598-4406-992e-df1ee70508c1",
        "cursor": {
          "ref": "de8cb11a-0af3-4987-859b-c777aa7d04d7",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "982104bc-eaa9-47c6-9686-6609743c5ae0"
        },
        "item": {
          "id": "ab6f58db-6598-4406-992e-df1ee70508c1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6f857609-6619-42e8-a99a-467e38d4f062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3e545c-e34a-408b-a9c2-6d167e9cb5c7",
        "cursor": {
          "ref": "89c3aae8-3446-4c8b-8b3c-398e11c6209c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "70f5927b-226d-4122-83fa-39c3c3935704"
        },
        "item": {
          "id": "da3e545c-e34a-408b-a9c2-6d167e9cb5c7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d166a91e-d5f4-42c1-997e-a16595c281b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272746ae-540d-49b6-8029-6d7d87490da2",
        "cursor": {
          "ref": "c304a05a-0bce-4adb-be01-2d806318c14d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4dee82ad-d550-468e-814a-f7f26dd4a4f3"
        },
        "item": {
          "id": "272746ae-540d-49b6-8029-6d7d87490da2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bddfed62-a41b-4bbe-9f48-0151e2a6a2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623c8bba-9eb6-4c8c-b1fd-677bcf51b121",
        "cursor": {
          "ref": "f2650268-4428-4911-883a-c2a884f6f8c5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8b44eb63-f89c-4e89-a7a6-3a351be67d79"
        },
        "item": {
          "id": "623c8bba-9eb6-4c8c-b1fd-677bcf51b121",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "33b1bbd1-00b8-4c9d-935c-372a3572a241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c3f93e-c372-4eac-8571-b4122d4e2121",
        "cursor": {
          "ref": "f444bd43-46ce-430f-ba25-855dffbc43e9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "302694b9-d1ec-492c-a6b6-a7ef3789ce1f"
        },
        "item": {
          "id": "44c3f93e-c372-4eac-8571-b4122d4e2121",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cbb8af74-04a5-4842-bfe0-e4991a94978f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d795e0b5-8214-408f-b2d0-e8d1211d8d36",
        "cursor": {
          "ref": "7238c6b3-7aaf-46fc-9190-3b5442eff1c0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f832eb0d-155f-4a7a-b868-dc28868fd9f7"
        },
        "item": {
          "id": "d795e0b5-8214-408f-b2d0-e8d1211d8d36",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ed41f456-a765-4d9e-836e-7847e2af5e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531b5302-3670-4223-bc63-54153102a3f7",
        "cursor": {
          "ref": "6badec32-95d7-42c6-b5cb-964cd40063d1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a7b07ab1-dac5-4a5f-9a99-f4b90d912504"
        },
        "item": {
          "id": "531b5302-3670-4223-bc63-54153102a3f7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cb22bde4-25ec-4f86-8167-9157dcb0260d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3c3943-8832-471a-8456-146d7f6b23df",
        "cursor": {
          "ref": "818319e1-32e3-4921-ae14-b5433db1da67",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d582c3d0-8c3a-4d37-ae09-db15191d132a"
        },
        "item": {
          "id": "be3c3943-8832-471a-8456-146d7f6b23df",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5dac3d60-b5f0-45a8-8e7f-564145167831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e605d826-b0c1-4fdc-9d4e-1d2b083433b7",
        "cursor": {
          "ref": "e4a5246d-fd3f-4d3c-b1cc-80472cd35505",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "42957771-4261-40d9-9599-f7da0d1ddbdc"
        },
        "item": {
          "id": "e605d826-b0c1-4fdc-9d4e-1d2b083433b7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "24d4b65c-ab04-4e40-980b-e1351449683f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e126d79-3512-464d-b185-cdf274dd656d",
        "cursor": {
          "ref": "0ff3a4a7-4e42-42a2-b90a-378d88996996",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0b36e5ce-19bc-499c-adc9-d149dd16489c"
        },
        "item": {
          "id": "8e126d79-3512-464d-b185-cdf274dd656d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2a353fd2-9c4c-48e6-abee-25909d0f7053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb529d2-55c7-4a07-80c5-e4c930806561",
        "cursor": {
          "ref": "3e1a23c2-4672-457e-a867-fc5bc77dac3b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9c9f6b76-20c8-470f-8a04-bdac2225defa"
        },
        "item": {
          "id": "2eb529d2-55c7-4a07-80c5-e4c930806561",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "31225291-3d96-40bb-8330-cd4fe5b6de0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a65fb7-3709-43bf-a3d1-609c13779b2f",
        "cursor": {
          "ref": "fe4fcd2b-c1af-4222-ab36-466e1f39526c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3b87d1d6-03bc-4183-849e-45bc58820df5"
        },
        "item": {
          "id": "97a65fb7-3709-43bf-a3d1-609c13779b2f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c214c582-79be-4af3-9d06-36e5e2a9fd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2438a917-c623-4b3e-88ea-ba9ca4886cbb",
        "cursor": {
          "ref": "f7b48d98-5f67-4ea1-acd9-e9cdc4f1f646",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "de57c833-9196-41b7-83af-e991f7cc1376"
        },
        "item": {
          "id": "2438a917-c623-4b3e-88ea-ba9ca4886cbb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "146c7bf0-ba2a-4548-8b1d-f6666fa11576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c642ad-61bc-4ea5-ba02-ee8c6049e134",
        "cursor": {
          "ref": "fa31ebb2-520b-4e53-9cfb-35ac2f28e746",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ccdf1bcf-a530-4082-9956-c21369256cea"
        },
        "item": {
          "id": "42c642ad-61bc-4ea5-ba02-ee8c6049e134",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c13ed2b1-0d05-4d8e-9eb3-be5df4397fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fc742a-a1df-4be1-8291-36b60ffdb7be",
        "cursor": {
          "ref": "6188f4ba-834a-441f-9d05-79dbb4d58619",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "18bd7f90-a1b1-46e1-af2f-d550f690e693"
        },
        "item": {
          "id": "09fc742a-a1df-4be1-8291-36b60ffdb7be",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "609decb7-a5bc-49d5-a579-f30d278e1a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e756c9ca-df8f-41c5-8e14-933261851652",
        "cursor": {
          "ref": "90132af2-2426-4c52-928b-6a08bdb97a83",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "47cccf81-0e62-4680-acff-5eff712c66e2"
        },
        "item": {
          "id": "e756c9ca-df8f-41c5-8e14-933261851652",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5df09356-f4d6-4f62-a42a-c4f5cecd7a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924697e1-5e22-4b6b-a45f-c02520b6c47f",
        "cursor": {
          "ref": "4cd6af10-2409-4822-9fee-936df8465f0b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e2852014-8639-4b8e-afbd-6162414fcdcc"
        },
        "item": {
          "id": "924697e1-5e22-4b6b-a45f-c02520b6c47f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "71f63c8c-790e-4632-a3e7-e4e4ae7748d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f24107-2c97-4caa-ba24-84e102171b69",
        "cursor": {
          "ref": "3359cc7c-7f45-48c4-8dde-c6210fc3465f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "83f0c625-3789-4bc5-a571-d05d4c9df5e6"
        },
        "item": {
          "id": "40f24107-2c97-4caa-ba24-84e102171b69",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f7e408a1-09f8-4cf9-bdc1-be85b445ddd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3467ffb9-202b-4826-ba4a-264763120dcf",
        "cursor": {
          "ref": "492e46d5-cfbd-4b50-a620-02568421c3fd",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "463deaeb-e715-47e5-a9ff-f53313ca8978"
        },
        "item": {
          "id": "3467ffb9-202b-4826-ba4a-264763120dcf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "689a16e0-5e3e-493c-84a0-6f5c5fef8803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e973cb-ba37-43bd-aabc-62e610a5029b",
        "cursor": {
          "ref": "26157b93-79e9-43b3-8a4f-2fe33285ab85",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5e360206-cfa3-42ae-92e0-6b08ba0bebbc"
        },
        "item": {
          "id": "e2e973cb-ba37-43bd-aabc-62e610a5029b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e3741c1a-916f-463a-b620-678974f064d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e828c96a-75c7-4e0d-8424-95a076f1b67f",
        "cursor": {
          "ref": "30d00682-7a01-4d6d-a174-cbfebb38c14f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "16f1b223-02ac-4c3a-a574-143f0a41b8e9"
        },
        "item": {
          "id": "e828c96a-75c7-4e0d-8424-95a076f1b67f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6d37c2c0-5967-433f-8bbf-df7a32b94c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4d5227-d66d-4011-930a-35b1a4150e1d",
        "cursor": {
          "ref": "0eb0d710-19eb-48f9-a553-3c32831e4605",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "20e360e7-38a9-47c9-94b2-a618a6957351"
        },
        "item": {
          "id": "1f4d5227-d66d-4011-930a-35b1a4150e1d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bbb662b7-bb88-4f6f-b277-a93c0015c0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04614cbe-073b-468f-bac9-adcec68b1be6",
        "cursor": {
          "ref": "5e67ea9a-cc2e-447a-a56a-86dcf2c346f5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "eaba2a37-fd40-4655-8655-6bab2af98763"
        },
        "item": {
          "id": "04614cbe-073b-468f-bac9-adcec68b1be6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "41befe5a-2fa2-4edb-a5ae-6b8699d75617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76f2252-275c-43b8-9238-f88c276f39d2",
        "cursor": {
          "ref": "ae7ae8f9-b988-4b82-bcdf-df734d3c73f4",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4034d601-8292-46a3-81fb-8bc222b4d2c0"
        },
        "item": {
          "id": "f76f2252-275c-43b8-9238-f88c276f39d2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "068f801c-8b5a-4d4a-ab87-c558a6a6fb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5085d3-fae6-48c0-94d2-a36ede41f96b",
        "cursor": {
          "ref": "78dfb3b1-e453-48d5-aaff-41e75bdfeb48",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "851fadd4-8bac-42c3-9000-15fcfc1d012b"
        },
        "item": {
          "id": "9a5085d3-fae6-48c0-94d2-a36ede41f96b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1cc0dba7-bf7d-4868-b27d-03c4781d0034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80490c8-e8eb-491d-8c81-7058ebab55d0",
        "cursor": {
          "ref": "bfb5a3eb-7b98-43bc-ab7c-f3dd11d57624",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a0e45125-4b1b-46c6-b92e-ebdc10598e7b"
        },
        "item": {
          "id": "e80490c8-e8eb-491d-8c81-7058ebab55d0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "518cba02-2f57-4221-82ed-683945210ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e004ed-aa62-4675-8a87-d8b7e3d64f3e",
        "cursor": {
          "ref": "e78b7f83-b501-443e-9f86-1ab01c05366f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f8bac1f0-43a5-4708-a81b-f486ed6e4a2a"
        },
        "item": {
          "id": "44e004ed-aa62-4675-8a87-d8b7e3d64f3e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "187edbba-e66a-4fda-a9bb-29d2ddcb2097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e710e8-3efd-43d9-9ba2-cec92df6e3a6",
        "cursor": {
          "ref": "6cd13b6c-a2e0-42d6-b17f-fcd8819e4938",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "83654c31-593e-4d61-a4be-c664407d3f0f"
        },
        "item": {
          "id": "b0e710e8-3efd-43d9-9ba2-cec92df6e3a6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "20a24f07-cdb3-4b71-b6c7-32d82760fb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e670ac-bbad-41d6-9b59-4d3d23a90fc1",
        "cursor": {
          "ref": "1a65a4a1-084e-4bb7-8166-eac1a491d788",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "17c932e1-4a7d-4b45-b87b-c9b0af551f07"
        },
        "item": {
          "id": "62e670ac-bbad-41d6-9b59-4d3d23a90fc1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "96001bcd-277d-4d67-8893-f9e7af7cbb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed281678-e1ba-4735-9f8b-fd289e82a118",
        "cursor": {
          "ref": "f19553a7-8957-40b2-9987-2c5dd3a13dcf",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d5aaafa8-0aff-4f60-9f3f-6df3d545118d"
        },
        "item": {
          "id": "ed281678-e1ba-4735-9f8b-fd289e82a118",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d18073da-9b58-41c8-915b-2b4b8bceaaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f8d7c3-ef13-4c07-9769-eb0ef49f7aa9",
        "cursor": {
          "ref": "f38da936-ffc0-4aef-80e1-d6ae1f2115c0",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2c99fcf8-57fd-41a9-a3d4-858998294734"
        },
        "item": {
          "id": "85f8d7c3-ef13-4c07-9769-eb0ef49f7aa9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "52896359-d53c-49cd-861e-734a766cbc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0837a5fb-9c65-469c-8cab-dfc3e2eaa525",
        "cursor": {
          "ref": "a4459ad7-4d42-4dbc-9d7d-8223099c66fa",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "74405c6e-a2ff-4d48-80d5-fe5f8974c9bb"
        },
        "item": {
          "id": "0837a5fb-9c65-469c-8cab-dfc3e2eaa525",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f937f3eb-da44-4ff2-af5a-0a0968773ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a740e1ac-fee9-456f-bd06-f0515842bef3",
        "cursor": {
          "ref": "5e95c4ce-7925-4249-8c27-ce6964cf5a19",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "08c71fb3-5b93-4ba0-87d2-fac7c4fabfec"
        },
        "item": {
          "id": "a740e1ac-fee9-456f-bd06-f0515842bef3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "614a4f21-af01-4833-a00e-bf7cdcacbce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2da7e1-1753-4504-be2f-bdb0d4881dfa",
        "cursor": {
          "ref": "694a1487-9e10-4c1a-9af5-bdf272aa3416",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "72a7b661-8e20-40f9-93cd-367486b34666"
        },
        "item": {
          "id": "1c2da7e1-1753-4504-be2f-bdb0d4881dfa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "69134db8-0906-43fa-bc99-4c88445d96c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128b2ee1-b846-4d34-a400-476c97da01ba",
        "cursor": {
          "ref": "eea00436-b9dc-472e-bf25-b5da2c48b67a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4c4652a5-076c-4d62-80b9-c8731069451d"
        },
        "item": {
          "id": "128b2ee1-b846-4d34-a400-476c97da01ba",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8fa4816d-0250-42cd-bef3-6ddb0d2afd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7ae78a-49a5-4db0-bc49-8a023e0a79ea",
        "cursor": {
          "ref": "308e7707-d9c4-421b-b00b-344e3f10c257",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "53f80187-5aac-4e27-80c7-4081b6698831"
        },
        "item": {
          "id": "af7ae78a-49a5-4db0-bc49-8a023e0a79ea",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4a896279-9e82-414c-892d-01b4de0201bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653b89c7-4210-40db-9c0f-396986b96d39",
        "cursor": {
          "ref": "e887dd6f-5b69-423a-8e34-41c39ec1d665",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f63a1f52-3eec-418a-b9be-434171661c1f"
        },
        "item": {
          "id": "653b89c7-4210-40db-9c0f-396986b96d39",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5579995c-eb0d-4205-a42d-d5fd4974e744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8568407d-ea9e-481f-b69b-81e840fe925e",
        "cursor": {
          "ref": "44470970-97a0-4b02-add8-caabf7a56ce9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "13b206d7-ad95-4d60-8a2f-a81b80d5a2ee"
        },
        "item": {
          "id": "8568407d-ea9e-481f-b69b-81e840fe925e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "eefc475e-11e8-4329-8f74-aa513bb9f797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac583745-0fe3-4e0f-b850-f2fdf15b6c89",
        "cursor": {
          "ref": "469d6169-928b-4fb7-9882-30b76691e448",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3773ae25-4e70-4917-893a-9c17a91eaeb1"
        },
        "item": {
          "id": "ac583745-0fe3-4e0f-b850-f2fdf15b6c89",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3254cb71-4697-4d1f-95fe-cbeeeacd00fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406585e0-0037-4553-b5a8-be2297825452",
        "cursor": {
          "ref": "e17d2964-6ea0-48ae-b412-1d22742bbd98",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f9e06058-6fdf-4b4e-a324-7e3cad42cd50"
        },
        "item": {
          "id": "406585e0-0037-4553-b5a8-be2297825452",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fb2c6209-f2bc-483c-8583-f009cd877bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ef85f1-f24b-4cdd-98c9-70675d06ddf8",
        "cursor": {
          "ref": "6534283c-d5d7-405d-841f-73533075e4d4",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1673f22c-0548-448f-a6c1-c2991a4413df"
        },
        "item": {
          "id": "46ef85f1-f24b-4cdd-98c9-70675d06ddf8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "61c620b8-7138-4c29-ab66-65862937a8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c37071-16d3-45cf-bb66-7bed8322d19e",
        "cursor": {
          "ref": "27610528-e3ed-436d-96c0-b696ad283e24",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2bf019c5-4c0b-4ca8-8f4c-bd60cb7f3089"
        },
        "item": {
          "id": "d3c37071-16d3-45cf-bb66-7bed8322d19e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8632c443-3d88-489f-a3e7-cb5b302d5a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb6a69a-90d5-4952-a78c-78da57843d92",
        "cursor": {
          "ref": "b7515a3a-988b-4ee1-a0d1-017ef2e0e207",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "960c94a2-922b-46a9-8f4b-8e72b608090e"
        },
        "item": {
          "id": "4fb6a69a-90d5-4952-a78c-78da57843d92",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6552e833-b097-4566-9cfa-1296adb96d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82750d3-5375-4e9c-8a27-0f9b05a1040c",
        "cursor": {
          "ref": "176bd3da-6659-4553-aa53-c5051840e3ee",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6df721b9-75e9-44b4-b391-a4f3311c0f16"
        },
        "item": {
          "id": "b82750d3-5375-4e9c-8a27-0f9b05a1040c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6227fee2-5f57-4154-a843-c64b1af6a01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950cbbd8-eb41-403d-ba2b-5ef938cafd6c",
        "cursor": {
          "ref": "5168d85a-0932-418e-a534-a53173ca9bc0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a93b32c8-b774-41d5-9421-976c2c212a34"
        },
        "item": {
          "id": "950cbbd8-eb41-403d-ba2b-5ef938cafd6c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9a39c954-9087-434a-acb2-6b28c21939df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5067e6-7593-4c83-909d-efb687b545dc",
        "cursor": {
          "ref": "9c9213a5-12ce-4307-97f0-287810b76712",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f63d830d-fc94-4221-9019-624dcd40c719"
        },
        "item": {
          "id": "5c5067e6-7593-4c83-909d-efb687b545dc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4a03aef3-d223-444e-870a-f533a1f0aee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffff8e7-6545-4ad4-aed6-faa3e1669d16",
        "cursor": {
          "ref": "fff7f934-ee14-4b0f-8a2c-add059f51147",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "578a85bd-2aea-4fdb-ba22-9e0f65f53940"
        },
        "item": {
          "id": "8ffff8e7-6545-4ad4-aed6-faa3e1669d16",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2b1e1a11-a462-48df-a7a7-76037df259fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197fa35e-41f8-4771-a73e-11584b2284da",
        "cursor": {
          "ref": "3db3b867-6154-4870-bcfe-6061e7233b57",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ad6bc83a-1f5b-44ae-99cb-fce3ef6dd35b"
        },
        "item": {
          "id": "197fa35e-41f8-4771-a73e-11584b2284da",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "38ddd25c-85e9-4b71-a79d-c397bdbc28ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7ed061-bd79-4a0c-8959-ee4eecf6282e",
        "cursor": {
          "ref": "6941d688-1ab0-4aee-9b14-e9c40fd1f258",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "51900428-9b55-45eb-aa9c-77672631d178"
        },
        "item": {
          "id": "6e7ed061-bd79-4a0c-8959-ee4eecf6282e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "97bef7f1-d079-47f1-889e-9c0f9a885653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73d0504-c773-49ff-904a-4a897a318027",
        "cursor": {
          "ref": "6321e21c-30f1-46e2-b175-ab3c0b373247",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "afeabc97-e640-4166-a045-0d768fcc8056"
        },
        "item": {
          "id": "c73d0504-c773-49ff-904a-4a897a318027",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8726ce85-c06b-425b-b842-576a9869dfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff47f6e5-713b-4934-a5ed-7e2820589abd",
        "cursor": {
          "ref": "6e4057ad-f3f9-4c35-b2a0-0f6a83421544",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "75a6123d-abe9-460d-9080-4c92118bd8ad"
        },
        "item": {
          "id": "ff47f6e5-713b-4934-a5ed-7e2820589abd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8ccbf068-173b-458e-89a5-176005222db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcbcded-d766-4f03-ae5c-31dc8c9f76bd",
        "cursor": {
          "ref": "d3486cef-11c7-4ed2-a909-5421e6ea08a1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "34f79bea-0e68-4a2b-9f01-596e1cfa9b3d"
        },
        "item": {
          "id": "abcbcded-d766-4f03-ae5c-31dc8c9f76bd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "618b27f1-9298-4450-a41c-4a1fe8fa9af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e66b1d-cbbd-42ac-9920-695fcec499af",
        "cursor": {
          "ref": "4ae468cc-d2fa-4945-8d8c-059050ec57de",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "de55e005-64c8-4c32-baed-807e77cf633f"
        },
        "item": {
          "id": "72e66b1d-cbbd-42ac-9920-695fcec499af",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "05dd2ba6-ad7e-4639-a196-f6a8445bf3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee665ff6-1600-49ac-8ad9-4c1d9cf84793",
        "cursor": {
          "ref": "21a0d67a-8640-4deb-acda-bf7152f7b79e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f49a2de4-d9e3-4658-ad56-a4fab0e5f0d7"
        },
        "item": {
          "id": "ee665ff6-1600-49ac-8ad9-4c1d9cf84793",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bb2492d2-8811-46b2-ae47-f894bc9820d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f875ba8-ed3f-4926-a88f-98a7c511a9a4",
        "cursor": {
          "ref": "560c8a08-ad13-4cf5-b622-b2d687aca5c0",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c3b1dc66-0c9a-4f50-b7b4-529a652f4707"
        },
        "item": {
          "id": "3f875ba8-ed3f-4926-a88f-98a7c511a9a4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "445ea526-9017-45d0-bb6b-df2bbbd56aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a112910-81df-4651-8143-7f4aa6e631db",
        "cursor": {
          "ref": "364fd1e1-0671-49fb-bae8-8cbe4cea0934",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c5940fb9-91ae-4a82-8ebb-f80f5e976726"
        },
        "item": {
          "id": "5a112910-81df-4651-8143-7f4aa6e631db",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9e2ac2cd-7165-487f-9f04-aa2b8b0e4754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ab8710-75b2-4ec2-ae06-e6202898f711",
        "cursor": {
          "ref": "6bf3f1a2-1d76-4956-be71-d69111b5e6d1",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4e779b00-4dca-42ea-9662-e6ba72a1010d"
        },
        "item": {
          "id": "14ab8710-75b2-4ec2-ae06-e6202898f711",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "16718731-2b3e-49d8-a1d5-2930f2b13425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c514470-434c-41bf-8ab1-79984ca3b682",
        "cursor": {
          "ref": "73e523c1-239c-467f-80f9-707cfa54a4af",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6a89823e-3161-4c53-aa1b-12eaef6641aa"
        },
        "item": {
          "id": "0c514470-434c-41bf-8ab1-79984ca3b682",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f41e5915-8f07-4c5d-9334-356b95e4cd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb38db3-c007-4389-8605-eb492c2325f8",
        "cursor": {
          "ref": "f76c5ae9-ae74-4764-8ee7-15c18752f259",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5c3cb5d9-0bd5-454e-b70f-56e05df15eaf"
        },
        "item": {
          "id": "7eb38db3-c007-4389-8605-eb492c2325f8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "49ed69f7-5476-4ac5-bcad-744f2719930f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7534907f-5b22-4862-bc3e-24f94a8eac09",
        "cursor": {
          "ref": "6cbd9009-9c6c-4a21-a827-901b7d3927cb",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7691a024-267e-419b-bf7f-830d1b38db22"
        },
        "item": {
          "id": "7534907f-5b22-4862-bc3e-24f94a8eac09",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "abe1a6ac-4e29-496b-9bee-4f2e0173e148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3b1423-7b0b-492a-88f2-a0d71c0d8048",
        "cursor": {
          "ref": "bd84dfe9-22a1-4bcb-845f-23219b67404f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "069aa9a8-1af5-4190-a321-b86229ae0caf"
        },
        "item": {
          "id": "0e3b1423-7b0b-492a-88f2-a0d71c0d8048",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "21582532-8aab-4319-a77e-7d31f72fdfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fed2c73-607d-4672-9bfc-33e7d60e253d",
        "cursor": {
          "ref": "a22c60f4-26a4-4085-9ca2-76960dd96ac8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a9696dc6-0d62-4de1-ab8d-406e7d282ba8"
        },
        "item": {
          "id": "4fed2c73-607d-4672-9bfc-33e7d60e253d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a22b7bd1-1b11-43ab-8ece-f32d429703f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d804937a-4c70-441a-871f-37dca472324b",
        "cursor": {
          "ref": "89f24233-c2f4-41f2-9210-3774e600c0d8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d48329b8-1848-49e4-b8b4-f697128da651"
        },
        "item": {
          "id": "d804937a-4c70-441a-871f-37dca472324b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4b5373ae-cdb7-4331-840c-0a2a8a94189f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef26c01-0ecd-412b-bab1-c2712a2dd1d4",
        "cursor": {
          "ref": "35135381-de74-48e2-b717-751c49e99277",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "da745aeb-7f9e-494c-b5ef-c6139d855b99"
        },
        "item": {
          "id": "fef26c01-0ecd-412b-bab1-c2712a2dd1d4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8604dd57-1dfb-428a-b589-9e5f8173e376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba68f3d-add8-4e3c-ab31-78e6ee048f11",
        "cursor": {
          "ref": "3060fa35-ebc4-4c5f-8667-07a9977ddda5",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0716c309-a47c-4cf2-966c-e7d14e8ca120"
        },
        "item": {
          "id": "9ba68f3d-add8-4e3c-ab31-78e6ee048f11",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8f9c632a-dd78-4cb1-87af-6f7436005705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa334937-e795-4c29-babe-c87e72ee3a17",
        "cursor": {
          "ref": "fab5307b-f0f5-448b-a140-5815ae7e261b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9b07e9f6-e9c6-41fc-a35e-b22d264f11fd"
        },
        "item": {
          "id": "aa334937-e795-4c29-babe-c87e72ee3a17",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "59efc067-1906-4926-9b41-ad4130ddbc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47638087-61b6-417b-9a61-7a18af97abd5",
        "cursor": {
          "ref": "fa0acdb1-71e1-4b5e-b631-fb2c4fa58d04",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bf9ab005-c7f7-42b3-8fac-3eb80dd8b31b"
        },
        "item": {
          "id": "47638087-61b6-417b-9a61-7a18af97abd5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fa22639c-17bf-4195-8b49-40b67bad1f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d897b9-40ae-4cf4-b9ac-3b9c2db8ad87",
        "cursor": {
          "ref": "844643cb-0c6b-4bc7-a300-ef21ec538acc",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "364e5add-c20f-4852-9b7e-c4da3e4728fa"
        },
        "item": {
          "id": "46d897b9-40ae-4cf4-b9ac-3b9c2db8ad87",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "44149a16-2270-4420-bb52-c1760da7c233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfac495-ede3-4cca-841f-3d41b218f3e4",
        "cursor": {
          "ref": "ddbe3068-31ca-4f53-9f61-f98ad4bc1654",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "83bbde54-a492-4db4-ac31-dadd1e09e364"
        },
        "item": {
          "id": "2dfac495-ede3-4cca-841f-3d41b218f3e4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ca54f8f7-9457-4554-9f1b-0315c6abf1e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774c9b8d-5a3a-4f00-8e93-d7fda091de14",
        "cursor": {
          "ref": "1cf5ed5a-7555-421f-b7d3-5292270238ce",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "22822fcc-12be-4eba-9dd2-f58b1e2f1d20"
        },
        "item": {
          "id": "774c9b8d-5a3a-4f00-8e93-d7fda091de14",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2eabc9fe-0662-47b0-9ccb-384fad24342d",
          "status": "OK",
          "code": 200,
          "responseTime": 2343,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c1976a-dae9-4ca8-9086-0db0bc56514e",
        "cursor": {
          "ref": "5851fd51-aa35-49c0-818e-796e3637533e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b876b8e9-ec53-4d8e-84b0-9104c9669113"
        },
        "item": {
          "id": "48c1976a-dae9-4ca8-9086-0db0bc56514e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bc3ee528-19ee-45ee-8d94-9d7f30afc5da",
          "status": "OK",
          "code": 200,
          "responseTime": 2969,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a03d86c-f009-4cd2-be4c-dcaecc359f5d",
        "cursor": {
          "ref": "95265a94-f79a-4960-b609-fb0d24f6d058",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "98d2b593-9717-490f-9680-c0c15ae1c9ca"
        },
        "item": {
          "id": "3a03d86c-f009-4cd2-be4c-dcaecc359f5d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "35de0d96-b2ab-45ea-8e52-29497d154168",
          "status": "OK",
          "code": 200,
          "responseTime": 2520,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "709aefa3-f1e4-4a7a-9a6d-88910c56491d",
        "cursor": {
          "ref": "751a1e3f-f0c6-4f7f-a208-fe0649af2b23",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e4ca55b0-2c0e-4233-adfd-7fadb1d70e9f"
        },
        "item": {
          "id": "709aefa3-f1e4-4a7a-9a6d-88910c56491d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "015a8451-eb82-460e-9747-ac94e049977a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709aefa3-f1e4-4a7a-9a6d-88910c56491d",
        "cursor": {
          "ref": "751a1e3f-f0c6-4f7f-a208-fe0649af2b23",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e4ca55b0-2c0e-4233-adfd-7fadb1d70e9f"
        },
        "item": {
          "id": "709aefa3-f1e4-4a7a-9a6d-88910c56491d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "015a8451-eb82-460e-9747-ac94e049977a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30dac7d2-8871-45b9-940c-ffe14649f367",
        "cursor": {
          "ref": "6c87099f-1b19-40a1-a645-27ee894e88b8",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1170a9ad-9583-4507-b9ca-d0d735414542"
        },
        "item": {
          "id": "30dac7d2-8871-45b9-940c-ffe14649f367",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f6e03124-9913-4717-9e07-6fa7c566b54c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0e6832-01d5-40d5-957c-24e14d7c0056",
        "cursor": {
          "ref": "5cc26cd3-3994-42b4-a7ec-1bd57a0e6908",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a733073b-0b72-423e-8090-25f570ec17e4"
        },
        "item": {
          "id": "5b0e6832-01d5-40d5-957c-24e14d7c0056",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3d71733b-ceae-49f5-8303-cbde65380e7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}