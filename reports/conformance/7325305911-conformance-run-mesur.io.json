{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2bbb15bb-ae57-4cfd-b437-d0e1c3e6662d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "00467fca-99ce-4906-8d89-17d7b405d9d7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc0397ab-c3e8-44a7-ab92-af324df582ec",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5249fcbf-49aa-4764-a04f-ef56895c0529"
                }
              }
            ]
          },
          {
            "id": "0bf30ff7-33e8-4408-a68d-5bffe96ab4d1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8bc266e-dab7-4468-b7db-532d4df1a23a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "513c086d-1bb9-4a05-90ad-110da141a326"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f8dcd599-27f9-48e5-a88d-56c0d7eb70ae",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f98afe04-db18-495b-8d01-8ef161551cd8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e2704162-dd10-49e6-b98c-0af942859eec",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02a4393a-e761-467f-994c-311141f8b3bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0041046d-40e6-4a43-818e-35deaf846397"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db3282c7-f961-4f97-a499-a1f960d8f647",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "266ad1aa-3659-4d86-9626-5c4fea58ec59"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "60a5c370-d53d-47d1-bee7-69d46c1ed1a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c5e7c15-2713-4884-ba48-5b8231d600e4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8d1484f-e346-4a7c-bb1e-be18d83f1045",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7d9886d9-2fa7-4e88-ad9f-0eeff1042767"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "384793bc-70ea-4492-962c-db855e7694f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "feab8b9e-b407-41dd-ba7c-329b1cdb0132"
            }
          }
        ]
      },
      {
        "id": "ceb7c1a6-df64-48c2-ab67-822cff51134a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bac7cd37-1daf-4186-804f-dd5245383c5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41832f46-e8cc-49f7-a28d-477619727fa3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1d7ef3c-f619-4546-9ec3-c9fb59fd2fd0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22382b48-f356-4517-b342-33744c44aa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79bf5565-24ae-404c-94ba-9c3d9a926e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a3bf7e-dd04-4ef6-a2bf-3ab74e23d9ea",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05718ef-deef-4ab5-8110-95cf4629abf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf7ec16f-d7eb-40b3-b87d-c6256af08477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3271ddd-03e3-4357-b64e-e7c79b1a1717",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9515252a-9c35-4e3b-9234-15246110f5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a361536-0a33-484a-ac20-8b700f48ef23"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13cca1ef-47db-4fb3-b41c-c226232b65a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71a11daa-9175-46c9-8e29-c017772b6d20",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f10853-54df-41c0-90d4-d398282c9b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49fa23f3-308e-4d40-9523-fde3ed4f5dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f908dd8c-8a8b-40cf-8a09-eaf3c5352b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221aa712-27d9-4f3f-b52a-db5210c66701"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "911a57aa-5b69-40f0-9c88-bdfa7e2de035",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3ced787-124b-4840-915c-b7b3170e615c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bb4920d-63af-424c-bad9-e30b29eca92c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e2897984-4c27-4a9e-a04f-d5e79a98732b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7a54bbb-bd4c-45ee-a281-c419dccbec7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0f778760-5dc9-4cdb-b1bb-452fb4f1c133"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83aea852-bb4b-4c91-950f-aa06e0380856",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c77aa7a-835e-4e39-91c8-d51eba8f738d"
            }
          }
        ]
      },
      {
        "id": "e91085a6-3317-4707-8fbb-4deb4cbf1401",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9c17b5d4-9736-4736-bd62-40b8c5507f10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95af95a6-120a-4f50-ab7c-a2d72b13e7f1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d2216d24-d47a-4b8f-8bbb-18a3f4a6f138",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e32b6f-124f-4270-b320-7d7b1c46cb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1476da67-1810-40f4-8ee2-9215dcb5838c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e76dfd0-0630-42f1-b14d-de1dd6e7f12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d74f322-4ed7-4d7b-bf26-a26d40328353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab10a1f6-cfeb-49e8-8baa-b356da0d48fe",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08aaa84-edff-4fa4-b6cc-f027bb424692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee0c7ca-8160-4c92-b44b-050a21d25da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7783a60-c370-4dde-a3e6-1c2015de1868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb1d2449-18d6-428e-b405-91fc5bf0ac2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4a3d9d-38be-4fb6-a016-408fee8be609",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a7d335-206a-4146-83c1-7916e8d34853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c975b8-8c25-402c-b31f-dbf1681c8db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5477cc-74aa-4ebf-9595-730446478ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "196859f6-d5c0-4279-9cee-970e518637f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a028d04-b264-449c-8296-abf52e47bc1f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada9e2f7-afac-4c46-a12c-8ecf97273960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c9b913-c6a4-4855-99e9-b6e2499d4535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1e05b1-2d4d-46a3-9dca-183af8962d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31389628-8034-4407-b0f3-5247780fe45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79568d2c-130b-46c3-a8a4-916e0b391fc5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7505d6e4-8780-48f2-94f0-d82c06c260cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e819502d-d770-4220-a73d-5ed459875a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9a82d4-abfa-4d22-96cb-816978dcc4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ef036d3-3401-4daa-a370-ab77e24447c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cbe7be-39f1-47ef-9f8f-56f8c96fea72",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0b15fa-dbf2-473f-8acc-9592898df4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629fd39f-03d1-46f7-86a6-b69761967549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c46ab9c-b74d-4c02-ae38-4f30a8a6335f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb759b50-5ecc-4188-bf21-27f9f21e4267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae62a9a-30b6-4f81-b763-8bf1ae503866",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8b7dae-d43c-4b1e-bf19-0d837e2960d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed36c6fa-b978-4c8a-87df-f4be3105d099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66af6352-cd25-4bc8-84ed-78436a321c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dae5d225-2d4c-4f93-8b57-fd846a3f04b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d679a98e-ef99-4e50-95da-0a90851d3f93",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b824da-0cd0-47e2-bc50-3305e92517f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b113cde-acdb-4c48-8d17-b95e016ed8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00a1cb1-ff8a-4584-9f38-341dc4752ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e95ffc4-83dc-419b-bd45-73623fadf2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a40731-4121-496e-ae68-4e3005a3f018",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9ee6f4-ee1a-477e-b698-70b625cbc5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72afe0ee-cca0-43d0-b43d-b5df68783e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18aaaa14-4ac0-41a2-853b-67525abe2787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81abadf1-097c-4e3a-8387-b17978798638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5734d4-c065-4d6f-bc24-38af6de908ad",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64be4af-f908-4d26-ade4-b6acb5ebd43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78efa74-d901-4c0a-ba06-bbb3834c27a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024953fc-cd11-403b-a235-4661fe12117e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4deab02-f33a-44c3-8191-a63dd72f7df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746de8eb-dc48-49b0-8a45-d66887a360cd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd39901-75b0-4ef5-9838-1da452b2d794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0aa060-7a22-4c5b-87ee-5f3772ac4d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c119ec10-436b-4b97-bebe-947d25bebbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be6313fd-51b8-4f85-860c-2baec118926c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9671ba3-518f-4e82-a7c8-ff7d22400cbf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7dc3e7-a84a-42b9-93c4-38af7a365d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae34ad19-29e3-4033-ba58-e7475bfabc8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac43b36-1b91-46a5-b060-6ad9372be1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddf7e358-b0a0-429a-a4ed-8f06e777ff54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec357f97-27e1-42d9-b70b-4d65ee7ae3d8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2626ae9b-6723-4cd0-ae6f-f0f93233ad40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c21194f-f995-40fc-bec9-17e1121233a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc66aadc-6267-4fcf-82cb-3e25a1201866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff8ca40a-5108-436b-a081-f79a6d0fd8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9571e3e8-11ce-44ea-b23b-71075725f3f1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432bf75c-6ce5-47cf-b597-7dd646c69fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce7f540-8e8e-4700-a1d4-28d9d47c6d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7941fc37-0fde-4b47-8da1-eef2dea01265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46602854-8757-47ee-87b4-227ea0f25ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8799156e-366e-4c45-8e00-be0beb50fc0d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ece87f-6bed-4d49-be7d-84c8aee92eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9e1367-23d9-495f-9fe0-ca08f7210f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98aad8a-54ba-432c-8e21-7e3312c08e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e499c8b3-c7e9-47f9-8bec-3ce648206458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d608f9a7-0408-4712-86b8-4df0ddb7e9aa",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8bdbde-e729-455c-8c91-76813c4520c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89d61fa-e64a-4720-90b1-2193abe7c380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a153cd5c-323d-447a-a0e8-aa8954967f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5542d01d-0602-4a34-bf49-ca26624884dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefce60a-9647-42a2-acc9-26b1def54756",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b677eca7-25fd-4932-a2cb-4e72f4d3d754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c07354-5274-4403-b3f9-946b6f472c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b07a56-4926-4c93-998c-f2e94ee84fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b18c76d1-0420-40d2-87bc-7af580d86ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01be9c5f-6971-4d86-a6ce-95a6f95c8b1c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d0e3dc-dbef-4d61-a813-15c1ba2e5bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195f1e20-3cd7-4c04-9f1d-773351eb9ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4490222-cf4f-4007-af50-e78a754c4505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eacbed36-7e71-4530-8edb-18baf198e933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6827414d-8264-4819-999a-15d330b4e0a1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8561964-6f84-4142-a3c2-2188b836ef79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3c658c-550b-4bb7-add2-fb953d4bcbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b04189a-a28f-4f42-b6ed-c0f535949661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab547ad1-5bb2-4d27-892c-71d1d7458f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e703412-6bf4-43db-b7f9-410dd16d3612",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd0e05e-7bd7-4d56-af62-f494f4f8d2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c0ff3a-43ac-43c7-aeb8-1d93b355fde7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209c2551-f3f5-4958-8e3e-b03574fd9e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "448d0a0c-4500-47c7-9132-05f20e8ed7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea76139e-1d73-414c-ae80-fddd3e296fef",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9464eb7-43e2-4612-93eb-fcce4bab4e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af71aa2d-712c-4183-818e-d872eeb3dfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d275ddde-8f08-4dfd-b0bd-5362237756bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "292f9a8a-c4ce-4455-adec-4cbceed6d5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c424e0e-2107-4680-b31e-694a98e33abc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e13c2d-e618-466d-8972-5574856094b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390f28d8-8f50-49d6-a85a-ee7956957cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c37bc2-e3c0-4269-90f6-4c29784a1f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c57fb6ad-cd87-46e2-b8e0-40b330d97e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135e9ea2-0546-445c-9f53-e664f6cb7887",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc730e5b-51b2-419f-994a-e00597c82684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c0f554-92b3-4181-96ed-3783a8ce0b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ca6352-e53f-445e-8eba-649e3aadabd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "198247f8-4705-4736-9f86-1cbb39cb24a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794be75c-c9c0-4096-89ff-ea854d7db37d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46baeadc-e716-4290-8e09-3f5d4ed1de36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d676efb-083e-4314-9aff-8fad7e171d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e64f54-4107-40df-b5e7-14b5ce32fdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "507ad05c-971c-4be0-9290-e00933fc1665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccaeb631-7754-4f32-bcfb-07f3b1de9fdc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8f1f40-fff0-4794-b5bb-51020de7663a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71817e5e-8ed3-41ed-a656-736db74366da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8980e5-9dda-4069-a50c-5756edd839d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9165b6f5-ab74-4648-bbed-55d4b43bfb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfecc00d-c0f0-4514-a7c2-dbe9e8909131",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3588f0e-5f27-4cce-a8d7-69225d50a484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da79fe8b-9927-45da-88dd-173374e9d74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bd1ab8-bb44-42b4-a802-c20ea70210cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1506cf2f-62bc-4f5a-b763-37b2da4384d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e77b66-d41e-407d-b55a-8e4543915488",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be9a067-86eb-4e7d-8a95-801a7b513221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b05234c-5dfc-416b-9e81-9a7d80ce9184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5812d583-75a9-420b-98da-abaab8c31d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b11ac9-6ee4-4bf7-b0a9-fcab8f32288e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67220c70-7b11-49d0-9c67-9fac2a75e325",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924c39cc-d916-4a53-be7a-c3de7b20bf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c375da-01b9-4ddd-b031-bea64553825c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09698083-b9d7-4c63-a649-dedf32e61d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "055b17ce-3f71-475f-b6c4-377ebcb0fe30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e39b87-c617-4ecf-8a8c-8b65a9b18eb5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbceda5-7282-4c35-9873-e3424f3f7f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c239b46e-a81d-497e-a425-2f56ad07ca8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6ed6ec-99f2-44b3-b7a7-04019c28e0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "67d0e75f-b0c9-4aaf-8385-aa54561ecd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f1583c-951c-44cb-940e-e0510d601c8b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2816435f-631b-4517-a7f4-7ef0bfeaee24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497b5480-4426-4915-a166-47aa39d52049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e30303a-bdb2-4ca4-b5fe-8437b29d0021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4f83a4-f1ea-492a-a668-85f4bc6600ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce5b8fd-a2e6-4ffd-b6b2-a7356a7cdf6e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771e0b60-7320-4cee-abc1-7c37d766b285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c508393-cd2c-4df3-bfca-e6710189b7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af54d728-0266-45f3-9085-61578b73d1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "497c19d1-cf12-42ef-81c3-e3465d8fd0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a2d230-e66c-4781-85cf-b1d285b42145",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b393fc16-b0b9-45ca-bc3f-2135606c8ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2839f1b4-ec47-4eb1-a70e-f9d554355681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1304f5-cc2e-4ea1-bf15-4ba60aa2a554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7413598f-89a8-4f8a-9faf-3d423cf98533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb90366-ba96-4565-8629-65c93b5dbf30",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4476a183-2207-4d33-823b-8416d842af05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91879f1-56fa-4ee1-b47e-00cb77bd2598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fa5dd9-6744-4e16-9765-03677207d2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75676422-7e6b-4d4d-b829-78364eeea9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e38b01-f809-4759-87e9-ae9152a1a2f0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f596674a-ad45-4b11-9db9-b4f7b4e3cf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a420d6-62f6-4485-a399-0c624393becc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3087ec11-86bc-4e7c-b52b-8004f5edd6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21179902-43e3-46dc-af07-2cb5e2a49bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f204b5d5-5793-4dc1-8b53-f30b789749f3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc715bf-fe29-4fb8-bca0-82ed44e3c826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da18221-8b14-477a-862c-d90e032dabec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b0f292-1864-417f-9438-998cd291fe3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "73146b83-90ba-492d-8b07-c6bd8ad356e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5515bd-154b-4d65-938c-6b29794cb887",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f2cf1f-9dc6-4e1e-8fa0-fa2434ec6562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9e36fc2-8908-4266-94ef-ad984387ae86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcc1d15-24dd-4332-b6bd-59297bc59206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1f18b1-f7e7-4c33-bb02-27529d51a5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca24394-6f5e-4f57-9989-20cd37442e26",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fa1978-3f62-48ea-8e0f-cc52c7dd6138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47da6e90-6e91-42ce-bf4b-a40a66301643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f691f73-1ea8-4c6e-8c5f-9b313e8b5def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea0bb0a-5eae-4557-9200-b7d1fb3f72ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d8f862-bbdd-4b83-b9c9-6ee8f1a8c6a2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbb263d-05be-4662-9500-768fa275e6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98024421-8db8-47de-9ca5-3640c0b714d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899123be-0578-4905-9c25-018285265a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dccf7368-62f7-4d9b-94c8-ab8e29a50b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfa189a-f06d-49ad-ae47-89ff4052227c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a4326c-dab0-4eb3-bc6c-ac97ce213b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336955e0-dc58-4680-a237-5ead0af68e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdc4a73-3130-4cc7-8b2c-93c515fbb5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "017769e7-590c-48c8-9928-b991c7aea114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a810d5-3f51-4ad8-b3fb-b5a665f932b4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106da420-02f3-4efa-800a-a015b7b542a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1888fe9-efab-4c8e-91e5-c90dc2e90370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8ff729-b1b9-46c9-b9f4-f3f9d4eedffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c08850e3-e644-4bab-9865-fd6a4e7ac3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd57d7a-25ab-420c-b286-02e7f0a84bea",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd492fc-b12a-49ca-80fd-4c55cf41c1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32255992-563a-4537-9c5b-8313a64bf15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6eb3da4-49ac-4b7e-9ce2-00a75590ca71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97dba5bf-66c6-4403-bad1-333257380d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3e6a09-5cc9-412e-bdf6-d73eb51ce18f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae29e0ed-0aa4-47fd-a20e-c26befa30910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8439df6e-8d88-4789-b191-c5064c8262c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4557fb0d-c635-4d71-8f1e-94feb897cbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f8875edf-fa67-4562-b8a7-7f849f0bd191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a86a24-1809-4c41-8df5-f555c24c804a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9b8976-48ed-4163-b5b5-54b1d1e408dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ddeffe-d1a9-41e4-8630-7de8629b03e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294d8a0e-85c9-4ae6-b6ea-9002b21d8661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f3307e-b042-49d1-82ee-b7a8d2d9575c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f540a66c-b03a-443a-ba84-e05141b153f1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3975f67-7edb-4438-9678-fe613aa51872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650a00e2-8e4f-4bbb-b42e-b5e648f02270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d295cb40-cc7b-40e6-a75f-aa8371ab33cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e786cd91-b68f-4e22-b32a-2f1db9c791cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148b5c94-ce30-4533-a754-510976dbec32",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608ff12f-5ad4-4df7-9077-892391387be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe36619d-4b0c-4f43-9b53-c46751776a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e082a3-b17c-4087-b473-3d3dc8a168d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9564bf-0ba9-423b-bcfa-4334199d26ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5764c748-3b22-4f83-a21c-f0cc93421395",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe9c381-884a-4e9a-aa91-e2d7e47277c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee5d3f4-2d29-4e37-8f4c-68dd265e9395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160e6264-1115-4f97-8423-bec08ca0c079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "735bc871-dde4-4054-aeab-0319303c8345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d85880-01a3-4930-9520-6ce6c389bca8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3b60bc-2d55-40ce-bc41-946eb1a74a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fda942-706c-42fa-9ef3-2902c00348d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f8f6f8-4c77-47ed-abc9-5a4b4c41f2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d466da9f-1ea1-4528-8748-fedc6618429c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ac4038-c27b-4bf4-80ea-edc0e29e3bd1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6961d125-0003-4e78-a620-970c48643ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d90c4f-c005-4db7-b357-234728731cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f2ee22-c5fd-4673-9762-93ec1134d783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "918bf090-84c3-43af-b059-6ff3832ea75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c31a3b-a190-452c-a23b-f7a1d5b1ed71",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c00726-4e3f-4245-81e5-f8dd5884613a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03abedc9-70cf-485d-b971-851589bded01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24b9827-83db-404f-b5e8-d5a50d9796f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7df1fb-6ff8-469e-8582-e52fa4117db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc71571-a321-4a7b-8814-aeb7a11c16ae",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efa816f-999c-4578-a645-c2e402a7bc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f778d6cf-d3a1-4b16-bf02-c924df7128ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e086408-dbdc-4272-a71b-af1d70a440d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce34090-e27a-4560-8c6a-2a6083715215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8817b159-ac67-440c-8830-e11e01a55d79",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e100d1-dfb4-4edc-8d4b-b3d4834386df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e17cff-eef6-484a-9755-77bd49b480ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c436aea-81b3-47a4-89d8-443da439dbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "af893e6c-dbed-4e71-ae45-f01f2c4e0978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdee85d-7587-41ab-8f19-34b78d2b6b65",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bec569-869d-4e09-8cb2-d32742cad015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2367762-a3d3-4863-9f04-b1ec66af2917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f9c63a-0c5d-4aed-bf5f-582a27e2f92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "681b12d8-5101-48e8-8549-21c550eab297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f9b335-68b0-4703-8436-88cf29268eb4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d7d620-8bb8-4cab-a113-b70478ba4fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c55042-fa7f-43af-af41-90d09729fa15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bbbdb7-179c-49f9-b387-af73cfb89783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "311a6529-3d76-4471-babe-5ad3b72fcc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea836b5e-a8cd-479c-bac6-4cfd82ce59c7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb0a2c4-064c-461f-a491-3b1219786967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b2355d-5344-4a8e-82f4-bd3a116ef8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc51211-9a9f-419a-8221-ef8a9d88f06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3ea17f-3343-409a-bcb4-f01c59915018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca87cdbd-8bf7-48e8-9e20-dd3ec0d4a8c1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55544267-a139-4952-bb0b-bc7da9f714ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89280957-f2d8-4f5b-b253-1cdc305e3baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bda65a-f62a-4618-9e2d-c479223f89e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "113c8283-e95f-47f4-9404-56acb4e2b920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4373f707-9ac0-4251-b78d-dafe3a0cb5cb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c2a5ee-d650-4237-aaf2-015d3eab9077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769449d1-392b-4907-971d-bc3b0329e277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6ade40-67f7-457c-8845-a0e09f143f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8d4d4f-0da1-46d3-94b6-2cdc39fc0c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae34b3b-2593-4342-b044-c542e3d98eb7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa64ed30-f4ae-4990-870f-bac3e8f031e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ff8060-2d3a-43bb-b407-0325de553caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250a1aa5-f68e-486e-8150-d1a940295523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f81783-143a-4797-ab7b-1ade464fc94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca2c962-3ec9-40c3-b402-67ca64d9cac5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff222ea2-eb16-40e0-8c25-bf623a91f36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedcc001-4972-4ae4-99a5-802bf3c2c90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f77cb9-18fd-4cf1-980d-0d1b8ec90152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "708b7090-e0bf-485e-81e6-00abe42cf0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254a9ee5-5ce3-4c30-baae-5af6d32ed676",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dac38d-82ab-4a5a-88ea-3ac7845170cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b868e27-6411-4c4c-8801-3ff205c270b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d281c526-6175-46f2-ae21-6fe9411c4f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c883785c-8fe3-4d55-a442-59bf003a01c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a62e7e0-0209-449a-b9e3-e26600973764",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0900b351-627f-4160-8425-c45baf1250cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c1d5a1-a2db-41cc-8560-b03fef086152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3764e26-1c5a-4619-8f27-97f055d12ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b948e4db-0a44-492e-bec4-dee43c7d8627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1187be3e-064f-47ff-830b-ff9d4cbcf8c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe21829c-6800-42f1-8fb1-27637e5c901f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0989a6b2-a12e-451c-a07e-15844c3ff3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48a5205-1d15-4775-9a09-ed7a084a0efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a046204-7f45-4311-8ed2-8a7f99a8ef43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6809d0e-d37d-49f4-a41a-964a708eab65",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6149a2a9-e7c3-4971-bd14-a8ae4b56dd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf55e8ae-875f-4fc8-a425-0def5586de1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b398c672-8559-40f3-a7fe-9e0b54ca2d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "be68c7db-c15b-40b4-97aa-b7bddaf1e400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a1879f-e635-4671-b010-c4969f63fc12",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fb713d-bb21-4d67-afa8-09ed3a19b288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b0ae2a-5f58-440d-9a2b-33360c42d3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3306850f-dcd6-41aa-be9d-db6af91ed42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7362df43-bd42-4f5e-bae8-3cdb20101ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75da3b9-f4ee-47a0-8988-fdc45dd992aa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a7fc62-b3f4-4d88-b4dd-e6022e584774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9adb2a-5d5d-4044-8708-ee2b65e547f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60282a08-4c13-47c0-8b55-11bc2b4015d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "183bd60a-2e6b-450a-a2a6-e5bdb0b74260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9361fe23-0824-4518-ae20-d428f0afc2d5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dfbb9c-8bc9-456f-a9cb-ac2a9e082588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bd5ca0-0d62-443d-a2a0-df3216901598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845420d1-51a2-47dd-83d0-f7fa01a27907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8e6247-f49f-4d8c-b594-50c633bbb5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1336f5f-e2b2-4c82-8e1d-59a66ee34420",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ae6e84-f937-4dfb-8b31-a54b32dfe577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23873a40-ac0f-4d53-a167-006413f464f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5a2d74-0906-4fce-830a-a189594125fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ba5909-5853-4814-aa97-60f1efa7622a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37cdc3d-e32b-4bd0-97f7-f19bbb9a1433",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172f5207-c060-427e-9551-abf8beab4b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b12a55-4473-403d-8c31-3e2f2ac7d6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89979f86-b9f6-4aa5-bd00-98476ae70b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50bd2d33-12d0-4fac-951e-9331f3e08307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bbee17-6ac1-4de7-9619-55578ce78bcb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcea3490-36eb-4189-8972-70ccb013f7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8564dc-7494-4de1-86a7-c181db894f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2341e5e-c47c-403d-8a02-e00b854885d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0723a6af-e39b-463e-8198-06dc7493739f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44a215c-8a2d-49b8-ba9e-c8581f49592c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e8d93a-fe4c-43b1-8a76-430ac7cf3a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfec5e6f-7781-43c8-b324-4090c5ffe678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252a8ad3-4fb6-4db2-a1e2-a2cef36ad408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b122d3-7440-444a-9fe4-fd92eaf95f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c627e9-ac6f-4e20-9636-f6e87c59e150",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619e3ccd-c4ab-475e-84df-49bed74ac483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44d0bfe-1066-4501-a7f5-deb9b86e3b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a2cd01-5088-4fac-a994-a1be2b3a7374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dec9bd6-76d1-4ebb-a669-dff761bbdfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42942f14-0bb2-4559-a8d1-4181f70f49bb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37ebeaa-6b5d-40ac-be5a-06520be20ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8318faf8-de17-43ea-94cc-3862036addbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8464d7f3-1b3f-4689-870e-03954e6fccd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4636eb1-2597-4a53-b3c0-0e2634fb0097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c454a0-991a-4510-a6d2-d4c332d0dfa4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d019646-c208-46c7-974c-ff89ee88fe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1d333a-7328-4c23-ac0f-7c9dbb29afb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6785323-38c7-4543-85b2-8f3e3dace9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c307c650-57a3-48cd-8447-3dce6b3e5677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc22f9ae-502c-4da0-b54f-3079b6462b72",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57ed105-f700-40ab-86db-0befa39d4341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c406a4-b161-4e9f-b3c2-c944a2dbf7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f659e4d9-6c53-468b-bd90-f3b90103cf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec991b9d-fac0-4600-a17a-ef683cdab7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9f73eb-89d4-4ce3-b8ba-018d35e857a7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bffc33c-1e7f-48c7-819c-e7426dedddd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccfe311-2e58-437e-8eec-c14910fd0ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f0a39b-a53c-41fa-863c-41985fe34f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0a6d03-432b-4ee9-bc50-3b1795451d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1afe6b9-e513-4b18-958b-582cf194e27c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7ba9a1-4428-4db4-b8a6-250b2cddefd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25328c5-5c45-446f-88bd-4612a364180e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6b3e2e-490e-4bdc-b6a2-6d49641f7363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d81ca860-65f6-4a6a-a43d-4058b60419c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cf5b84-f4af-4d52-af53-e1048141704f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cf22ff-aa7b-479f-8873-bb15b2d9891f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8407aa-adb9-4b06-abf2-017b1bf71f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2f9f31-45ab-42b1-b59c-1aa81e6ab466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f998c5b-791b-4e92-9560-fbbed40ae208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f3ab25-bd75-46f7-bafc-b8dd8bad7d1a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7925f4af-c3e2-4107-a793-578ff1a4899d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8a3c1f-469c-4971-bff3-62c94f5bb276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6faf577-a2f1-4fe1-a1b9-843ca78e18f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a529ce-83ed-4d2f-8eba-58bbca4914c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d222e413-5531-4077-9799-963b1d779e43",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886db3bf-13e2-4ee4-8001-8ad2125e5599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4273d5-c701-4fc1-b97a-f0ec2d8ef69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e264b84-aa81-4253-b9f9-982f1571dad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae8b340-7951-4c95-bbd9-9321601cb72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51c5876-445c-4913-9148-46e6b084635a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9798e359-c129-41f2-ad02-0f8b93eb5890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180d55e3-9fff-4193-b46e-b03615800904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a62a0d-df2c-4923-8122-aa11829eceba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2e2473-024c-401e-8ef8-0b3c4f7270f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e0c1f1-4bb1-4b07-9007-a385f53fceaa",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6250a2e-efe9-4e06-8979-44b7e1316b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a23a1d-dbd4-4706-867f-93237e4cf564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854131cf-2535-4c53-ac9f-713e8758a09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65fe3a16-1a98-4107-b7fa-5040ed0ba9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af413b8-313e-4f7c-bdf6-bf1fd4eafca2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c354eb-e3c4-4a1e-a554-84f9036f1a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc04b210-484d-4949-b48e-9ba89b3a56a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f3282c-dc03-4a5c-9129-877cf54ef04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a09ee6f0-4c8e-4095-b8f3-6629de4edfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bc4bce-587c-40b5-97de-0d4a07d4dd48",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ea8d92-aafe-4d13-83e5-e7f8bcc984d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497d9abd-db7b-4bb6-a0aa-14fcb866e7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede3e25f-e11e-4c7c-8c6c-f6f3f040498e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "049fff72-456f-4737-bcc4-2d629a3df262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b036ed0a-bc23-4754-89a7-667dc9f3fcfe",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5a7737-c0a2-402e-9db1-b515fcb33530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0356a66c-82c1-4f95-8ad4-f2a36af9d341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d21e89-860e-4c52-a0b8-d185647224c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "227711eb-e242-411d-8b0f-1bbe4bf10d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27daaaa1-49ab-4b38-8f93-d921406ebb9b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641e5869-9c8a-4e3b-8f5a-bc8d57c61c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8760a839-2787-4632-9f53-94024be664d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31070efb-406c-4c72-8aee-b6661583afae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27f6031d-13ec-4d6d-855f-0a3faa913bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2f7478-0e17-49d1-9c53-9f98ba7db503",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaae95bb-eb43-46f6-a1f2-6fca1c278554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1642d956-0de5-4f06-bdcf-b9a69f3a3f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180883fa-8e64-4d73-a313-729dd425d7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48be7f39-d771-478e-a88e-26d288606eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c9cda7-1d2b-467a-bd6f-70b844cfc1e1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ce35ad-01b0-4eaa-8dab-4a8e31f9b1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702447f2-9d2b-44c3-9f5d-2225cce453a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0d591d-86d1-48dd-91b1-42ba77ce13a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdecae38-85ba-4ab1-a8ba-42961b4651ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284b3fe5-841b-4e82-a8e0-10b9432b1c9b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c6198f-db22-45b2-96a5-263663f9e8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d4124d-25f6-4852-9ea2-51ee1124f46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a37ec4-c45d-45ea-bc4a-e307741f0e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eaf27cf-5f9d-476f-bb6c-c88b5212088e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134e9273-9bcb-49f8-be5e-68bd0ec1582f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3b79ea-3051-4e3c-9d3f-05aa5297e26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7420194-67dc-4e44-a133-87dd627f4332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcff261-e40c-4d0d-83c5-3beeeda7d45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "863a4a91-f67c-4630-8904-0ae43aa508d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9d64a9-ba7d-4fda-9094-23e000683957",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812014d0-5573-4fd8-ae80-7bf0f8c99b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41416c90-b004-4c56-9b3f-0630a5a78400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630ab646-e8ad-4bbd-99c7-7603c0e88542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "034382c3-62bd-487e-8f18-b0bef8f4bb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d048bb50-bf05-4bc1-a063-709b6d146819",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a026f60d-a473-4f85-86cf-cf5a46ee9600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240ad4f9-af4b-4b4f-9a8e-d1bb6a3231b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09373875-e6e4-4da7-b3f9-8aff32d62c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "940d9a26-49b2-4912-affa-d0fd47cdc06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdebcee-82e5-475a-ac0e-c0bf449fdb2d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c157a54-480d-4776-869f-b4dc1458ff08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7033e1-0f89-420c-9b7d-9d38739d6d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08aa8659-6424-4fa8-b4a6-af20cc3fb6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6253ed-e6ec-4b78-a9af-110fbb95baf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec29e86-4913-4f72-ad92-ccd03958ec5b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd795432-0a72-4da9-8f9d-183a6f1fdd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a7b0fb95-1b54-4478-94b7-11b5d4aa909b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3a2f90-aea4-4711-b388-0ebf4fbecaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "81335d7f-c5ee-49f2-9a0f-0b096ccf3b32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1870e08f-d992-401d-904b-815e2b605fab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "529c4981-c3f8-41f5-9649-070d8c6f51cb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043fda50-1fe8-4f0f-8a79-96936ae67c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34343288-9dd2-4312-962b-2ba4aeb0f3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99efff82-33db-4452-9027-01f818e76e6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40cc0b4f-4e6e-4c7d-bb19-0a3535901ef9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8631896f-eb43-4b0d-9c64-a34f53c8ed1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b39ba081-0999-478e-a342-0ff90b60101e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68212d2c-a980-487a-aa4c-d88ee6dec45b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71154201-8e6e-44aa-bea5-9034b6948942"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "394045d0-a035-4ce3-91d0-edced05c478b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32280130-2f19-40b2-a26d-17b95918fcb5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1d81610a-0b1a-42a5-880d-ace65ea3542a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2be32898-8991-4ffc-a1c0-c50f1e36715b"
                }
              }
            ]
          },
          {
            "id": "86d6b45d-2424-4cdb-b9f5-344a7d9ad0e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "506cb707-d3fa-4830-8c58-86c4a9b77f7f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "48b38b98-6e9c-4179-8d95-e910d417960f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0e6c4c-ad21-46f2-a88e-ca1ac8aecca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "82a82914-a56b-4e30-be43-6dbe04c4d8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f4caaf-af7e-4a12-ad5b-fce5a094ee00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a8947a-4f29-43d1-b7a1-4e95740a0db8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "461c9513-f081-4856-ac7f-3f10369439b6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d70f78a8-b65c-4325-b603-8bc4714dcaed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67d1c845-7528-45a1-8356-e748884ea770"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d04aaf03-e699-464a-8327-88ce9b9107ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7965c43e-a07d-423a-9ba1-178c978cd112"
                    }
                  }
                ]
              },
              {
                "id": "41ea7824-e9a7-4e4e-919f-9060e27663be",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bb00e99-ce98-4473-ab3f-cc8cf094b0bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbe48488-b26a-44e1-b861-e9a7114397bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "836bdf66-1a29-4f7b-9840-bf636c0f022c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c741be5-cede-4ad3-b715-0d6cd0612496"
                    }
                  }
                ]
              },
              {
                "id": "5cf3ac4b-40aa-4e43-85b4-435c39cebb8b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afb9f5b2-9d2e-4008-ab9f-b683c5db545d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b66935f-a160-4072-b38b-e6a965ce7c1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32113505-ad42-4c9c-87e5-e45790c93422",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7e67d26-e160-4f40-9949-f0c6527bade1"
                    }
                  }
                ]
              },
              {
                "id": "8da999ea-d44f-4910-89f8-f4230265dec8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e7be901-71de-4aa6-bd3a-5e669b878d85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6d13b00-3cfc-454d-8adf-1be14ad5ad1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8da46036-e558-4a46-a686-43fd5d12dd10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "33c9c239-9c3d-4d46-a459-f33c300b12ef"
                    }
                  }
                ]
              },
              {
                "id": "64e276ef-7725-4be3-9593-a05c7c660594",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff64b7b3-cf35-4447-b5e9-e5f866bcff56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c52ca7fb-d71e-40e6-a34a-afefef0a51b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "220cffd5-eb6d-431b-881a-54477c49e9c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ca54d734-2d1a-49e6-8b9b-26cb379941c7"
                    }
                  }
                ]
              },
              {
                "id": "3831eabd-49b6-4089-a330-cfa928cad7a8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb6ed1b8-b60e-47de-ac6b-a30120517b38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ad8e308-93a7-4776-959e-24da48bc04f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aea6e9b3-19e1-4572-8dff-07e4194b100a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f994fbe-3abd-4e29-b9c2-76a56b59a232"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f5ebbb8-7782-4045-90cd-3d9d31f7cffe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c38010dc-705c-4b5f-9e64-7f51538956fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea63e59b-8a26-4e37-880d-6d922259225d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb367e24-f852-4f7b-acec-5e0b2de720d5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea1116b6-f98a-4cf7-b26d-815bd7cbc355",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "301cd3db-7503-45c8-8902-63663a496baa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fbc4730-2670-48ef-a58a-b6bdb5b54e58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "355cb3d9-9a20-45dd-88c2-0ab2316aaeab"
            }
          }
        ]
      },
      {
        "id": "01c90563-cb44-4cdc-ab6c-117d2f57b9da",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ad674a23-7f42-4442-9bd9-5e9071345a88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "222529a8-6ccb-4451-a692-25af8ede937b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "65fa3f77-d5d7-4a24-a319-be02eba5c295",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce695e69-3454-4745-b610-be04776a012b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f083699-9fa9-4c3f-a333-863cb9d0e086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec5f02d-596a-47fe-ab8f-c876ca850236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "56b6fda2-528f-4904-b795-71da85018506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1da2711-46e9-4298-bd70-46a0d0c8b0d7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6714c2-9cab-4402-afd4-01537974195b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a16c86-bc02-4b35-b1a7-891e01c7d057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08f7e7e-8d58-4b55-9d10-72ec741ecf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6773b3c-e6ba-4a21-80a4-8f92ba2efdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef51c60-60ba-430a-8cca-f03f85375b88",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d79524-8b60-4ab5-b1b7-9c48f5a19254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a37b66b-c3e1-4edb-a4de-bc546b6d8192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307582c9-acfd-4b7c-a044-561e714ae0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be48a63a-a93f-4ad2-9090-45f79a2f5d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f56fe2-f0e4-4bcc-a419-47b81ce819f2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47c9ab4-ed78-4cac-806a-ef864e1066b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc756902-e8e2-478f-b07d-ddf94d348ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618a1781-932d-443f-a025-d1c81dfdd430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7a7d8b-f763-4964-96d9-7f48208e408e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8489e2-6bdc-41a7-a58d-68bf30df3688",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699468c2-a86f-4fcc-b613-44c7e0c7c719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db62c852-d4b3-4927-a19c-fe9428e1adc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca00194-b093-49be-8cba-cffe6f633a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c45504ab-fe7d-4e57-bcba-ec0ef996bccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bcdfdb-c9a9-4185-b463-1afeb6c7e399",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c71adf-9fa3-4bc0-80ba-e27baf170b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7960704e-e7df-4df0-9cd8-22be4b6e4805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8af2d7-369a-4ac5-b2c0-8f9a0044a3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "981450fe-92cf-4f19-a770-131f8b1db185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639de214-a43f-498a-b93a-05975e5891f1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39253dff-1550-442f-9afa-4810670a620b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b3d410-882d-4023-9c5b-272cdcd99805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a327854-abd7-49d9-86c9-cf8ab73f88dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1ac670-a0e9-4333-b009-6c1088e97905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2001f174-23e0-4437-b270-414193b7c0cd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2cb6f0-2aa8-434f-b0e0-e2dcc8d59695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e2c544-4ceb-44a6-9d94-246284e78e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991f8d94-9faa-4159-82c1-184c2417bf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c8ccf7-ef39-471d-8f1b-de677c1673d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7253fc-8255-4260-b0c6-d468f2f1162b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec2a934-1422-4bb1-b396-7b5fadb8f039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f29bfe1-33ac-42da-8889-401ad13ab3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dea5197-b310-41e3-91dd-b6fed2758205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2f5997-e680-4ba9-8fb4-2c16f5273d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46870fae-a9ab-4a1d-b36e-34bf59d7e999",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd071acb-5446-48f2-bd0f-f27caafd933d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e74155-81c1-4934-8e3f-1b0e20151045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb82694a-4d8a-42e5-ae05-c5814b66f9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f808234-1031-4b3a-89c3-1d22336d00d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abf665d-55e0-4b7c-b9b4-25646491304b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc51557-0c3d-4c57-ab08-92fa49a976d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5741d4bf-08fb-4309-8617-d1a34f9a53e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdc43b6-f4a5-4f23-a67d-802f95903c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "772eafba-0613-4ae3-a0da-f49eb379aa99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6a81b3-3f64-41f9-8905-8c9396cadbb2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acfa353-9386-4727-8024-c5c736501490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7f4f8d-d717-4c64-b591-bace80aa35ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cf8284-c76e-4524-8262-4f8bf07115f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5765ae64-65d6-47c2-bed0-b7acb482e04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77052bd5-7396-4bab-be7e-5c50b17bc2ee",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bebc75-4769-4f8c-b9c2-7bb7e4c02628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0986c735-2e03-410e-a72e-b18d6529fb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbd8a5d-6b57-4310-80d3-a65962d2f66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c57beaf8-1af6-4a42-a82b-a4d1536148cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f6a26a-e805-49ef-96e2-474ef3e30c09",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e810c21e-8e77-433d-b42d-b7516338d7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5075741-7c26-4e83-bf63-02aafbf37dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6965199b-f558-4859-92d0-db2b46de321e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eaa3fd4-514a-4376-a8a2-052ccac13b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bf2b93-c93c-4e76-bad3-521ab773d467",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa5e07f-487e-4746-a66e-c58c0eb65831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93829ffb-35a8-4bdd-8faf-6cdacd7e3541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b6098b-6051-4ea0-92fe-eb7e36865c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "37769570-67ea-4b12-b8b3-12c4e7b6911f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b112fa-ee53-45d8-9c7f-0f2c50a35804",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f715fcc6-a6a6-428b-87c3-d1f57b7fce49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d714c806-b67b-4ba0-a7ac-0285d2251186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad21180c-c1d8-4b05-82bc-580fe86e4332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5240a09-5b38-48f5-8344-70d1fb03aad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc2d471-3f9e-4859-ae16-74fe74ecd7de",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca4a323-a8b7-47e8-a41f-da466b4d28f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c80e554b-cb91-493c-b07b-0946ae535258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aab888d-17d3-46ba-b8ad-abedf3390177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "096f8901-2544-462d-bef9-0a081c10f809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e9c4ac-667c-4e90-9625-85da1ebd53e5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa713e0b-4bc5-4961-9eab-4e1a07549afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29e23e2-7870-4346-8599-344684cc6e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b4f3b6-5e7a-42ca-9230-a4f6facf8e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6a679f-9824-4888-94ef-7c41759628da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420503a8-5b28-47e4-95de-7c8965e1c768",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f056d4-1f0d-4550-ae72-773344781e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9863b1ea-dc70-4035-a436-2f3663cb8509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c13c02a-4ff7-40a9-9b54-7d747573384c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f59cdf86-fe7e-4a4f-8c0a-a4156cbae0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5eb5b58-3f4a-49b0-bdc4-3604a76d06f9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af845202-f5a2-46c5-ab82-4e2e6feaf673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f762bb72-977b-40b5-be60-74f95f3f70b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfb8f48-c2ea-420e-9b8f-03921e306d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fffc81b-921e-4598-8d60-c58502e592ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6cc6a7-c6cf-48ac-8679-b2322bfbe2a1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922748db-cb00-45b9-8ec1-ddf3f67cd3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95af9ee2-3f20-47f7-9a13-9a38bbaa53d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9d5f5f-0b21-43e5-83d5-0a7844e28d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4b8ca8-80f5-4683-8d1a-76d183642333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a803355f-ccd5-4750-a8d8-7659408169a6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696c1f86-3920-447b-b3a6-4bdcf07b341a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbb96b7-f359-42f1-ac8b-01b8bfe39841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ba93cb-ce93-438b-a69b-9bb86fbca0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41b0b549-7f1b-497e-b1cb-6a8fbec38ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459f32ef-120f-4ef9-9250-97edf08db370",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4f532e-6d33-4e12-b291-6591a8b89c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ca36df-ef7c-4798-bd29-a731863a8147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5723df88-89f3-4fed-b7cb-fa1829f90f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "decde658-bdab-4065-ae24-4d13f597ebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9247b7a-f5fc-4b37-8fd2-cfca67f31c82",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac850814-0ebb-44e7-a140-d8a98d5db323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dde9a09-bae6-4f9d-8d3a-1fcb6f4e9169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a1051d-cf5a-4e0b-874f-234115630e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f100e54e-90b2-403b-a53e-cf3b37f18639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c647b52-ee39-4405-a809-b0bff37ae4be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8c9340-b395-4f29-9b5b-a4ed9f5eb96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89d09ec-e15f-42bc-97a4-d5fbd236015e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0617c2-2b4d-4e6b-bfa5-14a4b7a38365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fdd642-0a7e-46df-807a-1807c519f5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63a51c2-7eb1-4d3b-ae7c-7a1677cc8b7d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac924451-65b7-4537-9f68-95a60cc59a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0baa15dc-5b84-47d7-a80d-dd95599cbfe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019588d5-de55-4516-bae8-15ebcdb1ee1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a10d7c-b979-4fd4-b379-9ddd9feb5a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94470a09-361d-491f-a9ed-66d23d244448",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2078e9-4e87-4a35-a7ca-1cd5f8b4ef0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e096f0-63a1-45d8-8555-8ac93c4515b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bd0667-bd20-427f-8a08-3cf1085477d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7557e7c-b4a7-449a-a449-2d59cad268a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0012866f-8097-4f7a-86e7-722c6e74e7c3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93effeb-9d09-436e-81cd-4bf28b093b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6faa37f7-1a3b-44ce-acbc-dbee24b1116a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87151b8f-376a-4d37-a465-1b64aa9988e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce8e09e-1724-4091-86de-25f3c22320d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037e227c-8c10-4326-a3c6-6c55ef943f8e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099eac79-6391-485b-b220-25df2b62ddb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc61288-29a4-4b36-a259-ab2101cd8a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc5409a-897f-4593-8d63-45f229c9d1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded9f89b-42ab-4040-9e26-45b3be0b484b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c1f884-7ed4-459f-9f89-1479ee900ffb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8140b966-4280-4daf-844a-fde306f7203d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b1c9a5-3287-4d99-a8a5-0af9026fe1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fff02b6-8115-4ea1-b77b-7fae74908498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c0fb4d-7a53-4d49-890e-c3133be6c88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2067755c-bbce-445f-ad9c-1ce3fdf1d68c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03003411-2fcb-477a-a7d5-5ec105ac829f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bae5ea-5926-4081-877b-0e604798781f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbf02c0-4ebf-4df5-822c-9e618369ca60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b66cb5b0-d5fb-4da8-8c12-baddf2019325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c0cd27-07b0-43f1-9b00-902b29332cb7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca995b1-1bf7-436d-a1e9-7d860a3ff118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f914f0-2ad2-47d8-8041-9e85042ca896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178d14db-6d9c-45d6-908c-83e3f4297e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a32f8d-ca05-4cfb-8141-00125ca702e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7da20545-ec35-435a-8aac-2562bb07ffac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "118a4bf3-5332-44dd-9c6f-b62638d607fd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d7f43f-7aa0-458a-b843-d20ec229a94b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ba01fbf6-46b6-4819-bd12-59d81226f89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f867f4-26f8-413c-b191-9d44fd335ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "230f7cac-ef8d-46c3-a266-df5c41058695"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e7b9e50-eac3-4561-a0f8-0980f9dea091",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "737fa9e8-4efa-41f9-bcc7-394a64e0c07b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d514b44-6db2-4fb4-a5d0-e21881b7b2e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "147a301d-3d7e-4269-92f8-4568ca478bb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74659ed3-ad96-4fcd-a904-ce046da8534f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7807e661-8098-4d93-9dca-2566e8eb9928"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22771ed9-33e4-43f6-8289-b0b9f2787a21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c96a9bcb-5aa9-4919-9ca1-2f2ff42b2c03"
            }
          }
        ]
      },
      {
        "id": "ef19d507-cdff-44b8-81ac-c5472517d70e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9a7d88a1-9f54-4306-8257-a6ac0894f43c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41627fde-7f6d-4157-abba-f96638fd3f33",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8203f455-02c6-41ff-a521-e423197659ce",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311316ab-cd16-4ee6-aaa6-66ebd5736fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbd30eb-4c97-4e91-87ed-12d5ca11d861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dcb8c6-8956-4ab0-a3b4-2a7bfd9c9397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "139efabe-d8f5-46f6-9d77-192305da6849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf35df7-bc72-4bd9-a264-dec743be249c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3e74cb-b09e-4617-bf72-2bd6ac42565b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bdb8989-6561-40ea-a6d7-53aa1d745c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb1857a-c9ff-4f21-8145-e2c17d667525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e12faf-9ba4-4f09-9313-d965dbf2e5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719d4e94-43a5-46d3-98a3-feeab76c8898",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50ead10-859c-48a1-98a9-8454e94e6551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331dd249-20e9-4a78-93fc-63e7916b7ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8497801-4b16-4456-bbaf-fecfed9b9d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ee0dfa-592f-4293-aa74-4577af72289c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f54cb56-86aa-4506-82af-946f0febd471",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5a1401-f534-4ae6-ae8c-f09021974598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065725cd-5c6d-4ce1-9dbe-9df9a77ca06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aef7beb-b445-457c-94b8-22d5871bd4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6af737-0332-4231-b4cc-c694ffae35e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c455ee81-ec0a-47b9-b471-3a0c9788b96e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d0bb15-c1b0-43ab-9e29-7806abb3d758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b179fda-b83a-4f96-a97d-59333b5b5220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f38490-a8e2-4e4e-b3c3-576959376bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54564020-743d-4aff-ba2e-e0a4f13801e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad99828-a6f5-4e89-8c74-65a439c5879a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7078c871-182b-40c8-86dd-cbc7db887513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c077219-f9b6-46bc-9454-adb1ec833c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb7d44a-7459-477b-8f10-fd2115aa65d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e792052-9305-4e2f-ac1f-a5b0971470d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ef1339-cf44-4ba3-ad56-2d1c555f0171",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b3ac1d-ce79-4ccf-a6b2-b9a66b6835cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9874395-7368-474f-9d85-bc7d709feb9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93744ef1-73d9-4861-a3fa-78e28cecbbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9be5ec6c-cbee-4972-9e75-18c7c0271091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13edfda1-3db7-4031-87e0-a0502dbfb840",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89500cea-f863-48dc-89ba-7448b1ed7a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fa43f3-a246-446e-938e-1f93fd584b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df3b47e-0ff4-4e07-8c5f-1ba599d0c71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e417d85-a14b-474a-ab54-3547b6c045d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c75b440-a48b-4283-8369-646e8c75ffeb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93ee708-acba-42dc-bec2-3a6612a3a5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3500bff1-0a62-4538-bc7a-cccb71358f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb2fb89-9b66-42b7-aa19-941cdf7170ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6f0050-e3f7-456b-a67b-fd77410dd062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32f70b1-4461-4240-b5af-f13ae6d84773",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05329d3-a703-42ff-bccf-95d399141ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99568154-4116-419b-b587-e054304b3f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077497f8-f7f8-4d4f-80ef-157a76b5a72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c219b6c2-e7f4-4e2d-a382-fe4e383fccbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f598147-565c-448b-ba92-21006ccf729f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb44b7d4-7313-47db-b216-c37ff52678fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88af32fa-438e-46e4-9089-4a059c6f21dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0890269a-7f33-4e75-8c4c-481c37245547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bd06f382-ac97-4336-b5cb-48d352776d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41a4bc5-0855-42dc-b155-c00f1c716b8c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c30363-aacc-4256-abca-1dc726be251d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ff5e68-70f4-4885-a9f3-38df0417e3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9692bc73-a6c3-42f3-a329-31e662e2ab25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "104075da-0a23-4139-bb1d-93b2304ccc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4d494e-99e8-4aa8-9031-50e077e43c3a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e5795b-5620-4da2-970d-3d8a2493b323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb3d430-e13b-44f0-82da-e15985683198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2379ed-988e-4100-9fb0-9c11c228ba0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdc15e0-a648-45af-bdf9-216c36261f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afab08ab-914b-493a-b0fc-2864a345971c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f0d9a9-8709-4593-9e6e-abc978f7dd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a137716-4cf4-4a7a-b815-3d31e382c474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca18463d-75de-4e35-b27d-54238bd5ee23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "27cdc4c4-4f1e-43c1-9ab9-0918ab5253cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394e98c0-e2d1-43ab-ab31-b5c962ca1721",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbf64a9-ea30-40bb-bc5a-90863da7e8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc713f4-4d66-409c-9362-fe8da9c9e429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18744e1-2b9c-4bb1-84be-ca0d68319d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3fdab9-abbf-4eca-8559-9e65c4315975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286daeaa-c068-4ca5-8a6c-91643a0db1d0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6a4765-d3f0-4307-a656-25859892aa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71937c9a-6778-48af-9cf8-6fa4ed682ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4585e5-4007-4a42-bb7f-ab1ea2acbb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5533c394-bda6-44e0-8cce-6d729afb60f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4b974b-bc03-47ba-9b46-1206f74640fb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d983d38e-bb0d-43c3-b7e8-cb58eaf9138d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3c861d-7035-4372-9b89-ab014b6aae99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e1cb29-f32e-423e-b6ce-5a66f267850d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d3ca1b-43f0-4982-8ffc-b44d54068ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047d39d9-cc74-4f41-ae33-ff13c11ad876",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3395a2d-d637-4729-b082-56b39a8e72c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd19e807-fe49-4a35-8bbe-d47690fd2400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb07f7fe-823f-4063-a57f-ee7a9d77178b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "455f06d5-81d5-4961-8081-e210b8cdce40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a84ec67-ed1d-49ce-854f-81e54cc06371",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c110e9a5-90ef-459e-85c5-3c63d61f5207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b2749b-4b27-40d4-b367-bb3a7846a097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ba828d-f02a-4eb6-8749-f12275422f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "527b22a1-b218-42b2-9699-02ab52732f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b38a451-214f-4f4a-afa5-c0ac3861e95a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe10be1-ed2b-4d93-b2ce-872b20d24e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b82626a-c1e4-49ab-ab70-686366f93158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89f703b-a274-4246-bad7-a55f6e5fa5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f45ad961-62bc-40ff-ae90-cbfcf8435efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4a9c0a-0d9b-43d8-9dc5-9c6ea9ca7856",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b946b02b-709f-4845-bf56-501762ebbe31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38c05da-c2ec-4e69-a497-69e543a01e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a8c971-aef4-4103-a1fe-c80b81e44304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd44379e-ff18-4f88-8424-15c86e35d907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62c2380-ce5f-4533-bb1c-1762fae9a353",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a27cbb3-632c-401c-a9f3-aa21d8a53adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195e5ea0-6d31-483b-a561-85046a46660e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879f14c6-3282-4ff2-a066-a8aac9cb5cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e410a17-a07e-461d-a06b-68dbc4597a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db51e0cc-8c62-4beb-96bd-6be069aa35c9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35234569-d510-4b73-9db1-f53a606229a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d92f6c-71dc-49ef-9bff-2830ed7d065e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b01604-bb7d-4d1c-8719-67205e8bdb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf57bb38-5c32-4fd4-9f60-1a389dfeac57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860fa8d6-a6a5-41ec-bcfe-dacc86c91fea",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a114c806-0e77-4742-b4d3-5177c07f317a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40129d46-86a1-48ae-a6ff-c98b55ac7f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fffc3e7-bcff-4ec2-98e4-02d68edae174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cecda9e3-046e-403d-b2cd-e5138095d584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f06580-5a7d-4773-a965-d2e8f7807583",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbb420a-7117-4847-bfdb-8fde859173ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8608dc-043d-4013-9008-f1ab1acf229d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0000b01e-7671-4d62-bd15-276910710cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a48b325-3582-4288-ae4d-f8cac0271aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3859286-6fc3-43a3-aa22-b1aa9bd1705a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6848537-ec75-4b78-95e0-08bea28f8c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e02e23-ec3c-4e3e-a887-ace67f136c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78b752f-216a-4fbd-af28-ff465e16fe9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98af7e6e-ffd4-4820-ac11-d50b2fe67aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c85aa3-55cf-457c-8d80-a079b4edcee2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879c3422-0bc7-415b-ad68-3a87f4ff5a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796d4f3e-f9e2-4dde-8271-b7780a1f8aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3eba1a-a159-4b51-8e5a-132d63b3a20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d49e5d-f952-49ec-81f0-7e650dbe7e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684ebab3-5cf2-405e-a169-b75d42b9126a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede40a37-3261-4068-ab61-edacced92db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c13da1-00ec-447b-8b9f-faa7abf1aeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d3542f-25f7-4acf-a7c7-1c02b682913a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8ddc15-9293-454b-bea5-162174406d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ead439d-b76b-44bb-aaa5-812a026565df",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edc1e0f-888e-48a2-b594-9e07d5686b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c912e850-6bd0-4151-809c-6b4989cfcd7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877b210c-d844-44d6-9ef3-d93cdeed83a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "468eb4df-a155-41ed-97a1-e934921aa09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9e19eb-8f7d-45f5-b368-29065644de68",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48c6b96-982c-4db1-9e34-943b94e8262f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22bc10d5-d1a8-4e71-a55d-54dddae92de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83af2bc-ee4e-4e61-88c6-3a0ef48f4c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c188d0c-8a99-44cf-abbf-f48977714a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f457d9d-20ea-4e44-a4ee-cb5479630961",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4073cdb6-cbb8-4c18-9ccd-26b94c88f98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45726750-5a67-4975-9d80-f879f5a32183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ad8741-6a44-463b-a4d4-12bf39ffede7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c03d02c-fd50-4524-a8c9-951afac5c90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e702ed7-1570-4336-bbde-69ec763d3b8d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868f8e09-a99e-42fa-8638-a8a05ae1bc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb2fb73-dd39-483f-b4cd-d67e821921d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62df7aac-ba93-412e-8539-9e1c32dd8e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d007550-beea-48d0-952a-e479a636331b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e976b79-fa6c-4264-986a-2b70e189ad79",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b860a7-835f-4e08-9895-8d7afba057d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abbe21d-c3e6-4c4c-834a-7e75a08fcdd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d914c2d-e0d6-4d35-8864-8376211e9563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c98d490-0e1f-4d29-8824-efe5dd7799d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93272eda-fee6-4ffd-b48a-f5e34ffa9c69",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4297c14-a039-4715-b7dc-5e426734a881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0578021-8323-487b-8758-6d72627a7e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7270d1-e9f7-40f8-b01b-93a937a7071e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f853fef6-6768-46ab-bcde-d406e6932c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1061643a-109c-4ab7-b57a-7a2f644130e9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7d2f9d-8de0-4bbc-a7ee-aee279dd95c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8deeff0-32a5-42a4-b9c7-e297c0d4b519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ec511a-b0bc-4ae0-afc8-cab28bee16c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96558444-2f03-4159-a7df-aef2c3629096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07baca4-fe48-4ad0-a6d1-437c47e4d2f2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431d4889-cade-48cb-b6c3-c4c29c19a2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eff65d3-58fe-4d4f-b8c0-fa76a9006e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d11276b-110f-4ee9-a08e-e8d00a8b5220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce1af60-9208-42d3-996b-d3a9eb1c3766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d310a9c9-7528-4ae0-8ca8-0ac8aa5ee0b4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1282d9-9d1e-4b3a-832a-0f626c7e9522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c809578f-80eb-4340-ae88-e5168cdde07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a6497b-4f44-4a3f-87db-9e64691b65b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6483e638-0db2-4ea3-acb4-c6edcba1ca7b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "27822d63-0508-426c-a69b-0cceb7622f69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94a131dd-ba10-4078-9218-b768713847ec",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ba475e-8609-4216-aefc-b3388626a8c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "458e87de-c709-488c-b5c1-1e8c721cd63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe5d752-066f-4b86-95d2-69803fd9ee58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4072f751-7050-4ed3-87e4-72152bd0e385"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e66dde59-5c77-4661-be1c-6e3cfa619307",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae02b3f2-26b3-48f9-b341-52f8be24558a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a404acab-c55d-4edf-b802-e96ef57edcb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad291219-7f10-4281-90c4-af8d66c4bc5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e8afceb-d12c-4012-adae-026bb4fa73f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6254ddda-1067-461e-b635-9bda00b12113"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f8c3bfe-fde6-4519-887e-1da07fb9d33c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57c4da25-4baf-4959-8cf7-6f071e4599df"
            }
          }
        ]
      },
      {
        "id": "b4cd9677-5af0-41e7-abe5-2cf21eb28a53",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "04b20a1c-d2b9-4cb8-856c-044e0874f4ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f654d1b-7feb-4b8d-842b-b36a1a900fef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "390e05ef-0d2e-4da7-b6f5-13442293cfef",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3990f2a6-54b5-4286-b328-e663b26e23bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cbd27d-2a8c-4a53-819f-646575a484fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e888de04-8836-4061-84f0-a7ba72626bd9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8b18b2-36f9-48ed-aefd-25189b11e0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb224328-8505-452b-ba9c-2190f39f7e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b258889-7d03-4e03-8e92-6f1c0062c579",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99732ec5-6dcc-458d-b4bd-0276e4c41ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b441f0-9e52-453f-836a-922a73bf2326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbc8497-6dd0-4094-9447-8006035e3645",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239a7607-2414-433a-bfe1-f31eb03983f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3e4110-2636-4a87-9b8d-416761426bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9593ae-7842-491d-86a1-6ad486466b20",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a36b71-c994-4d55-8c6a-1fc169b8706a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3a7312-c6f5-41cf-a68a-d92f520e7fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa23b5e0-587a-460b-9b15-a96cb44a4b9b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2c0af0-8dd5-4073-b290-090ba1829763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29510c2d-e54b-4299-bb56-cbac3dd9d511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d35f9ea-d211-4a6a-926e-4082534dbbb5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49c74a0-8974-4ea1-9b45-2459ca867311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe1fe22-039f-47f0-b504-0725e50cbf1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3277d7-171c-4e49-8d3a-fca2e645854e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253891b6-85f3-4926-a468-f2bc8c0d5565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af9e9ca-7486-4f9c-b205-fdf3b9df7caa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4224db9-d513-489d-8128-b259424d9787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97d6fd8f-d133-4bc2-88db-e0737fb7584a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1f3524-ed79-461d-a4b3-3a3caaf95f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4781fc9c-98da-47df-a57d-365c6c706b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f009af41-acdd-4664-b8c3-f595804ccc50",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785d861c-2f04-4d86-b9f0-fcbfd29e3b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a67d028-96b6-44c7-ad9d-8f85d890e0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37265e18-d460-4df8-bfb2-7415b9632607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63df5a81-e8a8-40f4-99c7-410b5c802bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf95ec50-6458-44a6-acde-2d270984d5ca",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f7143c-7781-4d89-ad76-60d425682748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f8fc7f1-e4cc-466e-8043-ed0060037acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897da01b-c592-4d9b-8738-31293cacf495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23e0c04-1ee4-4653-b8fe-3d8733f76f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6023839b-1737-42b6-baa4-3d582cfe99ff",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af21202f-0dbe-4f70-9f63-57b3bfb1dc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fe65a6-0cc4-4bc8-9ff9-398015213bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b984d5-2542-4ac9-a5b1-8dd8f6309d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc98bdd-d775-48b3-9d9c-80d09c22f614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7784950-271e-43ea-836c-81385aedc21a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cf44b6-f028-4dcc-83fd-a2567cf39a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1e7573-388e-4b43-87cd-46210733bf04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7302d993-e2a8-4b00-891b-b7ba5f07a43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d5bc80-8f94-4786-a62b-92879740fd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c89c05c-b8b6-4876-9c33-62241de1187a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43795c83-924c-41f8-8c9b-565d2f26cb70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffbd3702-cb13-4ce0-99aa-b188457ade8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8da9953-8e77-42a0-b94d-a61b69241254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248d0776-46f9-431e-8c96-807d44438266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55689e4f-546f-4b36-9158-1750a451d2d5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe56824d-f001-4fce-97e6-f0d10babba4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aef096f-e9e1-48d2-84ff-70b9d779d9b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bbaaba-1455-4f7d-ab60-039c57d5a4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95d1970-707d-4188-bf4f-238962bbd2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d73afb0-61f3-4948-b179-d0a8b9f6942f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaf4e94-3b49-4e85-af2e-4cdc15cff59d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e330d6c-04aa-4d39-a650-efce1f4fbbb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f3ab44-b027-4dc3-b96e-d36eac2c4ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de261efb-aba7-4cef-8914-99326cd8d529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ac6936-c4aa-4492-8af2-2eedd2c859a6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004efb49-6dbd-433f-8419-205c88d66afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dd00266-7c65-4ae6-83d7-c4f5ed74e7f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cb29b9-e480-4c5b-ad08-d32a387edd55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e066ea53-8504-4f7f-a0cd-6005d372cdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44499ec9-4d68-4c5c-86c8-dcf7011dacf7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67eeab67-11c2-43d7-89b6-629aae1a1816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b5dee7-d4fe-4004-9a80-b623d00e99c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71eaeef-722b-4b7f-add3-ab1cf86807e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a880b459-e983-4c4c-82c5-9ea84f04aaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c131af-a98d-4b55-a12d-b90be1eeba87",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37be0b39-73e2-466a-b3d9-a1a150b8454a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454228de-8d5f-48d7-9380-73018b9b0a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ef4a60-7411-4126-9be5-221725af4645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d48ead-16da-4b7b-864b-89b510705fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc26c0a-8a30-4f3c-8fed-2b70ccd5c704",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbdcd06-f912-48bb-a567-450e4cad3c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ed9003-7d64-4ccd-8f54-25ff60734163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed0d7d3-c87e-4558-b4df-440b9e01dd39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e740418b-b643-48b0-bb5f-a1f31efaf985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbb8aab-a763-4148-9881-7a33d1c0cfa8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cff683-4722-41ab-80aa-33aeb9f93c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09c2fd3-5a3a-4757-bfa6-ad0d0dfd6b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c6e9a7-9d75-45c0-9a48-5a5cfe9c7345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36168fba-e2dc-4845-a9b0-9859b6d7075a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481da727-6751-431b-a059-4b0d86eecb44",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae99e30a-0b15-408b-85a1-75be428a6c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b14c093-3008-47af-9e6a-a11459a3d4cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2b64ec-8c39-4067-a559-8d6074186612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb6e2a7-a0b1-44b8-af26-1a6ae72dcc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a143c93-1c38-469e-b242-8f29a0a99120",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7cb50c-a3fb-4eae-adf4-56205f8cbcff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b2665f-2db6-4f04-b966-ce52279675a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73993c7a-8dfd-4fb2-bbdc-2f6b3b9b012b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29280af7-4c8d-4c66-9640-307496ad6dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf77ea3-6877-422e-ab7e-0906c6c53830",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa674a8c-82fd-4cc2-948a-d41fbc71e54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad9f717-c6df-4943-a0b2-60966a5a0756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347befa0-ecbf-4f33-8d3f-65bd0f50240d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a26594-b7fd-4d2f-b74f-4ab7974b7ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c7ccd4-68fb-4451-b823-e5d6ffc6e018",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bbcd67-fb62-439c-9190-dcd39f030a3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fccb3153-a09f-436b-92e5-af5396264f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff7ff00-f2fe-430a-b4c9-96aa2281396c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a564cf-4f07-4ec5-aea7-dd2ade02a116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e77cc3-425f-45d5-bb9f-be518f1c759b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b6cc24-2180-448e-9566-a9a9c7c80529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d25faa-3628-4fd1-b9b9-91ee39d0c8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426bea8e-88d8-4e96-be95-fc89029f3581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1518777c-3788-4c4c-9aa8-3ff412d0c136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a92615-6358-4b4d-972f-f19fd6d5cb52",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2334ad91-1af5-40cd-ab1b-3a2efb15615d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "180c3ee3-78c4-4e55-af4a-90c5b23831f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad66aa08-9108-4289-9dd4-2a078029525c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fbd7cd-2228-4977-a36d-64e490aa4fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5020fe-2716-47f9-8ca5-55f0ff7c53d3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b932700-a4e7-4e53-82dd-d47f3c15dc0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "997c0242-e061-4b74-b12b-0974e4b04df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f18235-d7f2-477f-95ba-6c8d99d86049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49552b26-314b-4c9b-8260-63847260df10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447dbd6c-7c24-4167-9c80-efeb41ead271",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5e5569-0444-49ad-a83e-3f9f3bc31fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100cfb6e-6342-4569-a863-a58249702f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8b5ca4-56c5-475b-b5b1-b605e56b4aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d93b01-4307-4142-8cc5-ca8b5ef4c9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e48c13-ab14-4e48-bad9-6f95191cf57c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5955a4-455e-4753-8591-bef06ef17429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acaa988e-2388-4353-847b-27ae4dc03a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4a5a2b-1c4c-4e2e-ad46-cce20b4b785f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9b375b-da09-450b-8dc2-8a2778a52b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362a6adb-4024-458b-9290-70bc7572cf49",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91623f2-3920-41a7-8319-dd1755428b66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5baf81a2-0558-47af-8bc1-dee34e694648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fe8719-34d7-4c63-9697-274e9eb93323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1fbeb5-cd6f-44c7-a7ae-5100603ad6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aeb8307-eec4-411e-b64a-a10a7657ea7b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c2c295-6230-4d96-996d-6efa183118d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b214987a-061e-40bd-8e05-f17353179f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe890b31-aef1-4d57-990b-9748d58e1cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7346dd-96dd-4161-9d55-7b64f7ed3498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64159ab0-7608-4040-b4b7-c90532f18f59",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b60a299-7f05-41cc-9eb6-3a7a8fe82a26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83e91d36-7d77-4a6b-b7bb-e14880ffedf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cfe6a4-7539-4767-82ef-830c917defd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4064a0d5-9711-47ef-87e1-45d43bb84e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1ce2cf-0d5a-4e35-af1f-7590459a9d2f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d472ac53-6201-450e-b6f2-1bd266567856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a2c513-1d3e-4566-835c-d937565c8417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ab3e59-f3ab-4534-a9e7-376ae6932a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e242c1-8435-47db-b088-0aa3a196f755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e001d074-a7db-4b95-9acb-a54185acc09c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044da92b-d427-43a9-844e-6b7e4a538c26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e284103-af5d-4078-95fd-7b6a4272e117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8833e7c-e9bc-468a-971d-b49eb0f1e113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ec0c66-a6dd-48d0-9151-6aa4ac36eba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cae9bd-b633-4009-919a-5e3046ae62ed",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615e3589-ee13-42d0-80b6-b703f652ef20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50764b1-cc2f-42f9-bdd2-ea5ce15c6ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52b7487-118f-40cd-b05b-2482eef4ff3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685f1a7e-02bc-469c-879d-1200b96e32ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbb7226-feca-4c17-bc18-f9d5009c4901",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e57b325-ed91-4536-8991-a5255ad040c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f22b15-91df-4756-9992-5065f72c2f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d619ce-dcac-4d7e-93c1-b1fd12e9c72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ce9196-bac1-4fc2-b9be-9b32c6bd0af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dfe3a1-ef3a-468e-81d8-c109dab97e12",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa72f082-a140-4ff9-8d38-add0d14ba338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ca1226-4ade-4c07-b218-6873e5806065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cb849d-1eeb-498f-8fe5-b5c88ff98ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170ad90f-ad14-4a0a-8ba5-369eeaa7449c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d729afa6-f019-4cdb-aee6-ddf525339cae",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d454920-6e8f-4f3e-91cd-2643d0bbe4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189e82db-1a86-4e83-9574-2856621aaaf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3298e7a3-aeab-4bd9-bbec-2b18468f76ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67aef1af-4fab-47b5-907a-1fcb18445ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220ba5d4-d74f-49e4-aeee-6f20463c9790",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52ade3e-23b3-434b-ab8e-46521008c0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd978c8a-0c53-42b4-a4a9-f65c4fdd2630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035015b1-78b4-40ea-96f9-34473b8534e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69204a73-2373-4e6b-b458-409744356a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7677357a-8126-4249-a066-9417279f09c3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735e701c-a4a5-4349-841b-954c8a451a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98723a6f-8e52-4e2b-869e-5b35107917cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b32a4f-28d4-40c2-8ab0-4035c3e3b641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db86cb5-71ae-4ea8-b13c-52aecbbe335f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8defef5-372e-4db0-9c93-5939db130997",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051da3ca-5722-4bf6-a28f-517bbdefc6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1285b41-fae5-4f59-a6ea-7b12148bdc37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ac0698-faa3-4472-805f-df4c3c415d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ee5b2a-9e3c-447b-870e-dd551d4bfa0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539c6625-02b9-4d32-8d9d-70d1ad0d6452",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2171b6-4764-4a50-9cb7-d5ef07193599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bf9e19-3ad8-4fde-ba2c-32dc6460e234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bea5e8e-f395-4803-8c34-3b89f36b4bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ab4857-eef1-4842-8f0c-3946a6dd3d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e2f260-1e81-4ccf-9b46-d958248fb714",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b285d3bb-d1a8-4f2f-9ec1-2dd90a37c4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf351ad-9f08-4191-aa37-5bd525f490ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8a99bb-e9c1-44a3-b1d0-bc794eeb372d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271a891c-29f2-4cfd-96f8-6a9f49333430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f509c76-cce1-4711-8397-1270e3bf753d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb2f1fd-6135-4973-be42-fe52ca92a0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03683e3-f238-482d-91b8-a94f328cc9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c050cd3e-5386-464a-b881-98c67645756b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef637f66-2cc5-478e-8f79-1f5451251f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1e118d-c769-4e44-bd0e-a4bbec476969",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a78bf96-3fbb-4e7a-8ca1-879a037a4b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b22aa9c-1a98-44f8-b2a2-06a7cb0b7a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233d2e2d-93c8-478d-ae13-20ee27676dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75becb2a-080f-4463-b4fd-01b7d71ecb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c72def-11fd-44cd-95c0-15b14172a057",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ff8162-5b8d-4c52-a694-effae7034dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8381906d-ff73-42d4-a432-05d4ef47de81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461bcbe4-a2c3-47bf-afd8-685fea6f037a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405ca89f-2863-4c5d-bc31-c4840948e4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f09bf8-f1c1-4119-8b44-8fc3fc21903d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af44756-3797-4953-9d96-1495361d2d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f9968d-43d5-47b8-9d09-22371dba8964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b5b075-7c38-47f2-a12b-2d8ecb48adbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e35f75-9436-4a80-93f7-54a3e599bd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993b5033-20e7-4212-99fc-35f40ca18867",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8615fab2-28e3-4fe8-a4ea-27e6441b5c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31db3c1-d2d6-4ebc-8289-ecc9a3ed333e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8333e06-e1b9-430f-a943-e8a570be3319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d204df4a-397f-4dbb-964f-f5bd83ed7036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08aad8a8-4783-40c4-b4d8-3b1b44111254",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a4d5ac-c54d-467f-9a8b-6156d0e7f1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a76f19b-f6b9-4fc3-96eb-3aaa50f40062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2e5960-ff8c-4824-b14f-12d81898face",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba3f51b-7f67-48de-a1e7-5f0dac8509ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc244cea-79ad-49a9-baa6-4d259608c847",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694347d1-252a-48f0-96d1-d6423c7bf9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42154c81-794e-4fde-b3b9-21663e7ab804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a419d1-4a10-4c4c-9fd5-cad9e2f1e71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a748471-98b9-44f2-964b-3f6bce5d4ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bd5fe9-b682-44b2-8d0c-6a19c0012128",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e62fd4-e771-4bd8-9958-3b7bde319469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87886ab7-e5c1-46b0-8947-6f9dd46981ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c59e64-5fd0-40cc-9fd6-36b234a2e9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18a7f3f-e4e2-492b-962c-10eab531bc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656d837f-ac34-489f-b9f8-145896f9c02a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6f8f6e-843e-4033-9383-833d7c7764d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903b3df9-8c1b-4e62-9788-2486bbf46ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3783af78-c84d-455d-b102-3aab3358df94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572bdb3e-acfa-4aec-bf53-842ab5158988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32defff4-ac93-4fbd-b16e-d13e290aef50",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b58ad9e-babe-4509-8577-029eb53438f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234a036b-572c-468c-a004-ded2ca949e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49793c18-5be4-48f4-9be1-dd7797698670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ca5584-7953-4788-93be-989e42548e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e3b776-67c6-440b-b150-495aaab0ccf8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e118ca8-545e-4111-b49c-f100eabfe6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14551f4-696c-4194-a5fd-3ecf2842d805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51954b54-ed23-450e-9215-23c4dc9cd0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f158e5ca-4dad-42d6-9479-5f7889f36140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a9a295-8cac-415c-885e-1e4db05fcd18",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f371b203-136f-4382-8a44-3db611b72dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a40a8c-a421-4750-8e66-54f0dbbf3b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eabd9f6-178e-4f05-a8c7-d61455ad0dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319e84ca-480b-4072-be86-8f3caf4ffc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c47bc4d-452c-4624-b73c-a31f64584bbf",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab92e9c-6de1-4f34-8091-d6ff83fd022f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45375aa-caad-4828-acb8-733433137c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f74eb7-e3ab-4cbd-87f6-90c07bc7080a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76eae35-5f81-4179-b941-d55adb6bf661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e64b3e1-790c-40cf-832c-37733803f96a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2ce1c4-4725-409c-9f11-1225c89aa66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55121384-fb82-40c3-9d76-595797a7fa9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c34457-9f8f-493d-9a69-899dec6bb04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3551f0eb-5095-413e-9ec8-8ab6ac97e134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e37a06-a6fa-4bc4-8f76-2a4738c48f18",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1febed41-09f5-4be6-85cc-dd0b2bc705eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83d0828-067f-4a12-99dc-96692a75fe52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9653b8-b518-4846-811c-902e4de380cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d5a007-bab0-4e4e-9cc4-8bb0dcb7feca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149d4e92-d95d-43bd-936f-525c70fd0b29",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101e6664-244b-42f8-96a1-8075926d1095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a99a6c-9c68-4c78-9d30-c826ddb7eeb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636c5d26-44c7-40ff-b519-cce699297d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efc2ac2-d340-450e-9c86-682f6add30aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce36f13b-7aea-4fa4-a6bf-8cab4f90ccbc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99091c22-4d44-4d28-9afa-aa9fe765f67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1cb1db2-9221-4a8e-ab2d-c350e41ce54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3005b5af-cd37-4d3e-af10-3467871b6786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5856f5d8-07f8-48f2-84df-6c3ba1dcb91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb38560-36fb-42f2-9b50-96ff66fac64e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabd75c3-333b-4d01-8a93-e5f89f3e2588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fccdc07c-d9c9-4953-965b-ccfb638274dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090e7f89-f02a-450b-99aa-2bf411d522cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d9eaa4-2e57-41b5-995c-09d8013b1cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73375939-b5ba-4260-89b8-d80577a2e49b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fce1e4-80d9-411f-bc41-e68e2aa513ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0c9035-b084-4304-ae35-327d68ddad57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503781fa-47f1-4111-87e4-ebee8150d5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060564e8-c0af-4a14-8ddb-80edcaade291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbe3409-9f9d-4f4c-a110-1d7f73d5dfe5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fc62de-7176-4447-9198-36d9fa4fddec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99edd5c-5982-43f1-9be4-7a670e22dd8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a364db-23a4-41db-833f-ea4e84c5d489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd88c63-e20c-4d73-b906-d705c456364b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e9a598-563e-4fca-b1a2-cbf33711a2b4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01ce40b-d732-494c-b249-21b5cb9b2e71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c7a49e-4584-4975-bda4-2c7a901c8e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a88d37-c8e9-4187-80dc-37f23dec341c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46dac119-6830-4274-8f02-888039f527ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f3efea-6078-430d-a7f1-f220bd631966",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e8d256-2278-4609-9878-ccd26f6ad9ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65b7c537-568f-4f52-9aca-6be5d2acb8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce69883b-53bb-4690-b038-dbdfe772ed77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc6c72c-8514-4182-bbc9-a7470ac294c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99901c8b-81e1-4954-b33a-762f100b09a4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c194014d-8a53-449e-95be-6f1fa2226c14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a3a410d-6252-44e2-8f4d-82cb96b666d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadda38e-beb5-4404-ba59-a3832b44a653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261ecd95-b234-491f-b6fc-7c5733805e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22b15e1-d4a0-471e-b1f5-fa06eda1d93e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca4b704-717e-4a49-85ee-96d5d7b4f207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc6ecbf7-7e83-40c0-8e10-0b004aca8f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1d918b-f103-480c-b537-135380f304bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645e46bd-a458-475e-a635-7ed48ebec1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135c8622-a567-4f5c-a5b2-d7eaa99f14ec",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8215a0cc-8c5b-4367-8995-ab2cf30c9ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e8f4f87-4c12-4bd3-ab66-c768be1d10fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4619168f-a578-4a55-8e25-10300d5dc655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb40bb8-09c0-4634-a893-f1b7fbcb824a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9642c488-9b35-409d-88d5-be6d10441772",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc2c993-7733-4e75-b8e9-bc84b881c190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c33b6027-9561-4705-a1b5-5722184b59c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6390b2-55b6-4f53-b9ed-6a40621872f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c35457-247e-4d2d-b279-49236181dc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761f56a2-84d7-4a07-b842-ef091027dd97",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e043d3a1-f417-48dd-88a6-dc0e6b54f2d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88dea75b-c63b-4e95-ba34-d1a52c98c748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a9739b-12f2-4ec4-b999-5ebe0ff371b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1b04d8-aee8-44f0-9e17-5380e2f8e163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f34668b-0f59-423a-8eeb-23d2ad38c391",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d377a20f-2d75-4ddd-a7e9-2437da5a183e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82666665-7114-4337-acb1-e0886246b116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c73e9b6-9642-491d-ac7c-ee32c56928de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911a40df-b4c5-4249-8309-6c785330a26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9b7588-d818-4a91-b2c9-6f81b05ec699",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707e7d25-74a2-4d61-a183-3b7abd005293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a4d8b3d-078f-40a8-8896-4b70be061ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2261da94-d74b-4058-860e-2b2bf0891888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663c92ea-abdf-4c52-8065-ec979e72e9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4705d882-d6c4-4908-8215-a6e59dbddd29",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76afe683-31dc-44f2-89b9-24796681bd81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9a06522-ff2e-4dad-88c0-7183d784ee8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b49020-b201-43a8-92d9-37ef32d3dcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6866fd-4eb8-4370-9618-98deeaa62cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505cb8f3-f820-4efa-91e2-7178633092bb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038373e5-97da-47ba-91bb-8c814bf3c09e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50f2fe0e-5a4e-40b9-ac7e-4aa1fcedf0ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d539ea1-cd7f-4c29-9f5b-66be1a8a7dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff133af4-a9d4-45bf-8fbc-c460838cee66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48231a01-54a5-4a29-a20e-f65000a92c90",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14f42ee-8c3b-403e-95bf-07b0d7efaba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88878adf-a30d-47f7-8b6b-372b6ffd4ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b68f49d-84a0-4f46-a17b-835d36918e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c64f81-3182-4b48-b882-8f6f54819752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b2d564-bb7d-438d-9d1a-1ea7fc34aa56",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddf21fa-8e7b-411f-ae4c-117702a1220a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3580db4-e5aa-4d16-91d8-283b383898ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4617e93-e51a-4cdf-81d8-fc175fe73838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fa9968-a6f4-4a1d-bef0-c754d231f37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2855e340-6616-4716-9101-d848feebbe89",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9e56bb-edee-44cc-9ac3-ca610fbf7035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7573b0c-464f-4d46-8324-51be11dafdb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8699f24b-5426-451a-a2a1-677343f7c1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffe8c76-61b0-4fca-86e5-6219f316fecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a7e4af-c565-4bf5-84c4-56b68a4002e1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca88105a-b4e3-44cb-bd1f-fdd13f51e381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b98bf01-b60c-4430-b7f6-eda3f8d6fae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450c13df-b0d2-4704-b963-e06d52b42e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb62d12-704b-4f93-81ad-99affb9ca257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41595885-3357-4678-ad69-78f2c4d1e6b7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c109183-d9f1-4f08-aff3-a9b123c4aa91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65caad2c-6488-49f9-b181-465125ff022a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ef79fb-08e1-4d99-bd21-bae7c1f3257b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453db7ad-b54c-4321-bdb0-99674d0170ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d86243-472a-40d7-a0c7-b1c9d40275c0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f852dd-9114-4277-b48a-a9a5800e6c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30032ef9-1ab4-48ea-a4a1-8f6c1cb693e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915c1540-dfd6-4ebd-94f9-5efb67705815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6041063e-174b-4e64-ac2e-c9fbc016ded6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e74fc0-94b1-4b88-8c62-d156421f37cb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c314e9-4b5c-409b-91d2-92acc9df5882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb0f517-95c2-4202-9948-13c43aa81b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028e1d13-f87e-40bb-a8b1-c985ba4e4cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec367a48-2aec-46fc-a6c8-c1cfe721cb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6e786f-1ace-462b-a416-a640b74ac7c0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f081511-e413-4a81-af8d-d7dc92196d45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d446e76e-939b-4e5b-afc7-5f9a70de7ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aab8b2-12a0-4e9a-b46d-3cb18ddf3ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7405de88-c2c8-4cf8-af95-c133f0e5e4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb7d1cf-abf3-49f2-b222-443ee8a51684",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc392cd-5338-47d2-8356-29674cf8581b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d6618e-cbb4-4ee7-8722-c7bf32a4ed8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888527d6-6c23-4d41-bf8f-dcef4d16e7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c828f99b-96b5-405f-9c39-cb51a848d9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b2fb74-6b6e-4890-9c63-8baee57418b1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7f75c0-be00-407d-b94c-3ac45c295024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dcdcbba-d6e4-46e5-bb66-08fe1d36b5c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21d3b3d-c6c2-4e30-ae76-30cac806d407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fa0f27-2117-496a-9db5-3fa83297ca3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54868851-8c97-4f18-ac59-83939d037435",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601387a3-30e6-4a9f-8a75-ca11e1ff74d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f3bf96-b5ba-46e2-b20d-9fd17af58ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b32e82c-a633-441e-92cf-7fb74b99e909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69359eb-5b45-4d2e-8d56-62ea444b80fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa59ba8-409e-4e66-8839-3ef274d670ce",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b679d991-b7ae-4360-b9bc-b858f92fcae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e37c27c-da24-4281-92ef-6f513b717a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a108384d-b4c5-41d0-bd9d-b3103fa16235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d17e51d-63f1-4a10-b9c0-639553507eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95186d2-a794-4f7c-8ed4-6e694448e936",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e724ac-f21f-44b9-8c25-d43637e45896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3f8fe1b-0db4-4117-accb-f2b177552172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae33c80-b782-48f7-bc9d-e197fbf311d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8d1b03-6695-4009-a45b-4902102e45e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c60145-6bc8-46e7-b157-9518ae4110b4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f20e890-e004-4da7-bb6c-698141ad8d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7f939b-bbab-442f-8a00-53f271006ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae92e38-891e-4708-b4d4-532c35c25189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70726148-9c76-48b1-ae94-147013a55370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a099ca18-21c6-425d-ab9b-ff861f827f50",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015e159a-7ef9-46fa-aef9-437368c651d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afca4b03-014e-4cd4-98f6-9ce22911871c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8610e66d-9ea3-4b9f-bfcf-549db3e6f528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dad973a-f503-463f-a375-9f82efd4076f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f4ce9a-3038-4047-b38d-ebc8c365bc5f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926ce806-450c-4c59-b31a-36118ac383a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "604fcde8-3e15-4377-8f5d-2f2ee49cb51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adabcdd-280a-4305-b221-365ad0dbbe16",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d53614-8cf3-46a7-8f59-222b07ac6edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8527c16a-9251-4bc8-bf81-d93d65163840",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53dfdd7-cf0e-40ce-b85c-819b754fb222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb839a9d-fa70-4c4f-b31d-fbec827e4c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56aaf345-8067-4a92-95e3-49d4c088f4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d1fa44-5677-4288-b6e0-1e01e213febc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2802a377-6513-40df-859d-f8983f4fd686",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77cce25-5d47-4dd6-9c33-196b87681661",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f11be6-920d-4f19-a2fc-c692acf1dee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630503d7-6303-46db-8383-336c8325eded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fc0e19-414e-4498-a391-0838e7964de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eed0aad-2826-4dc4-8d12-efdd9b8bd50c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8776afe5-ecb2-4831-a627-7259d9baebaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4fbf615-afdd-453b-845b-155759499cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c29350-bd7b-4733-8354-260e6b784864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e0a7b7-7c1f-4fe1-9bdb-22ca8a4ca179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3663ed8-d0a0-47ef-9c0b-10582408935f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5983a42c-9bad-4f96-ab23-7e41e0f8a486",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51fefc6a-fe18-44a8-be70-79758640de9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f14fab8-f2a6-4925-bee5-6d5db290e4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5fc3ef-f899-4324-9dad-a7df3092843d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbc2929-d9ee-43e8-ad9a-ba944fda929a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972394e8-3bb3-4844-9bfd-82ccfde9c7cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "901043f9-56e7-4c17-b6ea-9c2cbe01fd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81013c15-8e92-42af-a8b7-82e9d4e0044b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0263f6-c105-41a3-95ab-d7d6a45e937a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda06115-1b36-4c6f-be61-8b0827cb078b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a843781c-a2fb-4e2f-84c9-288c0adf5a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a50b40-97e5-4d1a-8d4f-d77a7fca3013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19280d7d-0fd5-4ad3-a99f-cae4e40c7045",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff1bcf6-4ed2-4a19-908f-fd14688b7721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3841211e-a003-4a49-8ee7-6e56ae7ebfc7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e73559-6269-4e2e-a2a0-ae26dbee9f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c997e8-921c-4cb8-a860-e5b36b59210e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c42bda-dc65-441f-8003-968f6570de53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2917b990-86cd-4a39-a789-4607a16c0e8d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b060e647-cde7-4d63-991c-c2a66c8a990d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98bfb79e-1ee0-4c6b-b5a6-fb8499e7cfed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "113737fb-ca09-4781-a4e1-75c0c4a930ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3d617f0-d9a4-4228-9d79-9017f916011e"
                    }
                  }
                ]
              },
              {
                "id": "fff9437d-6505-41fa-bc9c-d8131db8b125",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4fa6760-dd2d-4a30-8794-bc4922ce884b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44276f4a-2f69-45a3-a880-b715a39ba073",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "61475af0-3e8c-40ab-8e4a-b2962c4a5561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80067b36-c37a-48ba-9923-61efb5769fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98f2aaf4-da41-42a1-95ad-935d1b20b208"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c530739-fcff-4e44-9f0a-1e725578d681",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20ed6524-291c-4f6e-9651-7f326b3a3f39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf615399-160a-4a8a-a460-ee8a0a64dadb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3040cc3c-a882-4538-af7c-42d241932579"
                    }
                  }
                ]
              },
              {
                "id": "680f10f7-52a8-41bf-bb34-ccbcd2829a5b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7c10daf4-4575-47ee-90fb-4d63491d3228",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e51aa8-df67-483e-acb4-8eaac49e09b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3add4ebf-117e-400c-b1c7-ae2fa478c988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6031f790-f464-4f80-bb91-6b2596d02ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "defc89c2-0dde-4aed-b1a8-44554a35ea77"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7d0f1cbb-a131-465b-b1b7-07bcde210d58",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c53f741-d77b-4b9f-ab34-60ebaf8f78d7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce1547fa-979a-42d1-abb2-6f3b4cdacbbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "93eb6933-32c2-4d61-8ef8-19ab33105f7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2634d83c-64fb-4a27-b3e3-c9a239f1f3f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f525e63-edaf-4ee5-9f9f-bbd30aad688c"
                    }
                  }
                ]
              },
              {
                "id": "19fef49b-11e8-4625-882c-c20790704cf5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cb6a70b-a9dc-4a74-ac4c-2d64072fb3b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9b6a48fb-32ce-4a69-965c-ba0ee2e5ed26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca95907a-a598-4cfc-8b95-d2e876f9ad7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a723d6e8-34d7-4b3e-88dd-83adeeca4c12"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fcda215-520e-401c-9f7b-9a9198ea996f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d5eae0e6-4bf6-4794-81b3-44aa2c58d24b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5f5089f-5d61-4d85-ac42-203728f341ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16c4464e-a09b-41e3-9bc3-e4b6e953fdd9"
            }
          }
        ]
      },
      {
        "id": "a271e083-d69b-4b7f-9d96-77d339917643",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7e6269f3-d9e3-42dc-ac84-93d57c9849e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0a9e356-cfc1-4d08-af50-f23ddb3128c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e026a91f-2a0f-493b-8592-ffd7d3debd65",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19f902f-18f5-4337-bd4f-a43cf387db55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "db9edcac-2915-4791-999c-b34dd9e38018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505708d5-cd9f-45e2-843f-644cc383968c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4c62b00-a111-4378-9376-dc92e7ee23c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1414204-3f2c-4d15-947c-032dc6270bf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb206a4f-96fb-4367-a062-29867629aa4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e37d7c2-ffff-459f-8e98-9e2de6948932",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97786e1a-ab9c-407c-a125-68073273635b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8441e2f7-b085-431c-a150-5c2b3cdf9fd2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e566c8e6-72ef-44b2-9f51-e58a102a32c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7856bbd-44a2-49ad-8291-dee84fac0315",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08e57fd8-1db1-421c-8197-9595fdb092fb"
            }
          }
        ]
      },
      {
        "id": "ff8580ca-eba9-42f4-b7e5-736236367419",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "42372877-9b47-4592-aaf9-097f3bd9ea1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ea3793c-5c36-4dcf-8a82-dfcf1d1d6acf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1077d99-d2ad-41b6-b388-03310a87fefe",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442f05df-d229-4c8c-b7bd-3aaa03619e46",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "163a5e1d-eef3-4975-bf20-17473fbf2fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf2be24-45f9-4bf8-b5a4-28e09c1c57b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4f6b0d4-7256-4c7e-8d3e-6e173c13d2eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f3f911c-e371-4dde-ae88-586344ef1d97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ddb795c-d36a-4663-9e1e-8df047ca443a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7d5ef9d-68a0-4061-9985-039f05fee908",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb8b648d-302b-47af-b878-09e07488aa3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61c622e3-822d-498e-ae55-20b975f38f36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "88f60268-5961-4618-bb60-56c2fb05436c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7af5e1a1-f153-406e-9472-4082e155b4b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de4d2095-0323-466c-858d-dcb536b93d8b"
            }
          }
        ]
      },
      {
        "id": "4634f808-3de8-4460-a5f6-a34f614121a6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4fc72009-c048-4bec-a327-5cb6209588da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f8030a0-5e2c-4ad4-8269-f533d3a88f13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8156d9f2-92a3-4bff-b251-18af4a6a7267",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ccc1a1-b22d-4fb6-b4d6-fdd8458395bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93398b37-5dd4-464d-8538-26c7bcae92bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86614163-4c50-46fe-a074-51bf3fe61fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a44eb2dd-c2d7-444c-bc97-0812b95a32d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe01abc8-61a1-4156-9223-a4027b6c812b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be2d8090-95cf-4836-9c53-eef06780e8e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2aef7aa-ad94-4a92-8d29-fa1f1978e828",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2de6437-35da-415b-bb4c-209c3de46e92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45a73bb7-de41-4266-a463-7c8746556132",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "546790f8-3055-4f55-986a-604cdc7065bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d42cf33-004e-41b4-92b6-7b235954880b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd2b6f98-7a5b-4c76-bde5-aeabff87866a"
            }
          }
        ]
      },
      {
        "id": "002a26e0-aa4b-43f3-9507-8d8435c0ad2a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f27d9d4-4f18-4914-8369-fa35e373265b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07a79786-5c66-4cf7-a25e-49b1f8f9401a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c27a58ca-ebf9-4ed2-90ee-d82044025015",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6db526c-4c30-4253-8257-8d0b75dea6aa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a3eaf6e-07ad-4b19-afa5-d87b32787999",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 31.354385964912282,
      "responseMin": 6,
      "responseMax": 291,
      "responseSd": 25.683034677331186,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703550868914,
      "completed": 1703550886829
    },
    "executions": [
      {
        "id": "00467fca-99ce-4906-8d89-17d7b405d9d7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "528d662f-86db-4e20-9a9b-a623a9a476b1",
          "httpRequestId": "fb64ae94-22e8-44dd-a94b-7e53fb229318"
        },
        "item": {
          "id": "00467fca-99ce-4906-8d89-17d7b405d9d7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0c6db58b-1e17-4e5f-97f3-74d9d23ba390",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "0bf30ff7-33e8-4408-a68d-5bffe96ab4d1",
        "cursor": {
          "ref": "9e406c3c-6853-4f85-9bab-9f506f012d18",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "39cc1509-7856-4c5c-8064-7708c17c4ac0"
        },
        "item": {
          "id": "0bf30ff7-33e8-4408-a68d-5bffe96ab4d1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "28419f5f-83d2-48e2-b931-9958c18b4505",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "e2704162-dd10-49e6-b98c-0af942859eec",
        "cursor": {
          "ref": "b6d6fed6-3887-4f62-a98f-e05b1f4ef99b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "db9788ef-c83e-499f-9302-0e2adff0a48d"
        },
        "item": {
          "id": "e2704162-dd10-49e6-b98c-0af942859eec",
          "name": "did_json"
        },
        "response": {
          "id": "b32ad651-9e45-4e81-a298-a26c3aa8a184",
          "status": "OK",
          "code": 200,
          "responseTime": 222,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d7ef3c-f619-4546-9ec3-c9fb59fd2fd0",
        "cursor": {
          "ref": "d1628568-00a5-4636-a69c-0c3d3668206d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7380eb5-8d7d-4668-aa64-9c788c24be95"
        },
        "item": {
          "id": "a1d7ef3c-f619-4546-9ec3-c9fb59fd2fd0",
          "name": "did:invalid"
        },
        "response": {
          "id": "9417a258-e643-4692-be43-02d9a875ea42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d7ef3c-f619-4546-9ec3-c9fb59fd2fd0",
        "cursor": {
          "ref": "d1628568-00a5-4636-a69c-0c3d3668206d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b7380eb5-8d7d-4668-aa64-9c788c24be95"
        },
        "item": {
          "id": "a1d7ef3c-f619-4546-9ec3-c9fb59fd2fd0",
          "name": "did:invalid"
        },
        "response": {
          "id": "9417a258-e643-4692-be43-02d9a875ea42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a3bf7e-dd04-4ef6-a2bf-3ab74e23d9ea",
        "cursor": {
          "ref": "a78b15d1-754f-4bd3-a735-0a0c9c5d317c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bd3f8945-96ba-435e-a0f1-70243c48215b"
        },
        "item": {
          "id": "c3a3bf7e-dd04-4ef6-a2bf-3ab74e23d9ea",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a2ede3d2-cef8-443b-93c4-9da9c813911f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 124,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3271ddd-03e3-4357-b64e-e7c79b1a1717",
        "cursor": {
          "ref": "68a5ac78-0559-4107-bd2c-38a62e1fb31c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eb02eecb-6e83-419a-b443-2d51332c5870"
        },
        "item": {
          "id": "a3271ddd-03e3-4357-b64e-e7c79b1a1717",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "675a0c67-03ad-43ec-b187-4d703e14954d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 28,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a11daa-9175-46c9-8e29-c017772b6d20",
        "cursor": {
          "ref": "814d17a5-2a75-4e55-b911-68e0d47d3580",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0332ae22-0802-45cd-b835-bc38f9521094"
        },
        "item": {
          "id": "71a11daa-9175-46c9-8e29-c017772b6d20",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1a3e553e-ddf6-43b5-bf40-c0c02c003c20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ced787-124b-4840-915c-b7b3170e615c",
        "cursor": {
          "ref": "b8401cbf-54c7-4370-851a-6206c5cb1af9",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b3034630-b9c7-44e2-a055-661b75aab9fe"
        },
        "item": {
          "id": "a3ced787-124b-4840-915c-b7b3170e615c",
          "name": "identifiers"
        },
        "response": {
          "id": "10d9d126-fc4d-4e6f-bacc-f8bc3569f151",
          "status": "OK",
          "code": 200,
          "responseTime": 232,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2216d24-d47a-4b8f-8bbb-18a3f4a6f138",
        "cursor": {
          "ref": "05e3eb65-2df6-44d3-9f74-f70e2491d5d5",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8db8854f-ab00-4755-a359-623b418e5026"
        },
        "item": {
          "id": "d2216d24-d47a-4b8f-8bbb-18a3f4a6f138",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "83223a34-db93-49cd-b2d9-73efb6fe189b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab10a1f6-cfeb-49e8-8baa-b356da0d48fe",
        "cursor": {
          "ref": "f9f59f6f-5db2-4bb8-89f5-8117af4e8b28",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "27d832ec-a97e-44f5-9993-bd06bd4a3e22"
        },
        "item": {
          "id": "ab10a1f6-cfeb-49e8-8baa-b356da0d48fe",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1d482478-7087-4c60-9307-42d6ce95c6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4a3d9d-38be-4fb6-a016-408fee8be609",
        "cursor": {
          "ref": "448dfcba-9202-4064-af70-8e7e8e2d3ff7",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5791233b-fdb0-4c43-90f3-88308d2c88ee"
        },
        "item": {
          "id": "4b4a3d9d-38be-4fb6-a016-408fee8be609",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c80ce094-b3cd-45c2-a1ec-3ae8f51c4008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a028d04-b264-449c-8296-abf52e47bc1f",
        "cursor": {
          "ref": "fdd6c58d-c222-4a8a-9238-c8a49df148eb",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4e304ec7-64c7-43fb-b121-bef93864aeb3"
        },
        "item": {
          "id": "4a028d04-b264-449c-8296-abf52e47bc1f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "953e0c36-ceb5-4025-8c3b-d2ebc9e22c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79568d2c-130b-46c3-a8a4-916e0b391fc5",
        "cursor": {
          "ref": "a12a0ecf-2d84-4814-a7ae-ec89fe035c8e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "93da6340-f64e-484c-bd20-369b328ba0c7"
        },
        "item": {
          "id": "79568d2c-130b-46c3-a8a4-916e0b391fc5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0f8b59d8-1696-4233-b2be-69d7706f9a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cbe7be-39f1-47ef-9f8f-56f8c96fea72",
        "cursor": {
          "ref": "99043ead-3d8c-44d4-bb6e-b3e938434e64",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "48deed65-c785-4699-b406-04f17593e0e0"
        },
        "item": {
          "id": "a5cbe7be-39f1-47ef-9f8f-56f8c96fea72",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d08aea9c-5b15-4a20-8437-49ce04d3d0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae62a9a-30b6-4f81-b763-8bf1ae503866",
        "cursor": {
          "ref": "f3833dd1-aa67-40fe-8b0e-302b0cf06874",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ce7e2d9a-9ae8-4900-80dc-0bfa575bc998"
        },
        "item": {
          "id": "1ae62a9a-30b6-4f81-b763-8bf1ae503866",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "18b3748b-2cb5-4481-8406-2a45cf8990db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d679a98e-ef99-4e50-95da-0a90851d3f93",
        "cursor": {
          "ref": "b9668d69-9af4-442c-93eb-6f50246d77a2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "315eabda-821b-499e-ab62-a13d5829ef5d"
        },
        "item": {
          "id": "d679a98e-ef99-4e50-95da-0a90851d3f93",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "096d4e26-8c2d-4901-8154-87c217bb8089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a40731-4121-496e-ae68-4e3005a3f018",
        "cursor": {
          "ref": "29e17174-33ec-42f8-b2c0-72a390e844fa",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "28a85224-27d8-4dcc-ac1e-9c632a877e52"
        },
        "item": {
          "id": "45a40731-4121-496e-ae68-4e3005a3f018",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "68996c28-00b4-47f1-a27f-16c9f1fdef51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5734d4-c065-4d6f-bc24-38af6de908ad",
        "cursor": {
          "ref": "3a065de8-db85-4d07-889a-efc5b154010d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f2027e7f-5b34-4195-81c0-4990138f2ffc"
        },
        "item": {
          "id": "2a5734d4-c065-4d6f-bc24-38af6de908ad",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a89464e2-8adf-48d3-a512-030cb7e65cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746de8eb-dc48-49b0-8a45-d66887a360cd",
        "cursor": {
          "ref": "572d2cf5-093a-4646-a3de-025b65c6a741",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "062d4210-1259-4410-8d12-f5bac545cbd5"
        },
        "item": {
          "id": "746de8eb-dc48-49b0-8a45-d66887a360cd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5fc7b0a2-2e29-4521-b999-71fe0438e893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9671ba3-518f-4e82-a7c8-ff7d22400cbf",
        "cursor": {
          "ref": "f26285ca-b23e-4502-90d0-f56a23c2fc6c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "04d71a78-3af7-4601-9dce-81bd27124f1b"
        },
        "item": {
          "id": "e9671ba3-518f-4e82-a7c8-ff7d22400cbf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e5503f78-b20f-498d-886d-7508d85ecf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec357f97-27e1-42d9-b70b-4d65ee7ae3d8",
        "cursor": {
          "ref": "732b7002-01d3-469d-838b-b99b1b0a2a65",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "86cd5e79-2fff-48f6-92e7-ef3d9860ca3b"
        },
        "item": {
          "id": "ec357f97-27e1-42d9-b70b-4d65ee7ae3d8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3d471a3b-6327-4cdc-9deb-501df0338b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9571e3e8-11ce-44ea-b23b-71075725f3f1",
        "cursor": {
          "ref": "8920c958-a336-415b-a064-ab6d8cf78792",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e48ed447-121c-4b3b-bdee-38240a575d48"
        },
        "item": {
          "id": "9571e3e8-11ce-44ea-b23b-71075725f3f1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ad1a6eb5-4dae-499c-9b85-362953ae524f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8799156e-366e-4c45-8e00-be0beb50fc0d",
        "cursor": {
          "ref": "c0713e51-d53f-4edd-a01f-fd6ea780c1a0",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a85d6088-3572-448a-b4f2-f49114a02ac5"
        },
        "item": {
          "id": "8799156e-366e-4c45-8e00-be0beb50fc0d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "03aa3d99-b57f-4186-a9e9-19c0b51c84eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d608f9a7-0408-4712-86b8-4df0ddb7e9aa",
        "cursor": {
          "ref": "c470111d-9d0c-4e97-ba5c-272c24f5c220",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3324c4dc-8c37-4a5f-9508-fdac00116ea3"
        },
        "item": {
          "id": "d608f9a7-0408-4712-86b8-4df0ddb7e9aa",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8fae2ecf-d7e4-405c-8efa-66c017e90fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefce60a-9647-42a2-acc9-26b1def54756",
        "cursor": {
          "ref": "553bc07f-bb4c-412e-999b-9d3b8a579d5c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8823db7a-8eb9-400f-b74e-0ecbda9e283a"
        },
        "item": {
          "id": "eefce60a-9647-42a2-acc9-26b1def54756",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8e35b610-60fb-493e-ac93-0a304e42a9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01be9c5f-6971-4d86-a6ce-95a6f95c8b1c",
        "cursor": {
          "ref": "d1ae4942-4f65-4102-9222-1268b90633c0",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "37dc3750-5899-476b-a94d-d6a912842001"
        },
        "item": {
          "id": "01be9c5f-6971-4d86-a6ce-95a6f95c8b1c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d2e4a29c-d1b8-42c5-9d5c-864a089bb121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6827414d-8264-4819-999a-15d330b4e0a1",
        "cursor": {
          "ref": "ccdd9175-2c95-4f8d-b018-1e619ba1de23",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7c34b30b-8ca7-43de-a539-33c4dd736dcf"
        },
        "item": {
          "id": "6827414d-8264-4819-999a-15d330b4e0a1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c5554762-99d5-4164-8c13-b25127bc38e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e703412-6bf4-43db-b7f9-410dd16d3612",
        "cursor": {
          "ref": "2c5053b5-ebbe-479b-9ce8-71486702e3fe",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6aba050d-e924-4c65-b82c-b92456296c27"
        },
        "item": {
          "id": "1e703412-6bf4-43db-b7f9-410dd16d3612",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f8808c21-9da1-446b-aee9-fb6b88acbc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea76139e-1d73-414c-ae80-fddd3e296fef",
        "cursor": {
          "ref": "9ec666f8-142b-401c-8c21-353a9396f962",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cf06f605-c7f8-4102-ad50-77406f80484a"
        },
        "item": {
          "id": "ea76139e-1d73-414c-ae80-fddd3e296fef",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "78c641ea-1c45-48c0-a2c1-c7b16ca016cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c424e0e-2107-4680-b31e-694a98e33abc",
        "cursor": {
          "ref": "bf00d4a6-0e30-4b96-b1e1-8328991aa657",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d3d12922-87fa-42e7-8acf-f715f8616e57"
        },
        "item": {
          "id": "7c424e0e-2107-4680-b31e-694a98e33abc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "447be975-14bd-4f48-b167-09e4e9321816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135e9ea2-0546-445c-9f53-e664f6cb7887",
        "cursor": {
          "ref": "bdd248be-8201-4f34-87dd-73b87fa3ace2",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1b8d8c3e-432c-4e42-b2ae-c95b2505372e"
        },
        "item": {
          "id": "135e9ea2-0546-445c-9f53-e664f6cb7887",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1a0d24e4-ca8a-4587-8c6d-6b59aba255c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794be75c-c9c0-4096-89ff-ea854d7db37d",
        "cursor": {
          "ref": "a2ba237a-43f7-42d3-8287-a54c452d33b0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "10763761-a14e-41a4-9b70-bfc82465b01a"
        },
        "item": {
          "id": "794be75c-c9c0-4096-89ff-ea854d7db37d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "40ba20af-21a6-4746-8382-7c06974879dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaeb631-7754-4f32-bcfb-07f3b1de9fdc",
        "cursor": {
          "ref": "5758f323-debb-484d-8908-8d7bbde977ca",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "135ac895-ef8f-45de-8687-fe0cac990519"
        },
        "item": {
          "id": "ccaeb631-7754-4f32-bcfb-07f3b1de9fdc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cd0b97df-92d9-4fd6-905e-f3436f596eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfecc00d-c0f0-4514-a7c2-dbe9e8909131",
        "cursor": {
          "ref": "816aacd8-f515-4d31-b02f-dcb7bef7dde2",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6ce7a5a3-2cd6-4953-90a0-f842831f31c6"
        },
        "item": {
          "id": "dfecc00d-c0f0-4514-a7c2-dbe9e8909131",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5a32cacc-f70e-44c1-b9bf-cca135246aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e77b66-d41e-407d-b55a-8e4543915488",
        "cursor": {
          "ref": "3aa897a6-49a6-4b88-b18f-286b43c066a8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7e28667f-abe1-4a45-8c2a-70d685c49d03"
        },
        "item": {
          "id": "c1e77b66-d41e-407d-b55a-8e4543915488",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2732ab6b-2800-4365-b0ad-35116681c5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67220c70-7b11-49d0-9c67-9fac2a75e325",
        "cursor": {
          "ref": "e3a01946-b5b1-41ef-8846-563c3615f18d",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7b446220-8f6c-416c-9548-3a16a49de6d7"
        },
        "item": {
          "id": "67220c70-7b11-49d0-9c67-9fac2a75e325",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a73a1177-c947-47dd-863b-f0d466b42c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e39b87-c617-4ecf-8a8c-8b65a9b18eb5",
        "cursor": {
          "ref": "6e8cafd0-ff9f-4521-858d-658e339852ee",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "110c3252-e887-4374-b77d-07e38dadd6ea"
        },
        "item": {
          "id": "d0e39b87-c617-4ecf-8a8c-8b65a9b18eb5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "71429b44-d904-4354-978d-f89d8f40ec12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f1583c-951c-44cb-940e-e0510d601c8b",
        "cursor": {
          "ref": "95dd707f-44b1-42c9-8c59-6ee6f3edfd0b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "845b0fc6-0b5c-47e8-9f06-e196e3112cba"
        },
        "item": {
          "id": "b1f1583c-951c-44cb-940e-e0510d601c8b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "52be00b4-8fa9-4a60-acc6-c2dc38bf3b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce5b8fd-a2e6-4ffd-b6b2-a7356a7cdf6e",
        "cursor": {
          "ref": "b46518e2-e2c6-4b3f-98d1-5d1b08ee4ac7",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "60a17d71-19b5-417b-a9be-0105f95619dc"
        },
        "item": {
          "id": "9ce5b8fd-a2e6-4ffd-b6b2-a7356a7cdf6e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "61eecec9-202e-4856-ac9c-5ac77eae45e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a2d230-e66c-4781-85cf-b1d285b42145",
        "cursor": {
          "ref": "1253193e-07b9-47ef-9c03-bd49a9776e89",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f01da6b1-5d9d-4e69-9cc1-c8f75d2694b1"
        },
        "item": {
          "id": "a4a2d230-e66c-4781-85cf-b1d285b42145",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "dca09bcb-6787-4d66-8c0a-df79b3b4b6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb90366-ba96-4565-8629-65c93b5dbf30",
        "cursor": {
          "ref": "6de01c07-36e7-430f-9f41-31b82d3c298d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d318eda1-c89e-4919-9a1e-fc93af0d190b"
        },
        "item": {
          "id": "fcb90366-ba96-4565-8629-65c93b5dbf30",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "728c517e-c22f-4507-b00a-481902624bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e38b01-f809-4759-87e9-ae9152a1a2f0",
        "cursor": {
          "ref": "c12b3dc3-54e2-481f-91db-31ba3728f242",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b0175a38-d8cb-4107-a795-6e0abbd7b143"
        },
        "item": {
          "id": "35e38b01-f809-4759-87e9-ae9152a1a2f0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6b6ac8ed-b268-4369-a55d-84f30c346ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f204b5d5-5793-4dc1-8b53-f30b789749f3",
        "cursor": {
          "ref": "6efe93e1-c9c7-4cc6-ab76-7eb7b59f8d38",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8bbc0d14-b5d1-40b7-a4c4-523d1aacb748"
        },
        "item": {
          "id": "f204b5d5-5793-4dc1-8b53-f30b789749f3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2fead282-e463-48e9-bf41-3136c1fb9458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5515bd-154b-4d65-938c-6b29794cb887",
        "cursor": {
          "ref": "dc0a486d-ec40-472b-be16-b1a01aeeed67",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "17f5af21-0f5e-4f26-9e3c-893d1c986d4c"
        },
        "item": {
          "id": "1c5515bd-154b-4d65-938c-6b29794cb887",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "535ca22d-286c-4092-98bf-ad4af65f431c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca24394-6f5e-4f57-9989-20cd37442e26",
        "cursor": {
          "ref": "99f58b73-1511-4d9e-a2d3-42b951fe70bd",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b07895ef-67ae-4f37-a604-ebe42177373e"
        },
        "item": {
          "id": "dca24394-6f5e-4f57-9989-20cd37442e26",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d77f1143-1051-49f1-a2c8-451c6277e431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d8f862-bbdd-4b83-b9c9-6ee8f1a8c6a2",
        "cursor": {
          "ref": "9198cebb-a0eb-4b2e-87d7-3a8c88ab6ec8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "afaf31d7-546c-4345-9a34-57aa30d8e08c"
        },
        "item": {
          "id": "c2d8f862-bbdd-4b83-b9c9-6ee8f1a8c6a2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "79b13d1a-5148-4fcf-afbf-4e69e02dc34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfa189a-f06d-49ad-ae47-89ff4052227c",
        "cursor": {
          "ref": "9adfc02f-0b7c-46d1-9c3e-923eb17636b7",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2b8aa1b6-5c33-4dbb-850e-0040fa3bc3f3"
        },
        "item": {
          "id": "bbfa189a-f06d-49ad-ae47-89ff4052227c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f26265c7-4cc5-4b51-91f4-97396d5350a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a810d5-3f51-4ad8-b3fb-b5a665f932b4",
        "cursor": {
          "ref": "d5971bcb-62c4-43fb-8cd1-7071623faaed",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dd06d3eb-36a5-46e2-ae5a-7819e2b6dcd2"
        },
        "item": {
          "id": "02a810d5-3f51-4ad8-b3fb-b5a665f932b4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fadfb3b5-4696-420f-922d-6c6eb3b02cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd57d7a-25ab-420c-b286-02e7f0a84bea",
        "cursor": {
          "ref": "a1a65744-bb04-45be-bd2e-7d54f03e1419",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "23f94ff7-5656-4f4d-ae6f-ebba7be33fbd"
        },
        "item": {
          "id": "6bd57d7a-25ab-420c-b286-02e7f0a84bea",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fe4d53b5-6d82-44d0-aad9-c6edbce24664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3e6a09-5cc9-412e-bdf6-d73eb51ce18f",
        "cursor": {
          "ref": "129f63f4-dbaa-4107-ab6f-1c8ea2f696ff",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9f521bbb-4f17-4ef0-a669-a5831b43affe"
        },
        "item": {
          "id": "1d3e6a09-5cc9-412e-bdf6-d73eb51ce18f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b10170c8-b361-48ca-b512-5bcac659d5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a86a24-1809-4c41-8df5-f555c24c804a",
        "cursor": {
          "ref": "cea29e72-d7fe-429d-9d3d-10dd738fcd19",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3104a06d-61d5-4884-b291-e97159daad00"
        },
        "item": {
          "id": "29a86a24-1809-4c41-8df5-f555c24c804a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7bf05b33-86a0-433d-86d3-35289900fa3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f540a66c-b03a-443a-ba84-e05141b153f1",
        "cursor": {
          "ref": "b23fc6fc-2b25-4d7a-8e53-500fe8a6bb9a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "eef5f176-ac84-4bef-a862-430689fb9248"
        },
        "item": {
          "id": "f540a66c-b03a-443a-ba84-e05141b153f1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1d229e48-62b5-4b99-9e27-8cca5c635896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148b5c94-ce30-4533-a754-510976dbec32",
        "cursor": {
          "ref": "744b156c-41b7-466e-b624-6f04719a74e3",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "81776606-b534-41ac-b6b8-228df3e9166f"
        },
        "item": {
          "id": "148b5c94-ce30-4533-a754-510976dbec32",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "79cc9a7b-50c0-47dd-842a-0ec432368957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5764c748-3b22-4f83-a21c-f0cc93421395",
        "cursor": {
          "ref": "655ac6ed-72bd-4782-a953-ac1f4d4255ad",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fa33734a-9a46-4a32-9ce1-dc32c3766841"
        },
        "item": {
          "id": "5764c748-3b22-4f83-a21c-f0cc93421395",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ee824b83-9741-480b-a613-1b1d57ec41c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d85880-01a3-4930-9520-6ce6c389bca8",
        "cursor": {
          "ref": "150702da-bf20-41ee-8061-af94417de6a2",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c8798704-1b7e-47f9-bd0d-746b30f5e1c3"
        },
        "item": {
          "id": "85d85880-01a3-4930-9520-6ce6c389bca8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2a1c17d9-17aa-4cb7-8325-f270418bb16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ac4038-c27b-4bf4-80ea-edc0e29e3bd1",
        "cursor": {
          "ref": "e2df9501-39ce-4cc1-a02c-af040f8e2c4f",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2cce6819-ec67-4838-bb2d-949cb4125f1c"
        },
        "item": {
          "id": "95ac4038-c27b-4bf4-80ea-edc0e29e3bd1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1dde6764-02d9-4d18-8fc5-7fb4cce11bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c31a3b-a190-452c-a23b-f7a1d5b1ed71",
        "cursor": {
          "ref": "a8ce2e5c-155f-4380-92f0-2ea95f79f9a4",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "45e2b989-37ad-4d9a-8319-67efd6b77e47"
        },
        "item": {
          "id": "94c31a3b-a190-452c-a23b-f7a1d5b1ed71",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "42a3259d-4267-493e-8e30-a29adea8e9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc71571-a321-4a7b-8814-aeb7a11c16ae",
        "cursor": {
          "ref": "0d2500c1-113f-414c-a87f-1c8f0acdd20e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5293752b-b3b2-4f04-9f6f-e579f9c628c8"
        },
        "item": {
          "id": "1dc71571-a321-4a7b-8814-aeb7a11c16ae",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b0979c22-79ef-48a3-b8ce-5fe2b116798a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8817b159-ac67-440c-8830-e11e01a55d79",
        "cursor": {
          "ref": "460fcdc7-dd32-45f8-a908-6636f781fb15",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b65b04fd-857f-4100-8df2-394761519364"
        },
        "item": {
          "id": "8817b159-ac67-440c-8830-e11e01a55d79",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "66754142-edee-4722-8953-8390bb9b469a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdee85d-7587-41ab-8f19-34b78d2b6b65",
        "cursor": {
          "ref": "7d24858a-953d-4221-80a1-12be288cd4ae",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "085af1ba-d365-466b-8aa0-80c2b756e538"
        },
        "item": {
          "id": "fcdee85d-7587-41ab-8f19-34b78d2b6b65",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d4557350-e6c7-4a08-a605-a7181194f9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f9b335-68b0-4703-8436-88cf29268eb4",
        "cursor": {
          "ref": "bb95ce24-4986-49d3-bc61-4410cec9fd4e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a5216f07-9be7-453e-a2bc-1b4ac4295961"
        },
        "item": {
          "id": "15f9b335-68b0-4703-8436-88cf29268eb4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b7c3b0b7-ec84-4df1-b8a4-cd337d6cc2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea836b5e-a8cd-479c-bac6-4cfd82ce59c7",
        "cursor": {
          "ref": "23afea4f-0874-4687-9287-02bb5ffb1718",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "628b3a32-2f15-4755-bc63-77433e5f429f"
        },
        "item": {
          "id": "ea836b5e-a8cd-479c-bac6-4cfd82ce59c7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "925868d2-db04-40ad-adbb-42917f761370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca87cdbd-8bf7-48e8-9e20-dd3ec0d4a8c1",
        "cursor": {
          "ref": "7117c430-a90c-4efa-b1b8-56be8d685ae2",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "278a1d4b-a555-4abe-a2c5-a54e20642b6a"
        },
        "item": {
          "id": "ca87cdbd-8bf7-48e8-9e20-dd3ec0d4a8c1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a5836e04-ca46-4951-87a1-63cc8a840b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4373f707-9ac0-4251-b78d-dafe3a0cb5cb",
        "cursor": {
          "ref": "6ab0bb6a-f064-4c99-9e4b-d63f64aa5a04",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0b30b6e5-867d-4cdf-8817-3a24e83c6e02"
        },
        "item": {
          "id": "4373f707-9ac0-4251-b78d-dafe3a0cb5cb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5be6e8f1-acc9-4d94-8d56-56b2706a9988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae34b3b-2593-4342-b044-c542e3d98eb7",
        "cursor": {
          "ref": "b24e7f8a-1282-4a1d-8db6-997ea1733738",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a1e1bb51-79d4-4c38-9060-efd2c7ebf879"
        },
        "item": {
          "id": "6ae34b3b-2593-4342-b044-c542e3d98eb7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6a0a68f0-aa64-4c92-b850-28f8045a1420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca2c962-3ec9-40c3-b402-67ca64d9cac5",
        "cursor": {
          "ref": "afb27797-5b14-4487-b085-0ea94867205b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a09f5cf9-3521-496d-9f1e-7493ef9a2ce3"
        },
        "item": {
          "id": "1ca2c962-3ec9-40c3-b402-67ca64d9cac5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ba4d96fe-d849-421c-b8a2-a9a38b9f8bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254a9ee5-5ce3-4c30-baae-5af6d32ed676",
        "cursor": {
          "ref": "bf29284b-bc6c-46ff-a796-c7c45f95c320",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "514e0753-b231-4ea4-b22a-93f0662721d6"
        },
        "item": {
          "id": "254a9ee5-5ce3-4c30-baae-5af6d32ed676",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "929afdde-d938-4afd-814d-a8d70e284c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a62e7e0-0209-449a-b9e3-e26600973764",
        "cursor": {
          "ref": "142794bb-6faf-46cf-8144-2022d1832983",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8d4ad849-0491-421c-b88e-4cbe518f2d7c"
        },
        "item": {
          "id": "3a62e7e0-0209-449a-b9e3-e26600973764",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4ae17277-7b31-4339-b2ce-408656df0af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1187be3e-064f-47ff-830b-ff9d4cbcf8c1",
        "cursor": {
          "ref": "2b8d8d89-903b-48dd-8145-923b743d1c38",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "37791ecb-69f1-4089-8ea4-6863e722ef7a"
        },
        "item": {
          "id": "1187be3e-064f-47ff-830b-ff9d4cbcf8c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6ae22e8e-0ebb-400d-92f1-445b383ebac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6809d0e-d37d-49f4-a41a-964a708eab65",
        "cursor": {
          "ref": "234b1233-9c7c-4487-a988-670c6a2a4551",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9d9fc563-63b0-4750-b781-41144e2aee8f"
        },
        "item": {
          "id": "f6809d0e-d37d-49f4-a41a-964a708eab65",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "178d5286-ac04-4bc2-aef0-cba09f6500de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a1879f-e635-4671-b010-c4969f63fc12",
        "cursor": {
          "ref": "089d9fb9-4aa8-4648-a597-8ddd34d7d0e4",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cec30e6a-c6d1-4831-8c6c-b8b5f838bb17"
        },
        "item": {
          "id": "d4a1879f-e635-4671-b010-c4969f63fc12",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b1daed37-f5a5-4b28-a79f-4336a468a0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75da3b9-f4ee-47a0-8988-fdc45dd992aa",
        "cursor": {
          "ref": "5767258c-8df8-4ad4-8c65-2b388be658e5",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "94381099-1a20-4afb-a5f0-32234e70c899"
        },
        "item": {
          "id": "b75da3b9-f4ee-47a0-8988-fdc45dd992aa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1ae561aa-bc71-4430-aa4a-1e01680caefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9361fe23-0824-4518-ae20-d428f0afc2d5",
        "cursor": {
          "ref": "94a34654-e729-4879-a1e9-20cb4d2f555b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9713ab3e-ca68-43a5-bdb8-4273e69138d7"
        },
        "item": {
          "id": "9361fe23-0824-4518-ae20-d428f0afc2d5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fc02552f-a20b-4cf4-9052-c8063797e72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1336f5f-e2b2-4c82-8e1d-59a66ee34420",
        "cursor": {
          "ref": "94ff998b-6448-4331-936e-83365fe5caca",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d9d93e3b-1e94-4918-b314-602902fafc79"
        },
        "item": {
          "id": "f1336f5f-e2b2-4c82-8e1d-59a66ee34420",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "62ae3343-db87-459e-aadb-6b3eb60e2dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37cdc3d-e32b-4bd0-97f7-f19bbb9a1433",
        "cursor": {
          "ref": "e6ec14e1-c71b-42dc-9c73-a39f2290da75",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5364ca66-cafb-4fda-9c32-27df92145b39"
        },
        "item": {
          "id": "b37cdc3d-e32b-4bd0-97f7-f19bbb9a1433",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "44ba2f74-87aa-4502-9f37-99dd3aa54b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bbee17-6ac1-4de7-9619-55578ce78bcb",
        "cursor": {
          "ref": "6772515b-ce0c-410a-a00f-d93feaec9a77",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a060ef20-a64e-4162-b4c5-e8621d96db04"
        },
        "item": {
          "id": "58bbee17-6ac1-4de7-9619-55578ce78bcb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bf290151-af36-4e7d-9c6b-22c8aa4011b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44a215c-8a2d-49b8-ba9e-c8581f49592c",
        "cursor": {
          "ref": "b82e2e8c-2ad0-4888-bc55-465bcf56768d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f0742943-e8c7-4b91-b067-1fe6f840d613"
        },
        "item": {
          "id": "b44a215c-8a2d-49b8-ba9e-c8581f49592c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ea914c31-181d-433e-976c-9734ac5bfba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c627e9-ac6f-4e20-9636-f6e87c59e150",
        "cursor": {
          "ref": "88b3639c-1558-4464-af31-f970a73dcbb9",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c54f9e3f-6b94-4148-a658-2ad7426323f8"
        },
        "item": {
          "id": "58c627e9-ac6f-4e20-9636-f6e87c59e150",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e1abaf30-5b68-45de-a262-94245c499a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42942f14-0bb2-4559-a8d1-4181f70f49bb",
        "cursor": {
          "ref": "e31d7a52-510c-4877-be95-1e6aed842be1",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bf943d38-186b-402a-99cb-2d6da9096d05"
        },
        "item": {
          "id": "42942f14-0bb2-4559-a8d1-4181f70f49bb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7761dc8b-c25d-4bc7-bda7-6a5a54ff8b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c454a0-991a-4510-a6d2-d4c332d0dfa4",
        "cursor": {
          "ref": "c6d1bd44-4d1e-4604-af5e-77f2021eccc2",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3b2ecd5b-3f9c-4a51-ba43-34a1bf6e7cbf"
        },
        "item": {
          "id": "94c454a0-991a-4510-a6d2-d4c332d0dfa4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b6558bf4-2a73-4b61-87bb-24faeff3f90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc22f9ae-502c-4da0-b54f-3079b6462b72",
        "cursor": {
          "ref": "ecf981b7-778d-4038-a2bb-f0a52f7a5faa",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6b71dfd7-87b2-401f-b901-adfc803487f7"
        },
        "item": {
          "id": "bc22f9ae-502c-4da0-b54f-3079b6462b72",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a985a737-2573-4496-bff7-9a86198f56bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9f73eb-89d4-4ce3-b8ba-018d35e857a7",
        "cursor": {
          "ref": "4403e595-0d5c-4935-8d2a-eb6367727104",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e19aca27-9c50-4d59-803b-85262eb7f783"
        },
        "item": {
          "id": "6a9f73eb-89d4-4ce3-b8ba-018d35e857a7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fdacd6ba-8359-443a-bc06-ce4b7d4c5564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1afe6b9-e513-4b18-958b-582cf194e27c",
        "cursor": {
          "ref": "7faca1ff-03ae-4985-b400-bb1ab395ee98",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0ee28316-a353-492e-82c3-6eaf8dd3dc33"
        },
        "item": {
          "id": "c1afe6b9-e513-4b18-958b-582cf194e27c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "72792ba8-ef12-49fe-8f4b-f8db05ccf9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cf5b84-f4af-4d52-af53-e1048141704f",
        "cursor": {
          "ref": "d0d550ee-0908-4cf7-ab4b-c8068cbd7752",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bf57b80d-84e2-49b0-b3c9-c7f370a8d4a9"
        },
        "item": {
          "id": "25cf5b84-f4af-4d52-af53-e1048141704f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9fbf7d57-1db6-4ce6-876a-9d10025cdcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f3ab25-bd75-46f7-bafc-b8dd8bad7d1a",
        "cursor": {
          "ref": "57423b8d-a99e-4472-908c-e2d0909001e2",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "909bfc55-1f43-416c-a6df-0cd0e3461de9"
        },
        "item": {
          "id": "81f3ab25-bd75-46f7-bafc-b8dd8bad7d1a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b3d1523c-44b5-49a4-8450-caa8ab095674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d222e413-5531-4077-9799-963b1d779e43",
        "cursor": {
          "ref": "ecb810cf-4959-4269-b4be-a19d6d1ea3dc",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "df0dcc3c-da21-4b6e-bbd7-1ee01fcb30c7"
        },
        "item": {
          "id": "d222e413-5531-4077-9799-963b1d779e43",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5bacaafe-2baa-4702-9f24-890787ec6145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51c5876-445c-4913-9148-46e6b084635a",
        "cursor": {
          "ref": "26dbf4f8-4113-43fe-bd66-804643cd6bc5",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4ad0c6b0-78d8-4fcb-a96e-5f39c31e2b2a"
        },
        "item": {
          "id": "b51c5876-445c-4913-9148-46e6b084635a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "51645511-0084-4161-a047-7fb9b0dc38b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e0c1f1-4bb1-4b07-9007-a385f53fceaa",
        "cursor": {
          "ref": "389ebb2b-78a6-4dc8-a0ed-7b7a4e53daf3",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "862e3c9a-3eab-4c2e-b2d8-56cfc82f14fc"
        },
        "item": {
          "id": "30e0c1f1-4bb1-4b07-9007-a385f53fceaa",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "645e03a7-ac7d-4975-9732-fe89ebe0f702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af413b8-313e-4f7c-bdf6-bf1fd4eafca2",
        "cursor": {
          "ref": "a7a1c00a-eef8-46a4-843d-ea724d0e4498",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cd3bbb67-39f2-4eff-bbeb-5cf8c1d95fcf"
        },
        "item": {
          "id": "6af413b8-313e-4f7c-bdf6-bf1fd4eafca2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fc369d02-669a-4192-bcc9-8d2ca9089179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bc4bce-587c-40b5-97de-0d4a07d4dd48",
        "cursor": {
          "ref": "73cf8546-5f1b-41cd-ad5e-bc91f12e3681",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3a779b93-c87d-496a-9d00-a75dccd06f2d"
        },
        "item": {
          "id": "f8bc4bce-587c-40b5-97de-0d4a07d4dd48",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d6bef2df-b30d-47c8-aa3b-b30943bc0324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b036ed0a-bc23-4754-89a7-667dc9f3fcfe",
        "cursor": {
          "ref": "edc8d028-0529-4d6e-a727-bbf504866417",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c0f52f9e-d554-4c10-b327-d0bc17dc9ef0"
        },
        "item": {
          "id": "b036ed0a-bc23-4754-89a7-667dc9f3fcfe",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "340b5fe9-e6c1-4683-8d08-06cf3979687e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27daaaa1-49ab-4b38-8f93-d921406ebb9b",
        "cursor": {
          "ref": "93925d07-2887-47b0-8591-c6431deb9148",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "32d94c1a-3e12-48c8-bd40-4c1150619f7b"
        },
        "item": {
          "id": "27daaaa1-49ab-4b38-8f93-d921406ebb9b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dd886de6-4d04-406e-a60f-2d01e844b197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2f7478-0e17-49d1-9c53-9f98ba7db503",
        "cursor": {
          "ref": "4d4d764d-fd9e-42ac-a17a-e19809b19dc3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7d052b90-88f7-471f-935b-fc5c72cb8e1f"
        },
        "item": {
          "id": "ce2f7478-0e17-49d1-9c53-9f98ba7db503",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ef3333ab-8af3-4c8a-ba07-807fe38e4097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c9cda7-1d2b-467a-bd6f-70b844cfc1e1",
        "cursor": {
          "ref": "c9a3e30e-3f54-43a8-b895-c0a206510a9e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1b9e19e5-4758-4bfa-9933-d2730c0f02b7"
        },
        "item": {
          "id": "e5c9cda7-1d2b-467a-bd6f-70b844cfc1e1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "eec63c28-da18-4179-b498-f6d00912f183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284b3fe5-841b-4e82-a8e0-10b9432b1c9b",
        "cursor": {
          "ref": "96b7147f-b03b-4253-a4fe-889f4dcf66f7",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2dd20f90-d465-418a-acf1-4cacd108b773"
        },
        "item": {
          "id": "284b3fe5-841b-4e82-a8e0-10b9432b1c9b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bb9abbac-92ca-43b5-9abd-a46b8319e9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134e9273-9bcb-49f8-be5e-68bd0ec1582f",
        "cursor": {
          "ref": "762be0f0-76a2-49e8-abc4-3ae3674b1034",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4d7ec9d9-afae-4721-b4ff-e69fb21dcd9f"
        },
        "item": {
          "id": "134e9273-9bcb-49f8-be5e-68bd0ec1582f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "02f4ef9d-a3ad-469e-b834-dc5f978855d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9d64a9-ba7d-4fda-9094-23e000683957",
        "cursor": {
          "ref": "92b2050e-0220-4138-b6a5-cd564dc6268d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6502d432-2b0d-4061-8869-7dac8efb3b2b"
        },
        "item": {
          "id": "2b9d64a9-ba7d-4fda-9094-23e000683957",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "aa8a66dc-d3c4-4ff3-91c7-e0eae9632b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d048bb50-bf05-4bc1-a063-709b6d146819",
        "cursor": {
          "ref": "52fc0249-caa6-4465-b07d-8d7cd005f594",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "feaa34e4-8ee9-4ab6-81be-c646758f50ca"
        },
        "item": {
          "id": "d048bb50-bf05-4bc1-a063-709b6d146819",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b73542ea-a83d-4c09-ab5f-af9de5a414b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdebcee-82e5-475a-ac0e-c0bf449fdb2d",
        "cursor": {
          "ref": "f830ebe7-11c4-48b3-94bb-3f5d87c88e0a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "41550c6f-4934-4be3-b3b0-692d662df182"
        },
        "item": {
          "id": "dfdebcee-82e5-475a-ac0e-c0bf449fdb2d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b0662336-983c-4af9-bb0c-e103cd1475cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec29e86-4913-4f72-ad92-ccd03958ec5b",
        "cursor": {
          "ref": "ad940ca7-5482-402a-84eb-b200829007b5",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8c839a94-840b-41c0-8ef4-d96395825fc8"
        },
        "item": {
          "id": "eec29e86-4913-4f72-ad92-ccd03958ec5b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "55f56a1a-a8bd-48e1-bda4-d005ce0db113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529c4981-c3f8-41f5-9649-070d8c6f51cb",
        "cursor": {
          "ref": "a2f63e35-1793-4c7a-909a-55c2e3568f9d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "833025f7-6bfd-441e-9d0a-65d6d92eb577"
        },
        "item": {
          "id": "529c4981-c3f8-41f5-9649-070d8c6f51cb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5d51fceb-261c-4031-b621-cb087a3c5a37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b38b98-6e9c-4179-8d95-e910d417960f",
        "cursor": {
          "ref": "d3fa8d11-ba13-471c-bf27-cc88074fc705",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c40d5031-55f9-46f2-9270-9b89685c6df8"
        },
        "item": {
          "id": "48b38b98-6e9c-4179-8d95-e910d417960f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f339c6b9-82aa-426b-9f59-ceb6ba26f55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "461c9513-f081-4856-ac7f-3f10369439b6",
        "cursor": {
          "ref": "a84f9353-5f33-4f04-b091-dfc6383b01b4",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3c5fc607-1f9e-4a2b-8df6-a1f8195bf16d"
        },
        "item": {
          "id": "461c9513-f081-4856-ac7f-3f10369439b6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f11eee07-612d-4992-af49-33e565d43fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "41ea7824-e9a7-4e4e-919f-9060e27663be",
        "cursor": {
          "ref": "a615ca0b-15ba-482c-b103-f75206694434",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7926205d-3287-4174-894e-8af9ef3d6c2a"
        },
        "item": {
          "id": "41ea7824-e9a7-4e4e-919f-9060e27663be",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "13981f41-3210-4678-b779-90fb40c85d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5cf3ac4b-40aa-4e43-85b4-435c39cebb8b",
        "cursor": {
          "ref": "5109fc51-cfe7-4b14-a954-7a4c79360f2e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2a437f5a-1a81-4b87-83eb-899a5eb2d382"
        },
        "item": {
          "id": "5cf3ac4b-40aa-4e43-85b4-435c39cebb8b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "06c247c2-0f8b-46d8-9371-fdb9b93078ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8da999ea-d44f-4910-89f8-f4230265dec8",
        "cursor": {
          "ref": "ae5667eb-70d4-4aba-9ff1-eb0f9261153d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "25341445-140b-4a11-aea7-91f182dbfbdf"
        },
        "item": {
          "id": "8da999ea-d44f-4910-89f8-f4230265dec8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a4343f82-f51e-4d97-8015-c16181922663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "64e276ef-7725-4be3-9593-a05c7c660594",
        "cursor": {
          "ref": "4c95af53-f791-4b3f-b210-31837c6318ac",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7e868211-1dc8-44ef-b487-3aae85f31976"
        },
        "item": {
          "id": "64e276ef-7725-4be3-9593-a05c7c660594",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ae3e7695-fdb8-405a-8bfc-cc9abc7caadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3831eabd-49b6-4089-a330-cfa928cad7a8",
        "cursor": {
          "ref": "ecbf5ae4-7e60-4c65-b23f-e56cf086c7f0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b104f4d3-8e2a-41d1-a586-9a62c47e3c53"
        },
        "item": {
          "id": "3831eabd-49b6-4089-a330-cfa928cad7a8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8f9a21f5-ed95-4c05-a39e-4e9a1f9363ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "65fa3f77-d5d7-4a24-a319-be02eba5c295",
        "cursor": {
          "ref": "cda4edb7-7ffd-47b8-a28c-7cd52bde4be4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d2ca5b9b-88c6-408c-b6cd-e6ae99bc2074"
        },
        "item": {
          "id": "65fa3f77-d5d7-4a24-a319-be02eba5c295",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "443721fa-fa5d-4eab-95d3-03fd5844b3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1da2711-46e9-4298-bd70-46a0d0c8b0d7",
        "cursor": {
          "ref": "c9d445ef-b940-45ac-9f30-87f682be8ea3",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0d10fbc2-9c72-4b00-bf48-d143bc1e4d14"
        },
        "item": {
          "id": "d1da2711-46e9-4298-bd70-46a0d0c8b0d7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fa37c8df-5fbd-4ffc-8d73-1cd23cb06718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef51c60-60ba-430a-8cca-f03f85375b88",
        "cursor": {
          "ref": "7fc0d06d-ccf3-45c3-852d-6c8195548629",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8f398862-14f0-4364-8781-d7dbf749eb1d"
        },
        "item": {
          "id": "2ef51c60-60ba-430a-8cca-f03f85375b88",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7838c3ff-0265-4846-8a78-6c5f3f27d384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f56fe2-f0e4-4bcc-a419-47b81ce819f2",
        "cursor": {
          "ref": "ffe5e2ad-3883-4694-9ef5-349df59fa76a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1c00bffb-b97a-480b-a20b-294cb4a82b6d"
        },
        "item": {
          "id": "39f56fe2-f0e4-4bcc-a419-47b81ce819f2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c83e1613-9741-4420-80af-7289bcf2c158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8489e2-6bdc-41a7-a58d-68bf30df3688",
        "cursor": {
          "ref": "cf609502-5146-4871-9c98-bed09083a8c1",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8d3bd8af-5145-47ec-913f-a4ba4348c532"
        },
        "item": {
          "id": "ce8489e2-6bdc-41a7-a58d-68bf30df3688",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "63c93a26-048d-4b6a-b502-e5bdef2912aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bcdfdb-c9a9-4185-b463-1afeb6c7e399",
        "cursor": {
          "ref": "933a35f7-1619-485f-a9ad-0f10dc5633f4",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3f99bb02-f39f-416f-b0d3-f1d3a577f361"
        },
        "item": {
          "id": "f0bcdfdb-c9a9-4185-b463-1afeb6c7e399",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "97546d7f-6485-4f9c-b92b-87e568d5f5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639de214-a43f-498a-b93a-05975e5891f1",
        "cursor": {
          "ref": "63434c1e-b8f4-43ec-b388-7d3d80da5425",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e288d4fd-edf9-42fa-8591-f05fca0b729d"
        },
        "item": {
          "id": "639de214-a43f-498a-b93a-05975e5891f1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "debc9b1d-8bf7-4b96-b19b-426f2db0070a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2001f174-23e0-4437-b270-414193b7c0cd",
        "cursor": {
          "ref": "13ed1ed8-4275-416d-b8ed-62a9e5f3f382",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d5a481c4-81b2-47b2-8c69-5af994269962"
        },
        "item": {
          "id": "2001f174-23e0-4437-b270-414193b7c0cd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e36a592a-a0db-46c1-b3ad-87b1e1bf85fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7253fc-8255-4260-b0c6-d468f2f1162b",
        "cursor": {
          "ref": "88b90fb9-642f-483b-bfdc-fa15df52e0cb",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d59261be-b392-41b4-a46b-c683a9be1427"
        },
        "item": {
          "id": "ea7253fc-8255-4260-b0c6-d468f2f1162b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7ce4417b-5823-44a3-93c1-2f2da029aa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46870fae-a9ab-4a1d-b36e-34bf59d7e999",
        "cursor": {
          "ref": "d329f5f0-a273-4efb-836f-c93ceca604c8",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e742f101-d138-4871-b355-bb7a32d0e482"
        },
        "item": {
          "id": "46870fae-a9ab-4a1d-b36e-34bf59d7e999",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bf65321d-c1e2-45bc-b585-9bb2762a148c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abf665d-55e0-4b7c-b9b4-25646491304b",
        "cursor": {
          "ref": "4d065d83-002d-491b-baed-566ca393233d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1708d6c2-0ceb-4ddc-8c40-abd045e60af5"
        },
        "item": {
          "id": "3abf665d-55e0-4b7c-b9b4-25646491304b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "208ba84b-82bc-48e5-b59f-0784c800de26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6a81b3-3f64-41f9-8905-8c9396cadbb2",
        "cursor": {
          "ref": "c318209a-5762-4d8d-9d3b-f8778b3dcb97",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0a35ab44-586d-462b-9f54-27e462ac933c"
        },
        "item": {
          "id": "5d6a81b3-3f64-41f9-8905-8c9396cadbb2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eacc06a3-0e0f-490a-b2b9-bbfe586e92ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77052bd5-7396-4bab-be7e-5c50b17bc2ee",
        "cursor": {
          "ref": "06b56918-c413-424b-b51d-dc5106fa168e",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f5fa4344-53e7-421a-b05f-ac7fbec43f96"
        },
        "item": {
          "id": "77052bd5-7396-4bab-be7e-5c50b17bc2ee",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c98a44f5-3d21-4838-aa3a-f335bd2dedd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f6a26a-e805-49ef-96e2-474ef3e30c09",
        "cursor": {
          "ref": "a1093966-8782-4c74-af15-4a963cfd2271",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cf6f4b10-3af4-47c6-bb77-968d3d089561"
        },
        "item": {
          "id": "b5f6a26a-e805-49ef-96e2-474ef3e30c09",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1e22b4ac-5218-4489-ab2a-0208ab7a04b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bf2b93-c93c-4e76-bad3-521ab773d467",
        "cursor": {
          "ref": "33dc4697-5b6a-4347-80b4-f3abe4dd62c4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f9d2b6b5-f77e-4841-acdc-4636ef600cfa"
        },
        "item": {
          "id": "52bf2b93-c93c-4e76-bad3-521ab773d467",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2460494f-f5f2-4ab1-bd00-1f80dea27c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b112fa-ee53-45d8-9c7f-0f2c50a35804",
        "cursor": {
          "ref": "d4ef2ffd-7e92-4429-ab33-6f3ea34093dd",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f75de1b3-6772-4e57-9975-e85da82ee6d9"
        },
        "item": {
          "id": "16b112fa-ee53-45d8-9c7f-0f2c50a35804",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ce8c7e03-74d1-4279-b1d2-071e813516f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc2d471-3f9e-4859-ae16-74fe74ecd7de",
        "cursor": {
          "ref": "55f23f50-54a1-4ead-a0fa-b0638e536ada",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "788d05ba-244c-4aed-9385-b8f5c9d5c4c9"
        },
        "item": {
          "id": "ebc2d471-3f9e-4859-ae16-74fe74ecd7de",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "65edef98-55e1-4081-8068-59e6b7058f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e9c4ac-667c-4e90-9625-85da1ebd53e5",
        "cursor": {
          "ref": "792f54c2-68a3-49c2-871e-304d63118837",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f96eaacf-b94c-4b26-af37-4e70dd132e6b"
        },
        "item": {
          "id": "28e9c4ac-667c-4e90-9625-85da1ebd53e5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "594b0ecd-8eaf-4f93-a430-8d750cd310d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420503a8-5b28-47e4-95de-7c8965e1c768",
        "cursor": {
          "ref": "b69df463-7eeb-4d63-9e5e-78d05c8c9bb9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "82274e86-7b0c-4c70-afbc-2112f6e7822a"
        },
        "item": {
          "id": "420503a8-5b28-47e4-95de-7c8965e1c768",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d3efac05-f3d3-4dc4-b693-fb921228de9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5eb5b58-3f4a-49b0-bdc4-3604a76d06f9",
        "cursor": {
          "ref": "888681db-31dc-4c4d-ad31-c5b25ebba7c5",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1b050aab-f5cb-49a5-afb7-4e1ff5f9c2d9"
        },
        "item": {
          "id": "f5eb5b58-3f4a-49b0-bdc4-3604a76d06f9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "484cadb6-7ab0-4201-84d1-c05957efb07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6cc6a7-c6cf-48ac-8679-b2322bfbe2a1",
        "cursor": {
          "ref": "8f4a6e1a-d03a-40ea-bdcf-6b0b538dfa07",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f0fb17c3-cded-42f9-b178-f56847f02c50"
        },
        "item": {
          "id": "1c6cc6a7-c6cf-48ac-8679-b2322bfbe2a1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5db3aa25-5ddc-421e-b651-e0795bdeff3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a803355f-ccd5-4750-a8d8-7659408169a6",
        "cursor": {
          "ref": "cd8d2fa2-a373-4560-bcee-6fddb52811af",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9ccaaf8f-0d16-4dc3-9665-1253562cc389"
        },
        "item": {
          "id": "a803355f-ccd5-4750-a8d8-7659408169a6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bd7417c5-7f96-43f1-b351-202d890d4b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459f32ef-120f-4ef9-9250-97edf08db370",
        "cursor": {
          "ref": "b758bc1a-a243-41bd-9977-61a6295b6906",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9666893a-d6da-4a88-9d3b-2ff662e4b2b4"
        },
        "item": {
          "id": "459f32ef-120f-4ef9-9250-97edf08db370",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c7b8be69-482a-494e-a4a8-e7a65b167e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9247b7a-f5fc-4b37-8fd2-cfca67f31c82",
        "cursor": {
          "ref": "0bf4674b-355b-44ec-b33a-0828d408a366",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9ef67be6-de43-4365-86e8-190507cc42c7"
        },
        "item": {
          "id": "c9247b7a-f5fc-4b37-8fd2-cfca67f31c82",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "28f40fa2-3dcb-4363-9596-1db16b65156a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c647b52-ee39-4405-a809-b0bff37ae4be",
        "cursor": {
          "ref": "e175e5b8-1872-4027-94ef-2b750762c907",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8dd274d8-f582-49a2-a006-5128478d78db"
        },
        "item": {
          "id": "3c647b52-ee39-4405-a809-b0bff37ae4be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a606d1a3-fec4-4b35-83c2-fa8eb824bb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63a51c2-7eb1-4d3b-ae7c-7a1677cc8b7d",
        "cursor": {
          "ref": "075c23c3-ef6e-4351-a989-7ff0f301cf8b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "630a9ebf-c04a-4518-8dba-621de99f4ce2"
        },
        "item": {
          "id": "c63a51c2-7eb1-4d3b-ae7c-7a1677cc8b7d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e317a381-6ec5-40ae-a968-014d3c3a06e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94470a09-361d-491f-a9ed-66d23d244448",
        "cursor": {
          "ref": "16360477-4622-4876-b17b-b3b963c7189c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "65db78e4-a01a-420b-877f-b04d46cc6c1b"
        },
        "item": {
          "id": "94470a09-361d-491f-a9ed-66d23d244448",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4d99bcec-43e1-47b4-b701-22f82f88146f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0012866f-8097-4f7a-86e7-722c6e74e7c3",
        "cursor": {
          "ref": "7ce7db71-566e-4e63-8550-a931a34af1d7",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ee4035f9-f2c3-4922-bf4e-a0ca6266b103"
        },
        "item": {
          "id": "0012866f-8097-4f7a-86e7-722c6e74e7c3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d0947b43-38df-4c61-a08c-d82fd5d21c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037e227c-8c10-4326-a3c6-6c55ef943f8e",
        "cursor": {
          "ref": "f8ce9a58-9c7d-4486-9e61-a219da07d82d",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5e87fc81-48f5-4d12-8927-acf2550140b0"
        },
        "item": {
          "id": "037e227c-8c10-4326-a3c6-6c55ef943f8e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c0f9677a-3168-43e0-8653-e2ab7e9f9415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c1f884-7ed4-459f-9f89-1479ee900ffb",
        "cursor": {
          "ref": "1e604479-8de1-4ac8-996a-ead30302dec5",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e7c9916b-d5d1-48d1-bff4-79d2bb060f03"
        },
        "item": {
          "id": "06c1f884-7ed4-459f-9f89-1479ee900ffb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2f3c0824-9d09-47e9-b5eb-ab734627104b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2067755c-bbce-445f-ad9c-1ce3fdf1d68c",
        "cursor": {
          "ref": "4c4aff81-34b4-4910-9a00-bddf9031e2d1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "64ad7eca-adeb-4e82-9f70-50bc01def050"
        },
        "item": {
          "id": "2067755c-bbce-445f-ad9c-1ce3fdf1d68c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "13957923-8e3f-4085-9e7d-783f410f1fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c0cd27-07b0-43f1-9b00-902b29332cb7",
        "cursor": {
          "ref": "0848fd49-678a-44bb-8003-fc532627641f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1a402682-7513-488f-9eb5-781b873a0a8a"
        },
        "item": {
          "id": "06c0cd27-07b0-43f1-9b00-902b29332cb7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2c4ff826-377c-4a60-b806-14568555faec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118a4bf3-5332-44dd-9c6f-b62638d607fd",
        "cursor": {
          "ref": "a293d013-fc41-415b-98c8-db15feeadd22",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "619aa7f9-88ce-4262-9bcd-3d02132a3b1a"
        },
        "item": {
          "id": "118a4bf3-5332-44dd-9c6f-b62638d607fd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "156f681e-9622-4ea8-b0e1-c4664d11dbbd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8203f455-02c6-41ff-a521-e423197659ce",
        "cursor": {
          "ref": "c7da4c43-8f8c-4059-bc03-66d92358e03f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "52107d14-2662-4dc2-a1bd-79ff9022f057"
        },
        "item": {
          "id": "8203f455-02c6-41ff-a521-e423197659ce",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5e29a406-131f-4274-b2c4-1532c572510b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf35df7-bc72-4bd9-a264-dec743be249c",
        "cursor": {
          "ref": "0ecb704a-2606-48b7-bc71-62d024704a35",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c2c0a357-0371-41a3-8ac5-5f629140b527"
        },
        "item": {
          "id": "ebf35df7-bc72-4bd9-a264-dec743be249c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7f24feaf-dfea-408b-82e9-1269287f7206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719d4e94-43a5-46d3-98a3-feeab76c8898",
        "cursor": {
          "ref": "da923bca-14fb-437c-960c-9b002dc67e37",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "582e1d61-35c0-4edf-9ad7-bd5ec5624a4d"
        },
        "item": {
          "id": "719d4e94-43a5-46d3-98a3-feeab76c8898",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "295b0592-103e-42c6-a763-d369eb748424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f54cb56-86aa-4506-82af-946f0febd471",
        "cursor": {
          "ref": "317db03e-d412-4547-a098-f64d5019a1ee",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0fdf759a-8f91-4be8-b1d1-616d1a4b374c"
        },
        "item": {
          "id": "3f54cb56-86aa-4506-82af-946f0febd471",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b8f94fb9-864c-4739-a3f1-44e19d510228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c455ee81-ec0a-47b9-b471-3a0c9788b96e",
        "cursor": {
          "ref": "046b2c56-e6a5-406e-8b21-a34d248ee730",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "35944c24-d067-4aeb-9702-f15b8c1eec98"
        },
        "item": {
          "id": "c455ee81-ec0a-47b9-b471-3a0c9788b96e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ec7933bc-528f-4797-af02-41f8faea2286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad99828-a6f5-4e89-8c74-65a439c5879a",
        "cursor": {
          "ref": "d70d36ba-7ff7-4140-a9fe-aa93213c5e85",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2d7474ed-5c11-46fa-a692-1d54a63237e9"
        },
        "item": {
          "id": "7ad99828-a6f5-4e89-8c74-65a439c5879a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8a3dcac9-34ea-4da7-a4c6-ce6700ab8b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ef1339-cf44-4ba3-ad56-2d1c555f0171",
        "cursor": {
          "ref": "adcd3115-151e-4f91-9da7-288d490c857d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c88675d6-b315-4983-b39e-23fa83368ed2"
        },
        "item": {
          "id": "f6ef1339-cf44-4ba3-ad56-2d1c555f0171",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8afc5ac4-73ed-4c32-a6ce-7ab303183eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13edfda1-3db7-4031-87e0-a0502dbfb840",
        "cursor": {
          "ref": "f266813f-36b7-4fa8-b52e-87d25848580a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "35abba19-4b6f-4c3c-9a5b-f4ae5d3b659c"
        },
        "item": {
          "id": "13edfda1-3db7-4031-87e0-a0502dbfb840",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2f89dc97-8057-4837-bfd5-ce3b8c5cfc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c75b440-a48b-4283-8369-646e8c75ffeb",
        "cursor": {
          "ref": "34b597f2-6a4b-4c4a-9545-293ed93f1cf0",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5ffef48a-3ade-4c66-b11b-0ccc3728eec7"
        },
        "item": {
          "id": "3c75b440-a48b-4283-8369-646e8c75ffeb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d820ffd6-e04b-43dc-a469-5e1fa98503f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32f70b1-4461-4240-b5af-f13ae6d84773",
        "cursor": {
          "ref": "0f55b89e-afc3-4d57-bc15-c880185d8204",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "84565039-641a-4088-85b4-ddf8e9400d75"
        },
        "item": {
          "id": "a32f70b1-4461-4240-b5af-f13ae6d84773",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "409af74d-a52c-4ecc-bb9a-b353e6bedd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f598147-565c-448b-ba92-21006ccf729f",
        "cursor": {
          "ref": "134fd991-d3ee-4a1b-8cfb-e17c7a5fc349",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "38faba14-29df-49b5-b09e-12f44175f942"
        },
        "item": {
          "id": "1f598147-565c-448b-ba92-21006ccf729f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0a283b0a-36d3-4db5-a0c2-0bd4f8de4140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41a4bc5-0855-42dc-b155-c00f1c716b8c",
        "cursor": {
          "ref": "c8eceb7a-0706-4b56-a234-454584931839",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d17c1af9-4c5c-4dac-b354-7bf60ec81b41"
        },
        "item": {
          "id": "f41a4bc5-0855-42dc-b155-c00f1c716b8c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aed5accf-4332-474d-8933-fbee4d537b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4d494e-99e8-4aa8-9031-50e077e43c3a",
        "cursor": {
          "ref": "d8110a16-ed3b-4479-a89c-bb13a2a348bb",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7bd11780-f48d-4fdd-a7b6-8812fa1e8b21"
        },
        "item": {
          "id": "ba4d494e-99e8-4aa8-9031-50e077e43c3a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3aeb0c34-0530-4a76-a752-0cb47708beb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afab08ab-914b-493a-b0fc-2864a345971c",
        "cursor": {
          "ref": "635b6b28-7084-4fd0-8f24-9b13972ad2f0",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "38935091-d50a-439c-b1d8-8adff5884c70"
        },
        "item": {
          "id": "afab08ab-914b-493a-b0fc-2864a345971c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cf0c1351-1fa5-4056-bdc1-f5b3cfee10dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394e98c0-e2d1-43ab-ab31-b5c962ca1721",
        "cursor": {
          "ref": "3c40cf36-6259-4864-8733-4a3541afe4cf",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5fd327fd-e013-4b84-927e-824949e837d3"
        },
        "item": {
          "id": "394e98c0-e2d1-43ab-ab31-b5c962ca1721",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "90cb590c-b49c-4032-a0e9-14a1ab6d6eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286daeaa-c068-4ca5-8a6c-91643a0db1d0",
        "cursor": {
          "ref": "08cfef55-a6d7-4b4f-b852-e738f5fdef92",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "29541c68-7d75-47b9-89e2-3d7c04285e68"
        },
        "item": {
          "id": "286daeaa-c068-4ca5-8a6c-91643a0db1d0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3763e0bc-d0d1-4b6e-b557-a9e4dd7a1acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4b974b-bc03-47ba-9b46-1206f74640fb",
        "cursor": {
          "ref": "405f20b6-6b10-4ab3-901e-220c5b284d00",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dc540c81-be6e-44aa-9e99-b2dbb4b00e24"
        },
        "item": {
          "id": "4f4b974b-bc03-47ba-9b46-1206f74640fb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d6eec3b4-f39f-46d6-a365-b8bb03884a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047d39d9-cc74-4f41-ae33-ff13c11ad876",
        "cursor": {
          "ref": "82355911-9152-4057-b482-b84c83b37bc1",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "602087a7-7f66-44a8-b9bf-1b82b9ab1367"
        },
        "item": {
          "id": "047d39d9-cc74-4f41-ae33-ff13c11ad876",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "345710f1-ad41-48c3-a83f-b21231433518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a84ec67-ed1d-49ce-854f-81e54cc06371",
        "cursor": {
          "ref": "06f702c2-8d50-4d16-afb7-514cf88f86d9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bd994c1a-fc20-458b-a74f-93632be522dd"
        },
        "item": {
          "id": "7a84ec67-ed1d-49ce-854f-81e54cc06371",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ba2a4d01-f8b4-4419-a3cc-9f2c8d05d0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b38a451-214f-4f4a-afa5-c0ac3861e95a",
        "cursor": {
          "ref": "d659749a-0c18-46c6-9dad-66919309c5d6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "18c886c9-1d99-425c-acb9-392947917a3a"
        },
        "item": {
          "id": "2b38a451-214f-4f4a-afa5-c0ac3861e95a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a1d36efa-05a7-4c31-bbde-3f7cc3d60c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4a9c0a-0d9b-43d8-9dc5-9c6ea9ca7856",
        "cursor": {
          "ref": "96d0e6d3-07a3-4cac-8818-e2019f2711de",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "55c891eb-fb83-4340-94c0-0f811a94548c"
        },
        "item": {
          "id": "3e4a9c0a-0d9b-43d8-9dc5-9c6ea9ca7856",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1dd4f8d8-5f92-4f31-a69b-b65b53d2b904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62c2380-ce5f-4533-bb1c-1762fae9a353",
        "cursor": {
          "ref": "cfb709bb-37a5-46a5-a4b0-b74996b81464",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "65eec748-57d6-4d6c-a345-109277e7fc8c"
        },
        "item": {
          "id": "c62c2380-ce5f-4533-bb1c-1762fae9a353",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "576ed3d3-48d5-40a4-b276-4c88b6b345c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db51e0cc-8c62-4beb-96bd-6be069aa35c9",
        "cursor": {
          "ref": "c5edfbb3-24f0-4d83-85ec-e314300184cf",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8a31bc98-5ab8-4c4c-9918-1cf37e85796e"
        },
        "item": {
          "id": "db51e0cc-8c62-4beb-96bd-6be069aa35c9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1c138e73-6f22-4214-bb28-c22a16682f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860fa8d6-a6a5-41ec-bcfe-dacc86c91fea",
        "cursor": {
          "ref": "74aefafb-82d6-4f3a-ab7b-a7798d941da6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "76e36679-d65b-4541-86da-324a0dcf4bc1"
        },
        "item": {
          "id": "860fa8d6-a6a5-41ec-bcfe-dacc86c91fea",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f75e246c-e34c-4b37-95d9-7e4eb39d6882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f06580-5a7d-4773-a965-d2e8f7807583",
        "cursor": {
          "ref": "f3da89ba-28ea-49b7-9ee5-64b0345f8050",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d119b9bc-e081-4e26-be7d-9f085307fce9"
        },
        "item": {
          "id": "c2f06580-5a7d-4773-a965-d2e8f7807583",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fcdf8ae1-afe2-4191-a078-20232a3405a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3859286-6fc3-43a3-aa22-b1aa9bd1705a",
        "cursor": {
          "ref": "cc2a030a-7ed6-4c38-9b01-c23d2c8e37eb",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "178cdc5b-393a-4fd6-a14d-033c076571c4"
        },
        "item": {
          "id": "f3859286-6fc3-43a3-aa22-b1aa9bd1705a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "42403388-fa6f-4e3a-9f8d-de7c45989817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c85aa3-55cf-457c-8d80-a079b4edcee2",
        "cursor": {
          "ref": "b891af54-5dcf-47db-87f4-5724dcf0bc26",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dfda55f1-6559-432d-a4c0-8a0be5cefdee"
        },
        "item": {
          "id": "a7c85aa3-55cf-457c-8d80-a079b4edcee2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bcddc9bf-e2c7-4c22-b3e2-93e65bbe9f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684ebab3-5cf2-405e-a169-b75d42b9126a",
        "cursor": {
          "ref": "6e2ccb58-20d0-4889-a711-527ca6dceef5",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "58e0a6fe-3e8d-46bd-a967-afbc5c527e5f"
        },
        "item": {
          "id": "684ebab3-5cf2-405e-a169-b75d42b9126a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "af41230e-4e65-4915-857d-cd44d3befbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ead439d-b76b-44bb-aaa5-812a026565df",
        "cursor": {
          "ref": "3b520998-4296-4f66-8836-b15f11a87c58",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c75c7237-a092-4aa0-b634-6eb7b60e8ffa"
        },
        "item": {
          "id": "2ead439d-b76b-44bb-aaa5-812a026565df",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b4d564bf-8c1f-436f-b89e-3d94fecc9e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9e19eb-8f7d-45f5-b368-29065644de68",
        "cursor": {
          "ref": "a3a282c1-cab4-4343-a528-e9b3a9aa9886",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f751164d-4c4b-4776-ab02-e590d0f02bdc"
        },
        "item": {
          "id": "ab9e19eb-8f7d-45f5-b368-29065644de68",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "718fd152-d056-4163-9fcd-667a71119047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f457d9d-20ea-4e44-a4ee-cb5479630961",
        "cursor": {
          "ref": "4a739bdf-2ab9-465c-9ccc-424839aaa1bf",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c642686b-eb9e-4e8f-bf20-32df96dd8342"
        },
        "item": {
          "id": "8f457d9d-20ea-4e44-a4ee-cb5479630961",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "602b2107-1ea1-4ee1-9632-6ed339322de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e702ed7-1570-4336-bbde-69ec763d3b8d",
        "cursor": {
          "ref": "11bb6454-38f0-4961-8762-5a6d6c27f568",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1e1fcb73-f60c-4175-896f-7cf108469aef"
        },
        "item": {
          "id": "3e702ed7-1570-4336-bbde-69ec763d3b8d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "10cf8eef-cdfc-49c2-8d14-64117e33aecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e976b79-fa6c-4264-986a-2b70e189ad79",
        "cursor": {
          "ref": "78371814-62ab-4aac-a967-3a9118149483",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "45c95f47-75cc-4e57-b278-5baf96dc12c6"
        },
        "item": {
          "id": "1e976b79-fa6c-4264-986a-2b70e189ad79",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5c45b750-f961-484f-af61-487c496ab1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93272eda-fee6-4ffd-b48a-f5e34ffa9c69",
        "cursor": {
          "ref": "fd5e0e74-353d-4c60-9968-676fa0d4df16",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9b0696e2-161f-49b9-8c17-7e5d51ea1867"
        },
        "item": {
          "id": "93272eda-fee6-4ffd-b48a-f5e34ffa9c69",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ff4ca597-8cbb-4e8e-b270-fa6735b7cbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1061643a-109c-4ab7-b57a-7a2f644130e9",
        "cursor": {
          "ref": "0caad2ee-897d-4a02-a194-76da8bdc27e7",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "584c9760-1b6a-4083-b418-e02cdbcec7b5"
        },
        "item": {
          "id": "1061643a-109c-4ab7-b57a-7a2f644130e9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "77c2555a-0b3b-4e15-9272-3e56d248ce45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07baca4-fe48-4ad0-a6d1-437c47e4d2f2",
        "cursor": {
          "ref": "f397e4c5-fa90-4c6e-8ea8-4ad4cdd5cb48",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a518a3d2-a15a-4a18-a479-2f7a1cc81e88"
        },
        "item": {
          "id": "e07baca4-fe48-4ad0-a6d1-437c47e4d2f2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8ccb8de8-7a36-4e83-9780-1b61af908f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d310a9c9-7528-4ae0-8ca8-0ac8aa5ee0b4",
        "cursor": {
          "ref": "7fa15180-2d01-430a-b6fb-bf82f1b00a2c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ef2a2bab-b4fa-4221-9728-945e0c46a934"
        },
        "item": {
          "id": "d310a9c9-7528-4ae0-8ca8-0ac8aa5ee0b4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "70127fa5-6851-47ff-ab9f-5eb9e40ac3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a131dd-ba10-4078-9218-b768713847ec",
        "cursor": {
          "ref": "27bf15ac-3c9c-4d45-9a65-8a84f8288276",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "150cbb8e-2542-4598-9936-2538034befc2"
        },
        "item": {
          "id": "94a131dd-ba10-4078-9218-b768713847ec",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dbe641a2-0c65-4721-9a1a-fa254ea5403c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390e05ef-0d2e-4da7-b6f5-13442293cfef",
        "cursor": {
          "ref": "afe90ba8-000d-4c61-a631-0d362daef128",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7505403f-784d-4b0f-85a8-a2a9a197521d"
        },
        "item": {
          "id": "390e05ef-0d2e-4da7-b6f5-13442293cfef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ed01a649-b264-47d8-a2e2-2bcc8adc2217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e888de04-8836-4061-84f0-a7ba72626bd9",
        "cursor": {
          "ref": "b946f95c-5251-495c-ab21-ddaacc3a37bb",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bef9976a-71dd-4c2f-b266-39ea072fd672"
        },
        "item": {
          "id": "e888de04-8836-4061-84f0-a7ba72626bd9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "94060e71-3e4d-45bc-8c2e-849b339b99ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b258889-7d03-4e03-8e92-6f1c0062c579",
        "cursor": {
          "ref": "a37cc1fb-6a5a-47c0-9c68-a625a02c7011",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e55c5988-5a74-4fb7-864e-1406c0f17fa5"
        },
        "item": {
          "id": "9b258889-7d03-4e03-8e92-6f1c0062c579",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "092653cd-6546-4226-b6bd-57499da2760e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbc8497-6dd0-4094-9447-8006035e3645",
        "cursor": {
          "ref": "88178b35-712b-4e26-a38c-60008d33ec5c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cacb4a6f-842b-469f-8998-fd2847332458"
        },
        "item": {
          "id": "2cbc8497-6dd0-4094-9447-8006035e3645",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "97d935fe-534a-4619-bb62-68f0ddab97bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9593ae-7842-491d-86a1-6ad486466b20",
        "cursor": {
          "ref": "7dec0119-a773-4cc2-ac22-b7cd2428702d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "051aaafa-ca40-4213-8d6c-fc29910f06ee"
        },
        "item": {
          "id": "9f9593ae-7842-491d-86a1-6ad486466b20",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c125d9f3-2abb-4be2-9401-525ac29be4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa23b5e0-587a-460b-9b15-a96cb44a4b9b",
        "cursor": {
          "ref": "0c09a2b5-b598-4243-8bbe-7429543937f1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8aa0f891-0cd0-4840-be13-dabcebe3d591"
        },
        "item": {
          "id": "aa23b5e0-587a-460b-9b15-a96cb44a4b9b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "294f57b6-f068-4dde-836e-a9caf56f7224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d35f9ea-d211-4a6a-926e-4082534dbbb5",
        "cursor": {
          "ref": "54d88d0d-6c04-4d51-8289-5f0b62d8fc25",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "67711277-98a2-4c43-984f-d2ae31a4480d"
        },
        "item": {
          "id": "0d35f9ea-d211-4a6a-926e-4082534dbbb5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "71393c4b-3aae-4bb7-831a-b6798fa3394d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af9e9ca-7486-4f9c-b205-fdf3b9df7caa",
        "cursor": {
          "ref": "5720f6f4-ca2d-4581-968c-9ae760da221a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bc77c2e0-6313-43c5-950f-35d627d2aa89"
        },
        "item": {
          "id": "8af9e9ca-7486-4f9c-b205-fdf3b9df7caa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2844e878-1678-4e06-a747-4e5ad8ae5223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f009af41-acdd-4664-b8c3-f595804ccc50",
        "cursor": {
          "ref": "4e9999df-6674-4e20-a54b-860c22407d43",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "323702c3-2ba5-447e-9e37-7e9f895f47ba"
        },
        "item": {
          "id": "f009af41-acdd-4664-b8c3-f595804ccc50",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7f21f771-9392-44ed-84f8-3cf04510d0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf95ec50-6458-44a6-acde-2d270984d5ca",
        "cursor": {
          "ref": "ec8f2dd0-049d-49a6-9a09-f0c33379568b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "60e14ec9-2118-429c-aecc-045bb8d1d7b1"
        },
        "item": {
          "id": "bf95ec50-6458-44a6-acde-2d270984d5ca",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "91304c58-84c1-4722-b178-e148a5293c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6023839b-1737-42b6-baa4-3d582cfe99ff",
        "cursor": {
          "ref": "541eefbe-b427-4d9d-8259-38b1a5922372",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f9587ec6-9440-4996-8ba0-63b8d0441145"
        },
        "item": {
          "id": "6023839b-1737-42b6-baa4-3d582cfe99ff",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1c3faeff-a855-4f16-bf24-8d1c7a083ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7784950-271e-43ea-836c-81385aedc21a",
        "cursor": {
          "ref": "a595a983-6b03-40d2-8596-c39a540a8c72",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3800871d-ded3-4dbe-9b42-98131d69becb"
        },
        "item": {
          "id": "c7784950-271e-43ea-836c-81385aedc21a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4940b835-889e-4688-877a-5eedc156e0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c89c05c-b8b6-4876-9c33-62241de1187a",
        "cursor": {
          "ref": "532d9154-1fc9-4bbb-8a38-b59a80457e32",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "98e9a663-b9b3-4434-8a53-d1a21adbcc36"
        },
        "item": {
          "id": "5c89c05c-b8b6-4876-9c33-62241de1187a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "03262a06-b662-4e77-81b3-2ed0583c6b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55689e4f-546f-4b36-9158-1750a451d2d5",
        "cursor": {
          "ref": "61079a69-d33c-41e6-9c19-0940e5c7a31b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "be6d4431-2b35-4bef-9890-519ccb2e59fc"
        },
        "item": {
          "id": "55689e4f-546f-4b36-9158-1750a451d2d5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bae348a2-08b7-4daa-a227-841724722b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d73afb0-61f3-4948-b179-d0a8b9f6942f",
        "cursor": {
          "ref": "6bb1c67a-7b44-40e0-bf1d-e8e5de1a5e70",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "521d30dc-d194-4952-a4cb-0da12b3cac23"
        },
        "item": {
          "id": "0d73afb0-61f3-4948-b179-d0a8b9f6942f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a5ea6b46-1fb5-4473-959c-2cf3805a9e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ac6936-c4aa-4492-8af2-2eedd2c859a6",
        "cursor": {
          "ref": "4a0991a1-db31-44dc-9f98-a6d7c3502ce0",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ffdd03e1-1e64-4610-9c0c-291dc30107fd"
        },
        "item": {
          "id": "47ac6936-c4aa-4492-8af2-2eedd2c859a6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a5c39866-b6c0-4d8e-9527-3ee3cd58dc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44499ec9-4d68-4c5c-86c8-dcf7011dacf7",
        "cursor": {
          "ref": "a31c61c2-5b46-4b43-91ec-e07ee21f71a3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0193249a-f5a0-4a85-89b2-0449e0aec45a"
        },
        "item": {
          "id": "44499ec9-4d68-4c5c-86c8-dcf7011dacf7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2f4c7ef7-650c-4096-9602-b3e892af871e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c131af-a98d-4b55-a12d-b90be1eeba87",
        "cursor": {
          "ref": "aa8b9567-4a34-435c-9135-c23af4d7e4ac",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eb85da6b-340d-4cad-bbe8-b16939a1701c"
        },
        "item": {
          "id": "50c131af-a98d-4b55-a12d-b90be1eeba87",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fec1b2f4-101c-4fb9-857e-2749851a9e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc26c0a-8a30-4f3c-8fed-2b70ccd5c704",
        "cursor": {
          "ref": "1e57021a-7602-4131-b633-8a2151c9cc5d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1b269774-10c7-4936-93bc-f4184d1d0995"
        },
        "item": {
          "id": "bfc26c0a-8a30-4f3c-8fed-2b70ccd5c704",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0afd05f3-bfe3-4b8c-b617-0034992fd225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbb8aab-a763-4148-9881-7a33d1c0cfa8",
        "cursor": {
          "ref": "554d8930-ca30-4777-96aa-4e97d5db12b4",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9dc3c641-0bd5-491d-8bf0-56f3dd451e68"
        },
        "item": {
          "id": "4dbb8aab-a763-4148-9881-7a33d1c0cfa8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3209bacf-0431-47a4-8244-a7ac0cab1ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481da727-6751-431b-a059-4b0d86eecb44",
        "cursor": {
          "ref": "cc406bc0-be3f-450f-8eae-7b9b6250985d",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cd39fe93-c3b2-4c53-bdfb-70dfec4a2528"
        },
        "item": {
          "id": "481da727-6751-431b-a059-4b0d86eecb44",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f5c8deab-e69f-437c-aaf3-d6efbcf3097c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a143c93-1c38-469e-b242-8f29a0a99120",
        "cursor": {
          "ref": "0d49c9d5-104a-437c-af7d-a0bc50875992",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a2cb51dd-0be7-48ab-af09-2e420da4d313"
        },
        "item": {
          "id": "8a143c93-1c38-469e-b242-8f29a0a99120",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fc82d3da-ab1b-460e-9eee-4213212728d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf77ea3-6877-422e-ab7e-0906c6c53830",
        "cursor": {
          "ref": "ba0e1a21-d396-4fa1-90e3-d7f72f019c7f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d39d2e92-52c0-4754-93ad-c39d10568750"
        },
        "item": {
          "id": "9bf77ea3-6877-422e-ab7e-0906c6c53830",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ac129a69-da38-4ef5-a4b1-04869457a67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c7ccd4-68fb-4451-b823-e5d6ffc6e018",
        "cursor": {
          "ref": "85c5d6eb-4faf-44ea-a6fa-dd78ed14a934",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9e0122b9-349f-4d52-9548-d2fbf555d198"
        },
        "item": {
          "id": "b4c7ccd4-68fb-4451-b823-e5d6ffc6e018",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "54fb1da0-5c8d-427f-ad19-9ae8fe14cfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e77cc3-425f-45d5-bb9f-be518f1c759b",
        "cursor": {
          "ref": "fb63e910-8324-4621-a6f9-4eb342bf5cb7",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "46822cde-e9ba-4db5-940c-c307215b5bb4"
        },
        "item": {
          "id": "63e77cc3-425f-45d5-bb9f-be518f1c759b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "09fa128c-f71a-4255-8d2b-a43dadc9b12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a92615-6358-4b4d-972f-f19fd6d5cb52",
        "cursor": {
          "ref": "37f1e98d-3e6f-4fa0-b812-d592148fadc5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "21d43d6a-bef0-4a39-b279-130ac1430585"
        },
        "item": {
          "id": "48a92615-6358-4b4d-972f-f19fd6d5cb52",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8aab36a0-a0d4-4253-89c8-1bedda2cae3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5020fe-2716-47f9-8ca5-55f0ff7c53d3",
        "cursor": {
          "ref": "978d4986-4381-4cc1-a023-13ab76a14cd9",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7fc54ec3-9330-44c3-be37-7ee6f979d69b"
        },
        "item": {
          "id": "9f5020fe-2716-47f9-8ca5-55f0ff7c53d3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "998e5990-79b7-4bc9-a1e0-fb2cf3702c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447dbd6c-7c24-4167-9c80-efeb41ead271",
        "cursor": {
          "ref": "5cd0d65c-7f40-478c-aa34-c143bab90d5c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7280550f-87b8-4f80-a993-6c9d12ab44d5"
        },
        "item": {
          "id": "447dbd6c-7c24-4167-9c80-efeb41ead271",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "78656e2c-db84-4e90-be7b-52b1bed64ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e48c13-ab14-4e48-bad9-6f95191cf57c",
        "cursor": {
          "ref": "43f26cdf-b6b6-424a-b822-eb06d75e3d12",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "87fd4832-f14b-4574-b92a-7a12eec17b79"
        },
        "item": {
          "id": "13e48c13-ab14-4e48-bad9-6f95191cf57c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2b34ea02-2baf-4ddf-9858-d8b0957ce1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362a6adb-4024-458b-9290-70bc7572cf49",
        "cursor": {
          "ref": "be19f9f6-1429-4d07-ba06-cffa8f2d5288",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "33112da7-4494-4389-a557-a576c981095d"
        },
        "item": {
          "id": "362a6adb-4024-458b-9290-70bc7572cf49",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4825a133-6c9a-4bf5-8dc1-bf227a09e7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aeb8307-eec4-411e-b64a-a10a7657ea7b",
        "cursor": {
          "ref": "eeff3e2e-498b-4099-bebc-6d899f09c089",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b713d7ed-f63f-4229-8a19-062aa58ccd16"
        },
        "item": {
          "id": "5aeb8307-eec4-411e-b64a-a10a7657ea7b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "434cad24-c5bc-4f99-b43d-0a43d55f2063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64159ab0-7608-4040-b4b7-c90532f18f59",
        "cursor": {
          "ref": "f9caa7a4-a3b3-4224-99ee-93d0ed744aec",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5e64ee99-ca79-447e-9135-0a33782a2011"
        },
        "item": {
          "id": "64159ab0-7608-4040-b4b7-c90532f18f59",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0841fff0-991e-4933-8623-ee9fc0b99380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1ce2cf-0d5a-4e35-af1f-7590459a9d2f",
        "cursor": {
          "ref": "e7e771e2-73e8-4411-9eff-74fbb06a446f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2ee1d6c5-0836-4027-8ebb-8f3e000a5fce"
        },
        "item": {
          "id": "9e1ce2cf-0d5a-4e35-af1f-7590459a9d2f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ca19df5c-bec7-4c94-9fbf-6c3e11d0bb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e001d074-a7db-4b95-9acb-a54185acc09c",
        "cursor": {
          "ref": "3d7ec945-5290-4da4-b867-513ab331c82e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ccf54fd2-cd0c-42d9-a5e1-cc0186889604"
        },
        "item": {
          "id": "e001d074-a7db-4b95-9acb-a54185acc09c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7a1d1c39-7d27-4867-a561-e8706dfa4012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cae9bd-b633-4009-919a-5e3046ae62ed",
        "cursor": {
          "ref": "74065f92-8ee2-4c0e-b140-b40c0c758d69",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a4e641e7-6e40-4446-bb4f-178bdf510c2e"
        },
        "item": {
          "id": "32cae9bd-b633-4009-919a-5e3046ae62ed",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3b73df73-76c1-47df-8327-5b31ea660e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbb7226-feca-4c17-bc18-f9d5009c4901",
        "cursor": {
          "ref": "dca03d88-451f-42cb-be8e-34df52947d6c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "edc53db0-ef56-4de6-95e5-6537bfdf2101"
        },
        "item": {
          "id": "0dbb7226-feca-4c17-bc18-f9d5009c4901",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b2ada140-df2a-4b72-8c96-8029ea57b685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dfe3a1-ef3a-468e-81d8-c109dab97e12",
        "cursor": {
          "ref": "b902038b-46fc-4b6f-9ad1-e2efc9460237",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "073c708b-5c07-4758-9c21-6b0f0f34a1a4"
        },
        "item": {
          "id": "77dfe3a1-ef3a-468e-81d8-c109dab97e12",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6d4fc13f-08ff-492c-821b-5e2c926d3fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d729afa6-f019-4cdb-aee6-ddf525339cae",
        "cursor": {
          "ref": "5ca885e2-ec3d-4061-856c-0c56e07b03c6",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "83c212d4-1dc5-446e-acc2-f2a7f0b3bc1c"
        },
        "item": {
          "id": "d729afa6-f019-4cdb-aee6-ddf525339cae",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f1b15f2a-2cb8-4ad2-90e4-27ae10679520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220ba5d4-d74f-49e4-aeee-6f20463c9790",
        "cursor": {
          "ref": "436a029b-80cd-463e-8e3e-a839752d61d2",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4078069a-89d0-4915-be11-02122884d0b1"
        },
        "item": {
          "id": "220ba5d4-d74f-49e4-aeee-6f20463c9790",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cb38896c-4988-422a-b6c2-35454bdd35e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7677357a-8126-4249-a066-9417279f09c3",
        "cursor": {
          "ref": "73f3fa78-e154-49cf-9b36-87967503e6b8",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c1c30fd0-4e7c-4a9d-a203-60c13f489901"
        },
        "item": {
          "id": "7677357a-8126-4249-a066-9417279f09c3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dadcfd1e-05ad-4ded-8c14-c3633cba9b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8defef5-372e-4db0-9c93-5939db130997",
        "cursor": {
          "ref": "0055a206-8c0b-495f-acb3-bd66c3e14453",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "11ebb0df-ee93-4b46-af91-8c9b176f60ba"
        },
        "item": {
          "id": "e8defef5-372e-4db0-9c93-5939db130997",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "23dac720-be52-4e52-bf5a-e25553f944e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539c6625-02b9-4d32-8d9d-70d1ad0d6452",
        "cursor": {
          "ref": "19e2a29b-5ffb-47ea-9dff-d17e73050e5f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "17366272-ef51-410f-b4cb-f762798c26e5"
        },
        "item": {
          "id": "539c6625-02b9-4d32-8d9d-70d1ad0d6452",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0dc987e7-73ef-4323-964b-55755efc59c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e2f260-1e81-4ccf-9b46-d958248fb714",
        "cursor": {
          "ref": "ea90bc87-4e23-4195-863d-633158c47609",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bc027f25-5e43-432f-a355-c47ca3576dcd"
        },
        "item": {
          "id": "b1e2f260-1e81-4ccf-9b46-d958248fb714",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "68be59bd-a1a0-4dec-894f-c34ecae5b1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f509c76-cce1-4711-8397-1270e3bf753d",
        "cursor": {
          "ref": "32f19b40-f89d-4978-a050-54434e182297",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b994ac05-34df-4404-9b8d-6592374ed7e8"
        },
        "item": {
          "id": "4f509c76-cce1-4711-8397-1270e3bf753d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8841762d-ef97-4978-921b-86a9090d5231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1e118d-c769-4e44-bd0e-a4bbec476969",
        "cursor": {
          "ref": "6ab1a2b9-b446-43b9-86c1-1ae980d9eb3c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "88dad729-f49a-481f-9cc0-f2ee95b6e98d"
        },
        "item": {
          "id": "eb1e118d-c769-4e44-bd0e-a4bbec476969",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "46097d89-168e-4ed0-8957-e69be91a13e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c72def-11fd-44cd-95c0-15b14172a057",
        "cursor": {
          "ref": "ebb2b354-1728-4a8e-8bbb-d9dce62e46c7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "aec05586-fe75-49cb-9471-6fb6dcf05e92"
        },
        "item": {
          "id": "06c72def-11fd-44cd-95c0-15b14172a057",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6f6e31c3-5bf3-4671-a1bd-153e6d74b7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f09bf8-f1c1-4119-8b44-8fc3fc21903d",
        "cursor": {
          "ref": "213056ca-9876-4066-ad03-b85fba58c211",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e093dadf-7c79-48da-8d9b-51af5fb879c9"
        },
        "item": {
          "id": "05f09bf8-f1c1-4119-8b44-8fc3fc21903d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c77b4e38-d3c3-4ee2-9ae8-ed8c2c740b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993b5033-20e7-4212-99fc-35f40ca18867",
        "cursor": {
          "ref": "0203fcea-f0fe-49bb-b597-2814ef684d64",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5255eae0-3314-4309-b5f8-375d822f0a58"
        },
        "item": {
          "id": "993b5033-20e7-4212-99fc-35f40ca18867",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d2868e6e-d895-4bcc-b5cb-bd61d5f0b4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08aad8a8-4783-40c4-b4d8-3b1b44111254",
        "cursor": {
          "ref": "57e668eb-e339-4ab0-852e-09bcb58bec28",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "745b92c4-a554-42af-918e-a34bdaf45273"
        },
        "item": {
          "id": "08aad8a8-4783-40c4-b4d8-3b1b44111254",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5f2aeb58-73a2-4c3e-bd9b-35ec0065b44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc244cea-79ad-49a9-baa6-4d259608c847",
        "cursor": {
          "ref": "c8f2a05e-4c4d-4858-8b43-1785882bf5a5",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "626ca0f6-6942-40cf-889e-f8f4e8e7c9d2"
        },
        "item": {
          "id": "fc244cea-79ad-49a9-baa6-4d259608c847",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2370e0a7-e6b3-4a81-bdbf-92a41ab9efca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bd5fe9-b682-44b2-8d0c-6a19c0012128",
        "cursor": {
          "ref": "46f3e1a9-2ebd-41d9-a851-6c10b9cc4ed9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "26e1996c-a277-4dbe-b534-67f86ba8e16c"
        },
        "item": {
          "id": "54bd5fe9-b682-44b2-8d0c-6a19c0012128",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ba155df1-13e7-46e2-9e9d-fae7e89455ca",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "656d837f-ac34-489f-b9f8-145896f9c02a",
        "cursor": {
          "ref": "6d80520d-ef11-4fa5-abfa-b37621fd0bc1",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "30e6726a-fea1-4af7-b1c3-0bc9d743dcf3"
        },
        "item": {
          "id": "656d837f-ac34-489f-b9f8-145896f9c02a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b4f588ec-4913-4a2b-9c2d-dc7ce755a5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32defff4-ac93-4fbd-b16e-d13e290aef50",
        "cursor": {
          "ref": "bd901551-aa71-4c29-a5fc-dd42f78b781b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "be9d0e9d-6785-4fc1-8d8f-6d71701c6b37"
        },
        "item": {
          "id": "32defff4-ac93-4fbd-b16e-d13e290aef50",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f208729b-9dbd-441d-b61f-04ead306bd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e3b776-67c6-440b-b150-495aaab0ccf8",
        "cursor": {
          "ref": "58e294c9-4ada-4472-a2d5-6ad7ab303b80",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cb8feb5f-839b-408f-ba41-05ef0ea9d4b9"
        },
        "item": {
          "id": "d8e3b776-67c6-440b-b150-495aaab0ccf8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "07af5d91-1b61-4321-ad78-0cf45241be6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a9a295-8cac-415c-885e-1e4db05fcd18",
        "cursor": {
          "ref": "28796197-7388-4ad3-9e0e-0cb4825651e9",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "45e184b1-0f38-466a-87e8-e2eec60f3a58"
        },
        "item": {
          "id": "b5a9a295-8cac-415c-885e-1e4db05fcd18",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1a7dbb31-04b0-4812-a1a3-e84b32a52f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c47bc4d-452c-4624-b73c-a31f64584bbf",
        "cursor": {
          "ref": "10aa7c1e-58bf-48b3-a917-04eefdfa1344",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c5fd7a0a-a165-456c-b79b-e04b576723cc"
        },
        "item": {
          "id": "1c47bc4d-452c-4624-b73c-a31f64584bbf",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "02585235-a22d-4e14-8921-7195a8e75443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e64b3e1-790c-40cf-832c-37733803f96a",
        "cursor": {
          "ref": "012614af-6b7e-4951-b482-174a5e539346",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "19d2bfbc-81d0-402b-a2da-e7e75ec6a914"
        },
        "item": {
          "id": "5e64b3e1-790c-40cf-832c-37733803f96a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d4382a88-6427-417f-810e-41b7fb20c441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e37a06-a6fa-4bc4-8f76-2a4738c48f18",
        "cursor": {
          "ref": "3b48691d-d1db-4b2a-854d-7eca3f1513dd",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7d7b7fed-0656-43bd-a7bd-5e869ffd3b27"
        },
        "item": {
          "id": "04e37a06-a6fa-4bc4-8f76-2a4738c48f18",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b35eac5a-31ce-4799-9613-1efac977e9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149d4e92-d95d-43bd-936f-525c70fd0b29",
        "cursor": {
          "ref": "6d5a338e-6f04-4916-b63f-eafa01d10a9f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ba63edec-4c4f-4116-a349-6a124fcce874"
        },
        "item": {
          "id": "149d4e92-d95d-43bd-936f-525c70fd0b29",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "21998fc4-5aa0-4014-8c38-f3b2d4da34d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce36f13b-7aea-4fa4-a6bf-8cab4f90ccbc",
        "cursor": {
          "ref": "41a674fe-04a2-40be-8645-b41281fef7ba",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b4001b95-5705-4208-983d-a55799807490"
        },
        "item": {
          "id": "ce36f13b-7aea-4fa4-a6bf-8cab4f90ccbc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8b10771a-4f2f-4b7d-8b3a-b3dd3933140e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb38560-36fb-42f2-9b50-96ff66fac64e",
        "cursor": {
          "ref": "840fab2b-aab6-4022-ab78-525666a60a37",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e83e1e5e-dd31-453f-95db-263850db1b30"
        },
        "item": {
          "id": "afb38560-36fb-42f2-9b50-96ff66fac64e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "78af65ca-d15a-40a2-9be0-4573a43ced85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73375939-b5ba-4260-89b8-d80577a2e49b",
        "cursor": {
          "ref": "7c612720-6947-4b54-8295-d9df174d8a87",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2f98e39e-188c-4447-8d7f-acd45576af77"
        },
        "item": {
          "id": "73375939-b5ba-4260-89b8-d80577a2e49b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "61599975-d6b3-47bb-a753-7640a3ebff0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbe3409-9f9d-4f4c-a110-1d7f73d5dfe5",
        "cursor": {
          "ref": "5838bcda-627a-4afb-bf55-c8e22f247234",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6e18cf2b-1be6-40de-b78d-e410c8afac50"
        },
        "item": {
          "id": "6fbe3409-9f9d-4f4c-a110-1d7f73d5dfe5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2d7a7ec3-4edc-4c88-8f97-7962ac320c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e9a598-563e-4fca-b1a2-cbf33711a2b4",
        "cursor": {
          "ref": "d789e968-560b-41fc-8f31-9a0c7ca48200",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "18434607-aa80-4236-92b9-de6b110204ea"
        },
        "item": {
          "id": "c2e9a598-563e-4fca-b1a2-cbf33711a2b4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b42eed87-5ee3-4d9d-9a00-28befee2a3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f3efea-6078-430d-a7f1-f220bd631966",
        "cursor": {
          "ref": "8ca38160-e15a-4a4e-b41d-ac9bbe13449e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "53f95424-792d-43d5-a797-a650e26f2b99"
        },
        "item": {
          "id": "57f3efea-6078-430d-a7f1-f220bd631966",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e3bc319d-576b-4458-9287-a49e458c0281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99901c8b-81e1-4954-b33a-762f100b09a4",
        "cursor": {
          "ref": "48688821-8841-42ce-a8e2-d77a5d29d863",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0d2fe6db-b45d-4984-a99c-9bacdefbe7ff"
        },
        "item": {
          "id": "99901c8b-81e1-4954-b33a-762f100b09a4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dc4a0799-e922-469d-8756-0e1a3cea17a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22b15e1-d4a0-471e-b1f5-fa06eda1d93e",
        "cursor": {
          "ref": "d37fd0b0-a754-4027-af3d-58f53a67ae50",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8fb57a9e-d8fb-4b3c-99c2-b6fb8e53dc00"
        },
        "item": {
          "id": "b22b15e1-d4a0-471e-b1f5-fa06eda1d93e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cf1f2e69-f6fc-44ad-91b3-bce24e81d204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135c8622-a567-4f5c-a5b2-d7eaa99f14ec",
        "cursor": {
          "ref": "ffbcc7c5-44c4-4150-920a-2c741fd9c15c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ebe18edf-3523-4ba7-9f2c-c7b6c2efcfe5"
        },
        "item": {
          "id": "135c8622-a567-4f5c-a5b2-d7eaa99f14ec",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "86856f95-4bbe-4966-9598-189b514689ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9642c488-9b35-409d-88d5-be6d10441772",
        "cursor": {
          "ref": "298dd0f6-0f0a-431c-b128-0ce6e2823988",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "14f37b27-5cf7-4a65-8388-4c30c60f97f9"
        },
        "item": {
          "id": "9642c488-9b35-409d-88d5-be6d10441772",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fcc49efd-cccf-4c64-8487-66b9155fb713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761f56a2-84d7-4a07-b842-ef091027dd97",
        "cursor": {
          "ref": "823a4c26-dd80-427b-b9d1-9c79ecc4c8ba",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f74db305-9fb6-491c-aeb4-a94adbcde469"
        },
        "item": {
          "id": "761f56a2-84d7-4a07-b842-ef091027dd97",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "85b47b41-ca5f-471c-839d-cc43963deb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f34668b-0f59-423a-8eeb-23d2ad38c391",
        "cursor": {
          "ref": "e5d61d7c-0c9b-4988-94a9-1cd1a2290030",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "725df578-5dab-400e-96c6-a015701e65f4"
        },
        "item": {
          "id": "2f34668b-0f59-423a-8eeb-23d2ad38c391",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "79496791-1522-432e-ac45-1514debf8b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9b7588-d818-4a91-b2c9-6f81b05ec699",
        "cursor": {
          "ref": "7038ba00-be85-45d1-aeed-8525eded5ec3",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "67c32100-7550-467e-980f-5c061a9ba70e"
        },
        "item": {
          "id": "be9b7588-d818-4a91-b2c9-6f81b05ec699",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "40a14f59-0916-4431-9011-2723f1de7e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4705d882-d6c4-4908-8215-a6e59dbddd29",
        "cursor": {
          "ref": "1c6c628b-4856-474b-a243-2a3e0a4f1e2c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9c375477-fb43-4a5a-826b-7484127783ab"
        },
        "item": {
          "id": "4705d882-d6c4-4908-8215-a6e59dbddd29",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5ad80570-4382-49ca-b3ab-211dd40a7325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505cb8f3-f820-4efa-91e2-7178633092bb",
        "cursor": {
          "ref": "69830b52-69ea-4c47-988c-4105278d3822",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1ff3c040-4a04-4daf-9132-1730d9056e27"
        },
        "item": {
          "id": "505cb8f3-f820-4efa-91e2-7178633092bb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e7feb418-a5a5-4ebd-9fb3-2806a589b5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48231a01-54a5-4a29-a20e-f65000a92c90",
        "cursor": {
          "ref": "a2cad06f-ff73-4889-9caa-bacf15685a5d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "67188469-7074-4841-be66-e92eea7fc780"
        },
        "item": {
          "id": "48231a01-54a5-4a29-a20e-f65000a92c90",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6bf4ef5c-c21b-48f4-ad8e-6422cc8da9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b2d564-bb7d-438d-9d1a-1ea7fc34aa56",
        "cursor": {
          "ref": "7efea89d-946f-4519-a64f-6e2026779ff9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6c73b488-8c04-4064-a14a-f0cc57a94858"
        },
        "item": {
          "id": "64b2d564-bb7d-438d-9d1a-1ea7fc34aa56",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "87f291ed-87db-4b3c-aace-c3ce4bca9f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2855e340-6616-4716-9101-d848feebbe89",
        "cursor": {
          "ref": "eda7420d-60a0-4149-b1db-e9cec1de679c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2efb74bf-cac8-4422-8241-308c25f35266"
        },
        "item": {
          "id": "2855e340-6616-4716-9101-d848feebbe89",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "895e2e28-369d-4ff9-af1b-33c5d1eed175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a7e4af-c565-4bf5-84c4-56b68a4002e1",
        "cursor": {
          "ref": "04de8ccb-654c-4569-8a12-bce9b3b97b1e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9edb9207-ef58-4421-a291-82b94f2ae99c"
        },
        "item": {
          "id": "c4a7e4af-c565-4bf5-84c4-56b68a4002e1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8f07ee2d-40b2-4156-883a-896ba013afd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41595885-3357-4678-ad69-78f2c4d1e6b7",
        "cursor": {
          "ref": "2b0b968f-abae-4e97-b87c-0add10385f77",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "54f34fab-7e99-49b6-8c88-a6308037a8a7"
        },
        "item": {
          "id": "41595885-3357-4678-ad69-78f2c4d1e6b7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0ad3b484-c239-4f9f-8038-71700a8ad49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d86243-472a-40d7-a0c7-b1c9d40275c0",
        "cursor": {
          "ref": "c36df549-94e2-467c-b3b6-9625f9c6e59c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "964fc5e6-25bc-4384-9b0b-91d8459a9b47"
        },
        "item": {
          "id": "09d86243-472a-40d7-a0c7-b1c9d40275c0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "10361b0a-115c-4d38-b852-e44ebbffef92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e74fc0-94b1-4b88-8c62-d156421f37cb",
        "cursor": {
          "ref": "5c6b19c0-24b1-407c-911b-75d1c30cbc3c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8f1a5761-61fe-4956-b04a-99cb877883c8"
        },
        "item": {
          "id": "96e74fc0-94b1-4b88-8c62-d156421f37cb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "43aae626-e12b-47cd-8d77-ddd9d07c956f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6e786f-1ace-462b-a416-a640b74ac7c0",
        "cursor": {
          "ref": "f8b46ebf-db72-4acb-8f5f-e43f840eb7a1",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6af6baae-286f-4622-9685-80e89d971fdf"
        },
        "item": {
          "id": "0b6e786f-1ace-462b-a416-a640b74ac7c0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7439f02d-dda9-4093-bc86-d7f4b9223919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb7d1cf-abf3-49f2-b222-443ee8a51684",
        "cursor": {
          "ref": "ffe892ea-3b12-4dea-bbf2-7dbcf142046b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "fa552cfc-2afa-43f9-902a-0a6bfecc1ce0"
        },
        "item": {
          "id": "0cb7d1cf-abf3-49f2-b222-443ee8a51684",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "95dc3260-f066-4713-b901-8282b8a59cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b2fb74-6b6e-4890-9c63-8baee57418b1",
        "cursor": {
          "ref": "44c21c58-d015-4aa2-b446-4e2f39c04971",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1fb35890-ec39-41ef-be04-5e83593acb4e"
        },
        "item": {
          "id": "e6b2fb74-6b6e-4890-9c63-8baee57418b1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ecc13efa-04c9-4342-a043-6041b3c79c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54868851-8c97-4f18-ac59-83939d037435",
        "cursor": {
          "ref": "d2100de6-ef6b-42e2-8c29-800a81eeba4a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7fe40da0-a375-45af-820e-5ba82a8b904f"
        },
        "item": {
          "id": "54868851-8c97-4f18-ac59-83939d037435",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ea862cec-0bfa-4773-ad46-dd26414f114a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa59ba8-409e-4e66-8839-3ef274d670ce",
        "cursor": {
          "ref": "4912bccc-06f1-40fe-ab85-aef8ab219e5d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5a393793-674b-4db1-938b-525dfcbdba78"
        },
        "item": {
          "id": "6aa59ba8-409e-4e66-8839-3ef274d670ce",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "78fbc3d1-4b3a-4c6b-8470-93c424227f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95186d2-a794-4f7c-8ed4-6e694448e936",
        "cursor": {
          "ref": "c2c22f01-1b38-4dfb-a21a-e48090d2e60b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "03292eee-18e2-448c-a8d2-67d0cf9fc246"
        },
        "item": {
          "id": "f95186d2-a794-4f7c-8ed4-6e694448e936",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "470cfe6a-2017-497a-a1c4-1827e73cb8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c60145-6bc8-46e7-b157-9518ae4110b4",
        "cursor": {
          "ref": "5e672cbb-7846-4f67-b283-29ae3b373152",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4d1b3d1c-dc8d-4ccd-bd72-06fc76744721"
        },
        "item": {
          "id": "98c60145-6bc8-46e7-b157-9518ae4110b4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f710fb5d-2e8d-4d2d-803b-81eda534df7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a099ca18-21c6-425d-ab9b-ff861f827f50",
        "cursor": {
          "ref": "7e0a1cf5-17ec-4337-b9d0-3a9e234a8830",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7979c484-31ed-4f13-92c3-390d277217ca"
        },
        "item": {
          "id": "a099ca18-21c6-425d-ab9b-ff861f827f50",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1fddebf3-a0a0-43e9-bde3-bef2a87b5d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f4ce9a-3038-4047-b38d-ebc8c365bc5f",
        "cursor": {
          "ref": "c184746e-d36a-4fbc-ac43-a05359746455",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4be42088-8e2b-4000-b397-f0ba8f848ee0"
        },
        "item": {
          "id": "44f4ce9a-3038-4047-b38d-ebc8c365bc5f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "890813d3-f1d1-42f1-bdfe-4470b504ab09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8527c16a-9251-4bc8-bf81-d93d65163840",
        "cursor": {
          "ref": "ca9b4478-2b7c-41c0-bf7c-810e6fe54766",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f724112e-1037-4b1b-8065-b4aa768e20a5"
        },
        "item": {
          "id": "8527c16a-9251-4bc8-bf81-d93d65163840",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a0d1f3fb-1359-4e57-a310-ecd31e368738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2802a377-6513-40df-859d-f8983f4fd686",
        "cursor": {
          "ref": "c34895ed-411e-4e23-bb6f-a06aa273ecd7",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dba3c1d4-4f21-4ec3-8a79-d7b0ccb08d2d"
        },
        "item": {
          "id": "2802a377-6513-40df-859d-f8983f4fd686",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "132bc1bd-87fa-4840-afac-6edd5aa474ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eed0aad-2826-4dc4-8d12-efdd9b8bd50c",
        "cursor": {
          "ref": "88903732-fe78-437b-982b-10f96c16d380",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "102aeda2-6722-48b2-b32d-32a6ade42b65"
        },
        "item": {
          "id": "3eed0aad-2826-4dc4-8d12-efdd9b8bd50c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0a537f11-537a-4fcb-b36c-2b983a9f1ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3663ed8-d0a0-47ef-9c0b-10582408935f",
        "cursor": {
          "ref": "b33d9b63-ba51-4576-9b1b-c59500b02511",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e1f2ab6d-42d3-425b-a814-cc181b7252cc"
        },
        "item": {
          "id": "c3663ed8-d0a0-47ef-9c0b-10582408935f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3f347cae-12f1-49c2-a3b5-52077dfdadb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbc2929-d9ee-43e8-ad9a-ba944fda929a",
        "cursor": {
          "ref": "75b8fea1-8b48-42e9-92cb-bd3bdab3165e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "dedbb3b8-627c-4eb6-b874-a0b6f723f769"
        },
        "item": {
          "id": "fbbc2929-d9ee-43e8-ad9a-ba944fda929a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5ac54748-fa9b-4574-a8c1-dd89ab270202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda06115-1b36-4c6f-be61-8b0827cb078b",
        "cursor": {
          "ref": "fa8831ef-c201-48ba-be6f-1580a2f902e8",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c74a17cb-4a7b-4ce0-9ff7-b8d62f4bf3da"
        },
        "item": {
          "id": "bda06115-1b36-4c6f-be61-8b0827cb078b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "48ad4de9-c517-4f20-b3a2-d19625806e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3841211e-a003-4a49-8ee7-6e56ae7ebfc7",
        "cursor": {
          "ref": "7086e26c-f068-4147-9cd2-88846da40fbd",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9aae6849-0bf4-4528-b218-de54c5ac30d9"
        },
        "item": {
          "id": "3841211e-a003-4a49-8ee7-6e56ae7ebfc7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "140aff31-ac45-4677-96a0-46eb1b2ccf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fa6760-dd2d-4a30-8794-bc4922ce884b",
        "cursor": {
          "ref": "79a50031-0060-45e5-b088-cf8e8f5bafd3",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0aa8786b-1130-41be-8076-3abc6aa8ccaa"
        },
        "item": {
          "id": "c4fa6760-dd2d-4a30-8794-bc4922ce884b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "615ef2c0-ed83-4f9f-acae-3f4ca560b9ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c10daf4-4575-47ee-90fb-4d63491d3228",
        "cursor": {
          "ref": "7f4395fc-3c9b-420f-b52a-d072060c4350",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "41b5d746-4a1b-4dbd-a491-8d1f0dc141b3"
        },
        "item": {
          "id": "7c10daf4-4575-47ee-90fb-4d63491d3228",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "06e4484c-7bfa-4181-a4b3-f94d02b7260b",
          "status": "OK",
          "code": 200,
          "responseTime": 29,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c53f741-d77b-4b9f-ab34-60ebaf8f78d7",
        "cursor": {
          "ref": "143865bc-28f9-4f6c-8a8e-c41016191dd8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0d3555b5-37a2-45f8-8a89-06a4859b3303"
        },
        "item": {
          "id": "9c53f741-d77b-4b9f-ab34-60ebaf8f78d7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dd3bf299-ecd2-4980-9620-0cbac9beff3c",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fef49b-11e8-4625-882c-c20790704cf5",
        "cursor": {
          "ref": "8c35a562-e1bf-4424-b593-72395bcdd2ff",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "21744a89-2484-405b-b96b-44d1e3ce39a4"
        },
        "item": {
          "id": "19fef49b-11e8-4625-882c-c20790704cf5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4cfbb442-33db-4be1-97ad-9ea2bb943ce0",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e026a91f-2a0f-493b-8592-ffd7d3debd65",
        "cursor": {
          "ref": "3bbd6869-83c0-4632-b690-20d905654b73",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d1e0a9cb-c304-4de4-8e79-56596137e94d"
        },
        "item": {
          "id": "e026a91f-2a0f-493b-8592-ffd7d3debd65",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "47193da2-ed3f-428b-a03e-07e283383e07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e026a91f-2a0f-493b-8592-ffd7d3debd65",
        "cursor": {
          "ref": "3bbd6869-83c0-4632-b690-20d905654b73",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d1e0a9cb-c304-4de4-8e79-56596137e94d"
        },
        "item": {
          "id": "e026a91f-2a0f-493b-8592-ffd7d3debd65",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "47193da2-ed3f-428b-a03e-07e283383e07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1077d99-d2ad-41b6-b388-03310a87fefe",
        "cursor": {
          "ref": "bf72bb8b-b36f-4ad1-816b-c827ab8bbd3f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5d5164fc-56d5-4e3e-9cbc-9fe4bb0b6fba"
        },
        "item": {
          "id": "b1077d99-d2ad-41b6-b388-03310a87fefe",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4a094bfd-c870-483f-9d50-c8f02427c5db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8156d9f2-92a3-4bff-b251-18af4a6a7267",
        "cursor": {
          "ref": "f64ab014-e0f9-431f-bdf7-d51b5d808322",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "0d5b8141-a39f-40c4-b63e-1af5e859166a"
        },
        "item": {
          "id": "8156d9f2-92a3-4bff-b251-18af4a6a7267",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "489b7d2e-5653-4840-a541-0f6a90e51187",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}