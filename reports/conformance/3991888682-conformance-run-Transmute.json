{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c8734ea6-f658-49a2-9a22-58041dc2fde4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "63a5e56e-31c8-4e42-a700-725298a18166",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad666248-f108-468b-9913-dbd326cacbe8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ac844b7c-ba94-4c9c-8231-a3af2f3082f3"
                }
              }
            ]
          },
          {
            "id": "b7a70cb9-b48d-45bb-b535-6db92baaec59",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "532da31e-3c53-4a9b-83b3-e160d09e5ed6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a15b0371-09b1-4552-9646-619979544b0e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "508092a2-fb78-42b1-9721-04de13f28c76",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c2c36744-7d76-42b9-98ba-dc9beaeef71f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49455693-7b16-4f9f-9416-0d37d9fce217",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc815e12-fb09-44f7-bdd5-dbffe02c898c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea70178d-1b22-4c4b-b6da-161ea13b8142"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6c8d080-55e3-4364-8563-fa3e7264e008",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2fa3a7e6-f2a8-457b-a36a-bb64776af8d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "11302640-5839-4a23-b6be-eca72483b36e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "854329fc-1b5d-40c5-97fd-fcdcff656707"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5edd1bb-21da-4c8a-8b98-42b26b36b5c8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "526fd686-c829-47f9-9207-9210de3c9a41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2153da2-33e9-4d49-aed6-9f95f8284d4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "087dad34-5e19-4b6f-91c9-1c22eac9c37b"
            }
          }
        ]
      },
      {
        "id": "e195d4a7-5a2f-4e89-9cc3-192e9572fd87",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2b834351-d800-4d80-b988-a80829a4f572",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9099150-edb6-4f72-a2df-87db923fd1e2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ea0313e-5662-4b78-af69-7e1ac38f40d7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cd9c28-f674-4b9f-8b1c-f5ae77f7a42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "490239b4-c298-4207-8830-21bee2ef6aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd153c6-af2b-442c-8549-f46543d9f72f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15785d7-668b-48d8-a2b9-ebca22818d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7dc64e6-0188-4707-9497-0cd5960de7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c4b037-9134-4d73-b690-52c442d49626",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde1960d-f8bf-45b5-ace5-1bee3ccd7a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce1f74d6-dbda-4fae-98c1-b3149c354c4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7903375-0c30-4f1f-b64f-05ae8d662ba1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1fcbec23-58ed-49c7-ba71-577e47321fdc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfb6d23-5f61-4b79-a02b-5c7a9c5cbbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1617d5af-5e48-4abf-8bd5-7195ae508fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef18e1e0-c8a2-44b9-8b36-c724368a1f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746dd503-b814-4a35-a33f-696318f1ea6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba830781-3ec4-4ab0-9bb4-6f448f6ce5b1",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f280ab-d5b1-45cc-b576-2043ae0fafaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1d29294-1dd6-4401-84d7-caf46d6d1ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89100a74-f3b5-4b47-aea0-d84ac7ad1bd2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "fe057e08-b20d-4b40-b199-40be866a4c6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5f56d546-f3ca-4bf8-9dfd-21549f11a748",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0beebee9-75b9-4262-a649-1e1a2c2e841d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15719358-1a52-4c5a-a32c-07a5bbd2990b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5c25efd8-0f83-4c14-bdd3-9ed6de25d6e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1574c12b-8e07-4d44-91d5-60f5225b6984",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f9e2d325-d2e4-4373-96d1-fadcc885b769"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce1fc25d-80f9-4fd3-969c-5162595169dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5694bdd2-f66e-40db-9189-8fc1cf7e5ea6"
            }
          }
        ]
      },
      {
        "id": "d2e9d4ba-0306-42d4-9a54-faea252d69b6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6c5e11b9-a4be-4789-886d-ea561fb2a230",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73c69c70-a6db-4319-8e16-b9cb066617eb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2c99a794-9cc6-442a-9318-06268bee6e35",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ea8953-7ec1-4c0e-9915-f37cf00a9e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6059f170-8cdb-4ab1-9bcd-343ab6e1d877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d901a16-459c-44c9-b124-b17a1521df47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cecf6a2-1305-4038-924e-ea0d07e91c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1326c7c0-c5f7-460c-9216-8d27737f7059",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0c3108-e2f9-4606-8ab5-9290cb9ea23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5ea30c-1c72-453a-8dde-a894ed4e65db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f39650-76be-4d31-8481-58456198c0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ffebc1e-06e0-4532-bc21-f64ca1795172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8229e531-731a-4fd7-a3cc-e5a1f0c3548e",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7b4ed3-63d2-4402-bbae-1097db0a63f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fdc28a-2383-43eb-8b20-183d34fbf613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051578cc-9c40-4b9c-9cb1-e480b188b95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af048486-16ef-4f37-8ef7-bbee873acdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e838f93-475d-49ce-a9e8-39d07b0c46dc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab3291d-65a7-46c5-b5e7-f0d3eb940f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ebaff8-f319-4953-8ad4-1d4abda5c6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd00dac-1159-442c-b492-039347df9cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b67adda7-8dfb-4470-86dd-1a979792c6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73926c27-dde8-4a43-b480-e964423849fe",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9991b8-db96-431e-9c75-8d30740a782b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5998694-3675-43ba-988f-ab7e2a49966c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4269a9a-02ce-46bc-8661-241e00de0cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "452329e5-423f-4b12-b5e0-0a9cc4b29822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ef8fcc-ba75-4480-80ee-c2982c94de07",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab538446-02c4-4770-b579-c1a40792d0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8a1630-22fd-47e0-a001-9aa226d50a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff376ca-c98a-46e2-bdd8-74645c0829f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97a8783c-9ed0-4bae-b6af-e71629dcd4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a56b69f-4179-494f-9b5e-96b4abce90d2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d529251-ace3-4589-a9fc-a43fe101e5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761b004d-d832-49e3-bf08-510b185a24f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbddddd-457c-446c-b7a3-e0ab19388fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "721fd2af-8560-4721-93c2-1ec6dc1f70f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27183217-0869-43dc-9314-36c796333cf4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541b8c6a-73f1-4133-9f8b-42a0fcc2f61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5893d61a-142d-4281-9ffb-7891177c1f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da3903c-e243-4f88-b98d-f1b877fed3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08619d0e-1d1b-4935-8cc6-6298c9c00a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ff4103-cd95-4d8b-8ba8-b3957600df60",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1903bfaf-2c20-4256-af5f-7a8d957d1d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b079fe2c-aa76-4650-acf4-01f1f3836f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0d0fa5-3f3f-48c4-9670-862a21a876c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c099ef54-3881-4b3c-8764-afcdf39ceecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e0a926-f355-4728-b105-4375ccac46b4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee978be9-9323-41cf-8fd6-cf7d4ae4c449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323e0e2b-08b6-44fe-a4ec-746c6ee7015f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d999979f-cf23-4b49-a609-7e930c885c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b342d98-6740-4b7e-9fa8-f5e8d60ec7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca1eb66-49c0-45d6-8f9d-9f35393437de",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e443efe-1bdc-4253-bf2b-81fec696a1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef2962a-fd36-4870-b3e3-f4309cc70c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d05ddc-d262-4837-a1ce-ca0fb20a94d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed9e6ee5-e36a-4671-9d0e-42e97ab95130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3b9796-908b-407e-ba40-d19f9b8b687c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc982648-866b-4874-b3c0-d98e0900d73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b5a6aa-dc86-4b9f-8fbc-cc51f6b0d5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf90027-3b1a-4ad7-b52e-7060178e391b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40016da5-e0e4-4056-bc14-4f58ae6dcb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67b38c8-cb9a-4bcf-91b0-24ff19723ced",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2165fbc1-7285-4261-b487-c6cb6b70e87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daccbdc4-670c-4518-9cb8-33d9b4724004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ae8e40-a2eb-49a0-8797-61e843a17822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "201323a4-c577-429a-9e39-d6cd6ee81e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032dafd8-fd89-4ede-8403-2d9cb9162454",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91de03c-55a9-459c-9c1e-530411ca3ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b481e00a-e432-4ed7-a7f1-ca04cd6c4c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a520c6-e6fe-4a6b-a980-afa9589b1bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d11758-05fd-4795-a74c-6cb40a7a1229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ef87d6-aec4-4bf7-b783-1e648ba87139",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743981fb-a297-40b4-8fba-72568035d64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77abde4f-a161-40d6-916c-49c32ff9722a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282e7080-95e2-4360-baf9-e2c09b2d7658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11e0a175-afc9-440d-b02f-a94be407695c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4a7cc8-119f-484f-bdd6-b40380638ca5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d475d469-f7fa-41ed-9e35-462f230a52fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52d76c3-a1e1-4cad-9092-ce62ab451a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e04a08-d660-47ab-b17b-2de251f9bd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8107c440-461f-417e-9709-3e14d97630f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19f37f8-3d4d-4466-abb3-3e2b946568a1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63680eb3-7687-4704-baf3-9d7112071a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420f7d8d-d8f3-4bae-abf3-456a503eb3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b93370c-170a-45f4-a487-fdbe39271de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d2b3e9e-93d6-4d60-a9db-82640541f146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4ec998-ae94-4961-a617-6693b0239c59",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4af9a5-4a26-4e19-b470-a64007c0147a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded94676-5ced-4f8d-b2bb-16f06a69ee81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b51f0a-23f3-4dd7-b25b-1b239f1d5fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "889ddfaa-1243-4643-942f-08eec50abbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcd4685-2ebe-4e00-9100-7ad37a993975",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52205d9-8a4c-4d00-8ae6-5e887a05b1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa7fdcb-7a76-413b-8a88-7f6d257b983f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27b2e27-2cbf-402d-b3f7-163827b3bda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a18a9e8-fa85-4157-92e5-e4e50316fa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1bc3aa-990f-4483-b223-7adec4700b60",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85107d5-efa3-40fc-a97e-175b2b3ab7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd20d12-112a-4b7c-a21a-fbd3ef21d788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee28a2a0-db01-47db-9249-8040f2ef3e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c42aa626-f939-4dde-b2f4-8ff9ec5cb916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5329c0-106a-4d76-ae24-d27e445af758",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab39533-8968-4bca-99b5-97ef9ddd06f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383ccc1e-15b1-4588-b7a0-4eefb6eb9607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0deea842-f792-4710-a704-8604d900c612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "844e60c5-c57f-4b49-a785-597be573907a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440b5e9d-1be2-4a32-89f3-4fdad5f89d61",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4663085-f4dc-4c01-8759-6283d1193dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad33f39-5b62-4218-8d92-b10b1827ea68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9141c0a8-7b5e-4bc7-94c3-839b73529e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc32ae7-c0d1-4d5e-a496-44830fc9e447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183b9ff3-e955-4a0a-8854-e35488d86a84",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36919f03-f871-48bc-9322-60ef2eb45a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e23609-705c-4bd9-bbc8-953b8659090a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c81059-54cb-4720-9db8-c9e74e8111f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a88fe5e7-e725-413d-b0cb-35513d17fb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddd9e3a-83f3-496f-8fe7-04db5695a4ed",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19e5c83-f78d-46be-9f92-a4fefc9e26fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333c1434-c2d8-444d-8bcb-3e92773bb8f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1e3597-9d40-4e2d-bfa3-31d86f7184f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e35c7090-a89b-4f49-837d-25cb4f6b19c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecd67cd-6559-4669-98d3-2b4a14915cfa",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b4647a-ff0b-4daa-8bbd-073ada234211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30217909-3f2e-4ce3-85a3-a454ce4dcfda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a03bb2-b3d5-4598-a8fb-510dc11d8bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15b401c3-0419-400a-a272-04af9719d988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fbf013-15b3-41b1-bbc5-70160270c018",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08957719-9e5b-4ac7-9982-308b336ea4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13461108-41f0-4de0-a5b4-9b0cff687ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838dd1e1-157e-47d1-90ba-c7b3b052c6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2a87b3-c694-4a5a-a978-d832c2d79d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426b3c4c-6a43-4172-aae3-85a6a10e9f92",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4b3982-d86d-424c-8224-cc3b1c87debc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0105f80-b78f-46fe-b4c8-cd0aa4fb4477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7c22c4-22bd-4a38-888f-7715f817666c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb550ff-33e7-4699-a54f-024b1be6b410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2b7edb-4c7c-472c-bd9f-f2c480f2232a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89521215-4a34-4b75-bd29-900f521ff663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb520ec-78ea-4f8e-87b2-3bff946be8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2262f5-25f1-4614-b3fa-62a9be0332ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63378746-8e6d-4b52-8758-4576831d9c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b8cff2-6168-492d-9448-e660a0b0ee59",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472adc4c-5263-485a-b22c-9a81cd9258c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77def4e8-e41c-4d6c-ad15-274c2eb89a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b31e79-7fe2-4d8f-98d0-5f586c76e731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c16d0b1a-054a-4bbb-a0a1-2d8d7c48d723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1108fa24-fcf2-40c0-a595-10c0a13c53c6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a265a0e4-3a1e-4167-a201-3d089c643edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e59854-2590-4bba-9a5a-1124c983e45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e65e84-8de3-4b2f-b5c8-6167dfcf71a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7349d11e-f99a-44ec-9b71-f3018432c81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7903a2-53d2-417f-b55b-c4b63e21d0e3",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52a5d20-7e7b-4a8d-b3b3-8c99af7356d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4166411-e5b3-4531-bc5d-1f365807c343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2057c934-f637-4934-8dd5-eeda729a325d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b119fefb-bc4f-4c39-952e-39a28c17f6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cb6ac2-ea05-46ce-8420-6592411999fa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90397821-4d3c-40a3-8bbf-9b70eaee8752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de95e01-b09c-48b1-906c-c3c17f621c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3583cef-40f3-4a4f-aaa3-b2a352a1df85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a549a833-5c96-4b6d-93b7-86263b970273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482ee42a-3283-4fe9-ac53-909b12462ea5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29326ffa-1c38-45cf-9bc3-5fd6bb5c0700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7a9b21-aa17-45c7-b0a8-7349da10a01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c850119-72f8-49c6-9ebd-36f8b9514c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da9a2adf-f129-41d8-a835-dcb420f33af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca32623-58a1-4bda-a8d7-ec4615d476b2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d416bc4-8105-41f8-b486-c3653f7e4156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74400cd3-0883-4e16-8eac-47c7f5169673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb6de39-3b27-42ae-994c-e6ffbb07aff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9228cf-65b0-4181-bb31-62a6eb913382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e63bc5-0772-402a-8346-f8729935eb4c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1df1ae9-720e-447b-b969-088950749640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1d89fb-9e66-408f-9846-a3a7749d7cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83dedcc-e8b6-45da-94be-dc6bafb82569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62309cea-e28b-4b9b-b73c-deffea4641b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46d5657-7711-412c-8737-8874d111d22d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee6972c-be2a-4480-9cdb-487e8773b76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849df3b0-3c09-4ba5-b3c8-7d52f44b7c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f72a30-f82c-4ca4-9aec-92ec7da952f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97c9f7ab-7aa1-441c-a35b-8b387b9b2a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8331daf4-4f98-4742-90b3-d7e5d0d5136b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5791c61-876a-4211-bb92-dcb7a0f801d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32aaa21f-1f1a-426c-b818-ada69d5b6260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2838c32-8b95-4d1d-a38f-9282f85e1e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7946ba3f-7d40-417e-9829-d18587de7949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18056557-f972-4238-976f-4570891a3e0c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad1a69d-9012-40fe-935d-4e6371f9545c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b05a018-99ee-44f1-a83e-01481a86d4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e531891-20f7-448b-b2dd-41813f4e4550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5904326d-f099-4370-be23-dac6a45604cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eca9a6-3aa7-4c3f-80b8-7c4ec44590b2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8fd2d9-34ba-4241-92b6-22e92e04c5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3c1919-e214-430b-b0d7-dd71ecb93ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6daf8c-a376-45ca-8ac9-04b348c0d7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07699978-974a-4207-b3c0-a158fdf98416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385b852f-60b6-421c-80a2-137ad0a79421",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37f1ff6-4db2-47bd-9d65-bff762ee2dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed04f870-23b2-4f76-9d57-586dd2499c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5828dc3d-44be-4f1e-aa0c-c9ea23d306ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "acd207cf-e092-4950-bfd2-04efd968fea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c246776a-91ef-441a-876c-072ba27893e7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20c4eec-23de-4fc5-80bf-1fd20796fbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c58d5a-1cc2-4d3b-b880-525a26259197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66adddf3-de59-4246-90b3-12e16816f035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f589a3ed-a856-4e7c-82af-c5087342a8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc25cd3-aac0-417a-8bf6-f22f9ae64fb0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2267fd12-03ad-4ad0-b9ec-e1e6cccf3643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ab5145-fead-4f10-a23c-d76b3583915d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f7f917-acf0-4946-886b-8f7d7b892730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b267ca03-9058-462d-b3a2-422e6a34c940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2f19da-ecd6-4bab-a3a3-31173cb3395a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0957a30-fc9f-4165-bf3b-eb1dc53d82e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da638bb-c431-4361-bcff-0776b1bf19f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547ebe65-d180-4565-b439-625ae22889d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "63c9b81a-0f86-451f-b7a1-1a0d085089dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d55b9c-13a1-43f6-a216-22f68a435b6a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55fcf2b-54de-4cac-b15a-535d4204126e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948d1011-3ecd-400d-9199-b7a626f06544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a54488-26a1-4db1-8307-cac75d24ba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c6eec26c-7cab-46bd-8a79-7a7d178541b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7233256-d1ee-405a-92f0-f09380f44a05",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc21b7d-f19d-4bfa-9197-a2d414d52ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e5091a-eef8-4a19-a113-b7e8fdd35edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee35c95-b0db-4f89-8f66-6f372502ad0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4522470b-156e-4058-861a-8931e3a437d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad8b8eb-b2b7-4f08-91dc-aad7a22dc917",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84085c3-e5e7-4ca6-b745-1c63f3634739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c49969-3dac-4332-b76c-adfffc42a9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df6bc87-d5e4-4a41-abd7-284310ec8bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a40e1ab5-9fc5-4bab-b723-0b76c49c6899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0500790c-b6aa-4382-80fc-a265d10a1bcf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae43cff-ad99-4954-a207-7d3fbf885b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb6cf0a-ec6b-45e6-b7d0-9ee7167f6956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2961b907-e765-433a-b58f-e1057c6bb312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0144ec27-d164-4179-8b5b-dd9b2ee5a5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a86a3b-6e31-4514-bc6a-fb136d04817a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e95106-8815-4483-a534-ec67e397d930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09871ac7-4a5e-46d1-8d10-b35fdc9f3c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d6d31e-e25e-477b-a10c-d0912bf7a0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1a7684-cece-496c-8ec0-1363638fd538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7ede43-f44e-4d49-8c13-5d9bdfc0d445",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b91a37-934a-4539-a6c4-adcd7540dbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fe6ed4-3571-43a7-94e9-259c0ea3693d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46c53f2-51f5-486e-881a-4b70af1c08c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d31012c8-c48d-4f1e-b565-6ec10f8550d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458fe0b7-e966-45f2-89c3-9c23c7cf5023",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d164e109-b783-4d87-8258-e9ca31214dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a0444e-4841-48fb-8b70-a99077d06233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298f6428-384c-4fe6-be04-35fb49ea227f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72e0de43-e131-4989-a291-42906bdd3ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072a1a58-ff82-4639-8af1-ed2141ad55ab",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934aa6e5-4c91-4fc4-8b96-cec4c657a0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451a76f2-bcc1-4611-b2b5-889db99c79a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829d71cc-8b5c-47a1-8b50-e50ef5d0fc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "750bceb3-85a5-4c59-9c51-2071a8eac905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fe4987-33be-4820-9ca3-20440e07a8ec",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0aeb9e4-2871-4c0c-a82a-953e3d9b1eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f26bd4-4bc4-4b3c-9804-e4fe4fa6e9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e22497-364d-46cb-8cfa-52f112f4e821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2860f5-168c-44fe-b833-9740a99baea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7ea172-0248-42b0-8e47-bc52e8b17d49",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03296502-2509-4dd7-af27-191a21132387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8855e4e2-8ee9-43c1-9a1f-2b3709fde420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42595e3a-5f9c-4fa2-a431-c6cbf6a5735f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfe3073-b7ff-4272-83c4-8ba4aa6a427f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53b4900-841a-42f9-ab3c-bde203f4094f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681cd8af-5a53-4dcf-954f-79b4d18ef349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6640bc19-13c2-4f38-9d87-a13a59f1c183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dff5d7-4dad-4b4f-a599-62cbee357f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5e9f54-ca96-4197-a1c7-4db59376a705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabe89cc-06e0-4839-8677-37fe537e68cd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a31e1b0-c5a9-4dc6-99bc-b66962f2fabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3104b34-d9d3-4d2f-911d-c4611a512aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c79bc28-811f-4bd3-be03-0abec889b3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5fa087-7e29-490c-a29c-bff297ca3fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563d2bc5-108c-4afc-992d-a6f93b6371f1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c135403-d020-42fc-a653-308b22672b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef1fdba-4c0f-4e64-a1ad-881126102b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce277e8-de8a-45b5-8fab-5f60b0c5b29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dcbbb59-c615-4f01-b107-3fa293b3801a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a671f38b-25ce-4d47-8aff-7980968d391d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e57e80d-4263-4be1-bc0e-6858b3fc8324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0570911f-d493-4147-a0b6-8202343174ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009477c7-8fc5-4d52-9d45-e7f9cb019b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e13b8c1-e486-4a3c-98e8-0b77ae617530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892985fc-9698-453b-9447-53586ee6df6b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283642c6-8b93-413f-bfe2-66cf8c409706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825b1e08-e30d-4538-8a08-942ac3f7c8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2876f902-8209-4023-94b5-6adc2ba449b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "162ef7ae-94d6-40ec-a147-aa6a86d3d84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6470f0d-b387-458f-82c0-b7efce751b24",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed56bac-341d-4701-bc4e-984912c4310b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443db72a-52ab-4764-8c52-eaf8b252deb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a2e05d-b48f-436f-9b3c-e40a2083287d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8034253c-4562-49fe-989d-58093b7d29d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6a0db3-b69c-45ca-a1ac-3c185ae7fbcf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79235916-d20b-4d40-a076-f1804ed16373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3407ecc2-97f5-46ba-a84f-f2f71e800771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c5b22f-2859-40b1-ad5c-09e6fc24bf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "746fa04a-ffb8-4a3d-baf9-ef6658ec6f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ee3955-708f-493e-8964-f3e2c75011fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766d42ad-a221-43a3-b281-5b74f22f1a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b2fba6-7ff7-40be-9cb3-ca4b7bb98744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292d9481-8871-4ade-88b2-bc339394109e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4948ff8d-68d6-4ae6-be77-f934d4e74855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e790049-b452-49e2-8f40-7320231e7b8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7930c7e9-d4b2-40ab-89a0-4e3b139760b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b358797-8422-453c-ba23-51dfc112da46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09caecb8-a5c4-4b27-9cd5-c7622554f366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd51715d-0119-4c8b-b16d-e3cc59d5f057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760f99cd-e08a-4416-b7f5-5dd6095ae81c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1ad1fa-fc7c-49e2-b000-e6925478c280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983472f2-4798-4110-9fa1-deaf0fc9472a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06baf72b-4765-4c20-b507-c278ac994fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fbd27c6-b287-4931-8447-87fa74dcd455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46dc616-358d-4e6d-ac00-101e73e06e15",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f53205-a4d8-4c51-a492-179a48a8f612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b10ce57-9682-4fb9-a337-a3e680824c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a245fd0-5310-4b2e-8e8d-820d8bcf662e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9eff313-3897-43e0-bfee-afcf89750dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e75fb89-8fa7-4ddb-bdd4-61f41f82dfbb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78857456-6455-485d-ab0a-d4fbf8748eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f56e49-6701-4fa9-8940-ab349aef5b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0234408d-7edd-422e-84a8-2e2d10c03957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bb5f1b-878a-40c4-8bd9-3a853ef6fddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3b6fd9-a32a-4510-8b19-a0b2155157fa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bf8f07-c6d2-4f39-922b-63cb05f2a7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb93348b-5d71-4ebf-8293-880d8bfa997e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ea4fc4-f125-485c-a134-216d71e80354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3b7635-0e12-4b9b-8240-2543bb46abb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a076b8-611c-4f6a-91c0-e22c47063fa0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a15e682-503d-474a-9c8d-7367401024e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62daa781-9d7b-488d-b926-371281eda04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1aff5c-eeeb-4542-81bd-65c0dfc12024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1283227f-04a2-4860-acaa-7aabba55f8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92f3247-bc01-4ec4-8e5e-605805f533a8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb129d3b-5256-4757-a520-01a4b8defab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aaf8498-2780-4f98-8b13-2925e4c5263b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d94697-061f-4a6b-ad4b-8f4588916769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc6b41d-f882-4580-a553-23d48764f5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9b52f8-e9a9-4ff1-8fb9-db4605f92398",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901c31ab-42c5-427c-bb08-1093581a1bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517f3b58-6e74-4fea-9899-773d773e4dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c31492-effd-4580-8a4f-dc5524135f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc3d744-4d63-4d5c-b212-1645c172c19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844e3f5c-f918-4708-ac74-93a3de870555",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6666afb-445c-4d1c-8f26-40a49c67e1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e7b4d6-fde3-4618-b032-b3261112207e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d37a721-0d3b-4bf3-a313-d624728433bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "92a8dd05-99ac-44da-92c2-7831f2c6728f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c6cfbf-a6b4-4d94-b3a9-090bd4ddea6c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3119e5d-119d-45b6-b7d3-94ecb7015264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8c92e6-cdf9-4794-8d8a-1b2bd03476aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64275adb-d3c1-48c9-9bb3-bb907333dfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba4bbe7-539b-4aa5-90e1-a56e64e9c1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13146b44-8c71-4eaf-9b91-7ea5c5327212",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcf575b-0e4f-4676-af27-389dffb610ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f9d50b-d78d-4512-a2c3-947cf82dc14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9113824-abb1-4027-a999-a742d07e9a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4553a0f8-3171-4d28-90aa-80071460d822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dab326e-5d5a-4878-94ab-a2eadc0f9275",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208781f9-3166-46ca-8825-779cb2164be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2880e0d6-aeff-4191-89e4-0a270928d83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def308df-a23b-45f4-8d4e-a21669743313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "106580e3-c459-4598-a5cc-8bec9f998ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67348e13-ef74-4a0b-af76-3f93f6ded032",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be75082-3db9-42bf-9774-aa47693fa58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbee1d49-8cff-4190-90c8-50cdac87f2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c21fb0a-82f3-48c4-9fab-05a9c646f907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8642f97-a55f-4ab3-90cc-78cf03f6f6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb43f2cf-acd1-41d6-8c6b-8974ab503502",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebdcd50-fd83-490f-a69e-8ca6d7ea88b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92246a4e-74b7-4481-979b-16fc46294e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede727c3-ef37-4404-b1ad-a2bc6efc4a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b090f6fd-22d2-4ea8-97d8-d34a36cc22bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b90cb24-6caa-4962-85d2-4ebb97313e81",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66213a50-1099-407c-9b03-1016f0de2043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2c4946-6477-4cd7-b5d7-8ddfd08be438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cbb31d-50c3-4a6d-9033-960ff8e5d9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "792a785c-c95a-4743-a059-eccd004e4b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7827908-4a96-4808-a2f4-2bea8a1ad241",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bf3c4a-3a5d-453c-9763-461744375540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c5d954-cabc-4c29-83bd-6623077f716e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c8a33d-0157-429d-94b8-ebccfadb75ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a20524-446e-445a-ab17-9a0d3598f450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c81e3c-51d3-4820-9c6d-a6076b27dd33",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be2b4cc-86d7-46e6-a6d7-311ccb9de910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c775e1-cf23-460e-8ec6-913d32f3aeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e1b2f1-881e-42af-bceb-3b16cbda9e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae783eb-fb03-4f2d-8c9b-e52e38c7d586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563d0374-2a97-4ffe-9ced-f0b7ae313964",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f452c8-3b44-469f-a458-13e0c2ba157e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a48a67d-08ae-4607-9864-bab7780cedb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9b7637-1abd-4066-93e6-368ac0ea8df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e6ea4e2-2818-48e2-8eb9-91c0d72d17cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d240a44-bdc0-47e2-b2c4-ccc764c157db",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5be9cd6-a958-4df1-9ac7-081312527f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e324ba-d21c-4d58-8ff8-dabefd444043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92c816b-da3b-4975-a650-1c20a3341a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79d858b0-429d-497f-8d89-15b174e95501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b204dc27-8287-4c78-9fa2-3d7bc9000f0d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b508a9f0-7a88-4aa5-b4cc-c7622793977d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fba8ee1-d99d-40c8-9fdb-7df24a73769e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83f1237-fde0-4f56-a0b3-ac4ba5da00b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cbfa08-08e0-4177-8cad-0805ad4124dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c153da1-b281-4b92-8482-26ac7224096e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1b0904-d464-4d8f-968c-c2731c92099b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4956766e-1dd5-4a23-bce0-02162128d063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cc04aa-e443-4c14-a2db-a1f3f114536f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "929279c5-0a02-4fd8-b92d-fda5e03c0853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e815f965-ef0f-410b-9ef8-12a6da24a27d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253c3ae0-8108-4f8e-9eae-de793e1f1b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6142a19-f2ac-4b98-9d42-80283eca6f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fa19d7-ae6b-4114-b25f-39fb1b8eb515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3de0239f-dc87-4bfa-9f16-20ea180b1248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deff80c8-7cbd-4ecb-856d-c897d1e811e1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789b3ad8-bee3-403e-9c63-4fb00bf8f527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641e5ab6-20c1-4fda-9f05-17795d50c14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd7db2a-709a-4b3b-a179-1237a9963aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4e3b74-b12c-4c6d-8b16-9792fcdaafd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd437f01-aa0d-4a34-9558-06cc7e1f5876",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57259dec-b2cf-484e-ae51-23758ed028aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98582479-c19a-4ea4-90ff-6b7deca209f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd00e04-b132-4346-9903-aa7ded42c353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec40c87-af8c-469f-9783-eb7ff320ef43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef917c2-72f0-4e1e-a398-aa79edba2f3c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339e6b36-00d1-4a25-a193-bd7593d977c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b36c72-c088-4509-a91d-2deae27289d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44350771-3048-404d-b2c7-708c7acd27ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90285682-e2d4-45a6-a0dc-77843ed8b99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a994be-372b-4da1-b4a3-44aa7727a6f1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dcfda7-3fd7-48a1-bcf8-7a0c8ae248ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45729e4-7bce-490c-8725-f185bbf8c8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26d664a-0056-4a43-8348-44f928755050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e11a0a40-3b9f-4fcc-bfe3-188a6def7ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fec2477-b407-40bf-a2f2-a97ee9234112",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efe5a3e-6f44-48d8-a1af-95d854bc94b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dab6bb-8abf-451f-bbc8-bdd457a730f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362924e4-840f-407c-8021-3cd18fff2633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4b85b4-5dc0-435c-aac9-e0e035ca0b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fe6dea-d815-45d6-9696-64dd80d13737",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9616d40-10b8-4fe2-a0f0-c236e4ae4ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e82ad2-2cfa-4a5f-9f2d-f3af14755a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0babaa36-e3c6-41b4-b6f8-3c00b8fdbc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "11e53820-93ed-4aae-a42d-89637cd31771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d17f107-de99-4988-a134-5a34cc92abcf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2924167a-4489-45b5-bf86-3ad820b71ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e9bb0b-b598-441e-9f1f-5fcdb02f806b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a208c0-8c72-4779-8d4f-fdffe519b6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d25a0e3-454c-4774-b1e0-39389c5dd54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc015570-9d9f-4ac9-88f8-87f3e5ec49f9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b18765-3682-448f-8c68-999ac9868ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77ff5ca-f745-4030-95a4-6bbcd81f918b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91319796-3aa2-4086-be16-3083340319da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f08e0098-0616-4592-897c-179e40ece5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147c476e-3038-4c35-a92e-f488bd46beaa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096f048b-9afa-4586-a311-edacd61ddb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64844e9c-8d6a-449b-b502-bbf7999f8e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bf5caf-3f36-4046-ab2a-6a66fe4cfa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3bd274-8ead-421d-b9aa-55169d375ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae5eb5f-d89c-4c1d-be96-dfafc7f661d4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3e670b-52d9-4e75-b5b4-bde66172cfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8c8206-1a58-4ff5-aefe-bd0bff21aefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1baab41-3cc2-4679-ad34-2cc94f09d46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5473cb-964b-4f57-9b22-075b1008f9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c3cd89-42a4-4693-9bc8-23f9e003036c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e31b157-a989-4a25-a7b3-aa76797badb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "da07a274-d07b-44f3-b402-8ac8bc7dcadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4523a3b7-897b-4ade-9e32-92c1b5ebf185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8ed426-e326-4f5a-a38a-2e53fa8613f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7f51f31d-2edc-4bcd-b2ec-107b7a411dc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff239731-3d82-4321-a6af-99482879d80d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6310dbf-6905-4364-9fcc-882ae95df782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "847abf45-794c-4643-8737-352950db6ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb264cd-73b5-4c61-913a-22f2a2c19963",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "3c7ac43f-03d0-4844-a7aa-6d2f7f002ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cba5bf-7dbb-4216-8ede-c708833a1433",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace9c2b1-5113-482f-82e8-2c97e3caf822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e018a98f-daf2-41aa-8fd2-be74b4b9d22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd26ece5-d0a6-4f60-8a8e-32cd5c6f2d0a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "65b2d55e-d75e-426e-9dca-80d0d7d01562"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97c395fd-be2b-4b72-806e-0076cad67f0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c8c3dbf-0ef5-4b0f-b8a7-3e0e61f39627"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4a2722c-b525-43db-b995-8e1f923e8082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "920a7252-4925-406c-abdc-f1b5e5737583"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a571e12e-97a9-4b20-a19a-60baafc4612d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fe1cc65-44ae-40a9-b4f9-2679ac17e7f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d0a231fe-6881-427e-80ad-37cb36f29eff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5b368a4-f76e-483d-92c9-eadf85d04074"
                }
              }
            ]
          },
          {
            "id": "2d034e74-be5d-49e0-aee8-6b48f543f79b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f4a99bae-897c-4b78-9939-17cbf706f4ce",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "967127f6-e2c8-497a-9ead-966577855525",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9408c91-11c4-4854-90f9-6671290cd117"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68941050-7f4a-492f-bf6b-096d77a70ecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99684912-4c5c-4ecd-ac4f-288d8b1b3d00"
                    }
                  }
                ]
              },
              {
                "id": "0e57b951-f84a-4750-9aa4-a2170bb82a98",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21434403-0888-411b-bf08-1b5bd82ef003",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f0c078b-d39f-4867-81e3-64e1be65d3f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48b7547b-a01a-4824-921b-31f1c10cd743",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5228f63-91d0-4e3f-9299-2d2d51684457"
                    }
                  }
                ]
              },
              {
                "id": "00f42ecb-8ac6-4252-8261-cff98a4da71e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0575d188-ae1d-47b5-9d09-2028b1f3316d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f04ca29a-2d4b-47de-b3cc-e263274b1d6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18a796a0-bd6b-458f-963f-a291991a1092",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "64fe3e10-9af3-4c1b-b2b3-17ffa0ee7cd6"
                    }
                  }
                ]
              },
              {
                "id": "3687fab5-9923-4651-99fc-f632e4abc202",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78cabc00-86f0-4a8c-a35b-de392ee2a6f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb56abd5-39d1-46c6-be68-adcdba7f5509"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d5886cd-e970-4374-80fd-d45a4db2c77c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7845fdc2-4afa-45ef-a0dc-609cf971fc3d"
                    }
                  }
                ]
              },
              {
                "id": "8fc53abf-3a72-449b-9ff0-c32d21579454",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb6b1877-fb2c-4664-8deb-e61d4259a363",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7fa9847-75e1-4c7a-bbfb-5a3982d905af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ad843eb-6c49-402a-bb56-14362f1ea638",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cab891ff-bc31-4106-b9a0-90c7338865e0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3e969986-66a9-4de1-970c-a943348b6ec2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "737a4494-96a1-47f6-9ebc-53fea11c3de3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "192d469e-a466-4984-b2d9-4da39a3f1ed5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68056ef8-22c9-480b-a73e-a4983c114ee6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a92a5f6c-96ac-4d5c-816a-5f681aac572b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ebfbcaa8-c7b7-4cee-87ec-c4bf83e3429d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "123d8d74-1adc-4f4b-b4d3-54010682b3aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d1e3667-9e3c-44c3-9420-8b3844c17c3a"
            }
          }
        ]
      },
      {
        "id": "3f256be3-2618-4991-b5d3-2da62a2f2455",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "240d0f07-5440-4032-a1de-79a337f50bfd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88131cac-c1b0-4ed2-89ab-20afa1dd98bd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b9cd160b-41d1-4758-a616-874a2aeeabde",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0e0600-2ec3-4e48-b63a-131f8c5e00aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b53cc0-7708-4613-a9e2-6484c7be989c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e246e1-250c-4c2d-ab32-497e9b9beb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b45244e-242a-4479-850b-474daa3ee96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b7c2ce-9767-4687-99dd-e5e9f449b745",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961faebc-a172-4b02-8d1f-5135b65162c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eadd08d-ed3a-453c-a005-d1451b22219a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b240d73d-060f-4c80-90d6-d9d5838909c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f062103-6610-4863-afb7-7d325399220f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e271645-1f99-4493-8862-52e78382f3ed",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1437de2-0e78-4ad1-977b-1577b0194bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae4de77-2417-4ba3-bfc4-edaa34726931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f78a3c4-6f9f-4139-b38d-47599a2b52bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b425d888-140a-429a-b142-5c5b0046616c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e3c846-445c-4f4a-a38b-05aa67a8d0d4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94add66e-d2d8-4280-8dd4-dc368d194062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d497fab-f1f6-40ed-ab37-cacd6fe92aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbbd517-18d5-4f6b-bf41-6a4dfc69f673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab73081-ff03-49bc-9d71-3225ec1411a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07a6b35-fd52-451f-bdf4-ef9eac11eb3e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfaa09e-1a79-426c-8712-64364006a1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c27cbcb-698a-40a4-97f0-d8980c19cd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f45ad1-739e-49c8-80f4-aa58c6f79fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0967ca8a-0bab-4f5d-a2d5-148f33153905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73390b7b-3f58-4ed3-b4de-09d7cb15f55c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c196812-f6ac-43f5-8a7d-bd0ec1979055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f1f02a-9ddf-4c5b-8fe9-7d10b3a45b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5c5aca-fa48-41f3-a3a4-99b52e85e134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41d04b38-b1ff-408d-9943-d4cba4ffce74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de9d06e-5687-40a0-bc3a-f791db320f4b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8221a4-3084-4809-ad0e-bc00104b5de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf020d3-80bb-4783-bf2c-5f9b7d667d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ebeb6b-2c5a-4dd6-909c-42793941906d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c49e67c2-fe2a-430c-8f86-2bb5a5d5b3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f24030-fbd4-4005-b7de-37ca3648e27f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f24bd6-ed64-4c2f-89cf-f71ba053b882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f01af75-edae-427e-b105-64440525f7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb885f81-910b-47d5-9cca-afc18fbf7fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65fa0895-df5f-4c22-97cb-6638ac878a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a476022d-568d-4861-9030-58761bfc723a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c7f801-d01a-4690-a7b5-0e66533fb336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232301a1-63d3-42a7-bb25-2ee086293a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5188795a-e6ce-4d67-907e-1bf5c6ca3e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19b199de-525f-4705-9c01-72e61aaba7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175b5cc3-272c-4c22-989e-e5e6c62582e9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9e4ac2-81f8-4c03-9a2a-f2a24ee09426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e35841c-e3eb-4a52-ae0f-1d940f1eae5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ac5301-9128-4b86-9bfb-0828bb381a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b146ff2e-b355-4ce0-a732-47191ce5d960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7959256-e2e3-4658-b9d9-7e9c22158e55",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb086ea-0a75-4fc6-b4f3-1ba793db9c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0be5ed-1569-421c-a86d-4d488fa5acba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc556eb-0092-4a37-b3d8-abc93887ed81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc7b10e-d9ac-4aee-a48e-ba88eba75ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa26f71-1403-4788-afb4-04cf03625001",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7005b4-9659-45d8-a39e-c87b71e78600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b23695-a29b-4b3e-af00-56a77b560805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19dda34-ed49-4f13-a37d-6817bf1fc360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf1bc09-d8f6-425c-b66a-f9a9eb752306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184289ae-17d4-4224-89f9-5474a6d35c91",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e822db2-10b2-43d0-98ab-a0ec4ef61c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d974adb5-14c0-446e-a339-91cab912dfd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9380ee-9f8b-4197-b0fe-8ba8dd25bec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a763bad6-091c-4408-859d-cd4c054b21b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd438e77-3990-47e0-8acc-e7bea674db05",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc810787-5ec6-498a-b05c-325c44613c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcae1ad-c942-41d5-a376-da079a22cfcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e19f54-2d41-4bc0-9331-b2d5ab5f9fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b85a6707-3401-4f41-a7cb-d1a11fcc1e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b30e927-f33c-4ea1-886b-c2aca220398c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6450de9c-7f0c-4eb8-ac6d-b6da583aa7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d07ae9-d58d-4925-963f-991048c2c0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170e0e49-003e-459b-b1d1-a6997b9c248a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0817fb-9456-4adb-9361-b7237fb89189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b904cdd0-964c-4647-819a-56a878418285",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cf566d-8071-41b5-a2e0-5a61d1b930ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6174f3ec-59e0-44d7-8056-12ad0a5b89c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d965ca-b278-4ecf-8c67-9eaa01d49d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee85c4b-1cf7-4ad8-ab33-a03e554db88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19753cc1-1fde-4c74-a530-f1bcaf51ab05",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96e42af-5923-4537-a72e-6e86ceac44eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b999a8-113d-4e8b-9b87-bca7d6b3ffdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3688fb6a-1fda-46b3-a6ef-d0a6d5bde1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5336174-774b-482a-a20a-36ee8deca5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d332b38f-04b8-4204-8a0d-c51a23368fb7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94674a3c-9b83-4f70-b857-3c3b84484a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050acc89-805c-4912-8fe3-200a545c1630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c97b7ef-1b2a-4218-87b6-11184d897d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b982df-b0e4-4aa3-adb1-02b2fcdae580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b71a49a-c1be-4e79-b9b6-329239ee57cb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e284265d-9714-47b3-872c-24a0eab93f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb503662-80a7-40f2-8aaf-b5f366142426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53440d5-2ec7-4588-8c7e-bc88afdb5cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "657d606f-9a49-475a-8f80-26bc67967655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e55199-1c5b-49aa-8e3c-5ff0255cda2e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9587921-8cdd-4d8a-ba09-ffcb619d9cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d52926f-04b5-4f36-bf47-6ad4043c8a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b304dfae-b2c0-4216-994e-95d8cd4a13f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6de457-3681-4a14-a695-b71849c5943f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebec01c-15b7-4765-9b31-41ae13fa2383",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b508a292-c553-4669-beca-9d49e328eeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f6abc6-10fc-4a62-9c14-903a611c303f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e16029f-0167-4887-bbac-3336206b8869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "804b1618-8c5b-4010-8db9-496af0780b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5095075c-dfe3-4916-bdf0-cc935fdf0a63",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644cb743-54cf-4bd3-8a9a-2c95d9736161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb239e3c-e1d7-4594-9ef4-3fb2c5ca6830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09542b1-bd89-45ee-8bc7-10ffe01e9fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "265ddad5-dd6c-415e-a34f-879c588f74e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7958d335-20b4-4021-aaf0-082adb126247",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86813f62-0527-41e8-a1dd-04bb273d7d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794546f3-9300-4428-b9bc-7d1887329be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb0e245-a1c2-4d41-b137-dfe0e267a4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73527c6d-49cf-4eed-90b4-f9d3f8d9f989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28225f37-48cc-445f-9151-90a7e1ec9c32",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90d4984-5471-4062-8585-5d5557fe2fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5418b7cf-cc53-4f66-9f8c-ef202a675f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4513f42c-85f1-4ca6-a5e5-eecfc57e60d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2050226-0014-4a91-b9c3-9793b2931ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6d97f3-4821-426f-8a5f-030019f1f10b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6855d620-aec1-460f-9a96-7fab1c0e05f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5878c97e-98c0-4139-9b49-f2a8a268b743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88404c52-5ff8-4788-921d-da0eaf0c39be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e37b9981-8de4-43c5-b97c-5b27989b6f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c0875a-e551-4467-aed2-13ffd6be70ec",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d5228e-5428-4db4-95e2-e3dc23e46bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f0ecf9-9086-482d-a629-97f8787cc94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd8317a-b160-4514-9e3b-1ddc43cf60db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1f0a68-eb4c-468e-9f2c-1144f40c760b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ca9a2b-2de3-40b8-a57f-3989a98fb711",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf9925f-e796-4e61-b0ac-99c5dd9d93a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5fa20e-47c9-403e-94a2-2d1778f54c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722a6084-80e4-4201-afe5-5122a8674c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c053d747-7ca0-49a8-9bd0-2dee54480290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1b5dde-e62a-44e6-85ae-faf6ddfeb358",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783121e9-fc47-4943-a2fa-57dbde385fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78abcfd7-ed31-4744-9ab4-b1b72e3b411b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44043df3-ca0b-40bf-ab52-e4667dc6bf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7eb96d-4b7f-45a1-8688-23bd0b345744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1344ef-b69d-401f-9872-431fa4b6ee96",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0292604a-268b-4956-8d63-5fb5721f9027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d92c803-f15f-4a9e-9ae7-3146604bf099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104984df-34b5-4440-ad14-570de6341a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4333ca13-edda-4f35-b89f-6bccbbe43764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5b23cc-10f3-4380-94ba-09124e126d36",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ddf2d7-8a43-478b-890d-1b24becc4378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9ecd85-f487-47e7-8901-272fd65ea0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba29ffe-e87e-4446-bf58-112c391f623d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf397b69-1593-46cd-a84b-bfb3e966b27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167f9f73-c04a-4ece-ba9d-4a338bd9b44a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c3026c-4d4d-48e0-b167-17b537f92c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cedb59a-dfca-4b27-8413-ae42a68dcf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91384939-3272-40a1-b0a2-2c0543259a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffd5539-1648-4380-98db-1b1585291d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f54e26-3e60-4094-a7ab-d01bf2060bad",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d4c391-ba20-49a3-80cb-8eb26255b904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c7c833-0158-41a8-a584-a6ab4cc7d09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aadf340-dd34-4abe-86d2-c6fadde10446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45732dae-bd01-4b33-b869-4980f5f94f8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51d9eeb8-6a3b-40f2-8ddc-d47e224c2fb7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9f13840-c879-4ba3-a7d5-308fd56d0cfd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15ba132-bd40-4502-b730-72b9c0ef0949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d06d64c-8b9f-472d-9b61-366d47d2e6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0766d529-3ff7-463c-8a66-305c58b61a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d72b3b52-5e62-4fc6-81cb-9f86b2837203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d435ea4f-ef8c-4c0d-af64-91c48192e4a6",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ed8aa6-1747-401b-ba56-84703b2a717d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "a4623250-55ff-471e-ac1f-8a3e4a7855af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba408371-b060-483f-8597-85d23d4dbb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8e5ccc1-687f-41ba-9b75-45c7fdd2299c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21c3954e-9846-4b16-98de-962081a1f555",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c715f78-3bc3-431b-b0f8-e3f5b4687de7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dd2ee08-3da4-48fa-a32e-cd2a4be5dcdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e6f17e2-13cc-4b99-840e-a2ecf413adc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b0199b7-9432-4770-82fe-3087186f4d8a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b22842d5-cb5e-4302-9231-1f97e5632538"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7ca1f75-a225-42a2-a3ab-f2b355d0ee08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ea6f5f8-d21c-46ec-811c-ba65b4ef553e"
            }
          }
        ]
      },
      {
        "id": "13dae11c-1b48-4842-9408-b0555f6d5e8e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8043a049-5e51-48b8-88bf-15be08af0796",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39efb4ac-aceb-420e-8c14-6231466789ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d88ed45-3062-437f-b3b3-e40d213077a7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d972ebd-1399-4928-9cf3-556daffb0918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aab4a18-3f56-4331-8465-3f7a3cb41835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ed91e3-6903-4caf-9b3b-f8c377aa9067",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a589e6-f2de-4bf4-aa64-ca88fbb23ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07eb97cb-cecc-467c-a88a-be3eb247359f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bacc76-0a75-442c-8b9d-0a406fc97d27",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76a36c5-cdc4-4789-af91-cd50bd911579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95372905-d13c-4ded-9ef4-cc47a12c708c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a15fb3b-a8e4-42da-9407-e0f5598d248e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aca670b-cd55-4d1c-834c-518de8f3e97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de69e85f-61c5-4d7b-81bf-084382a9163f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da32ce35-3a52-4450-8628-f5d42f672e35",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1199d074-97bf-4a30-b404-de5b4ea1509a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d34d9f-6e43-4336-8552-9119af8fcdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f90595-8c3a-4c80-b1f8-29c0b882a1d1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3611945a-5584-4ffc-8555-b6ae666421d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b9c758-cc21-4bf5-804b-b1dd8ce0af66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d9600a-7285-4d53-b6e6-4960274f5678",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93886f09-4fc9-46bd-be3c-bbef8679166b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ed99da-ba9a-467f-b5df-45dee7af7290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e688d6-54c3-44cf-a49f-e0a04c41e59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c006432c-4db4-4714-8ab7-6653b101a295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c96485d-64ad-4a91-b2df-8ea72d2ff32d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ceabd4a-6afe-4171-ac3b-745431523ba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d50ca143-a01b-49de-ac9d-44970a5ffa04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b7ebe8-646e-43ad-a6b8-eb8bd8473833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be27e762-baee-45a4-84bc-ed6a2d228ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ea256a-7571-45ab-99c7-defc24309a88",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c781dd-a539-40d2-a55f-202a7d49a356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f05e3a39-5445-44b7-9db5-ed2698c8ffc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a5d606-236a-4a26-9851-e38f7e984205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96807156-5060-463d-b3b9-436f3f03c9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c508e0a-2936-4a53-ae27-36ba59549547",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b221985f-c1e5-4a65-b4ab-c210fdcfeb1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a22b82-785b-4901-8f5b-f93cb21b8620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0224f9-8fd5-4a5a-bfae-dda4a106518d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34b346a-a34c-4ab1-b19b-a6eb308f6f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d5f0de-1cbf-4085-aa96-e85bf909116c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74d9e01-3cc7-44e7-a8f4-a4e0b99c5376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be507db-f6b1-4469-8882-50c31bd7c79c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3091c16-5611-40cf-a755-a04626ef5111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a28af6-5a44-4621-b701-6fe36426937c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183210c6-b91e-4020-89c2-e62c33f400ab",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01965d8-a9cc-426e-bad5-b7569c4a004e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae158e9-dd75-4f6b-8269-2b59d0fe7291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e65397-31e6-4285-8e69-77cf5afcb3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5051c0-fa82-4d81-80a5-76af89546583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e74d7d8-e2a1-4dea-8ae9-3d682983679c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f39da85-3a74-4c0c-994d-d8c5390e3632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a58197d-e190-4453-9464-769531590f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "827781fd-8e4a-4e54-a76f-a0a20a7611d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf9aad8-ef90-484a-9fb9-70c3d66702bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55aacc0-ff5f-439b-aead-eb6cd4d5ad07",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d7f878-48d7-4714-afc9-e61f73f18fa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "617de67a-180d-49b7-8db9-0e8260371cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e69890d-a951-4548-83b7-36d2db26b1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ac51a4-2175-43a3-b9a2-90e1cc2ca300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0883a38-5814-4a4f-b2ac-0159590534b6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3573787a-356b-45ac-841e-6981c72600b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2513d005-bbed-468d-b6c0-6c7e78c55dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17e5098-2fc8-47bb-8247-204515e51cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c842f48-b206-4935-8a0a-1d5543ba25ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003fc44a-3d7f-4626-843a-fc8bee5e9456",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472a887b-2de9-49d2-b0c8-b81c1f33cf95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35fef1ec-b899-4ca6-b17f-1cd5c2a8f99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd23e70-2571-4747-8bf1-e3672cb6f1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef502657-2328-4358-8586-8194246cd1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb0ed10-4f90-4fb3-844d-5b0ec746bb4d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ada620-fd07-4d69-9159-312ff3c14f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffd7395-0d12-4131-bf41-11ca831da197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4e92a8-e00a-4e63-aee0-7ab79f497059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3bfc9cb-593e-42b1-bcf1-be9987af5afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cde69d6-4e1c-4f32-8bf9-fec1ee704f8b",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0f7c28-f4aa-4c78-b5e7-aa6c094d0c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42513e1-50b4-4cbe-b3e0-6f316d138cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f841bafd-0b7b-46de-91bc-1efc12d833ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e9f469-8d24-4a19-8945-e5413635b041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c712505-ef57-4954-b60d-bb6ca8b223fb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdee9df-794e-45de-808f-b8f328e8626a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c211ad8e-cf15-4330-bb20-7ec96471043b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956b8d3f-3819-4b78-a535-893eb977fc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d338436e-f67a-411c-8ba8-f1806da23db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22f7af1-9f47-411e-8d13-a728eb7f936b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954ad7a8-d6ee-4046-8157-fe73a9734829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9868a84b-500e-4bd5-a74f-c23f43c18cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794c8b98-7700-4b53-ba91-9fefeca0f161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c957a7-a2d7-4cfc-9983-c973ef2eea43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53893943-f034-4b11-bcd6-6be46ad6343f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f36446-ca5e-4282-ac20-ddcd0a6cfbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818a42c4-e575-4046-9469-f15d91ba8198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1483d8-0d5b-43e9-bfe3-786d737627d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b865d78-9feb-4520-b041-00abc3f1996d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d75e763-0166-4938-ab8d-3faccecf164b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173b1d6c-9eeb-4f1e-b569-0073c188486e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7136fcfb-e7d8-41b3-bdda-3bc26dec35b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be741ed-763e-4585-b36c-294856aa039a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1eb66b9-5002-42c6-a3e8-fd838c59843e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d050bcf-c068-438f-abd4-12eb4eb2bdcc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498de83b-756f-41fe-ab64-6721244ea7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3561bb7a-f5a3-4168-b5b0-5c6f2a53fa78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec809bf6-9152-49d2-9f2c-8f1d695ba4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09df2086-a039-4d5f-bbd3-507465f8d13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327cf32a-dd14-4f81-8ea7-fadd7c076064",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc0cfe0-bee7-4def-8841-f95a50ec75b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4542f3d3-5a30-43be-9064-2d2c1bb76d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32137fa-2991-4e6f-accd-49701fb23434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010fcd0f-5932-4b9d-a6a1-8b3176b1efeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d271f8-dfe3-4d90-b671-498c3d7bc7ea",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7bdb88-78e6-4a1b-800f-6fc50fb4358f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d02195-5ab7-47f7-a30f-8e1cf6b0eebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d349c88a-2a97-4344-9069-7d461610ec3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4861f657-a468-4051-a0b0-64c01cfc2ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978d956c-eaa6-49b2-aeb1-96afbb2160dd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f486170-3dc4-4bb9-a064-fe9973f1e6ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da8989d4-d5d4-4299-b5ca-02c98e007214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4136ce4d-7f7c-4634-81eb-b6a06117c428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d20d003-0d27-4db2-a683-2c7d640ea8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457570c6-33e0-471a-96fa-05f25ea0f8c7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d48429c-c568-4121-8a69-7263410d01cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b84565-2e3e-4cd0-b836-7b9714ef0c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1231c832-bf64-4f66-8342-1255bcb017c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2be146-3d7e-458a-a9fd-7f6e9c47c263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff9ad9f-9463-4f66-940f-0443394bc10b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c88d9bf-9968-4e60-b511-798ce8d2b6b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77c953ae-8e05-4640-ad19-0ded404f6777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae46d42b-9ce4-4f98-90c8-8a55ae09cdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e513d14a-2a4b-4121-af02-273d4a9f9659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5ecf11-72d8-4f66-883b-b7734aa5f320",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa76a9cb-8996-4c1a-9ca9-7a91da485bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42f4b27-aaca-4715-8f59-b8b6ccb68cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfe96be-ebcb-49f1-b93f-01d67dde68fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d733484-5846-48dc-a7a5-7bc3afd5f84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04707c8-3389-4ab6-a0cf-b46d16438ee7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c16397-6288-43ed-92ef-e8d98ba5043e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "814975c9-8584-467a-95f5-2e0204aadac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dff4f1-2012-440c-b03e-3e9374a70b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c682ee-5c2a-4da0-97b7-c8e8437f9c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cdf8cd-6287-405f-96a3-cd4f7f0baabe",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd80889a-ee0c-46f4-8185-8af14d9970ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b841b1-33d6-467d-8c10-ff5cdb25f18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b3b55e-a685-474c-8b9f-95034c0cee14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36492b21-b4d3-4f70-ac24-7a81dcfb6678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53a0608-2aa2-4879-8a75-48b9a9c44669",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eda720e-5a38-4555-a7d7-25b1710fa64a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ddf6235-f243-49ae-a594-5f4d2adcfbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784af5fd-950d-4d3e-9339-7f5e0d0bfb79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ea3ab1-5d42-457f-91a0-8f2bea813a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0e89c3-927d-461d-8212-5d610fbca8b2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c9e2a8-7c6c-4afc-89c6-71d4caec33be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46369092-1df0-4758-b5d6-fe23806dd7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8319d7b-97b8-479a-9cf8-b3d288dd94fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0846b21c-596b-449a-9d9c-eaaf6993604f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753835a7-2a5b-4a4e-903e-924019bb9857",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecfe0bc-1226-49e5-8813-dc652df8ffe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e197af3f-1ad5-4fa2-8cbe-a7ed56198a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1d9e9f-f290-44a1-9370-4871915ab635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2f6efc-486c-4d10-ac5f-edff589ef75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5c3e7c-54ec-4f5a-8a72-b2204c78ab60",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1e5207-6179-4716-8fe7-2c0c59e0bad4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b6a2ed3-822d-4d6c-9b55-ce5b6b2d7230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0ddd6a-2641-4fb0-a965-c7f60fbf382e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13d3818-e174-48eb-afe0-5cfdf684fc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41c5965-c87b-4289-b03c-833b763c742a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bdf0ea-32e5-4c5d-88a7-4cabca903ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1f52b2-69b9-44eb-8901-26fa66595560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2924d5-52c5-4358-a2b0-035a12272c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b65b3a-8404-43ea-bffe-518cb08dde22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8a07f2-3304-433d-92f5-94abfbec1b68",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0c7afd-8b42-4c39-88a7-719326dc5b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7d4614-53ee-4b12-8101-cba9118422af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71aeaf0-6e5c-411a-ade1-a56346540138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25fb586f-8060-4f11-be79-420fe60fa8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9edfab-6eea-4082-bf53-d714a3ab3136",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8165694-5306-46e0-b494-9d1a13031fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1894d0-80db-4c4f-9479-a1ba46a42d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1c0ceb-f832-4b06-b93a-6fb97d4bc8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85eddf6-0821-4569-8c26-0b937aefc676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659cd678-9050-4f49-80f9-41ad2da11419",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9c1081-8dd8-4eba-b22a-a98173e217c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37350e53-583a-4380-baf9-2e7aebb9537e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67117cc5-fba7-4a62-b20a-0569218db123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1840f8f3-30e2-4262-b824-de951d00fe9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f747a92-01ea-4a2e-aa22-095b620257e6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bf2ff1-698d-471f-a7d8-ce4c7f409639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade9a5d9-38e3-4d32-b582-e2cc73648481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8273270-8b78-47b9-9307-34b7082cfb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b8facd-2e13-4ecc-b246-297a2df42734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f031a1a-70a9-4e39-b781-3b3af3ff8f94",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e8a9a1-5c96-4414-9c45-cd24572eefd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1c1962-db56-4d5c-9a98-89dd054785fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699f196b-14f5-4824-aac8-0bc3bb76e5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3331f14c-8a0c-4de4-b1d5-af53d92d6d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de32c7f-0ff9-4f49-9081-4c70cfb35481",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0618494-d695-48f6-b29f-3c3ae0a0ab59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140bed60-57b4-4321-b35d-0ee5fc59a76b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e11c70-6098-4da6-8b98-067ebeae2598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3857a8d7-3648-41f4-b04f-450aaced3d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d9698c-6bd5-45e4-bcea-e1cbae4fa743",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6656fe70-0488-4fcb-bf4a-da3a2d33902c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0289d047-26be-402f-85af-d57bedd60c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2473fd6a-fdcc-492f-a504-a64810c9230a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d9449d-b4b5-47fa-8fff-bc699ffb0a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcda3fe4-cd32-45ab-b256-a6a7005089db",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c81123-827e-4dc8-98ea-5369e7181297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b78a8e1-1327-4c77-9f8d-7a7dcc7f961f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fd4f9c-4667-4b6b-b5db-8142abeb69c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70249615-ca98-4140-b18d-c1f9efa06b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb87d4b9-da7d-4042-8f45-88977236ac1f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c312e117-9784-4f3e-a75f-23c1ae870c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a883f011-2b3b-4051-8bab-ff4125b44d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7c0c2a-197d-4630-9bd1-792fe4372404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096d6eff-8ec4-4788-bb13-17c1395c812f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9233377e-809f-4d1e-8e8d-97c28c758246",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1e17a8-e082-4ec4-940f-7d9a1e6189af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0585c9-8bb6-4ab0-964f-c15eb1d650da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ced168-a7f4-44fe-b1d4-1d60f7e41732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cd0959-a1c3-4f2d-bee1-d003854221ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c685e920-6d01-4656-a2ed-1e71fbd34529",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeed840-a677-40e0-99ba-69620b0cba70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a711618d-49ca-4225-bb2c-777ac37abbea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4060d38-3df8-4ac4-b1a0-aa37023cb611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134dede8-ae0f-46b3-96ba-dd60129d5ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b27b356-99e9-4dbf-b7dc-a5fdbd7e237f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886c3d33-2987-46ca-b5b2-2032008b173e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e53d65b-6ff5-4863-8829-10cdaebddcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2e9e21-c5f8-42b7-858c-8acab6fa4a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f38193-f6cd-400e-a693-53f7c06ca407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d9ac43-57d5-4ace-9cec-f64f73827f84",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980fd961-4667-4323-8304-55fcde1c2f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80fd2fb-47e4-4b36-b4e8-8537ffddeed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983099ca-9722-4a08-ac38-63913b95cd34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c39123-951b-44c4-9598-7ae880f23869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dd9a10-f117-453a-8680-16a045d2df1f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e259ef-5c7f-4dad-b508-c84a75afd8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e39778a-550d-4c6b-84b0-d1c592867233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec283fc8-2233-428d-a4e7-e5cb91194d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9fd07a-7dc5-40cb-8fe0-f39dee65541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec58025-ede9-4c03-9d0d-0c6dc03ace61",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a43b473-2fb9-43ad-b789-9d93034d61dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e3fe5c-a428-4168-9684-7f0f9a22231e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4594bc6-0890-44a5-b8d6-f9920ee374a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6512011-bd17-40d8-8d89-11cba8e02058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f3c3ba-205a-4344-916c-6e29dbf27602",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c3f9a5-13bf-42f0-8d8e-df3a63485469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3602f501-389f-410d-bbe0-85c3b4d0d09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5524ee2-b74a-4139-9c06-559350d7eeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2514c4da-bf4a-44f5-91f2-231ccf86899c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853d201d-dd03-4b68-b368-33fe35477d7c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370cfc2e-f064-4cf2-b813-45a91f0515ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12e5c9e-0757-4e2b-b095-11544bb7d53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f344c76-30f7-4548-ad57-889ad138279c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8b5e3c-df81-4e69-bf16-0e8e1c9e153c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8daddc7d-c6a8-40e3-9338-1ea44db38b83",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3882d9b2-22c0-498f-a53f-dd116ef4fa32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a316eb63-3674-415c-bf15-8e7cad1cefd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9edecba-164c-429d-b36d-948013fb13bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00563c0-0fa8-44b6-bfc1-1564315739a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baf02ed-9b4b-4f65-a956-57a254c29a2c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5f1428-7117-4259-a3ef-d680fc4abba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc5bb8b-be60-4867-96b8-7e1752ea713f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63246f89-19fa-422c-8f00-a50296f6940a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45dc13bf-dbea-4ba7-84ba-df7af921f30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37deb134-e9f1-44c7-9561-ac1f089f59b6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fb6226-07e3-4d37-830a-860567d8cdf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31458fe1-7926-4126-9818-9aff6c9750c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0f1914-dec9-4c59-aa04-e00577ad0910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf737e4-caae-472f-aece-a9877ff18fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b03410-59c6-4640-83eb-6cbde418ad63",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf3f720-9f2d-4821-9480-d86a85eebbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52300baa-9ce7-4925-9219-3d829e16e96e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffbcabf-ea9d-4e2c-a274-5970805effc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd3a496-0841-4e28-b504-c379011c6cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7b19b9-2328-4f14-be0d-c2e3f790ff4f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81500a1-ef3f-44d2-a878-5cb2c30fc2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74d4a4b-b856-4f08-9582-89904631157b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f84a0e-20d0-41cc-aa9a-958c2077eab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16581802-ff79-4a94-86c2-39d94b6aee3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0efafc8-468b-46d8-a9fb-d3a79b768825",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789f8d7f-586b-4807-9bf9-25f72cd05e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e9e051-bae6-403a-a1a4-7068cb752737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5359c0-dafe-47eb-82dc-260398716601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ce613e-bbf0-419b-b22a-6279c447b052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4e4755-f830-47aa-b9f8-28d6bec3c03f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd555e7-deba-480e-b301-d3745d0e2cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560c75f7-241e-49cc-9d06-e38ba56496b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc38ae2e-0f15-4d31-81b9-a6e47a9c0a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcc83b1-5ca1-4a16-a0da-ba9771807ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e4f5bd-f598-4099-ad35-f86bbfff5b51",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08e1455-89c7-4cc9-8f08-3713fc415256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7c9764-b5ed-4cf0-afc1-fe10a780dbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850a4b60-c872-4583-b1f6-521973a57f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124b0c3b-c309-4d4c-837d-fece4aa0cc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac4f038-272e-4a35-929a-4deeaa146a0d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fb1b1d-ef97-4411-b83f-11e9c60a8eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2663a72-e020-4ace-b75b-dab0ea700728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceee15b6-772d-45d1-b3c2-5e7ade01a1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47779ce4-d76a-4534-ba13-bbde7236e377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e4f292-a922-47d1-be80-092c3ca91b50",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3536dc39-cdf9-4d20-b41b-d0ac2dc8b774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c439d6f-3c19-4a77-9b30-dcf6757609fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821016c8-2442-47ea-8851-8a6f8b8db5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3a45e7-fc5a-4b6c-9057-88312c1b5b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681c3f7d-cc4a-453f-9e26-aeb1f5c3fddd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8f0100-53ff-4146-86c6-3a45786ba1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2bc2396-36fe-47cd-86e4-63f1cb1080b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffed2ec4-dc5f-4698-82d6-65348663b4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f446e49e-1202-44d9-a3cb-a4a563b10ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ee9a79-b5c4-481e-9eba-c9dfab20746a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aee7e28-0147-4470-b0b3-99e00d9906cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e35f1303-d38c-44eb-8c54-2199815857f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf8a3f8-c8fe-4a37-8888-1c3fa1c6c1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51487b61-50e0-4e74-88b6-0e457f9c96ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331f76fb-22e6-4e8d-aeee-c5316c07a584",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bafefdb-7ffb-4ecf-8938-6c944573d655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa79604-d641-4fa0-813d-74e04bf4eb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658fe4ae-72e4-4a9a-98ac-044b6cc1c97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61eb1233-5afc-401c-90e6-fdd1aa4106ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2b5d80-863a-46a2-ad46-e70765eb667e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2909a2-be7c-419f-b745-55f03a78b2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a61288fa-69c6-419c-bcba-5bc8fa77cecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041e935d-fe17-40ff-bc35-e6cb7077e837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d490768-32b3-469a-af32-59c5b2f2b07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efc929b-692f-4eb3-97fc-723eabb68771",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7724067c-a3ee-45a3-a099-fbb669697fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e2d5ed0-5d2f-4b79-891b-4160434fbdd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7e683b-09d4-41d7-b4f1-3fb9b2cb6d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfebe0cd-eb70-4400-97c0-ddb4afbf8c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b043318-9486-4017-8e6e-3a1c44951e69",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf547e9-ffad-414d-9fbb-fce21c7717f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "361375e9-1aa0-4674-aea5-13b007ce933c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed060fa-ee7e-46b4-ba64-ee854c34bc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e66563-0738-4f18-a0cd-fd5cf52d0e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68ac346-174e-4568-8c98-2f844406009f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5532322-658b-421d-bd99-b2425f9db812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "514f31be-cff4-401d-b254-44d1874812ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24e5a6d-991a-42ff-8d72-321491745c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de537d9-2bd5-40fa-bc3d-10aae695c7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b06cd66-9ce6-4580-a273-b624ff9a45eb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43abdf3a-0abb-45b5-974a-aa977497950d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d30c7588-776a-4b4c-9d7c-0955f66597c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a707e2f8-cb4c-4908-b349-3abbe367af7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13eb83fc-b501-4af9-9a62-d48eeb326ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0c8a81-7b92-4cee-8012-32bfb54593c5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb990edd-407d-478e-ad6a-a108f9ccb989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0649b6ab-e58c-45d4-8be6-091efeb643d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed83c756-aded-49eb-855b-f30e17005874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec13ce5-b4f7-40b7-9a05-146626a537fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b451e877-3d24-4b59-9a1a-e517fec4880a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade258a7-c6b2-46c0-b881-cc7c969a14e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c0bb6ec-8909-4e0f-9072-914958fb6e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d763eadc-903b-4aff-84ce-4f82ad4a40c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4d7838-42d5-4d56-bd50-94abb05ea683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49aaac95-24c1-45cc-8fdb-dfdfbcd274c0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a3e5f2-acbc-4e76-aab4-1fc8f8db3b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a687e90-910f-46c5-b741-a7756336827c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e676ba04-64f3-4054-a9ae-3e0935c0363c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdaddc5-983b-4b24-8f4a-c6c78701c2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4355d1-1b94-40d4-a300-87b2db2cbbdb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbb0503-6ba2-462c-ba38-e46a61244250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "313bf304-0124-4230-9b6e-d8bc3be12c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc9dbde-ce0e-409d-bc1c-2a02fd878de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93060c8-5b5a-4208-94c9-d44e4b28d0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5806c204-0e3c-4cda-9262-5f4cc3148120",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b12f7d-e4f1-4f17-905f-6a6314997f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2e589b-de2b-47b7-8e71-fcd76287e261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc2531a-eebe-4d1a-a6cf-81661e276bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729101a6-8496-4819-833c-4109ad8f2251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98539a21-734f-490e-a0c0-37369ef72446",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae5847f-4150-44c6-99bc-8d344983a6cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d11547be-5825-4cfd-8003-d75727d8e6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e4dd52-e6f5-4480-854e-8fd7b5f62fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759c7e17-ebc8-4a14-966a-94e67bb9089b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9cbb34-1936-4d48-9e89-b5591c2e2d8d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3233be-409c-4a59-9ff2-c91263b662eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11231af6-4ad4-4dc7-a827-49c4bc04b9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6e00ab-0e7f-4da0-81a5-8119c9c94867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69602c83-d9a0-4b45-9788-915a02a8afb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baae28a6-ea95-4bff-b4a4-d0379b50142e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc0ec05-4487-4793-b3e6-ed47d72ac4c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c129431-aa0b-4d67-895c-89696e5ac85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694de20b-f830-4e59-8663-345e3f9c899e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda18bdb-3fbd-474a-9440-fce51825d183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fb93ef-e8fe-4750-8525-fc26719b1a9f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f800e4f5-992b-4aac-a52d-5ccb3b40cfdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "629ef17b-564d-4407-83e2-a91d9ef0bf19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772a27bc-b7d3-4d24-9d43-088bab73dc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3afafc-b0f8-40ab-8e54-3e4cf45f419a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3647f73-aa2d-4800-84a4-cfa702a49d71",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8d8f3c-5c9d-4efe-a5ac-efde2aeb1772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4918372-23cd-4733-af89-d08b8f523f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc1e297-f42e-4b89-9346-89b557ec9492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2e6a66-871d-4600-ae78-6a58547d5eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dc38b2-ef4c-4b46-8e2a-76448fe73014",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350c29fe-09fc-4ad6-90d9-9ed6d02008fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae24fbb2-7912-4a32-930b-a52b7c66b0e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b89e822-71a3-4f18-89bc-b9abd1dbf1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae80b1b-224b-4f13-bb10-0e5a6c4fd98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e19981c-74f8-4386-bcb9-71dded3f2f9d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0bcc27-027f-4348-9ab9-897d9169c606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0104e50-7c2e-4a14-93ee-6111f1794dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b3c8a5-868c-43b4-9d5d-ab7c66ef694b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7118db1-c2bb-43d5-b89a-402e58fa4564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e46241f-2039-4ee3-a1b2-c4fd2b4fb28d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5cf1da-cb76-42e9-a8b7-bec164b55fb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8668f14a-2d55-42da-9743-671af176e28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819a4cbc-3010-4def-8b3b-e2483bea185b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e43c5d-821a-4442-9f78-76a848319466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a30918-412b-443d-bfb5-3ba8756cc2f5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f6d251-e9e5-4f5c-a934-37ff9693c43b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc0c6aa7-bd54-4c1b-9c31-da10f686676a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fa0a2b-c41b-49c9-b3e2-cd12947d79d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c64c9d-f50c-47fc-b011-b55eb4bf646f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c04bc3-5075-4493-a69f-16cdb4a6c940",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7e77b4-5820-4166-a144-f41e49a90508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4132236-bd75-4066-9846-17fcd87b933e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458af4a6-a84b-4312-9a94-c9659269ea08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88b84c8-0134-4cc6-9891-01aad2b094f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76db8f7e-08c1-425b-ba39-72b4656f73ec",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51118d88-1c4c-4d02-bf1d-5bd9f8354731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd3ae4a-d6ae-4a81-a235-fd4fbfa837be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda4adc0-3829-441f-b1af-fdfc67a6e577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f1ac61-c046-47fe-aa79-240e29b64ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f9be70-f294-4c42-bf6e-9cd33dcc9279",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b782d481-b699-420e-8152-915d20268eae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f255797f-eeee-4ab1-a4b6-3210c46a0e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e682933-de11-45c5-8167-3f3b041eb81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c4cd98-8474-4322-b962-090b77b92562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030b3470-1877-4f21-a8a1-dab5bf92f5c5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d15a350-a2bf-45a8-89bb-51ed021ebcb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab071388-10ff-4a80-91aa-690fd825abc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca20491-4d94-4be3-abe3-4e86569a1881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8f5e94-dae5-4538-8657-9f437c29490f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9276dbd6-32c4-47f9-a102-49566f13812e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629d9010-4a2c-449f-9963-4c3582166e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "774067db-e129-4532-96a0-ef54ef3a2dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca33300-34b8-44e8-9b9c-46a3f1281127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb03202-c38c-4a80-9f61-e230b52cfe99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b6c521-fb05-42e6-af6a-e7624813fef7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09495b2-1e55-4e5c-ae29-d0c21d466a0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "504c4f5b-7251-4855-8b4d-e4cfa4ca675a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ae2d81-2e7e-46ae-966d-f46e95315bd4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14762ef1-5452-4d5d-9c4b-5c99bdac1e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73a4163-b5ff-4292-9507-6981f40394a2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00804d1c-5ca8-4b5e-b11b-f5e2b01771a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7dec075-3790-48d4-b0ad-2a8da4b0d378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab07a6f-bae5-4f80-8d32-9d410fd97584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29243111-9ed8-4ca0-b03e-b6ec59b50a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c18140f-0ce3-4089-8255-a43431e6db62",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c628427-c52e-4c0e-b2f2-d3814247f94b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c94ebec-7eb7-4870-894b-d7dfd4efa546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dca4e40-61e1-4eb2-a700-550e75c3fb46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90ed86a-dd8f-4901-bcb6-a0a6ea3bb6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfd6592-25c8-4d44-9807-995355a71cf8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc203fc8-f754-4bdc-ab1d-93ad8a499105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98ba8ba7-694a-4771-8d5b-48ce0e355c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed74947e-bb17-4fb6-bbd0-bc4f21df4133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acb3ed6-8c0b-4391-8ca9-83ebeac4214b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5473d3c-b9bf-4a07-9c55-82d94b9f8d3d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f5a284-ec12-465c-920a-20c14fcc4a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae76d42d-00c0-4aa5-89a1-327c7389c7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f1e609-cfae-4229-aabf-58388e3578d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da58bb41-8764-4744-b5a2-d2ff1a587573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ffe841-a77e-4cd9-ae97-9742fa4cf89d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8272580-b69f-43b9-990a-3d6213ac20d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b28a9583-1299-46c2-a7bc-773b40b5ceaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a5e093-3950-492d-a163-e7273e7fad04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2919ddfb-2f5b-4437-9cbb-643f22288525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f84a99c-058e-4a77-bd23-95d62b506ca2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bec1fd3-4ad7-4a52-9783-9e517dcd2598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea01d1f-f582-4c5b-ac33-e5d575522193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5539fb-a0d6-44e7-9ddc-69f7f0129c32",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd31e79e-d9bd-49ec-8bdf-2c53079c2e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60406b76-8e74-45c2-8c09-62cb721010af",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9ec437-2821-4517-9cdc-9debc2c09de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d8960b-10db-44b3-88c7-e71cf4147115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ecad14-c48e-4fd3-9c07-3b0d93884b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b2da36-3762-4d20-b2aa-55bb1bd9a854"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81aaf46d-1ddf-4594-b0e4-68996d3c3363",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8791eebb-8019-4526-890e-4061bd251931"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca7b043e-89d7-4d82-845b-1cc432154ad1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7cc6333-ce5e-4f8a-9846-bb7769be2d6d"
                    }
                  }
                ]
              },
              {
                "id": "4fca96c1-721d-4d58-804b-eff2bca4f724",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ccfb1b3-0236-41a5-81f3-7054c1241acf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e054d8a8-b924-4fc5-9dad-dfbcb254f234",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "07754f42-3038-4e67-9e17-ad5f81abb612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461231db-e7b9-47d6-a864-fdfb280d3283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f6772bd-2d8f-4337-8731-a02d81d736bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ada53f0-45e3-415a-a4b7-af0b4863af08",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1719b414-67e6-4718-bb2b-ebaf69014367",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7da029ad-6821-4860-9b93-0cec41190b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b272be6a-2cbb-4745-86b0-6422f4a84b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "871389c8-3343-431d-9427-2641b0b618a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a438022-970c-48c1-843a-d411c76408ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bfe354a-3fca-4292-80f2-7c92b4e9eab4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7340ab0a-354d-45f5-a5f5-f4c16a519c17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c22dd5cc-e974-4d98-80e7-b9094b92a02c"
                    }
                  }
                ]
              },
              {
                "id": "74be1d0f-df9c-4075-b3ee-3bd6dc64f91d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f8543b5d-d22f-4304-a934-c94c4e32d45c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e0b297-4758-4a67-9b1f-53e7a27cebb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "aabd0dd5-2b91-4f39-903c-9e43cfa6d005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a78b38-c0ba-4361-b56c-8bbe5b769639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9686619d-7746-481c-8df9-86c35a019402"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bc48a748-fdc2-4716-9e89-bd024c57d286",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1cec6a8-9679-48d9-a5ef-2c42a953ebd5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd5a2f7c-37d7-4be5-9731-7b0154571f04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "15fdbd62-7458-44b3-943c-a2714c1254a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d28c91a-39ec-4c52-8933-7f576bcd7ffb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afa62695-f0f2-426c-a4df-2f2cb60a33f5"
                    }
                  }
                ]
              },
              {
                "id": "520dbd0a-f883-44b7-a1ab-c5e0bf4029f5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b1af01e-d298-47c3-9de8-a3f35c6f3fe7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e53f0425-e874-4ef5-ade5-60a486c85317"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d9a7786-4723-438b-95f5-40cb670f12b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7334f49a-1b25-42c8-9cf9-747e105176eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee8b3936-2d65-4a98-ae78-71c763e1f074",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cde636e7-ebdf-43f4-a23a-62027af2a0f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bccfbda-e297-4b2d-81f4-ce44de01fbac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99377e15-bfc7-44ac-ae82-0f212fb39ce5"
            }
          }
        ]
      },
      {
        "id": "a2819586-29cf-4d82-b453-47aeeb159075",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ca86a6b1-2ca6-4091-8646-e44dc83b2230",
            "name": "Negative Testing",
            "item": [
              {
                "id": "387576a4-8d39-4f99-9ff0-0c297489bd34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2939f93a-f257-4e19-9af6-c5b9d07531d1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b21832c-9c8e-4e8b-bf54-22f5458139d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2cb19e83-c771-40f6-8466-e437476d16d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671b2de5-ea7a-4720-a3ef-8f575fa2b228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f0ed086-a7e3-4cc8-9c88-9d89f8858267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce049d0-efc6-4ac3-b099-865edfac6b49",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2654443b-2556-43ce-96ad-8fbd9b7a00b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "859ca49f-7c66-4556-9f19-ea3561c0a038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b3d387-f163-4486-afe4-99f849eacbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36e170c9-22d6-43eb-8555-fed2da3b285f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1ea0e7b-8577-4223-bb72-5bb3b5e1d2c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f19269a-5edb-415b-acbc-8e77e515bd84"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5855c7fa-ced5-4742-8949-c32d0ccee0d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0d70741-27b3-406f-9e6b-80c412972c52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62c2734e-56ff-49f4-925f-5854ac743296",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "21241780-1a06-4787-a3d4-355bc89fedd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f28bddd6-7142-46c4-8a12-a922c9aed660",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5bed33a9-c167-4cba-9273-169fbd311ce2"
            }
          }
        ]
      },
      {
        "id": "eb12b90f-5ae4-4eb3-8c4b-3ee7688437a9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1798ffb1-e718-45ce-8279-803806f20ed6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af3e7226-0d5d-4c11-a3ce-be21b7ee694e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95a9ca17-19c8-4395-a4fe-fbb9c60d65b5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23619973-9b35-4034-abe3-f3fc63a6af27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "35b2adb7-e681-4a9f-980f-7c88651e85fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d52f43c-9215-4568-a6ce-b5a48cde51de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a538a2ff-2029-4379-a090-ebc3cb693b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61ebf09-9e02-4cf9-8874-fe91411b9b9b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbaa683-aa73-4386-bfea-9eb4b23ecc2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "401fdf10-600a-4fe8-ba9a-a60593bb16a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a79af7-3392-4569-a140-9e07480df8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77804e7b-6e2f-4aee-82b9-ea7a2c82928b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af251b49-01fe-4318-aec2-3e706931bbda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7015685-b9b4-41d9-bcfe-c2e3059cbeca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ef3fd8d-faee-4221-b373-92f7946fd81c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3d00ebd-e3d3-4791-a7e9-3737e8065486"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "824d4463-f86c-44b8-bcff-db0c403a5f28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cf3c4dc0-3a8b-4c02-9f1f-df77b4a1a626"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b157714-042d-4d33-8018-86c57212604e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f60bde48-5216-4a38-a023-41472ed06499"
            }
          }
        ]
      },
      {
        "id": "6c847b32-3b47-4ee6-972a-119f5ad49a43",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "29de845f-1cb1-4bc5-b5ee-6a74e45b2d05",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1185394a-b2d0-420c-8120-e590d030451b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c51cf3f-bf9f-4dbc-bfcc-9b0fc2515665",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ea0fc3-e387-48b6-9089-b24a87109eb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "975c9c0e-93f9-4a3e-8afa-c423b4932b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17c6de1-de91-4ad4-b60a-ecec0ffc4e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d658b13d-a9e3-4e10-be85-0eae8c33b71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48e6c86-1239-42ba-bad8-4edf50fa61f0",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8a3586-8386-488d-888a-1b98b5aefba8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "71e646e4-870d-4ca3-b81f-d34b1b3f287b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657b3153-ddd8-40c7-aa4a-7dd292b70a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccb97196-03ca-4825-b940-5f89b945403d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64f25ce6-32d0-4206-84f5-12811aa9cc0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f87c43f-7c12-4908-b75b-aa8389d231bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70647273-f930-4ddd-a27c-e9ae494c2b8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f92a3376-db3f-4574-a484-5c62af9cba23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ebf2c2c-aaf3-47d3-a660-c77e955cef96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c7a9366a-e8fa-4443-ac01-3c587543a767"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4fa8cf2-2d36-4e1f-906b-f09fc35eae20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f766fc7-e76d-4dbb-830f-3257b03dbbaa"
            }
          }
        ]
      },
      {
        "id": "ee43afc2-37d2-40d8-936e-7703c4c42807",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a13d9149-2c00-4125-94dd-ff4f39b0d026",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc793f22-3dc9-4ba4-903c-649d9ed9289b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4908b603-b87f-4c10-8f40-186964526eed",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53beb76e-8977-4d94-a1c6-124157487e66",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b5140b9-a605-45b9-afb2-befce0475f22",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 763.7290076335876,
      "responseMin": 11,
      "responseMax": 6871,
      "responseSd": 783.2027506977627,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1674520855378,
      "completed": 1674521066566
    },
    "executions": [
      {
        "id": "63a5e56e-31c8-4e42-a700-725298a18166",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7a522e20-39fc-44f5-949f-9a0e7d74fecb",
          "httpRequestId": "f4f0d85d-4a49-46f2-b8b7-8ceb8c4fdc4b"
        },
        "item": {
          "id": "63a5e56e-31c8-4e42-a700-725298a18166",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "663e8ad5-4975-4172-846c-9d355905eb6b",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "b7a70cb9-b48d-45bb-b535-6db92baaec59",
        "cursor": {
          "ref": "d70989d9-91b4-4d0d-80bb-aa6f50fb1612",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8e3101a2-1f04-45e7-bfd4-1e652fbbb55c"
        },
        "item": {
          "id": "b7a70cb9-b48d-45bb-b535-6db92baaec59",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "41bd64ba-c36b-4ddc-82f7-2b6e2c7eac0e",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "49455693-7b16-4f9f-9416-0d37d9fce217",
        "cursor": {
          "ref": "2364a2cd-4a6e-4bd6-a71e-60ff1efedd1a",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cf26d9ba-cdd0-499d-bcfa-1ec689caf365"
        },
        "item": {
          "id": "49455693-7b16-4f9f-9416-0d37d9fce217",
          "name": "did_json"
        },
        "response": {
          "id": "62978e53-294c-4756-acdc-0428bef6d15f",
          "status": "OK",
          "code": 200,
          "responseTime": 1306,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea0313e-5662-4b78-af69-7e1ac38f40d7",
        "cursor": {
          "ref": "d22941e4-9d52-4643-b98c-5870eb627f63",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "579ff4bf-68dd-4025-a069-c7c160811b85"
        },
        "item": {
          "id": "5ea0313e-5662-4b78-af69-7e1ac38f40d7",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b41c531-be74-452e-bf1d-abeebf5e278d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1228,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea0313e-5662-4b78-af69-7e1ac38f40d7",
        "cursor": {
          "ref": "d22941e4-9d52-4643-b98c-5870eb627f63",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "579ff4bf-68dd-4025-a069-c7c160811b85"
        },
        "item": {
          "id": "5ea0313e-5662-4b78-af69-7e1ac38f40d7",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b41c531-be74-452e-bf1d-abeebf5e278d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1228,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd153c6-af2b-442c-8549-f46543d9f72f",
        "cursor": {
          "ref": "b89d45c6-1de7-4618-a3a8-8f4a3c9e6eb5",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6c3fa8b4-9999-4b51-a75d-c364f302cdb1"
        },
        "item": {
          "id": "0cd153c6-af2b-442c-8549-f46543d9f72f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2a882ce9-5766-4cff-808c-e6aff5b69e0b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 726,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c4b037-9134-4d73-b690-52c442d49626",
        "cursor": {
          "ref": "e9c0e648-322a-4c84-b5db-496ee9188037",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "81bce5b3-7f82-4153-bc43-616602eae983"
        },
        "item": {
          "id": "b3c4b037-9134-4d73-b690-52c442d49626",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "961992dd-55b7-4633-bcd7-df8c87b0e064",
          "status": "Not Found",
          "code": 404,
          "responseTime": 958,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcbec23-58ed-49c7-ba71-577e47321fdc",
        "cursor": {
          "ref": "47031168-e9e1-40c8-af85-7c14201da2e1",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d1a773f9-19ec-4240-9568-f428ca030c40"
        },
        "item": {
          "id": "1fcbec23-58ed-49c7-ba71-577e47321fdc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b83245df-413a-4b61-b673-238a4434ef5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba830781-3ec4-4ab0-9bb4-6f448f6ce5b1",
        "cursor": {
          "ref": "2420fb95-4d52-4b3a-a353-49aac2951042",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c0af4f50-66a8-4469-94d2-9fe8622e91eb"
        },
        "item": {
          "id": "ba830781-3ec4-4ab0-9bb4-6f448f6ce5b1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "02cb4bdc-e467-4b1d-af2e-a072d75cc2f4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 602,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba830781-3ec4-4ab0-9bb4-6f448f6ce5b1",
        "cursor": {
          "ref": "2420fb95-4d52-4b3a-a353-49aac2951042",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c0af4f50-66a8-4469-94d2-9fe8622e91eb"
        },
        "item": {
          "id": "ba830781-3ec4-4ab0-9bb4-6f448f6ce5b1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "02cb4bdc-e467-4b1d-af2e-a072d75cc2f4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 602,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0beebee9-75b9-4262-a649-1e1a2c2e841d",
        "cursor": {
          "ref": "de9b1bf8-748d-4209-9e9f-e0b36404c34f",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c5ba69b4-043c-45c4-b06e-99c818d1cafe"
        },
        "item": {
          "id": "0beebee9-75b9-4262-a649-1e1a2c2e841d",
          "name": "identifiers"
        },
        "response": {
          "id": "2df5cc35-4406-4a82-8b7c-939daf085f10",
          "status": "OK",
          "code": 200,
          "responseTime": 1611,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c99a794-9cc6-442a-9318-06268bee6e35",
        "cursor": {
          "ref": "4c36f0e0-2e73-4582-99ec-aac743134630",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "425da2d2-a7a3-4593-99b2-c4570cdd31ec"
        },
        "item": {
          "id": "2c99a794-9cc6-442a-9318-06268bee6e35",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c39336ed-b70e-451c-842e-e18c4298af73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1233,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c99a794-9cc6-442a-9318-06268bee6e35",
        "cursor": {
          "ref": "4c36f0e0-2e73-4582-99ec-aac743134630",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "425da2d2-a7a3-4593-99b2-c4570cdd31ec"
        },
        "item": {
          "id": "2c99a794-9cc6-442a-9318-06268bee6e35",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c39336ed-b70e-451c-842e-e18c4298af73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1233,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1326c7c0-c5f7-460c-9216-8d27737f7059",
        "cursor": {
          "ref": "3c9d793d-879a-48c2-814a-406190155e7c",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "234b1e67-236c-434d-9611-a0023b95f7e4"
        },
        "item": {
          "id": "1326c7c0-c5f7-460c-9216-8d27737f7059",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9f55d299-7737-41c6-94a7-5a4481811d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1113,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8229e531-731a-4fd7-a3cc-e5a1f0c3548e",
        "cursor": {
          "ref": "7e613fc1-4c56-463e-af7f-79ee850dde7f",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2844c6fb-2445-4e23-a029-52e4ccfa180f"
        },
        "item": {
          "id": "8229e531-731a-4fd7-a3cc-e5a1f0c3548e",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "587904d9-09ce-4930-95c7-1c26071e56b0",
          "status": "Created",
          "code": 201,
          "responseTime": 4983,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "8e838f93-475d-49ce-a9e8-39d07b0c46dc",
        "cursor": {
          "ref": "5d0526e2-724a-4401-a847-236a4648dad0",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8be886e7-9a72-4acd-bb3e-5c59d822b27b"
        },
        "item": {
          "id": "8e838f93-475d-49ce-a9e8-39d07b0c46dc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6537f282-b977-4d29-aa33-0a530c64a8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73926c27-dde8-4a43-b480-e964423849fe",
        "cursor": {
          "ref": "57c5d279-0813-4e70-8660-7241640992d6",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "79051a9f-1099-4bf5-8e59-fa0e622b16b1"
        },
        "item": {
          "id": "73926c27-dde8-4a43-b480-e964423849fe",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3848e173-3092-4597-8973-30946e72a911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ef8fcc-ba75-4480-80ee-c2982c94de07",
        "cursor": {
          "ref": "b6c731ef-5146-45ea-8b77-f933878448ad",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bdcd45bb-6cc7-4fcc-8e24-ab5b4cd1cb1e"
        },
        "item": {
          "id": "75ef8fcc-ba75-4480-80ee-c2982c94de07",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0c19e8ea-646a-41cb-87cc-572102b843a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a56b69f-4179-494f-9b5e-96b4abce90d2",
        "cursor": {
          "ref": "6739e66a-ef48-47c3-adeb-5c25a9bf04b4",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bf9cb365-4adb-4d36-a6e5-002478243b64"
        },
        "item": {
          "id": "0a56b69f-4179-494f-9b5e-96b4abce90d2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5737a43f-d752-4aa6-a5b3-c854da6467ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27183217-0869-43dc-9314-36c796333cf4",
        "cursor": {
          "ref": "e6d5a680-6042-4172-952b-2ce124bca44b",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "99615049-d6a6-42e2-bff8-1fe835402859"
        },
        "item": {
          "id": "27183217-0869-43dc-9314-36c796333cf4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b8cc3e29-adbd-4a83-b7b6-89767b571579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ff4103-cd95-4d8b-8ba8-b3957600df60",
        "cursor": {
          "ref": "bc5f8d0c-69c2-473a-9024-1a894d112660",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a1180847-882e-4d09-985c-0af73f130852"
        },
        "item": {
          "id": "98ff4103-cd95-4d8b-8ba8-b3957600df60",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "db74e05e-e3c9-467c-983f-3b1e378c93f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e0a926-f355-4728-b105-4375ccac46b4",
        "cursor": {
          "ref": "b186d31a-0546-4fb4-b377-a17ceca60642",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "53e42558-6411-40bf-834d-276859234554"
        },
        "item": {
          "id": "02e0a926-f355-4728-b105-4375ccac46b4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ced2417e-5aab-4927-9a09-3e1ebbbfd679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca1eb66-49c0-45d6-8f9d-9f35393437de",
        "cursor": {
          "ref": "df78ec82-02ed-41ee-9dc0-9014fbaeb41c",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "34ba79ab-a229-4bfc-a802-5aabe9444362"
        },
        "item": {
          "id": "1ca1eb66-49c0-45d6-8f9d-9f35393437de",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dbfb2c55-ee01-46df-8805-5bba6b980def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3b9796-908b-407e-ba40-d19f9b8b687c",
        "cursor": {
          "ref": "2195e2da-aaa2-4611-99b7-8d4d333e3b40",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b21d570e-0986-4969-b444-ba9dba2faaa4"
        },
        "item": {
          "id": "5d3b9796-908b-407e-ba40-d19f9b8b687c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "72e93834-ecbd-4cd2-837f-80281d7919bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67b38c8-cb9a-4bcf-91b0-24ff19723ced",
        "cursor": {
          "ref": "879f2bbb-49aa-4ea2-96d6-d75513fb0020",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f320c415-f9fb-4fff-906e-ca2dae081f05"
        },
        "item": {
          "id": "a67b38c8-cb9a-4bcf-91b0-24ff19723ced",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a4f40577-4a53-420b-926b-cdfc8e93ce29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032dafd8-fd89-4ede-8403-2d9cb9162454",
        "cursor": {
          "ref": "b1281c04-4b45-4634-94c0-5bebc87d940d",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8016f64d-e573-4903-946b-2b70b15799ac"
        },
        "item": {
          "id": "032dafd8-fd89-4ede-8403-2d9cb9162454",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "0e8a42ea-9fbb-4086-97ec-03398861f767",
          "status": "Created",
          "code": 201,
          "responseTime": 6871,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "78ef87d6-aec4-4bf7-b783-1e648ba87139",
        "cursor": {
          "ref": "e3301934-b2c9-4484-abbf-de121088c68a",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "82f13e83-1532-47a2-930c-16bc381659d4"
        },
        "item": {
          "id": "78ef87d6-aec4-4bf7-b783-1e648ba87139",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e5e04be2-2dd8-4614-beda-12fa34d611cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4a7cc8-119f-484f-bdd6-b40380638ca5",
        "cursor": {
          "ref": "776f2bc9-fcb3-40f9-8398-fc5999b06cd3",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ccd58728-ae09-4c43-997e-39cd522bada0"
        },
        "item": {
          "id": "9e4a7cc8-119f-484f-bdd6-b40380638ca5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4c886630-815e-4727-99f1-3a6a0678afdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19f37f8-3d4d-4466-abb3-3e2b946568a1",
        "cursor": {
          "ref": "6d1f09a0-e850-46b3-96a1-1987787e28c1",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b83ee59e-5620-433d-84a6-6b5a6ebe58cb"
        },
        "item": {
          "id": "c19f37f8-3d4d-4466-abb3-3e2b946568a1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "35061e3d-a203-4bb9-bc88-d2083b5b83a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4ec998-ae94-4961-a617-6693b0239c59",
        "cursor": {
          "ref": "b0e6195d-8918-46fd-9ad0-711309e1f76e",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d7d96b74-46ec-4d77-8add-0071843dedfd"
        },
        "item": {
          "id": "fa4ec998-ae94-4961-a617-6693b0239c59",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "863aff41-9fd3-4e11-83f8-ec2be4c65b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcd4685-2ebe-4e00-9100-7ad37a993975",
        "cursor": {
          "ref": "4f42efc1-41b0-4321-b77f-d4a4a773d64d",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bae3b3f8-a12c-468c-b206-fa260c6e4643"
        },
        "item": {
          "id": "ddcd4685-2ebe-4e00-9100-7ad37a993975",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "01ab6ad9-3cc9-4779-8faa-deecaaaa5e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1bc3aa-990f-4483-b223-7adec4700b60",
        "cursor": {
          "ref": "c379dc60-c406-4ce5-a492-ea073e941613",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "84df3472-a6c4-47d4-8fc3-8163a1158f72"
        },
        "item": {
          "id": "4a1bc3aa-990f-4483-b223-7adec4700b60",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "104aae89-ff7d-4c00-b932-380e2160e9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5329c0-106a-4d76-ae24-d27e445af758",
        "cursor": {
          "ref": "0d5fcf30-7c85-4d00-be82-e5249df70803",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1a1b0f07-7cfa-471d-8916-42021e2f299a"
        },
        "item": {
          "id": "5a5329c0-106a-4d76-ae24-d27e445af758",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "afb4804e-82bb-47e7-b4ef-dc11909ff2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440b5e9d-1be2-4a32-89f3-4fdad5f89d61",
        "cursor": {
          "ref": "6fd116b0-d009-43ae-afd5-db8af943d067",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "39affdad-3c5b-4032-973f-705e31a2d407"
        },
        "item": {
          "id": "440b5e9d-1be2-4a32-89f3-4fdad5f89d61",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "53b773c4-9e53-417e-9488-f7c5cf045618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183b9ff3-e955-4a0a-8854-e35488d86a84",
        "cursor": {
          "ref": "8f467ab4-fc39-4d6c-bafe-8e69ce34fc97",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6f351d39-77ad-466e-b109-bf1648d02c33"
        },
        "item": {
          "id": "183b9ff3-e955-4a0a-8854-e35488d86a84",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "21c83964-695b-41f9-bbf5-9286fe0186c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddd9e3a-83f3-496f-8fe7-04db5695a4ed",
        "cursor": {
          "ref": "dc14e837-3aa5-4208-a7d2-ff5b4b30c1d5",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c2115aa9-0250-488c-96d6-4ba5bdb2d966"
        },
        "item": {
          "id": "1ddd9e3a-83f3-496f-8fe7-04db5695a4ed",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cb71dab3-3da8-463f-8d15-503c8114672b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecd67cd-6559-4669-98d3-2b4a14915cfa",
        "cursor": {
          "ref": "f7e27871-e986-4872-8c19-f35378be5eff",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3c7d63b6-a38c-4314-bb98-2a18166da0f9"
        },
        "item": {
          "id": "9ecd67cd-6559-4669-98d3-2b4a14915cfa",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "79851d06-766f-4c87-8c34-b93b4bfdcb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fbf013-15b3-41b1-bbc5-70160270c018",
        "cursor": {
          "ref": "2d041471-9a3a-41bf-a74f-51c557d36e66",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c336c2ba-64af-486e-b235-9084e16df05e"
        },
        "item": {
          "id": "15fbf013-15b3-41b1-bbc5-70160270c018",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ec6268fa-68df-419b-87a2-9ab4c023d2db",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2895,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "426b3c4c-6a43-4172-aae3-85a6a10e9f92",
        "cursor": {
          "ref": "b1ce54df-6d38-4f81-8f46-837680726a14",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6432b4a7-c71f-4e52-87a5-677171a36022"
        },
        "item": {
          "id": "426b3c4c-6a43-4172-aae3-85a6a10e9f92",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5265b369-2da3-42d3-abb2-0b5c2708322b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2b7edb-4c7c-472c-bd9f-f2c480f2232a",
        "cursor": {
          "ref": "21f15925-5411-460f-b34f-334e7b949ea1",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "79da26cc-102a-4fb2-ab81-9c3287f719c9"
        },
        "item": {
          "id": "bd2b7edb-4c7c-472c-bd9f-f2c480f2232a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e145c91b-197c-4590-bbb2-dbf03d23cc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b8cff2-6168-492d-9448-e660a0b0ee59",
        "cursor": {
          "ref": "2dafe855-90cb-43ca-b353-0b0146eed807",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8a043846-3829-4549-b21d-3800f2f03b3f"
        },
        "item": {
          "id": "a9b8cff2-6168-492d-9448-e660a0b0ee59",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9a0ee522-2aca-4508-961f-07e739f5d8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1108fa24-fcf2-40c0-a595-10c0a13c53c6",
        "cursor": {
          "ref": "0294fe78-61f9-4978-a9a8-e4b5ce601515",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "414a18af-1408-4499-bfa1-0d3a03ee4572"
        },
        "item": {
          "id": "1108fa24-fcf2-40c0-a595-10c0a13c53c6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "96f1aec2-935d-4fc4-89ce-928ef9926cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7903a2-53d2-417f-b55b-c4b63e21d0e3",
        "cursor": {
          "ref": "a20eb29a-eada-454c-b4de-4ce3d290967b",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b64a9713-ddd3-45b4-88c5-e911f9e82cff"
        },
        "item": {
          "id": "ae7903a2-53d2-417f-b55b-c4b63e21d0e3",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7518e482-43a3-4c63-ac27-497f38abf4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cb6ac2-ea05-46ce-8420-6592411999fa",
        "cursor": {
          "ref": "a226ebe0-41d8-45cd-b5da-f1edc8cb82a0",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "016b44a6-7690-4590-92e1-78a638ac01cc"
        },
        "item": {
          "id": "c1cb6ac2-ea05-46ce-8420-6592411999fa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dab5b6d1-8574-46a7-89cb-35ac1f1efc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482ee42a-3283-4fe9-ac53-909b12462ea5",
        "cursor": {
          "ref": "0765869d-9ba9-4873-8c7a-93ecd55e8531",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ab9e19de-36bb-4e81-bd14-ebc58693f94c"
        },
        "item": {
          "id": "482ee42a-3283-4fe9-ac53-909b12462ea5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "39c233f7-a588-4129-ba75-8c2ffefa53f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1037,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca32623-58a1-4bda-a8d7-ec4615d476b2",
        "cursor": {
          "ref": "89d83cbe-8281-4db7-8a9f-67fddfd25bb7",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "492e9c85-a824-4bec-a6d3-4536cc6969bb"
        },
        "item": {
          "id": "9ca32623-58a1-4bda-a8d7-ec4615d476b2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2dee84a7-9ef6-4a59-950c-1a26532e231a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e63bc5-0772-402a-8346-f8729935eb4c",
        "cursor": {
          "ref": "1f7582d2-b3de-4abc-be5d-7d97ce3e0dc1",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "dab6bc68-2e2a-4d34-a357-e2598dcdb1f2"
        },
        "item": {
          "id": "76e63bc5-0772-402a-8346-f8729935eb4c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8ac88311-c2f3-46e2-88f2-6055ba1f1f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46d5657-7711-412c-8737-8874d111d22d",
        "cursor": {
          "ref": "feea5d71-ac0a-4887-a87b-f5e67898b059",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "597bd8ba-a1eb-4d61-b97f-54beb5d36336"
        },
        "item": {
          "id": "f46d5657-7711-412c-8737-8874d111d22d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "abd7508a-1b9c-4dbc-bf16-097a83f5fd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8331daf4-4f98-4742-90b3-d7e5d0d5136b",
        "cursor": {
          "ref": "0550e50f-8777-4efa-9601-b03566a1a307",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4b77268b-1fd8-4bb8-b0dd-5d75822a4215"
        },
        "item": {
          "id": "8331daf4-4f98-4742-90b3-d7e5d0d5136b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4b3cd682-e4f6-485e-b9a4-2e7fb8b8007e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18056557-f972-4238-976f-4570891a3e0c",
        "cursor": {
          "ref": "4029a3d5-0e2f-4f7b-9f03-cf4bd9d243ab",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a6f950cf-11b6-4d82-ba4d-f090965b77a9"
        },
        "item": {
          "id": "18056557-f972-4238-976f-4570891a3e0c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "db824323-3732-460f-8887-4795c545c593",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 859,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eca9a6-3aa7-4c3f-80b8-7c4ec44590b2",
        "cursor": {
          "ref": "4feb23d8-9c29-4ed3-8ae5-f7e79521ad05",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0724fc63-4e5b-44a3-8a3d-cfb194d10329"
        },
        "item": {
          "id": "26eca9a6-3aa7-4c3f-80b8-7c4ec44590b2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6ba751e0-fc6b-455c-8ef1-03234399b103",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 738,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "385b852f-60b6-421c-80a2-137ad0a79421",
        "cursor": {
          "ref": "60f37e39-9193-4d6f-b9fc-cbe334c09d71",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1a3ce756-924c-489d-821a-6353b5d25288"
        },
        "item": {
          "id": "385b852f-60b6-421c-80a2-137ad0a79421",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8f46b2db-f3d1-40f9-973e-4432bcb33dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c246776a-91ef-441a-876c-072ba27893e7",
        "cursor": {
          "ref": "51ed3136-891a-4a42-8ad1-68a90e756561",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6b3e15e6-26a4-4309-9e6e-b50b9d21fc2f"
        },
        "item": {
          "id": "c246776a-91ef-441a-876c-072ba27893e7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "382df662-2b50-43e5-808e-a26d877ab2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc25cd3-aac0-417a-8bf6-f22f9ae64fb0",
        "cursor": {
          "ref": "de576ba6-1398-40c1-b633-dda185e994b0",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ef78a930-70f1-4402-815f-bf0acdadf272"
        },
        "item": {
          "id": "3cc25cd3-aac0-417a-8bf6-f22f9ae64fb0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "340713f0-f33e-49f6-9264-5cabe20eb07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2f19da-ecd6-4bab-a3a3-31173cb3395a",
        "cursor": {
          "ref": "fe51db76-8f21-47c5-b367-93f97d487314",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a65e98b2-9406-4281-b7e1-6ad1ec7d604b"
        },
        "item": {
          "id": "1f2f19da-ecd6-4bab-a3a3-31173cb3395a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "555e542a-0331-4031-b2d2-0f8a5ac9160b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d55b9c-13a1-43f6-a216-22f68a435b6a",
        "cursor": {
          "ref": "98bac368-e97a-43b0-a10a-6c12da4ef20f",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c30c1583-6283-42ff-94c1-a139c3daa523"
        },
        "item": {
          "id": "f1d55b9c-13a1-43f6-a216-22f68a435b6a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c474986b-0294-4c07-b7e5-39914dad4dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7233256-d1ee-405a-92f0-f09380f44a05",
        "cursor": {
          "ref": "f2ca537a-ba73-4b13-98e3-738168b4c38b",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "39957bfa-f11e-434e-9a5e-b2ce1452b152"
        },
        "item": {
          "id": "b7233256-d1ee-405a-92f0-f09380f44a05",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "880622e4-c013-4a7b-94a8-257168868932",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 641,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad8b8eb-b2b7-4f08-91dc-aad7a22dc917",
        "cursor": {
          "ref": "4611b1cc-9967-4d6c-a839-7b9c03652669",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2beb36bd-9943-4101-9c2c-06e309df738c"
        },
        "item": {
          "id": "7ad8b8eb-b2b7-4f08-91dc-aad7a22dc917",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "42e734b6-cb7b-4a7c-b2fb-a6e08757ad4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0500790c-b6aa-4382-80fc-a265d10a1bcf",
        "cursor": {
          "ref": "af767667-65e6-4201-872f-e6768b352050",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e6a82e7e-d083-4bdc-a1fa-ebc7f8ea4883"
        },
        "item": {
          "id": "0500790c-b6aa-4382-80fc-a265d10a1bcf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "89b33c6a-aae9-4f07-bc41-a60b0624ddce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a86a3b-6e31-4514-bc6a-fb136d04817a",
        "cursor": {
          "ref": "7435228e-d1ad-473d-b741-66e73071134f",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2baeb247-fdba-49a1-b784-e541643c6000"
        },
        "item": {
          "id": "73a86a3b-6e31-4514-bc6a-fb136d04817a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2ebb2cd9-a01a-49c2-b7ee-6ad2bfbbc911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7ede43-f44e-4d49-8c13-5d9bdfc0d445",
        "cursor": {
          "ref": "ce53a637-96b5-4076-be9c-7fdd3851a73e",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "23af6d6e-7f28-4fe3-8bd5-e690a6ffb333"
        },
        "item": {
          "id": "8a7ede43-f44e-4d49-8c13-5d9bdfc0d445",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "446b0677-6e95-407b-8614-af427b8cec7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458fe0b7-e966-45f2-89c3-9c23c7cf5023",
        "cursor": {
          "ref": "385bc55d-ef88-4d7c-8643-98ca086a7ce9",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "64217d1d-46c6-4d7c-b5dd-333b28d1e0f6"
        },
        "item": {
          "id": "458fe0b7-e966-45f2-89c3-9c23c7cf5023",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9364e17c-e015-4497-85ab-91fca73322c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072a1a58-ff82-4639-8af1-ed2141ad55ab",
        "cursor": {
          "ref": "eb107389-cf4f-4f9c-b6fe-5ab5e084ac89",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "541eb970-cb09-4c14-a872-e58f1bd33346"
        },
        "item": {
          "id": "072a1a58-ff82-4639-8af1-ed2141ad55ab",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b5fe154a-49ca-4691-8012-017ac4d81bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fe4987-33be-4820-9ca3-20440e07a8ec",
        "cursor": {
          "ref": "dde58a8c-076f-459b-ac2f-06d1b5701aa7",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f2d429f4-f21b-42d4-89e7-413c71d28be6"
        },
        "item": {
          "id": "87fe4987-33be-4820-9ca3-20440e07a8ec",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c24c884d-d07b-4694-aa20-de5e668c02b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7ea172-0248-42b0-8e47-bc52e8b17d49",
        "cursor": {
          "ref": "88dfecc1-5306-4434-b3f6-4715d7415c1f",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f1fd2f2a-2280-4bed-80f6-8a53dc93458e"
        },
        "item": {
          "id": "4b7ea172-0248-42b0-8e47-bc52e8b17d49",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "01a72479-133c-4a7b-8dfb-78924c3d5a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53b4900-841a-42f9-ab3c-bde203f4094f",
        "cursor": {
          "ref": "0ece9dc9-18ff-4fd2-96e6-af1f78e88b61",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ffe91e32-5f55-43e3-a733-248a154f9c5b"
        },
        "item": {
          "id": "f53b4900-841a-42f9-ab3c-bde203f4094f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4f899a0c-f23b-414b-8893-e0af6a3a2c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabe89cc-06e0-4839-8677-37fe537e68cd",
        "cursor": {
          "ref": "82580223-5c8a-40d3-97c3-dc9a7af20798",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "072782a5-55cb-4356-aea8-7829d480fa14"
        },
        "item": {
          "id": "eabe89cc-06e0-4839-8677-37fe537e68cd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a2227678-9bb9-4bec-b95e-0b86841db701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563d2bc5-108c-4afc-992d-a6f93b6371f1",
        "cursor": {
          "ref": "82da7358-b6f8-4199-9fe5-14ef23b88be6",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "725b695c-a502-4c44-a2bd-9e35665641d7"
        },
        "item": {
          "id": "563d2bc5-108c-4afc-992d-a6f93b6371f1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b9e27421-d59f-4b60-bda6-0794ef95192e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a671f38b-25ce-4d47-8aff-7980968d391d",
        "cursor": {
          "ref": "ccd56141-b1d9-45b6-adef-f862a9014ffe",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dcd0d88a-37ae-42eb-b087-6c6b10e2fb26"
        },
        "item": {
          "id": "a671f38b-25ce-4d47-8aff-7980968d391d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ae706f2a-c56f-414d-989e-7754ae629e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892985fc-9698-453b-9447-53586ee6df6b",
        "cursor": {
          "ref": "a35b55da-dd74-4d8d-bb36-ff6f1c6fc6f5",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e225129b-06d7-434b-a14b-fc26500c3401"
        },
        "item": {
          "id": "892985fc-9698-453b-9447-53586ee6df6b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1dc68ae0-c738-486b-a280-14bc803bdb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6470f0d-b387-458f-82c0-b7efce751b24",
        "cursor": {
          "ref": "b0eb8f4a-a985-458e-bbfc-788d18d78b74",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3952a466-dff5-45f1-8e6d-1a7577febea5"
        },
        "item": {
          "id": "b6470f0d-b387-458f-82c0-b7efce751b24",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "845efd92-0c4b-4eb7-87e1-3dff68f920f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6a0db3-b69c-45ca-a1ac-3c185ae7fbcf",
        "cursor": {
          "ref": "a2128837-3f98-49ea-927f-d1197791606d",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d3a55b6d-305a-417a-b0ba-f8e4f5dcac7a"
        },
        "item": {
          "id": "fc6a0db3-b69c-45ca-a1ac-3c185ae7fbcf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9dc50029-98e0-4a7d-a76f-9053cdf90262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 997,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ee3955-708f-493e-8964-f3e2c75011fa",
        "cursor": {
          "ref": "eb4fc8c5-5b8c-4279-9b6b-de6297d32806",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9bc96745-9b33-4e94-a215-619906ff2ad7"
        },
        "item": {
          "id": "c9ee3955-708f-493e-8964-f3e2c75011fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e3a604b5-4e40-48be-92b2-7b1b99d4b55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1114,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e790049-b452-49e2-8f40-7320231e7b8d",
        "cursor": {
          "ref": "918312ee-df60-4f3b-a027-654f0f810917",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bd93cd0a-2cb3-4055-a597-f3d1e915ab30"
        },
        "item": {
          "id": "5e790049-b452-49e2-8f40-7320231e7b8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2307fad6-a837-4bc1-b278-7f4abf4b42b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1002,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760f99cd-e08a-4416-b7f5-5dd6095ae81c",
        "cursor": {
          "ref": "7842bb36-6aff-4fa7-86a9-3fe27875e671",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ec9de479-f654-453e-a995-b6eb640e10eb"
        },
        "item": {
          "id": "760f99cd-e08a-4416-b7f5-5dd6095ae81c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "09db8d57-61f0-4ce8-a322-e4630b161773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 988,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46dc616-358d-4e6d-ac00-101e73e06e15",
        "cursor": {
          "ref": "4aae8a81-d879-4755-a741-bba171265663",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9a327532-268a-49ed-a988-9e8e37d01ef7"
        },
        "item": {
          "id": "b46dc616-358d-4e6d-ac00-101e73e06e15",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b4e1849a-6eab-4135-b701-4c06e6774558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e75fb89-8fa7-4ddb-bdd4-61f41f82dfbb",
        "cursor": {
          "ref": "c6ee759a-eee6-4a94-83ca-7b9ad1ae2d43",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ca8add3e-cf5a-4e57-963f-dc3c6a317e9b"
        },
        "item": {
          "id": "4e75fb89-8fa7-4ddb-bdd4-61f41f82dfbb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0ba71fe3-acff-49ce-ba35-e674485668dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3b6fd9-a32a-4510-8b19-a0b2155157fa",
        "cursor": {
          "ref": "ec1fe973-ab60-40c4-9d3d-e70c5a235cae",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "07bff692-283d-4294-a678-af61c5e1ad6b"
        },
        "item": {
          "id": "ed3b6fd9-a32a-4510-8b19-a0b2155157fa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5ef25887-0cba-41a3-887b-a60a9814d20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1068,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a076b8-611c-4f6a-91c0-e22c47063fa0",
        "cursor": {
          "ref": "62ce40ea-8572-496a-9cb7-97ae14e22de5",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0130973b-4aa5-462b-9dbe-df9a5ba6e18c"
        },
        "item": {
          "id": "81a076b8-611c-4f6a-91c0-e22c47063fa0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d175db0c-4ffc-40be-8481-fd6fe17822d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1006,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92f3247-bc01-4ec4-8e5e-605805f533a8",
        "cursor": {
          "ref": "7de2b702-59e9-41a8-b7a4-3a237ea9cb73",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "eea2f9bf-0001-4027-8cb9-21134fccc438"
        },
        "item": {
          "id": "b92f3247-bc01-4ec4-8e5e-605805f533a8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "906f19fc-78cb-4221-9378-fd50268ccbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1120,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9b52f8-e9a9-4ff1-8fb9-db4605f92398",
        "cursor": {
          "ref": "7eef0525-b4b6-4719-857f-b224d6aae2c2",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9864ac08-c4e3-44b2-8634-623a810b6406"
        },
        "item": {
          "id": "9a9b52f8-e9a9-4ff1-8fb9-db4605f92398",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "00fe9b76-48f1-4a79-bdfd-8b698b5643a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844e3f5c-f918-4708-ac74-93a3de870555",
        "cursor": {
          "ref": "7624b9fc-89fb-4e5b-8733-bdcd114d6987",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "12093348-7021-4f13-bc83-7e61edf3adfe"
        },
        "item": {
          "id": "844e3f5c-f918-4708-ac74-93a3de870555",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0dc01a5d-19ae-45dc-b777-a282f7c51da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c6cfbf-a6b4-4d94-b3a9-090bd4ddea6c",
        "cursor": {
          "ref": "070147a7-7750-4082-b64c-f25f0d1a243e",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c76b6488-3d49-45e0-8d9b-1bd96e9b67c8"
        },
        "item": {
          "id": "02c6cfbf-a6b4-4d94-b3a9-090bd4ddea6c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "733ec5d5-b256-46dd-871a-c46e1dff29b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13146b44-8c71-4eaf-9b91-7ea5c5327212",
        "cursor": {
          "ref": "a06345d5-3a7c-42ed-bc70-9489ccd1d650",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9969556f-cf33-4de9-b68d-31d7f171f73f"
        },
        "item": {
          "id": "13146b44-8c71-4eaf-9b91-7ea5c5327212",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ae39a233-9682-4282-b992-bf13f14d2c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dab326e-5d5a-4878-94ab-a2eadc0f9275",
        "cursor": {
          "ref": "3baffb81-7136-4cb0-baf0-b1007ee85f1c",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "52bef4c0-939a-496c-9d66-e1ea2acf426f"
        },
        "item": {
          "id": "4dab326e-5d5a-4878-94ab-a2eadc0f9275",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bfc638d2-196f-4e64-bd14-e3c833a67958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67348e13-ef74-4a0b-af76-3f93f6ded032",
        "cursor": {
          "ref": "1a1b55f9-d276-4161-99f5-80c16fc4143b",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ad9d7e62-81db-42d4-a475-6e0e4de95f5f"
        },
        "item": {
          "id": "67348e13-ef74-4a0b-af76-3f93f6ded032",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e2ec6eee-7175-43c4-8c2f-9485f3a2d722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1046,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb43f2cf-acd1-41d6-8c6b-8974ab503502",
        "cursor": {
          "ref": "56aa359f-98ee-484e-9173-720e3bf0f7b6",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cef8cb69-80d0-4145-a038-6391379995c1"
        },
        "item": {
          "id": "cb43f2cf-acd1-41d6-8c6b-8974ab503502",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ecca78c8-a75a-48d3-bb39-ded9dfeeaef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1320,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b90cb24-6caa-4962-85d2-4ebb97313e81",
        "cursor": {
          "ref": "ea37b73d-f149-4596-9c4a-b53e325d7a87",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f2e16db6-d936-477a-983a-4e67eaf86bd4"
        },
        "item": {
          "id": "9b90cb24-6caa-4962-85d2-4ebb97313e81",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "734bcefb-044d-4171-927d-34e59a743702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1427,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7827908-4a96-4808-a2f4-2bea8a1ad241",
        "cursor": {
          "ref": "ca4d38bc-2b7d-4020-91a5-6c9bfc98edfb",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a4da925a-e03d-4ae5-834a-4df1301f9a36"
        },
        "item": {
          "id": "a7827908-4a96-4808-a2f4-2bea8a1ad241",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "94aa7cb9-d6fc-4518-bd42-1b13494d98dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1660,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c81e3c-51d3-4820-9c6d-a6076b27dd33",
        "cursor": {
          "ref": "82ed991a-9327-42a3-b079-7d4324d5b1aa",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f2b362bb-7f16-4bdf-81c8-18b4b1e152a2"
        },
        "item": {
          "id": "38c81e3c-51d3-4820-9c6d-a6076b27dd33",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "57874348-bf75-45a0-8f4c-04fae639915e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1718,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563d0374-2a97-4ffe-9ced-f0b7ae313964",
        "cursor": {
          "ref": "cb4b6f0b-77a5-4b18-a5aa-f7d962ff67ac",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "744225c8-417c-4afb-a250-6d95261b58e0"
        },
        "item": {
          "id": "563d0374-2a97-4ffe-9ced-f0b7ae313964",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "88088105-deb7-476c-86bd-1554cd484ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1192,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d240a44-bdc0-47e2-b2c4-ccc764c157db",
        "cursor": {
          "ref": "677b4da4-c553-46d6-87b0-3f7d547fcd4a",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "51e4bae7-8131-48d3-94a1-c2d08542d01a"
        },
        "item": {
          "id": "0d240a44-bdc0-47e2-b2c4-ccc764c157db",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "97e0fc9f-c3bc-412a-8d5a-fd59752d79a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b204dc27-8287-4c78-9fa2-3d7bc9000f0d",
        "cursor": {
          "ref": "e0ab5c9e-bde7-4bca-800c-816a05bc38af",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "55905bc2-6770-4d9e-904a-89221aef37a7"
        },
        "item": {
          "id": "b204dc27-8287-4c78-9fa2-3d7bc9000f0d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a66e5f6c-7873-4c26-aae6-14f4dda8b1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c153da1-b281-4b92-8482-26ac7224096e",
        "cursor": {
          "ref": "63af64c7-14f3-41b9-8440-714881535f77",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "37b5e705-2ea2-450e-9202-0436499a9315"
        },
        "item": {
          "id": "6c153da1-b281-4b92-8482-26ac7224096e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ca7dd2ae-d8bb-4648-9a33-182d5775be78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e815f965-ef0f-410b-9ef8-12a6da24a27d",
        "cursor": {
          "ref": "a8689099-af30-4ce3-bc03-ffb0666a1cfe",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c9d70fed-94b4-4932-8231-deff7dc0081b"
        },
        "item": {
          "id": "e815f965-ef0f-410b-9ef8-12a6da24a27d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c33bd7f5-11ce-4a29-b951-af9bd1681f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deff80c8-7cbd-4ecb-856d-c897d1e811e1",
        "cursor": {
          "ref": "b7dc3bdd-4705-43c6-9ec7-2a8e2fd67a14",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "eb87b822-0a71-49db-bc00-e84fe1e7395e"
        },
        "item": {
          "id": "deff80c8-7cbd-4ecb-856d-c897d1e811e1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1b24933e-22e0-4785-9017-e419e653cfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd437f01-aa0d-4a34-9558-06cc7e1f5876",
        "cursor": {
          "ref": "df42a862-71a8-4a63-9f9e-853c87b1a233",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "981aa87f-4d96-4176-9774-02461e84aa52"
        },
        "item": {
          "id": "cd437f01-aa0d-4a34-9558-06cc7e1f5876",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e3dd5d6f-60ee-4014-b8e8-634bb7f04436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef917c2-72f0-4e1e-a398-aa79edba2f3c",
        "cursor": {
          "ref": "5c4f84c2-6a5b-4b4e-8856-966c65bd9b22",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a2937e42-fa6f-40b3-ad8d-5133ed32520a"
        },
        "item": {
          "id": "6ef917c2-72f0-4e1e-a398-aa79edba2f3c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a7abf354-4255-42fc-bd35-d2f11ceb23ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a994be-372b-4da1-b4a3-44aa7727a6f1",
        "cursor": {
          "ref": "2c01a8c2-28db-45b1-9a6d-712a105a12de",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "97a4220a-66df-421a-88eb-66e5ae2fde74"
        },
        "item": {
          "id": "d3a994be-372b-4da1-b4a3-44aa7727a6f1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "628db99f-4b40-4ed3-8ae4-688a6c9bd7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fec2477-b407-40bf-a2f2-a97ee9234112",
        "cursor": {
          "ref": "7070d348-c94b-455c-b0c5-f9ca07752304",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0219598e-845c-452c-8fbc-a974d52a5400"
        },
        "item": {
          "id": "4fec2477-b407-40bf-a2f2-a97ee9234112",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d29d214d-7ef8-4884-851b-fe500f3ee5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fe6dea-d815-45d6-9696-64dd80d13737",
        "cursor": {
          "ref": "ce8b0e9c-567b-4aca-86e3-05245b4ac7f8",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9a87e228-da85-4506-a581-29cfd0e8c7d1"
        },
        "item": {
          "id": "c7fe6dea-d815-45d6-9696-64dd80d13737",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "622ba9b5-3442-49d7-8e9e-8b9991565080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d17f107-de99-4988-a134-5a34cc92abcf",
        "cursor": {
          "ref": "05c786df-f0cd-481b-9469-2411fb20c11e",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "18819b6b-f127-4881-a42b-9560b43500b1"
        },
        "item": {
          "id": "8d17f107-de99-4988-a134-5a34cc92abcf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9ac3108d-f51f-4c90-a4ce-264480fdbd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc015570-9d9f-4ac9-88f8-87f3e5ec49f9",
        "cursor": {
          "ref": "51faa2ae-f4c3-4533-a66c-a7f5be37f408",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d325ee65-ec41-4c80-b51a-0a7b04b68fcb"
        },
        "item": {
          "id": "bc015570-9d9f-4ac9-88f8-87f3e5ec49f9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "43d99080-104d-4bec-95cd-aba812935f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 909,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147c476e-3038-4c35-a92e-f488bd46beaa",
        "cursor": {
          "ref": "cb14e003-4dbc-46a7-ad2a-8fd8bcd17f56",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "11f27aa8-1d7f-407b-8f53-3fabd5c0883a"
        },
        "item": {
          "id": "147c476e-3038-4c35-a92e-f488bd46beaa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "df2e72fe-0353-4f5a-82f3-68022b662fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1130,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae5eb5f-d89c-4c1d-be96-dfafc7f661d4",
        "cursor": {
          "ref": "f628ef52-e57c-4a7a-a739-86109654cce4",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f5532772-48e9-4692-8fa8-1a6e466eb79d"
        },
        "item": {
          "id": "8ae5eb5f-d89c-4c1d-be96-dfafc7f661d4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9f78c04b-3b65-40a4-af79-e5552a106874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1107,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c3cd89-42a4-4693-9bc8-23f9e003036c",
        "cursor": {
          "ref": "c94c2fb1-9338-4711-9834-573a3d016859",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "26cf3fd7-1ecd-4449-9af3-cd4af544a732"
        },
        "item": {
          "id": "f0c3cd89-42a4-4693-9bc8-23f9e003036c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ee54d077-8d3c-40cc-9b28-58d6a293482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff239731-3d82-4321-a6af-99482879d80d",
        "cursor": {
          "ref": "32d9e052-d522-4ca4-943a-c5e24b41f988",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f8a7bb8f-5cfd-4142-8ab4-462d79fe8619"
        },
        "item": {
          "id": "ff239731-3d82-4321-a6af-99482879d80d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e0432943-3152-4d2c-8c52-c5ffe3a8cbb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cba5bf-7dbb-4216-8ede-c708833a1433",
        "cursor": {
          "ref": "45a2d7d0-c54b-4870-acb2-6430202021dd",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2d574f40-37f1-42fb-8cf0-159ddb566de7"
        },
        "item": {
          "id": "48cba5bf-7dbb-4216-8ede-c708833a1433",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "437b361b-ea78-4f2b-bb40-f8191a7f3fac",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 614,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a99bae-897c-4b78-9939-17cbf706f4ce",
        "cursor": {
          "ref": "9ef29c09-f7dd-43fa-ae31-e54235398e34",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6454212e-2c04-4c98-bb14-f85a17757099"
        },
        "item": {
          "id": "f4a99bae-897c-4b78-9939-17cbf706f4ce",
          "name": "credentials_issue"
        },
        "response": {
          "id": "31dd2ca6-64b7-4e2f-99bf-2f520f635d40",
          "status": "Created",
          "code": 201,
          "responseTime": 4740,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "0e57b951-f84a-4750-9aa4-a2170bb82a98",
        "cursor": {
          "ref": "5e6c747c-90b1-4176-9bae-15ae27652420",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4bbdf912-d9ff-42f8-bd2d-73a9adfd5cd1"
        },
        "item": {
          "id": "0e57b951-f84a-4750-9aa4-a2170bb82a98",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "268657bf-d568-407b-9c78-d7eb470ab7c9",
          "status": "Created",
          "code": 201,
          "responseTime": 4327,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "00f42ecb-8ac6-4252-8261-cff98a4da71e",
        "cursor": {
          "ref": "6209d489-f84f-4643-bfe0-38a2498064b6",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b5a8201d-2905-4efb-a374-403e74dae61e"
        },
        "item": {
          "id": "00f42ecb-8ac6-4252-8261-cff98a4da71e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "49b289f4-aedd-44de-8370-1da9757a47fa",
          "status": "Created",
          "code": 201,
          "responseTime": 4182,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "3687fab5-9923-4651-99fc-f632e4abc202",
        "cursor": {
          "ref": "d9f837bd-6f41-43cc-8499-74b7bd6ec8d9",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "842a3d2c-98a6-43a4-8b0a-5f6f54bddceb"
        },
        "item": {
          "id": "3687fab5-9923-4651-99fc-f632e4abc202",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ad73d808-4c66-4cd4-a24b-e1d7a7e69fa5",
          "status": "Created",
          "code": 201,
          "responseTime": 4251,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "8fc53abf-3a72-449b-9ff0-c32d21579454",
        "cursor": {
          "ref": "f2b4a4f2-2ec2-4c15-82d8-84d18bf73d00",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4eadcc76-32de-439a-868b-b70547df75ee"
        },
        "item": {
          "id": "8fc53abf-3a72-449b-9ff0-c32d21579454",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "850d129a-c438-43b6-9214-6230a8e6b495",
          "status": "Created",
          "code": 201,
          "responseTime": 5230,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "b9cd160b-41d1-4758-a616-874a2aeeabde",
        "cursor": {
          "ref": "a669143c-b95c-4690-a7b4-72086caecbb0",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5e9ffcb0-2e1d-4c63-9edc-231ed38b5c3f"
        },
        "item": {
          "id": "b9cd160b-41d1-4758-a616-874a2aeeabde",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1c1d2874-1ea6-44ba-a2c8-dd2ff1117a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cd160b-41d1-4758-a616-874a2aeeabde",
        "cursor": {
          "ref": "a669143c-b95c-4690-a7b4-72086caecbb0",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5e9ffcb0-2e1d-4c63-9edc-231ed38b5c3f"
        },
        "item": {
          "id": "b9cd160b-41d1-4758-a616-874a2aeeabde",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1c1d2874-1ea6-44ba-a2c8-dd2ff1117a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b7c2ce-9767-4687-99dd-e5e9f449b745",
        "cursor": {
          "ref": "cc74b29a-26b3-43c9-a9b4-a5f9dbab9095",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "76eea8e4-da4a-4cd4-9976-6e8f2e442b6e"
        },
        "item": {
          "id": "d5b7c2ce-9767-4687-99dd-e5e9f449b745",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6d3788f4-c680-492e-9718-207bd8f8d633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e271645-1f99-4493-8862-52e78382f3ed",
        "cursor": {
          "ref": "f386667e-167a-4454-9643-792e5402b029",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e8b9f0a9-7639-43a6-9c48-927da07ce3ef"
        },
        "item": {
          "id": "6e271645-1f99-4493-8862-52e78382f3ed",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a5abeb9a-a3d1-409c-acad-8a86f2754d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e3c846-445c-4f4a-a38b-05aa67a8d0d4",
        "cursor": {
          "ref": "4e90ef14-54af-4bbf-b2a5-a50965c32355",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b72812ed-f937-4f46-b56c-0e642d1b219b"
        },
        "item": {
          "id": "f7e3c846-445c-4f4a-a38b-05aa67a8d0d4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f32be574-5260-400a-9608-a13d97ad9a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07a6b35-fd52-451f-bdf4-ef9eac11eb3e",
        "cursor": {
          "ref": "7660c7e2-aa3d-4e98-8e0f-d76af731c8b5",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bbfb64d2-7068-42ca-9d27-9658356742d1"
        },
        "item": {
          "id": "d07a6b35-fd52-451f-bdf4-ef9eac11eb3e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "86f86af9-9b9e-4631-ac55-4fc298e3769f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73390b7b-3f58-4ed3-b4de-09d7cb15f55c",
        "cursor": {
          "ref": "37b6291b-1517-4a99-aac4-b2c2ffc2f4a1",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c98d2477-b7ea-4f52-bf33-2ff88b6172d4"
        },
        "item": {
          "id": "73390b7b-3f58-4ed3-b4de-09d7cb15f55c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b78f95b5-9374-4e03-b007-e731a0d2bfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de9d06e-5687-40a0-bc3a-f791db320f4b",
        "cursor": {
          "ref": "c34fcf2a-b6ad-4c27-8aea-1abb1a419275",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d598f8fc-1b59-40b0-834c-387dbc0c20fb"
        },
        "item": {
          "id": "7de9d06e-5687-40a0-bc3a-f791db320f4b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "87e9c005-b31d-4c89-bda7-ca5e5f9a2ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f24030-fbd4-4005-b7de-37ca3648e27f",
        "cursor": {
          "ref": "7adf17c8-87a9-47cd-aeae-901e75e36b9e",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "03331c13-f719-4770-9f43-c1958d659090"
        },
        "item": {
          "id": "94f24030-fbd4-4005-b7de-37ca3648e27f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f8f02b00-c699-4449-8654-d644c7e15164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a476022d-568d-4861-9030-58761bfc723a",
        "cursor": {
          "ref": "415c69ef-55c7-4663-99eb-f02d2a324bbc",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "974c8b12-faa1-4516-91e7-de24643ea1d9"
        },
        "item": {
          "id": "a476022d-568d-4861-9030-58761bfc723a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "081e7cbb-0027-4f09-8b3b-9c91b9180369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175b5cc3-272c-4c22-989e-e5e6c62582e9",
        "cursor": {
          "ref": "1173279d-d01e-47b3-a513-dd03e5c52057",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9f741f9e-cf65-4027-ba47-a0123a1189e7"
        },
        "item": {
          "id": "175b5cc3-272c-4c22-989e-e5e6c62582e9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6b879788-aeba-4c70-923b-3503afaf85ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7959256-e2e3-4658-b9d9-7e9c22158e55",
        "cursor": {
          "ref": "c9d7b6cb-72f3-4c71-a72e-9d2af2acfc8e",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9087df21-3ee8-4002-b8ec-c3ae032e64e7"
        },
        "item": {
          "id": "c7959256-e2e3-4658-b9d9-7e9c22158e55",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1071df2b-17e3-4a69-9f40-15a16166a3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa26f71-1403-4788-afb4-04cf03625001",
        "cursor": {
          "ref": "5f5843ee-281f-4a2d-8dbe-f01efa600c01",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "02e04ad8-3e30-4480-88e1-5cef10ea9d7d"
        },
        "item": {
          "id": "caa26f71-1403-4788-afb4-04cf03625001",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d61b4db2-3f72-40e5-9321-3cdab0734868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184289ae-17d4-4224-89f9-5474a6d35c91",
        "cursor": {
          "ref": "85c639a4-9312-4295-b0cd-63eeb7894b7d",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e0e1e86c-437b-438a-9800-4606a43bf305"
        },
        "item": {
          "id": "184289ae-17d4-4224-89f9-5474a6d35c91",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1fde4200-2106-46fa-bff2-a381bc637e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd438e77-3990-47e0-8acc-e7bea674db05",
        "cursor": {
          "ref": "888a7cb1-fefd-4614-923a-b027237ba6d6",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "18322bd7-f72f-48d9-bbd0-acd69104ce68"
        },
        "item": {
          "id": "bd438e77-3990-47e0-8acc-e7bea674db05",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "789db4e7-22c0-4e8e-ac0a-7977912d291c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b30e927-f33c-4ea1-886b-c2aca220398c",
        "cursor": {
          "ref": "9e10e650-f4a8-4b03-bc76-7906d5d75617",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a35e035f-0130-43f3-bf91-9cb01c2a4a4c"
        },
        "item": {
          "id": "9b30e927-f33c-4ea1-886b-c2aca220398c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "318e371d-ff0d-414b-9056-509adbb3e182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1150,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b904cdd0-964c-4647-819a-56a878418285",
        "cursor": {
          "ref": "ac96f9b6-7915-47d7-a3fe-676766341a17",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "04382ed1-6b16-46ac-8dbc-8a8a128a4d4a"
        },
        "item": {
          "id": "b904cdd0-964c-4647-819a-56a878418285",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "088c9498-9c45-46e1-8fc7-f4d9ba0ce00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19753cc1-1fde-4c74-a530-f1bcaf51ab05",
        "cursor": {
          "ref": "3a6ce666-ebea-49e4-a0e7-5fac7b631e5e",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7a116279-2e86-4cd9-b47e-443bed69707d"
        },
        "item": {
          "id": "19753cc1-1fde-4c74-a530-f1bcaf51ab05",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fd88012a-30c1-4431-9912-96eb64211aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1097,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d332b38f-04b8-4204-8a0d-c51a23368fb7",
        "cursor": {
          "ref": "8ae02bc0-653c-455e-91ff-1256e25ce302",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1ecac5e7-ffb3-47bb-b125-2bdf74a0e1f5"
        },
        "item": {
          "id": "d332b38f-04b8-4204-8a0d-c51a23368fb7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "afd29b64-0876-4d50-9ed1-f2ea148d0e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1017,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b71a49a-c1be-4e79-b9b6-329239ee57cb",
        "cursor": {
          "ref": "bf508081-417c-429c-96a0-c833f6a139ee",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f34584d1-b805-4d82-9c45-cd35ffe2407f"
        },
        "item": {
          "id": "2b71a49a-c1be-4e79-b9b6-329239ee57cb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b090f8b8-a4d6-4037-b9b1-1e2de9c655ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1037,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e55199-1c5b-49aa-8e3c-5ff0255cda2e",
        "cursor": {
          "ref": "dd30bf58-7352-403d-8296-3c24ace60029",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c68b1243-ff8f-42fd-857f-f808827d22d3"
        },
        "item": {
          "id": "55e55199-1c5b-49aa-8e3c-5ff0255cda2e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5aada631-1247-4429-bae5-0c3e4f6b0da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebec01c-15b7-4765-9b31-41ae13fa2383",
        "cursor": {
          "ref": "13c9960a-9761-4e4b-9381-28a34496b759",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6158088e-cce0-4fba-9bf9-4f907a25d5e3"
        },
        "item": {
          "id": "1ebec01c-15b7-4765-9b31-41ae13fa2383",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "adb04efb-78fd-430c-b9a7-7a353c4bceed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5095075c-dfe3-4916-bdf0-cc935fdf0a63",
        "cursor": {
          "ref": "7871a126-1dea-4d72-95bd-4acdf588d2b3",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b51cd89c-7eb8-41b4-8ea0-4ca6dbd7d8eb"
        },
        "item": {
          "id": "5095075c-dfe3-4916-bdf0-cc935fdf0a63",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "56ce2242-da31-45c8-95f9-d44169de04ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7958d335-20b4-4021-aaf0-082adb126247",
        "cursor": {
          "ref": "216f05df-69a2-4f37-a204-6935584494c2",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4c425832-24f7-40e3-a2c0-9233c02972e4"
        },
        "item": {
          "id": "7958d335-20b4-4021-aaf0-082adb126247",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9b697cd7-97fd-434e-92f9-0702d4db1a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28225f37-48cc-445f-9151-90a7e1ec9c32",
        "cursor": {
          "ref": "1e3570f7-f30d-4393-97c4-7dca2e61d5f2",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "61803cb1-3bed-47f6-9102-fcedbd17bd66"
        },
        "item": {
          "id": "28225f37-48cc-445f-9151-90a7e1ec9c32",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5a4d0858-3430-4aab-bbec-ff0aeb290b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6d97f3-4821-426f-8a5f-030019f1f10b",
        "cursor": {
          "ref": "27b8bd0d-6d70-43f6-bf3f-c7beb7adad0b",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "53ba3a77-f04b-480c-9007-d2ea54d23e21"
        },
        "item": {
          "id": "8d6d97f3-4821-426f-8a5f-030019f1f10b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6c1b8f7e-eeb7-4e75-aa36-30da3572c6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c0875a-e551-4467-aed2-13ffd6be70ec",
        "cursor": {
          "ref": "36f46b12-96bd-4c77-abea-c8cef0d17379",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "87ba6f7c-225e-4e29-a6f1-b8569323c7f6"
        },
        "item": {
          "id": "a3c0875a-e551-4467-aed2-13ffd6be70ec",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "91577457-af0c-42d2-9dec-91b322812cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ca9a2b-2de3-40b8-a57f-3989a98fb711",
        "cursor": {
          "ref": "1bfae629-a993-4eec-a5e2-d53a8456cdd2",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d62247e3-8727-474c-8f6c-f4de90d6fc33"
        },
        "item": {
          "id": "69ca9a2b-2de3-40b8-a57f-3989a98fb711",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "714bca0c-cfc0-4153-9ea3-a572cf2dc123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1b5dde-e62a-44e6-85ae-faf6ddfeb358",
        "cursor": {
          "ref": "8f2b6e62-e46d-461b-92ea-a99fc5700bb4",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6fa600ff-294d-4cb8-9731-be0e009276c6"
        },
        "item": {
          "id": "ae1b5dde-e62a-44e6-85ae-faf6ddfeb358",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9058ab40-606c-4963-be7a-eb4574f0aa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1344ef-b69d-401f-9872-431fa4b6ee96",
        "cursor": {
          "ref": "26d0833a-c8a3-4aa5-80dc-5d95b00e720a",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "98c2b137-189f-4d0f-922e-f1932e60358f"
        },
        "item": {
          "id": "1c1344ef-b69d-401f-9872-431fa4b6ee96",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "269adcb9-b49e-48fb-bae8-0a8624c7995e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5b23cc-10f3-4380-94ba-09124e126d36",
        "cursor": {
          "ref": "bbee0cea-f955-4a98-9a5a-3595e7d142a1",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "27eea669-797b-4ebf-b9bb-8fe4265c1bd3"
        },
        "item": {
          "id": "9e5b23cc-10f3-4380-94ba-09124e126d36",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "accfd829-7c7c-41d3-badc-2d07127109b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167f9f73-c04a-4ece-ba9d-4a338bd9b44a",
        "cursor": {
          "ref": "80cd2757-5949-4d93-b118-73b53150ff8a",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4ce62117-bd9f-4029-b3fb-ba92895881af"
        },
        "item": {
          "id": "167f9f73-c04a-4ece-ba9d-4a338bd9b44a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a893218a-20f0-4396-8196-e511ce395ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f54e26-3e60-4094-a7ab-d01bf2060bad",
        "cursor": {
          "ref": "3124f24f-6b29-4744-a446-d20c2b8000a1",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7777a0c7-4ece-44d0-96aa-82beec9b7a6c"
        },
        "item": {
          "id": "04f54e26-3e60-4094-a7ab-d01bf2060bad",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "782f5062-d9c4-416e-93d7-702aaa485edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f13840-c879-4ba3-a7d5-308fd56d0cfd",
        "cursor": {
          "ref": "d027fc2c-15f7-40ee-b199-22bb433c0e83",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "78aa6ee4-da15-4d2e-a898-c18fff0a03b0"
        },
        "item": {
          "id": "a9f13840-c879-4ba3-a7d5-308fd56d0cfd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2dca26b8-6d8e-43bd-b88c-1e373c8fdc7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d435ea4f-ef8c-4c0d-af64-91c48192e4a6",
        "cursor": {
          "ref": "8bffb564-31e8-456e-9bc2-d9dc7ee742c2",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "03cb0f76-a4b0-42bf-bda1-9595b2b82a71"
        },
        "item": {
          "id": "d435ea4f-ef8c-4c0d-af64-91c48192e4a6",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "f74a2202-0525-419d-91ac-d8105a8d6446",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 577,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d88ed45-3062-437f-b3b3-e40d213077a7",
        "cursor": {
          "ref": "51f19a96-34d9-43d0-a0c4-8cec7b901c89",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d754a12a-2dce-4df6-9973-03dbf770981a"
        },
        "item": {
          "id": "4d88ed45-3062-437f-b3b3-e40d213077a7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0bc69fe1-98c3-4869-8f83-67539dd68bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d88ed45-3062-437f-b3b3-e40d213077a7",
        "cursor": {
          "ref": "51f19a96-34d9-43d0-a0c4-8cec7b901c89",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d754a12a-2dce-4df6-9973-03dbf770981a"
        },
        "item": {
          "id": "4d88ed45-3062-437f-b3b3-e40d213077a7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0bc69fe1-98c3-4869-8f83-67539dd68bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ed91e3-6903-4caf-9b3b-f8c377aa9067",
        "cursor": {
          "ref": "9e3f8446-5a2c-43cf-a2f0-fe5c5915cc51",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "82cbe563-e607-442f-8cf0-f6eda1444eca"
        },
        "item": {
          "id": "88ed91e3-6903-4caf-9b3b-f8c377aa9067",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4f9f18af-2225-4fee-a184-1eee3466fb75",
          "status": "OK",
          "code": 200,
          "responseTime": 388,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "41bacc76-0a75-442c-8b9d-0a406fc97d27",
        "cursor": {
          "ref": "4ccfd950-198a-4364-ae04-cbd5dbdca5d3",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dd705c15-943e-42c6-8ec6-8a9f5195fada"
        },
        "item": {
          "id": "41bacc76-0a75-442c-8b9d-0a406fc97d27",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "79bfa62a-a227-4106-9ba6-7f2d122bfad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a15fb3b-a8e4-42da-9407-e0f5598d248e",
        "cursor": {
          "ref": "f3877b51-b118-4859-af38-ae305537805e",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "30afa930-bde6-4992-9386-1f75439b9a55"
        },
        "item": {
          "id": "2a15fb3b-a8e4-42da-9407-e0f5598d248e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "92f540a7-3ec7-4032-afe1-0514fe2a4e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da32ce35-3a52-4450-8628-f5d42f672e35",
        "cursor": {
          "ref": "7ff04136-5822-43b0-a893-814ee14ccb1e",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8fc6a828-a6f7-4834-8215-6d17350e4405"
        },
        "item": {
          "id": "da32ce35-3a52-4450-8628-f5d42f672e35",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e861ad66-c37a-4891-9cf2-cfc927d5865c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f90595-8c3a-4c80-b1f8-29c0b882a1d1",
        "cursor": {
          "ref": "c5e17190-e445-4024-a2ca-5380b346e776",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b4220fd8-5ead-4bc7-aa74-ab75d4497dce"
        },
        "item": {
          "id": "84f90595-8c3a-4c80-b1f8-29c0b882a1d1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "29714ccd-e0e1-4585-b016-97dd5b20a2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d9600a-7285-4d53-b6e6-4960274f5678",
        "cursor": {
          "ref": "cfcd4450-6097-4ea7-abd1-fcecf4ce29e8",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3bb0fc32-d89b-43ae-aea7-62440a276937"
        },
        "item": {
          "id": "00d9600a-7285-4d53-b6e6-4960274f5678",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "98371d18-cee1-4f2e-89aa-65b70809c30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c96485d-64ad-4a91-b2df-8ea72d2ff32d",
        "cursor": {
          "ref": "1dfc16bd-57fe-4ace-b903-b17c348fbaa8",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7f040512-9dc7-4e61-8a61-85222a36bf7e"
        },
        "item": {
          "id": "7c96485d-64ad-4a91-b2df-8ea72d2ff32d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7b27f91c-5576-49d0-bb25-fc444aa1eb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ea256a-7571-45ab-99c7-defc24309a88",
        "cursor": {
          "ref": "1e79257b-70ee-4de8-9fda-8bb075e789c3",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a57b4e3b-fcbe-421b-bfbb-74396c947f35"
        },
        "item": {
          "id": "39ea256a-7571-45ab-99c7-defc24309a88",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8bf3840a-703f-4ebd-a26c-542f4ebdcca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c508e0a-2936-4a53-ae27-36ba59549547",
        "cursor": {
          "ref": "e99e6e7d-fcbb-412f-a0d5-1ad60afb6e47",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dc9f5eae-9ca5-49bc-a086-3639cac28b62"
        },
        "item": {
          "id": "0c508e0a-2936-4a53-ae27-36ba59549547",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b58c847b-2fb6-4aa8-a720-f9eebd0a2820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d5f0de-1cbf-4085-aa96-e85bf909116c",
        "cursor": {
          "ref": "46dad237-b533-471e-a623-2b387d78afca",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2ea301da-c2f9-4f47-a57f-a7e542f6dd2f"
        },
        "item": {
          "id": "93d5f0de-1cbf-4085-aa96-e85bf909116c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "abb0c7da-7fa7-4034-ac26-1d56c14af6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183210c6-b91e-4020-89c2-e62c33f400ab",
        "cursor": {
          "ref": "6d38b6b7-b7cc-4fb2-b6c3-0aebe86cd9fc",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a5378d4f-7519-4499-997b-5cd72365ecf4"
        },
        "item": {
          "id": "183210c6-b91e-4020-89c2-e62c33f400ab",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2a5e3f67-5f95-4dd7-8a6b-dc6084f865a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e74d7d8-e2a1-4dea-8ae9-3d682983679c",
        "cursor": {
          "ref": "d8e0399a-fdd0-44bd-a5f1-a19e597ed231",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bc686d34-e76b-469c-88f6-fa0c3786a888"
        },
        "item": {
          "id": "8e74d7d8-e2a1-4dea-8ae9-3d682983679c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8b43d86c-7871-46df-ae3c-08376e6a0172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55aacc0-ff5f-439b-aead-eb6cd4d5ad07",
        "cursor": {
          "ref": "e0cf834c-28d5-4be2-95fb-310a90033278",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1f2519c3-fb6f-40ce-acb4-78aef41c0bf6"
        },
        "item": {
          "id": "c55aacc0-ff5f-439b-aead-eb6cd4d5ad07",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3e11f9c2-8e4f-4b37-842c-a37aa3c2ecf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0883a38-5814-4a4f-b2ac-0159590534b6",
        "cursor": {
          "ref": "bc2a57b7-e327-47b6-9c80-4ded97f6d41f",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b2009f84-9721-4df5-a58b-1af6174f3b50"
        },
        "item": {
          "id": "a0883a38-5814-4a4f-b2ac-0159590534b6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "16583681-06ef-4dab-b8ac-c4913529f2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003fc44a-3d7f-4626-843a-fc8bee5e9456",
        "cursor": {
          "ref": "c793b98b-4b0f-4347-9921-777f1bd0a51c",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4f4c47dd-b298-41b2-bc41-ebc41482a7ed"
        },
        "item": {
          "id": "003fc44a-3d7f-4626-843a-fc8bee5e9456",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3af43768-1b54-486e-ad32-85418d89b26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb0ed10-4f90-4fb3-844d-5b0ec746bb4d",
        "cursor": {
          "ref": "a1291126-9be2-4a8e-b34c-40773fe38888",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "87537234-af8f-40e9-9ab8-f6990afd53be"
        },
        "item": {
          "id": "3cb0ed10-4f90-4fb3-844d-5b0ec746bb4d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5018718c-2c4b-472b-8400-2c3ff9a70d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cde69d6-4e1c-4f32-8bf9-fec1ee704f8b",
        "cursor": {
          "ref": "760f6e60-99de-4b7b-9882-c1991cf21b04",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "be12aa7c-43d7-425e-bd8b-cd198a700666"
        },
        "item": {
          "id": "6cde69d6-4e1c-4f32-8bf9-fec1ee704f8b",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "ebe06eec-4c31-41ef-bb83-1603ac8ea1c1",
          "status": "OK",
          "code": 200,
          "responseTime": 2345,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "2c712505-ef57-4954-b60d-bb6ca8b223fb",
        "cursor": {
          "ref": "90284005-6d02-4e40-865b-30205b028a65",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "faf46530-53a2-4938-8d97-4b45f42361e9"
        },
        "item": {
          "id": "2c712505-ef57-4954-b60d-bb6ca8b223fb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e6fdf1fe-7c50-41a7-8755-b80d87861d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22f7af1-9f47-411e-8d13-a728eb7f936b",
        "cursor": {
          "ref": "fe069acc-5cb0-41f8-bc13-4312af02bb7d",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "206f6700-0e0a-4be1-b7fe-698fb400a4ea"
        },
        "item": {
          "id": "b22f7af1-9f47-411e-8d13-a728eb7f936b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "db616a14-295f-4d03-bd01-8e5f3540706e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53893943-f034-4b11-bcd6-6be46ad6343f",
        "cursor": {
          "ref": "f1f09457-7af3-4c08-82ec-8739a98e5f1e",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d50b7bb0-95d8-4f9f-bf5c-d3fb94049698"
        },
        "item": {
          "id": "53893943-f034-4b11-bcd6-6be46ad6343f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7ce95390-60da-45b5-ae86-c7781ca758e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d75e763-0166-4938-ab8d-3faccecf164b",
        "cursor": {
          "ref": "205ac488-99a3-46a9-ad46-9bff8bbda306",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "404cdc07-11a6-4a6c-804f-94c63f283a48"
        },
        "item": {
          "id": "9d75e763-0166-4938-ab8d-3faccecf164b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "57a356f1-f768-4d70-9fc1-e37dbe1f59c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d050bcf-c068-438f-abd4-12eb4eb2bdcc",
        "cursor": {
          "ref": "4bc99ed4-6b75-4c72-bd9d-46e28d77ec52",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ddfef42a-56a3-4f88-b8c3-517bf549461a"
        },
        "item": {
          "id": "7d050bcf-c068-438f-abd4-12eb4eb2bdcc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bee553a3-96f6-4bb3-93b1-7a629e58427a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327cf32a-dd14-4f81-8ea7-fadd7c076064",
        "cursor": {
          "ref": "c257036d-1337-45cc-a4de-96649f64eb8a",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c723c994-51ef-4f61-8202-90ff6c667c94"
        },
        "item": {
          "id": "327cf32a-dd14-4f81-8ea7-fadd7c076064",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "81c7063a-7881-43ad-9455-92b6f7bc04ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d271f8-dfe3-4d90-b671-498c3d7bc7ea",
        "cursor": {
          "ref": "7f0403fc-3a79-41db-947d-709e5d5c999a",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d1d7780b-cd01-4b3e-86d1-c1ed32a2d5a2"
        },
        "item": {
          "id": "a5d271f8-dfe3-4d90-b671-498c3d7bc7ea",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2c5915b2-2482-434c-9666-deab535ae9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978d956c-eaa6-49b2-aeb1-96afbb2160dd",
        "cursor": {
          "ref": "ed945e3f-9c9a-41b8-a441-2199780a2985",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ac422a26-1453-4697-91f7-6e48a4f94344"
        },
        "item": {
          "id": "978d956c-eaa6-49b2-aeb1-96afbb2160dd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cb011cde-3d0f-49aa-afe5-c75cf8e6daf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457570c6-33e0-471a-96fa-05f25ea0f8c7",
        "cursor": {
          "ref": "24ff1cce-f09b-4029-be59-f3ebe6cadf1e",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5ebf72cd-727d-4f05-bb5e-a435a21d3c60"
        },
        "item": {
          "id": "457570c6-33e0-471a-96fa-05f25ea0f8c7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "46c828a5-f830-4e37-9dbb-22baf24458d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff9ad9f-9463-4f66-940f-0443394bc10b",
        "cursor": {
          "ref": "af208240-4228-450b-8bda-0bdc1dbed82c",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bca0ce7f-64fd-413a-87b7-1684cd80ddc4"
        },
        "item": {
          "id": "bff9ad9f-9463-4f66-940f-0443394bc10b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6e69a494-f3aa-434c-b2f3-cd10d829481a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5ecf11-72d8-4f66-883b-b7734aa5f320",
        "cursor": {
          "ref": "ec86d448-2174-4bf4-9dcf-0ab91362e1f5",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "69929df5-14a9-4ded-b47b-ef57001165fc"
        },
        "item": {
          "id": "fc5ecf11-72d8-4f66-883b-b7734aa5f320",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "beaec4e7-a3e0-4620-962a-a3267a86a28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04707c8-3389-4ab6-a0cf-b46d16438ee7",
        "cursor": {
          "ref": "c95540a3-4aaa-4903-88c9-4da232d4fdfd",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ea999b55-e795-40f2-9495-6a638f483f27"
        },
        "item": {
          "id": "f04707c8-3389-4ab6-a0cf-b46d16438ee7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e20fe895-74b4-4133-be57-667fab4240af",
          "status": "OK",
          "code": 200,
          "responseTime": 412,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "57cdf8cd-6287-405f-96a3-cd4f7f0baabe",
        "cursor": {
          "ref": "0bcc7099-623a-492b-a168-a5636106e6cb",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f3ee08f1-110b-4b99-8819-aba8f05c264e"
        },
        "item": {
          "id": "57cdf8cd-6287-405f-96a3-cd4f7f0baabe",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f8027316-dae0-4879-ae58-76b437a7a6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 889,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53a0608-2aa2-4879-8a75-48b9a9c44669",
        "cursor": {
          "ref": "b74028f7-e66f-46da-96bb-5873e1d00b87",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "48afc18b-a89d-4c81-9be2-94695df936f7"
        },
        "item": {
          "id": "c53a0608-2aa2-4879-8a75-48b9a9c44669",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d9b365a2-d45a-4c3c-b38f-3330b99cd18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0e89c3-927d-461d-8212-5d610fbca8b2",
        "cursor": {
          "ref": "0d9afbf0-00ed-49af-be6b-e6edfab0f29c",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "24241bed-8111-4b53-a90d-828f90ab36d4"
        },
        "item": {
          "id": "db0e89c3-927d-461d-8212-5d610fbca8b2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0d88f67c-65a1-416c-ba5d-b9662979fd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753835a7-2a5b-4a4e-903e-924019bb9857",
        "cursor": {
          "ref": "db93d4c4-77af-472a-94bb-83e293c0d852",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9ccef2c5-202d-4398-8ab9-3db1f7370198"
        },
        "item": {
          "id": "753835a7-2a5b-4a4e-903e-924019bb9857",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7942103b-e2dc-482f-8fc1-cc5a7ab57b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5c3e7c-54ec-4f5a-8a72-b2204c78ab60",
        "cursor": {
          "ref": "2b87436a-83ce-4dc5-8bb6-eb1696d1b2b5",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cc00bc25-a44a-4a9e-8190-0d6e9540165d"
        },
        "item": {
          "id": "5f5c3e7c-54ec-4f5a-8a72-b2204c78ab60",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "14531770-7ae3-44c2-b8c7-b87c557c44c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41c5965-c87b-4289-b03c-833b763c742a",
        "cursor": {
          "ref": "76f2edad-a8ff-4aca-a453-03837903dcc8",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e5115a3d-4ed7-4d06-912f-bf83cf548dae"
        },
        "item": {
          "id": "f41c5965-c87b-4289-b03c-833b763c742a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f1f0f68e-5294-43db-b9fd-4144cd56e72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8a07f2-3304-433d-92f5-94abfbec1b68",
        "cursor": {
          "ref": "0039655f-a24b-49c2-9dce-9947834e9ee1",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "86f9eaf0-86be-45ac-841d-651b529aa25d"
        },
        "item": {
          "id": "8d8a07f2-3304-433d-92f5-94abfbec1b68",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dca30245-4f71-465a-bbdb-6144eef793ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9edfab-6eea-4082-bf53-d714a3ab3136",
        "cursor": {
          "ref": "e99e27a4-1e4c-4de9-92c0-0fc95be9f6a1",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "98b85fde-9542-433a-beea-f140b5d2981d"
        },
        "item": {
          "id": "ae9edfab-6eea-4082-bf53-d714a3ab3136",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c037be6f-df46-4fa8-b8ff-93e329131bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659cd678-9050-4f49-80f9-41ad2da11419",
        "cursor": {
          "ref": "f0b11e03-d912-4ec7-bfa0-52c5f6a59a40",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3de1844b-2caa-4200-a4b8-c7d9d115d810"
        },
        "item": {
          "id": "659cd678-9050-4f49-80f9-41ad2da11419",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a1e99142-d527-4b06-9812-590a04c71f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f747a92-01ea-4a2e-aa22-095b620257e6",
        "cursor": {
          "ref": "17d47541-115a-430a-abff-016835f6ca0b",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "eb3021ee-8a1e-43b1-a893-fce7aba38568"
        },
        "item": {
          "id": "1f747a92-01ea-4a2e-aa22-095b620257e6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3dcd5b8d-989e-4800-9026-101d9f55f447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f031a1a-70a9-4e39-b781-3b3af3ff8f94",
        "cursor": {
          "ref": "cce52ed7-bfe5-4d8c-9ec0-1f49c68d15e7",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d87ef0bb-3366-4649-aad0-ed8849ae4509"
        },
        "item": {
          "id": "4f031a1a-70a9-4e39-b781-3b3af3ff8f94",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "184e0ff5-97b4-464a-917c-cf032961c865",
          "status": "OK",
          "code": 200,
          "responseTime": 395,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "9de32c7f-0ff9-4f49-9081-4c70cfb35481",
        "cursor": {
          "ref": "7a12592a-4de9-4191-8aac-d6db4f2ac621",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7388a282-810f-48b8-8eeb-77a01ce0792b"
        },
        "item": {
          "id": "9de32c7f-0ff9-4f49-9081-4c70cfb35481",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "868eb981-1569-430f-a62c-5281d5015f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d9698c-6bd5-45e4-bcea-e1cbae4fa743",
        "cursor": {
          "ref": "09062163-92ee-4537-8a77-24418af554f1",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "26e4539f-634e-4fee-ade8-ff50051d9313"
        },
        "item": {
          "id": "61d9698c-6bd5-45e4-bcea-e1cbae4fa743",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "750b2994-5237-4554-b49f-08c21d0ad059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcda3fe4-cd32-45ab-b256-a6a7005089db",
        "cursor": {
          "ref": "90876737-ab70-40ad-996b-5abdcc274614",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e7fc2e24-6c48-4257-90c8-5a1715013e0b"
        },
        "item": {
          "id": "dcda3fe4-cd32-45ab-b256-a6a7005089db",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "42bd00ba-7eae-45f8-be43-61d82a10047f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb87d4b9-da7d-4042-8f45-88977236ac1f",
        "cursor": {
          "ref": "8fe4f561-a8f8-4a96-a37d-4f3138524902",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "24294ab6-ec23-48e7-a5f7-23767bd1747d"
        },
        "item": {
          "id": "cb87d4b9-da7d-4042-8f45-88977236ac1f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "22e589da-f59b-4b2c-96d9-fa7684ccc30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9233377e-809f-4d1e-8e8d-97c28c758246",
        "cursor": {
          "ref": "b39fdee4-9956-4f2c-ab7e-c29fa69337cc",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ccbe7423-33f7-422a-9089-7710eb7c64ce"
        },
        "item": {
          "id": "9233377e-809f-4d1e-8e8d-97c28c758246",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c877ea59-48bc-442b-8b88-07ff6b18595f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c685e920-6d01-4656-a2ed-1e71fbd34529",
        "cursor": {
          "ref": "b5e7437b-1d0c-45ed-bce5-109307a70041",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4bf7b863-a907-4229-b480-82a8819f6691"
        },
        "item": {
          "id": "c685e920-6d01-4656-a2ed-1e71fbd34529",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "47c41d03-9950-438b-bafb-088130ab2baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b27b356-99e9-4dbf-b7dc-a5fdbd7e237f",
        "cursor": {
          "ref": "91b90fb4-8e04-430c-92c1-4e17180b2459",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4cbd2565-2a32-4226-a64d-8073376ef7e4"
        },
        "item": {
          "id": "1b27b356-99e9-4dbf-b7dc-a5fdbd7e237f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "100cc2d1-4852-4f6b-a07b-fda2e6e855fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d9ac43-57d5-4ace-9cec-f64f73827f84",
        "cursor": {
          "ref": "e1d23b8d-75b1-493f-9201-da414edf343d",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "40c9768a-0e48-4388-884c-b7afb0903ee1"
        },
        "item": {
          "id": "81d9ac43-57d5-4ace-9cec-f64f73827f84",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e89527ca-c036-4d3a-9d6c-141143d7f44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dd9a10-f117-453a-8680-16a045d2df1f",
        "cursor": {
          "ref": "b30bf67c-64d8-44e1-9ad2-9bc5a45c6c4f",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4f440246-a267-4c9e-b66a-e32d735d4b74"
        },
        "item": {
          "id": "65dd9a10-f117-453a-8680-16a045d2df1f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "becf8eb1-02a6-4adf-acf3-787a1d31593e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec58025-ede9-4c03-9d0d-0c6dc03ace61",
        "cursor": {
          "ref": "81d5a3f6-484a-471b-b848-8adec5a3eb89",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9de88744-213d-4dc5-b1a4-8ed402ca7b7a"
        },
        "item": {
          "id": "9ec58025-ede9-4c03-9d0d-0c6dc03ace61",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ea860fd7-ad42-4cb6-82e3-59fa5fad603c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f3c3ba-205a-4344-916c-6e29dbf27602",
        "cursor": {
          "ref": "d5e358fa-6c64-4eb7-9010-cef8e2184958",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "533154fe-bbc9-470f-84f9-e7dee489bf11"
        },
        "item": {
          "id": "58f3c3ba-205a-4344-916c-6e29dbf27602",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a53ae700-dd9f-4640-a156-a4a715fe8fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853d201d-dd03-4b68-b368-33fe35477d7c",
        "cursor": {
          "ref": "c457f5a5-39e5-40a7-a194-acab6f86cc64",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1baefea7-1c1e-4de3-92aa-f2557f2515c8"
        },
        "item": {
          "id": "853d201d-dd03-4b68-b368-33fe35477d7c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "080af571-7024-446f-bd24-295ebc81b71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8daddc7d-c6a8-40e3-9338-1ea44db38b83",
        "cursor": {
          "ref": "557a65a1-a061-468d-9605-5c80d6e1868a",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "031a690e-9fed-4c62-8506-436abebfaf60"
        },
        "item": {
          "id": "8daddc7d-c6a8-40e3-9338-1ea44db38b83",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "121d74fb-c058-4b0c-bb97-6e9fc9c02565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baf02ed-9b4b-4f65-a956-57a254c29a2c",
        "cursor": {
          "ref": "92e2b6e7-5c8d-4ab6-9fc5-a5d61adc57ff",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "46e07093-77b5-433a-9149-76dd4c2f3d6e"
        },
        "item": {
          "id": "1baf02ed-9b4b-4f65-a956-57a254c29a2c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "90c39125-1158-43c0-910a-c622afbb2458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37deb134-e9f1-44c7-9561-ac1f089f59b6",
        "cursor": {
          "ref": "b934d1e5-cd33-4105-9fa7-333a5c050828",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4b2c02d3-9e15-4322-9c8f-e2c2f6ed688b"
        },
        "item": {
          "id": "37deb134-e9f1-44c7-9561-ac1f089f59b6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e3ec2423-c80b-4897-98cb-13495ef6c834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b03410-59c6-4640-83eb-6cbde418ad63",
        "cursor": {
          "ref": "0e7b9a03-bef3-478d-82ca-4675c9063a52",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b848abb7-94db-44fb-b4fe-4d9d9258c667"
        },
        "item": {
          "id": "a8b03410-59c6-4640-83eb-6cbde418ad63",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4b77d0f8-c0ff-44dd-a46c-7adee9f2e488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7b19b9-2328-4f14-be0d-c2e3f790ff4f",
        "cursor": {
          "ref": "8d925c68-32ae-4f58-a2ab-091640358bc9",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b86acd04-4fb0-44a9-b812-a018f750e830"
        },
        "item": {
          "id": "fa7b19b9-2328-4f14-be0d-c2e3f790ff4f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "79e02e5f-81ca-4a37-a2d4-d26d2414b54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0efafc8-468b-46d8-a9fb-d3a79b768825",
        "cursor": {
          "ref": "fb3f65a7-b878-4ae2-be42-b5f15cc1bedc",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "78812c23-3258-449f-a798-279ae2aa8e25"
        },
        "item": {
          "id": "a0efafc8-468b-46d8-a9fb-d3a79b768825",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fd89a49f-8a2a-4586-808a-da345744de67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4e4755-f830-47aa-b9f8-28d6bec3c03f",
        "cursor": {
          "ref": "2ee2fef6-5c36-48f0-a6fc-67e7b894ef5d",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "20761519-62c2-4ffc-be4d-7257675e393b"
        },
        "item": {
          "id": "3e4e4755-f830-47aa-b9f8-28d6bec3c03f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "daad97f9-3ca8-409d-9ebc-61ae49f6ed13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e4f5bd-f598-4099-ad35-f86bbfff5b51",
        "cursor": {
          "ref": "0d12f032-91b3-45c0-8aae-7af5af3c350c",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "44fdb1f0-d7d7-48eb-875f-c195ca21973a"
        },
        "item": {
          "id": "49e4f5bd-f598-4099-ad35-f86bbfff5b51",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9afcd23b-b322-4d87-8aa1-e516f3ede9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac4f038-272e-4a35-929a-4deeaa146a0d",
        "cursor": {
          "ref": "57f2968e-6854-4d21-8088-786f95743e3d",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "aef90ecb-58d4-4be1-bc2c-d5cd8cb2ad9a"
        },
        "item": {
          "id": "9ac4f038-272e-4a35-929a-4deeaa146a0d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5eb2f932-0cb8-46cb-9f7e-30b23c82c604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1033,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e4f292-a922-47d1-be80-092c3ca91b50",
        "cursor": {
          "ref": "14804403-4e54-49e5-9ba1-dd51ec5299a0",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7412dd1f-2c8d-4c90-a194-fdbf444024c7"
        },
        "item": {
          "id": "b2e4f292-a922-47d1-be80-092c3ca91b50",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cb4fcb9e-3b85-416d-b1e0-6e7d38c17c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 959,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681c3f7d-cc4a-453f-9e26-aeb1f5c3fddd",
        "cursor": {
          "ref": "be3dace1-c064-4b57-8861-dd9999c40ded",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f0fff5f9-c74f-4b1d-bbb0-5226454ec2e5"
        },
        "item": {
          "id": "681c3f7d-cc4a-453f-9e26-aeb1f5c3fddd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "72857c1e-acb3-4716-9725-680aba4c3807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ee9a79-b5c4-481e-9eba-c9dfab20746a",
        "cursor": {
          "ref": "2fea7d40-e6d6-4fa3-9118-7f3736e9f75f",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3c44dfc4-767f-4bf1-9112-e7d5c6a9f192"
        },
        "item": {
          "id": "13ee9a79-b5c4-481e-9eba-c9dfab20746a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cc72de8d-7a2b-4db4-966d-75ae248e2d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331f76fb-22e6-4e8d-aeee-c5316c07a584",
        "cursor": {
          "ref": "0aef41b5-3eb6-446f-b5b0-4a5e06cefcda",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8effde8d-eea3-4406-a6ba-e5bd400657a3"
        },
        "item": {
          "id": "331f76fb-22e6-4e8d-aeee-c5316c07a584",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b013760a-04da-4400-866b-8a341d8be367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2b5d80-863a-46a2-ad46-e70765eb667e",
        "cursor": {
          "ref": "4ef15f37-73fe-46f3-a958-ebd44cfc3ec3",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d6d92f6b-55bc-4925-99d5-47acfdaeca78"
        },
        "item": {
          "id": "4e2b5d80-863a-46a2-ad46-e70765eb667e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "76b78a36-ec03-4ae3-a682-71ad24f48580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efc929b-692f-4eb3-97fc-723eabb68771",
        "cursor": {
          "ref": "8ee48923-3915-4ba4-a2b6-427f94b2b8c3",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d0bf43e9-7e04-43df-ad7d-3039398f0b4a"
        },
        "item": {
          "id": "1efc929b-692f-4eb3-97fc-723eabb68771",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "59390997-1d62-4dd2-ac87-9ebbc0c5d8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b043318-9486-4017-8e6e-3a1c44951e69",
        "cursor": {
          "ref": "c99b9622-dadf-4cab-a64b-973f08d50077",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "db313107-0418-4f0e-b8d3-e38c11b8ad0b"
        },
        "item": {
          "id": "6b043318-9486-4017-8e6e-3a1c44951e69",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b85e253b-f96e-4f1a-88f4-97abfba2da97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68ac346-174e-4568-8c98-2f844406009f",
        "cursor": {
          "ref": "6161418a-0407-4dcf-a9d4-4d57f02d937d",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ba1e73ce-3069-4d86-8e33-ad2403aa2560"
        },
        "item": {
          "id": "b68ac346-174e-4568-8c98-2f844406009f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6ef58ad9-6e28-4f30-814e-b12c18b4cc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b06cd66-9ce6-4580-a273-b624ff9a45eb",
        "cursor": {
          "ref": "bbb6de3c-8c3c-46d0-90bd-c46a94f370c7",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "dcd78a7e-6114-49c7-81bd-ddf21f05751c"
        },
        "item": {
          "id": "1b06cd66-9ce6-4580-a273-b624ff9a45eb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d4fb9eac-b2e9-4fef-9476-20832feb8ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0c8a81-7b92-4cee-8012-32bfb54593c5",
        "cursor": {
          "ref": "0dadaed2-60f4-44f7-93b5-c5c2997ef77a",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "359e5a9c-25d5-46a4-9019-641b60ac671b"
        },
        "item": {
          "id": "5c0c8a81-7b92-4cee-8012-32bfb54593c5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bab7e888-e9d4-4b42-adeb-ee92fa8b5983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b451e877-3d24-4b59-9a1a-e517fec4880a",
        "cursor": {
          "ref": "c021c8ed-c2cc-45c8-8c38-e1fadbd31715",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "08bfe0da-5778-4130-9f65-3ebb3abc1805"
        },
        "item": {
          "id": "b451e877-3d24-4b59-9a1a-e517fec4880a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e19a2774-e777-44d3-b141-518ee2ad57aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49aaac95-24c1-45cc-8fdb-dfdfbcd274c0",
        "cursor": {
          "ref": "71e018ef-a1c9-46e0-bb35-2c49ab1219f7",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ce4552c3-985f-4832-8896-9168cde508ab"
        },
        "item": {
          "id": "49aaac95-24c1-45cc-8fdb-dfdfbcd274c0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "de98de59-8d2b-4cb1-a2be-d61f514160e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4355d1-1b94-40d4-a300-87b2db2cbbdb",
        "cursor": {
          "ref": "0d661a54-bdec-4801-b1a3-09c5c4b9587b",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8a51d967-98ec-4ec3-b91b-771eeb9266a4"
        },
        "item": {
          "id": "2e4355d1-1b94-40d4-a300-87b2db2cbbdb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "788611c7-7f9a-40fc-9160-3aff55e60665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5806c204-0e3c-4cda-9262-5f4cc3148120",
        "cursor": {
          "ref": "5c33be83-c1cb-4b24-9a18-462ce456b495",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "48338167-7da9-4b78-b293-5ad122a87cef"
        },
        "item": {
          "id": "5806c204-0e3c-4cda-9262-5f4cc3148120",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bae5d34a-f478-4eff-9f15-e1b3d93c59a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98539a21-734f-490e-a0c0-37369ef72446",
        "cursor": {
          "ref": "c50d5543-51e0-4996-8bcb-f6386c7ccab0",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "678db501-90cd-48e1-b519-e48c7b5e6dbe"
        },
        "item": {
          "id": "98539a21-734f-490e-a0c0-37369ef72446",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ce43990c-29b7-47f7-ba3f-61b3b7b53bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9cbb34-1936-4d48-9e89-b5591c2e2d8d",
        "cursor": {
          "ref": "4df08de2-498c-4f1f-a997-72a78866a4f4",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a61d8382-0826-4082-ba41-6b0fb1572360"
        },
        "item": {
          "id": "ad9cbb34-1936-4d48-9e89-b5591c2e2d8d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9d695073-4140-4ef5-b7d6-4421191e29dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1115,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baae28a6-ea95-4bff-b4a4-d0379b50142e",
        "cursor": {
          "ref": "7b77da2f-e6af-4655-b775-eed0b5df6e27",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e8c2bbb4-c3d7-4b89-810b-b679d04dfc93"
        },
        "item": {
          "id": "baae28a6-ea95-4bff-b4a4-d0379b50142e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7dd47a05-4f24-45ba-ae8b-1ac9dd262355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fb93ef-e8fe-4750-8525-fc26719b1a9f",
        "cursor": {
          "ref": "189d88c3-a9fb-47c8-a68d-0ee7e2b94144",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b2672fd6-8b13-4017-83fa-960c01ee46b6"
        },
        "item": {
          "id": "f8fb93ef-e8fe-4750-8525-fc26719b1a9f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "844db095-72a1-4dea-9a45-e120282cccef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1186,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3647f73-aa2d-4800-84a4-cfa702a49d71",
        "cursor": {
          "ref": "0d6d15d0-2a21-492d-8351-572e489ad8b3",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "73b26386-1aa7-4c86-aff1-fb3bf0ec6e69"
        },
        "item": {
          "id": "d3647f73-aa2d-4800-84a4-cfa702a49d71",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2e6b26e7-c2c9-4e34-9280-66b8ab8a43f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dc38b2-ef4c-4b46-8e2a-76448fe73014",
        "cursor": {
          "ref": "8b85e417-676d-4861-952d-aa7bf488cb9a",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "35d0605a-357d-4dc2-bcc0-324e4ac74987"
        },
        "item": {
          "id": "10dc38b2-ef4c-4b46-8e2a-76448fe73014",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1014244b-ee81-418a-864e-00124bd77100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e19981c-74f8-4386-bcb9-71dded3f2f9d",
        "cursor": {
          "ref": "bd95ebb7-f2fd-4d42-99af-84341305e91b",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dde4fa70-e0a5-4536-9c8a-8ec7a79e2b2d"
        },
        "item": {
          "id": "4e19981c-74f8-4386-bcb9-71dded3f2f9d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "08d5ae8d-04a4-458a-a93e-2cb7a6a340d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e46241f-2039-4ee3-a1b2-c4fd2b4fb28d",
        "cursor": {
          "ref": "acc2865e-ce27-4309-932b-42c583cfea89",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4f7e6130-b835-4644-9336-c1dc502b2fef"
        },
        "item": {
          "id": "1e46241f-2039-4ee3-a1b2-c4fd2b4fb28d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9fbb02ee-40c4-486d-8891-d2e20279f750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 910,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a30918-412b-443d-bfb5-3ba8756cc2f5",
        "cursor": {
          "ref": "816dd894-e7b3-41d6-a3b7-cdf11b823158",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "df43daa6-aacd-473b-b3bb-2fcb57467e2d"
        },
        "item": {
          "id": "16a30918-412b-443d-bfb5-3ba8756cc2f5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "525e4012-1c6d-407c-a0e3-2fff6c96e5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c04bc3-5075-4493-a69f-16cdb4a6c940",
        "cursor": {
          "ref": "1d1f3ad2-cbcf-4707-83f5-416699b9db33",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1df1a665-0f8b-4aea-852a-9bf509f1ccd4"
        },
        "item": {
          "id": "24c04bc3-5075-4493-a69f-16cdb4a6c940",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e9190541-be48-44ae-87fc-c4c909960272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76db8f7e-08c1-425b-ba39-72b4656f73ec",
        "cursor": {
          "ref": "3cb65ff9-5544-438e-a86c-05a026bfbd98",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "18bc4444-4b2f-4528-b730-81f8fad9966d"
        },
        "item": {
          "id": "76db8f7e-08c1-425b-ba39-72b4656f73ec",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cfefaaa6-8390-4655-ad3a-ec0e14581675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f9be70-f294-4c42-bf6e-9cd33dcc9279",
        "cursor": {
          "ref": "d40e4a30-2da2-472e-9272-4868f5d2e630",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "133cfb7e-f049-462e-bf2e-9e4a2b66a662"
        },
        "item": {
          "id": "11f9be70-f294-4c42-bf6e-9cd33dcc9279",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6a060577-eb8b-4f0c-8755-cd71bb556a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030b3470-1877-4f21-a8a1-dab5bf92f5c5",
        "cursor": {
          "ref": "c5dcf8ef-6037-4f7c-b526-4873c87a217e",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ce81404f-81e3-49c7-96cb-96c991a9efe5"
        },
        "item": {
          "id": "030b3470-1877-4f21-a8a1-dab5bf92f5c5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "48a3b4da-2452-484e-a755-032cc47c76ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9276dbd6-32c4-47f9-a102-49566f13812e",
        "cursor": {
          "ref": "5d85f5af-b7f2-45d7-b5cf-429651dc5fd5",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "12976af8-db5e-44bc-a20b-23963b51f650"
        },
        "item": {
          "id": "9276dbd6-32c4-47f9-a102-49566f13812e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a63ea2da-1668-4138-9789-d2e58d6ce6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b6c521-fb05-42e6-af6a-e7624813fef7",
        "cursor": {
          "ref": "aab3be4e-fd18-4d3a-aead-dcdcf4b7351f",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c9bbd4b0-7fb3-486e-8a5a-ce8b75d98040"
        },
        "item": {
          "id": "a3b6c521-fb05-42e6-af6a-e7624813fef7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "18dd473e-8cb5-4152-906f-e3cb6ae8b245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73a4163-b5ff-4292-9507-6981f40394a2",
        "cursor": {
          "ref": "7e314366-9450-4612-a0af-99812839445a",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1b9b2546-ccea-4ef3-88cb-0c6cc9b76619"
        },
        "item": {
          "id": "a73a4163-b5ff-4292-9507-6981f40394a2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ff9d3a19-475f-4394-87f9-c59525e330d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c18140f-0ce3-4089-8255-a43431e6db62",
        "cursor": {
          "ref": "2cc8d437-90d1-49eb-be8d-3952fc158427",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "09e67e62-790e-422c-9327-3be8727eedc3"
        },
        "item": {
          "id": "8c18140f-0ce3-4089-8255-a43431e6db62",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f0367076-8482-48f6-ba7e-b5c3d4b0296b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfd6592-25c8-4d44-9807-995355a71cf8",
        "cursor": {
          "ref": "3d69f5c7-5d25-4dad-96e4-31ccd79be8d8",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6622d8c1-a759-4651-95b4-b5fa36ddeac2"
        },
        "item": {
          "id": "bcfd6592-25c8-4d44-9807-995355a71cf8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0ac805db-fe67-4cd7-a69b-4784abbf3492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5473d3c-b9bf-4a07-9c55-82d94b9f8d3d",
        "cursor": {
          "ref": "04731394-40c6-4eb1-ac3b-b5a97bc295c0",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "197f399c-4687-4892-b479-9ec23232c86c"
        },
        "item": {
          "id": "d5473d3c-b9bf-4a07-9c55-82d94b9f8d3d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b11cec4d-9bb5-4984-97ed-c1d66f732fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ffe841-a77e-4cd9-ae97-9742fa4cf89d",
        "cursor": {
          "ref": "ab0dc01d-e0fd-4308-aa1d-89599c25f497",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a16316da-8618-4114-8e4f-4a1e35448d4b"
        },
        "item": {
          "id": "73ffe841-a77e-4cd9-ae97-9742fa4cf89d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8d4b9789-2c51-4a0c-84ae-1d664992f09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f84a99c-058e-4a77-bd23-95d62b506ca2",
        "cursor": {
          "ref": "6633c11d-c93f-4314-bdfe-eae05dd1d09a",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2834e4f5-8ceb-4205-b391-f26e4aca77e6"
        },
        "item": {
          "id": "1f84a99c-058e-4a77-bd23-95d62b506ca2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bf7df364-0b86-418b-be6e-01c55f6d12d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60406b76-8e74-45c2-8c09-62cb721010af",
        "cursor": {
          "ref": "c15d528c-58db-47da-a490-b53d21f5c79e",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "70e481d8-b820-4e40-8e8c-59ef623c59b1"
        },
        "item": {
          "id": "60406b76-8e74-45c2-8c09-62cb721010af",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "82ed3df8-7ddb-4ce8-9d14-1c0a8e886e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccfb1b3-0236-41a5-81f3-7054c1241acf",
        "cursor": {
          "ref": "cbe47f75-bea2-4f86-8185-bdad7353017f",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5668a420-78aa-4c49-9205-4ead9174efbe"
        },
        "item": {
          "id": "7ccfb1b3-0236-41a5-81f3-7054c1241acf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4145e37f-fee0-49e7-bde2-7b759a94bd3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ada53f0-45e3-415a-a4b7-af0b4863af08",
        "cursor": {
          "ref": "c5a360c1-cf3c-49b4-a683-7e35a5bb1fa3",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8577758f-2a61-4169-9d95-6ab1b45273f0"
        },
        "item": {
          "id": "9ada53f0-45e3-415a-a4b7-af0b4863af08",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "b2b91aed-299f-4228-94ee-c0ee7aefd041",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 380,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8543b5d-d22f-4304-a934-c94c4e32d45c",
        "cursor": {
          "ref": "686cf847-e27a-4f41-84e3-5264ff498f3e",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b737b4d5-8ef6-4918-8147-db74e7ca6eff"
        },
        "item": {
          "id": "f8543b5d-d22f-4304-a934-c94c4e32d45c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "64c3f107-ebd0-40dd-8300-44d7262f9c31",
          "status": "OK",
          "code": 200,
          "responseTime": 453,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cec6a8-9679-48d9-a5ef-2c42a953ebd5",
        "cursor": {
          "ref": "529abe19-6c48-4079-a320-f03526be84e9",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "978ec46e-ed33-462a-aad6-b571c4bd622c"
        },
        "item": {
          "id": "a1cec6a8-9679-48d9-a5ef-2c42a953ebd5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "26211be1-f5ba-4ae1-a01d-7df06d9818c8",
          "status": "OK",
          "code": 200,
          "responseTime": 2021,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "520dbd0a-f883-44b7-a1ab-c5e0bf4029f5",
        "cursor": {
          "ref": "b6f04b5d-f052-42c8-9292-d63af27e8a88",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d585b93d-3550-406e-a08f-8e4c3dc2aa8e"
        },
        "item": {
          "id": "520dbd0a-f883-44b7-a1ab-c5e0bf4029f5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7bd5c59c-2234-428d-9982-557d959a31d0",
          "status": "OK",
          "code": 200,
          "responseTime": 1800,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2939f93a-f257-4e19-9af6-c5b9d07531d1",
        "cursor": {
          "ref": "c754331d-e070-45de-b6b5-044291b12080",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d25a77d-523e-40f6-be63-ec1d1cbb3e63"
        },
        "item": {
          "id": "2939f93a-f257-4e19-9af6-c5b9d07531d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f042ec2b-3e65-4dd7-83c8-01bfcaf115c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2939f93a-f257-4e19-9af6-c5b9d07531d1",
        "cursor": {
          "ref": "c754331d-e070-45de-b6b5-044291b12080",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d25a77d-523e-40f6-be63-ec1d1cbb3e63"
        },
        "item": {
          "id": "2939f93a-f257-4e19-9af6-c5b9d07531d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f042ec2b-3e65-4dd7-83c8-01bfcaf115c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2939f93a-f257-4e19-9af6-c5b9d07531d1",
        "cursor": {
          "ref": "c754331d-e070-45de-b6b5-044291b12080",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5d25a77d-523e-40f6-be63-ec1d1cbb3e63"
        },
        "item": {
          "id": "2939f93a-f257-4e19-9af6-c5b9d07531d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f042ec2b-3e65-4dd7-83c8-01bfcaf115c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce049d0-efc6-4ac3-b099-865edfac6b49",
        "cursor": {
          "ref": "c92ae6ef-67fc-45ea-8141-c34061e6ed5b",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "576af24a-aca5-417f-8b29-3c69ed200504"
        },
        "item": {
          "id": "5ce049d0-efc6-4ac3-b099-865edfac6b49",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "da2e3b29-0bc0-49d5-919f-9b8ab9298040",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 377,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a9ca17-19c8-4395-a4fe-fbb9c60d65b5",
        "cursor": {
          "ref": "36dd5e50-6b15-4e34-a293-7cd0cade9380",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a9e5e547-22b6-4e7f-87a7-20b733ab49d2"
        },
        "item": {
          "id": "95a9ca17-19c8-4395-a4fe-fbb9c60d65b5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "81a58817-7fed-4c4d-a36b-c563a260be67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a9ca17-19c8-4395-a4fe-fbb9c60d65b5",
        "cursor": {
          "ref": "36dd5e50-6b15-4e34-a293-7cd0cade9380",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a9e5e547-22b6-4e7f-87a7-20b733ab49d2"
        },
        "item": {
          "id": "95a9ca17-19c8-4395-a4fe-fbb9c60d65b5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "81a58817-7fed-4c4d-a36b-c563a260be67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61ebf09-9e02-4cf9-8874-fe91411b9b9b",
        "cursor": {
          "ref": "fa1289a6-f1eb-41cc-a9cb-8ad865d1764a",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b108e892-bcd8-4b69-a15f-a0240e6a35d1"
        },
        "item": {
          "id": "d61ebf09-9e02-4cf9-8874-fe91411b9b9b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5753d8d1-44d4-4f71-874f-5cfa2d39bc2b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 620,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c51cf3f-bf9f-4dbc-bfcc-9b0fc2515665",
        "cursor": {
          "ref": "40ae59a0-579e-4aee-9b6a-d2b0050860b1",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2453f132-6d31-4035-ad4c-18164b06959b"
        },
        "item": {
          "id": "8c51cf3f-bf9f-4dbc-bfcc-9b0fc2515665",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "daf3e977-a9c2-4065-99a4-561b1a8e1f63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c51cf3f-bf9f-4dbc-bfcc-9b0fc2515665",
        "cursor": {
          "ref": "40ae59a0-579e-4aee-9b6a-d2b0050860b1",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2453f132-6d31-4035-ad4c-18164b06959b"
        },
        "item": {
          "id": "8c51cf3f-bf9f-4dbc-bfcc-9b0fc2515665",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "daf3e977-a9c2-4065-99a4-561b1a8e1f63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48e6c86-1239-42ba-bad8-4edf50fa61f0",
        "cursor": {
          "ref": "67c95582-161e-4094-88f9-9ef45eec0e1f",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dfba991b-dc88-4928-a692-1e5e0a0db02d"
        },
        "item": {
          "id": "e48e6c86-1239-42ba-bad8-4edf50fa61f0",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "a40ef585-88e7-475a-ab92-95db1a95e66b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 616,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}