{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9c943a8c-e48d-4e61-8501-7a6f13db0a95",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a697bc9e-486c-439a-b7e4-5f276bf93692",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11db675e-de0b-4acc-9b00-9f763ea1d667",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "23485549-736e-4501-af3e-8562da8a26c9"
                }
              }
            ]
          },
          {
            "id": "11abcaa3-b434-4a21-83e8-85197d50fede",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5fca5382-baef-4388-856e-f47323fc0055",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "02e134af-b29e-4fca-a289-f8be51c55248"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "64a7358a-31e2-426f-a9c5-667dfb9badae",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d30c63f5-6d97-4505-9b87-063c7a363362",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d3b8cf8-6baf-47e9-8270-700cfc9769da",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "100aa1f2-d93c-4c4e-9630-81ad62fd47e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff163530-3d87-4355-be88-9db25b97552a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d543b81a-dee4-448b-b6db-9261547f489c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "407959a7-ec4e-4d33-ad16-6ac8507ca7f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2e15fba8-0b8d-4fba-8417-6d020f7313c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2f279f2-9bc2-4c0a-9daa-b33378223780"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88375301-509d-452f-9146-c86551659d31",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d546a0ce-f003-4243-823b-30db60ecbdb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cf66156-dc28-4e77-a3f6-3ebaabf20977",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3351831-a7b9-4028-bb8a-e553812d6b91"
            }
          }
        ]
      },
      {
        "id": "f83e6310-a558-41db-b8e2-abedc736d34c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "11ad9aef-9679-43fc-8627-9fbbc36ad672",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a52015bb-1200-4d46-8dc6-4d6f71a1a2de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba63bdbf-6fe8-4567-8e75-d0dafa97dcb2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfa2b6e-2043-4fa8-8c2e-6bb60b74ac38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "367b206e-3b70-4697-8e96-c998c1c8d6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e551660-af4f-4018-b27d-0e20cadd7743",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7126dd8a-2879-4034-94fd-45ebb6384b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f59e8969-2300-4e75-b1c2-16fecd5c7d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c265866-56bb-4796-8ed6-1ac8f051df19",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3132ae-ae4a-462e-8dd3-0ad4fb71a8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11b507f5-2c8e-4012-86a4-c0b2e7b08aa2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51687378-6cc5-4523-adc0-d25730cd444d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32d61541-430a-45bf-b250-d21d7153c5ba",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155d80df-6da0-4e00-885d-01409e26d9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fe52c53-7705-44d8-b370-738182785beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edc1029-3456-4857-a3fd-18afb7c1e9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0a711f-285e-4dac-b0f7-05a22beb8c84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "27e8b0de-973d-4612-81fe-68334c314ee6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5951a549-a37a-4a8d-ae8d-28c44c954fa8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38c8eba8-3b61-42f4-90b5-1aa50b72fdc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "72041fba-ee38-4fe0-8b59-3409962cabe9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97411aab-5b0c-401f-89c0-458c9ed13b21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "feb0bdd4-5b34-44f4-a04c-ebfd91574382"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71f371f3-f10b-4f75-a79a-ce9104694395",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d431d53-f9ba-49df-a571-a5692bdea3a0"
            }
          }
        ]
      },
      {
        "id": "93ba8a77-30f4-48dd-a32b-81ac6c8b7fda",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "99ef354b-5539-4d2b-9206-41db51e156cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9254bf39-62ac-44ac-998f-8512d0a93f3f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3130b0fd-c656-464d-9c44-17beae23e3e8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1018bf7f-25d9-4b68-b045-1379322f93b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf59f898-4e77-4da6-8a31-dd4ff3dfdcf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fade9ac7-8e5c-47ef-aafc-8f5c7acf834d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cd22407-002e-4c4a-acd9-59d0bfa5916f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7d2e31-2f04-4385-9775-e623c2c67589",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e706f6-eccb-4d35-b9c4-17c3ce06ad94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a068527c-a823-47ca-bd81-a025f630e0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256e0313-65e3-4507-afdc-dda754af8d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "192fa7be-dd0d-41cb-967b-bbea0b4c10bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68550a00-8d71-4a76-99f3-a1881522a2b2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0371c6e3-769e-4dd9-be4b-01875fc89a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b10f472-bc30-4adb-8678-6c1767884f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afefc9fd-fbae-4512-8c67-dc9e5bdd9200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "779d80ea-351d-4620-a5e5-cb88a860adf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e3dc3a-453d-4ac9-9d5b-9ab5126b595c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a894d33d-f54b-48d6-9b79-72dcf8702ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f090ab5f-c71f-4e63-a042-a1e6d40dcf22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674f6df1-9443-4c3d-9c51-f08178958c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a53b600c-d177-4333-9d45-6f161c5b888d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76faf37b-6eba-4fd9-8342-38955c734af8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b554e4-e85a-4ba6-96f4-9d07806ac30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2962ad89-aa4d-485f-8a4a-288aa53e2978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720e3eae-84b4-4204-baf0-fdce2e9ae678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b985daf4-4c39-4c71-a723-61b43099e76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6afe97c-e604-40d1-9c9d-ffc09b83d092",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8c7282-be11-4a1e-91b8-ab3ca13323c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0e2984-4629-4fe6-932a-e4f1c3c521de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf9cbc2-5629-442a-b422-a0086ac9ff4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6c86c41-a309-427d-a460-6e4a65dd8202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aea9896-68dd-46ec-9062-7d33a9a4fca2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c5471c-420c-4ec4-ac59-9bab2b60be11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8eb105-5167-471e-9b03-c30ceba4451e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3deaf01-850f-4d28-b4f6-fee2e8598ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3ce9937-6633-4f3e-b26c-74290865a338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e72418-bd5c-49eb-8eb9-0cb98033c1f4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a7906f-f9cd-428f-bf6d-ad4cc173b484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944efc01-fa8c-430b-9cc8-3773cd291732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3c6083-f845-4dcf-8e8e-d783e336dfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "292f9795-2c51-4f11-b4a8-e298a45a3269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebfc360-1f1a-44a9-8385-e4aec10c7efc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3b7c3f-a16d-467c-b168-b140c33dd7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e7e2e8-1ef9-4f93-b65f-93c32fd87700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400a5f46-c7da-47fd-8343-4864b94d4aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ff76a72-4f07-4c8c-93f7-90599bfeaf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd64cdb-5992-4a75-bc73-0747d8ebd050",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d147712-58f9-4864-8776-fe9d8bed64d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004c1f50-f233-4d84-983f-0618e8496842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b7dc98-590b-4be9-812c-f51eacf543d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a897db3-287c-46e5-b5dc-445e5b5a2557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931496af-5b07-46b7-a551-5c4faee8692c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a193f28-b6e3-40e8-b055-7e116d1d58ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c97f6c-e0f3-46b3-be40-8787d63fc160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7724a551-799c-425d-9d59-44047201170e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc278062-72f5-4d2b-b10a-801e99520aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b40e66-f7e8-4883-8eb8-a18859089806",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd316d2-53c8-4ec6-8b06-b9919227517a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e71a88f-fe9f-474a-845f-d2f87d3f0554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f7555c-b535-44b5-909d-e6a77d302779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ac44566-9259-44d8-b20c-4dfe52cd915b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394566f2-a43c-4ee3-b269-506d317bf4d6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1a468d-229b-4a68-845b-0f9e807a6520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60090bb-1752-4d7d-aa36-7be764c248c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2e68e3-8361-40d4-94d1-b80b33c24311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65f4e635-50ed-4300-9283-ba3ad6a2b8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ad715f-2e7d-4f35-bc77-7594f7e87096",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df74dcc-39a5-4cbe-80ca-03c545aa099a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53615888-28b3-4af7-b5a4-1df05807d62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50caad74-f404-43ff-bf2c-323a796b5a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77923972-f9c3-41aa-9802-90da4b3746b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33793e83-d234-45e5-8411-44f050ba380f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de52c79-cd59-4dec-bb30-dd0ea7cc4a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598eb8cf-1eb1-4a09-9b36-2eb39e12e88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3baaa890-6709-4971-8215-1ecf960ebe5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5f4547d-67ed-49d6-8cb3-7e283fa57322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7afcd9-68e5-4bc8-9236-5e969bdcaff0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001a40ea-94bb-4df6-85e0-a4bfd23b12b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271b6a11-925d-41b6-a3da-951eba4d4df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c628d3-6719-4e16-bcf1-84d6b4816179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af3e3137-ebcf-4ec6-a84b-9e7bb6a273d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40026ced-b67c-4f8a-bb36-04828a090ba8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80e1186-a358-49a0-b620-9457328127f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8764ce-33ea-4189-8e88-4be34c01977c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b6ef15-4931-45d0-a28d-8c2630330522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aedb1e47-2744-4991-9c3e-8efb3c876cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee58dd28-b1a5-4df3-af53-dd1e42e5e580",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425f91e3-c7a8-4e30-a4ac-f5f1bbc91893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8a0992-3522-43f7-ae55-e73bd19761fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baacf49-bcf0-4afa-9621-910996d9d8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a62d55-9cdc-4c67-9ee9-ce90ba22460d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df4dcd7-953e-4a79-b2fd-3981cd347af6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49c1b37-7818-443c-9b3a-f274d4a5e11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d262c93a-e965-45a3-914b-1c6993c5a095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e648f76-3b4c-4564-9ab0-686a3aba9377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "150d9421-4da3-4bb8-a263-72c6e1844aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db87ec82-192e-4e7f-8ac8-d75e2f51eb71",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e6cc77-38f1-429e-a512-9c07bcae3c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eded5c1-e1e8-4faa-9ce2-73bb70d74c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304c193e-5877-4a23-85f8-d6c7ca0c249c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5542d43e-13c8-4453-9ad5-d7648e74fcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505fe2e7-f4d6-4257-8ed5-556649c3137f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc3278d-a645-4c01-b7d8-64f797fdda56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dc07e0-276d-43e8-817c-f86736ad63f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76fbfe1-35ae-46cc-9902-0d5caea8fc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b8542a-ce16-413e-a994-25dfc2949a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34649106-1443-4a7e-b151-bba8c3cc4cad",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718942e5-8456-404d-8e0b-e99d1eebb140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fad6b9-ac4d-4a30-8970-3663298059a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94734378-fdd1-4881-9387-7489e58babe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45a06c9e-d047-42fa-943f-952021870cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb75a42-9960-4101-9225-a4ceeeb51fa7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6141c41e-74cc-40c2-8e68-f946af058378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8008f55-6f16-4c1d-ad11-9cff98c974f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd0459d-2dc9-434b-b2aa-8f02a6da168b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d507f7f5-c972-4a79-83b2-667f22513b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a924eb-4b6f-438b-a958-9b43f219a521",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6448ebb-ab2e-4982-91eb-5507151a5919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876e28ff-a9cb-46bc-8f65-79833b76658e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca3f6f5-e9c1-4302-bc94-1606782b26ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9943413c-2cdb-4b87-a446-914baa9c6b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7991583-23ac-4595-826b-df052f8e2fb8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d59f438-3d45-446b-acbf-3e75f35ddb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13d4327-74d0-4617-b248-83d21c17f739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99f84b4-9c6a-4ad1-abcc-3ea887bfb9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c52b35-f16a-4666-b533-7a0548bfbce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa76564-fac4-46d4-95ef-34e02909ec7d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ea08e3-5fa6-4dc2-8d60-6070cce62f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8755719c-c367-4e01-b6a8-b8c728cf1d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f80ac8-6c0f-4b89-b19c-c87b6696c7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19dd4619-9230-4875-9e4e-63c27dd7a195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05ae03f-4878-45a9-8600-c50579140324",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25ef2a2-9f0c-49d4-97c7-012a75186feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6798e2-353a-47b4-ac79-0d33dafc845f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1a2a1f-8748-4dda-870a-3a81a50ebe7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "adecd0cb-008e-495d-ade1-f3cc6bc8884a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18450420-6e2a-412a-951b-fd748a6f12fb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c8666a-092c-46b5-b368-fc1690c68b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84784d8-52bc-48f2-9e7d-7282ceb868a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4d27ce-932d-46e1-ac77-557f4b018bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6e75a8-1dd2-4b2f-8bee-0e1114eeb18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354140f8-8697-43fc-bb84-2ca179dcf20c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6081399-dd46-4328-8048-755a0d4fefd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b3c1fd-1385-4c96-a713-16638b7b77e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da610171-7630-49b4-8232-edde2d680b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1216854-f461-42ea-a837-159cbf567dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47dbff6c-f507-4783-8b81-441eeb36842b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de70c12-47b0-4b0a-af53-d6ffb762126d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00edebc8-08a4-4280-8ec9-925acf9828bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6d6dcb-3c39-45f9-9b43-c957be32b950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dedb8018-7f4b-4fcf-b5b0-60a9cc5313d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6de5b7-a3e5-4dde-a3a6-cd6bf130945c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544c6839-0676-4a5b-97e3-54cc3edd1137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c9573a-0d01-418c-b5e8-b11e0efce098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26862ed2-4357-4b9b-91f8-6d2430b9353a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4d6d94-b2e7-4841-97a9-b52e45829d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af979c3-0c16-458f-a86d-ba215d3aadf3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7249b4-3a0c-4831-a438-6963b2670773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddbb86b-4294-4c72-b388-a79b364e1cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104ed3f0-9a1a-4008-bfb9-631d758a4dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe7d275-5a42-430d-9abf-b9a6f3cdc0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25eec89b-e687-4986-a0c0-f772a4b58d31",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dffd33b-e8c4-4a82-89f3-667f252bb2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108baef7-ee0f-4eeb-b929-caee0f5c6e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0989bba1-fdfc-42fa-a7a6-d17af898c55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "054f4812-c7fd-4d52-a8ca-e4ea84ec2eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c050a5-f7c7-4610-99b3-363fa50d655e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2e8fce-20f9-41ba-859b-86b8a145e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3106b71-10f5-45c4-9308-a2c4537a91e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a0c48d-fc1f-4a06-ab40-11f6dbfafb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac76463b-e284-418f-82bd-afa67de9ef50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef157ff-3f4a-402c-ab80-8d9c3cb9deaa",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b9f5b6-f09c-4550-82e1-5e7b7096ba72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19bdc4da-c700-443b-a6b5-2c223d6e83a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0820bc7-4030-4962-9c9b-b46ba90d92c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9bca405f-abc0-410c-88dc-0ede0c1201a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333e69ba-4ea1-4b42-8697-eff62fd7b84a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c8c30f-73ab-4d95-af61-4466ae2e57ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "743ddc95-ce5c-4ca0-813d-c4d4760c27d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b54ae63-4bd1-4593-b222-77b0248f87f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb1906b-1b33-4948-a838-5028e421255d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5900c68-4406-44d2-978f-2a98e43b951a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915ca52b-5dbd-4705-aaea-69265e0bfee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe9c28f-076a-424b-9285-d05b7b789f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d83150-0678-404a-a426-db7926f09b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffd4b64-8914-444d-99ce-8975ed5cf9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c12e96f-9681-479c-bb6e-54bf9c9f0625",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d84571-2252-4233-9aa1-af532e80ba7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264ca725-b55b-4ba9-9b80-1030de415590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b931223-1f76-48b2-ace2-46ae2390acc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e74eaf8-063f-4c5d-8f42-6c8c78028140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a15ee5-a569-45f9-9afd-6badd24322e8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98272da0-2d29-41a4-986f-77a2c8dbab34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e777ef2-1474-4749-82e8-d968e1cb8e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1807be0b-d95a-400b-849c-54db7c340bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d081315-ad8e-42d4-b467-e41da678f547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f17a0e7-0fe8-4d80-8aed-29c2f6d56dc3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e30b208-5b95-4b7c-a6d6-b4b2e13b61b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7833fb1a-d4ff-48d0-bcdd-54a9c1221e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fb8959-414d-4ecf-8f2a-289b60858157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8a3a30-f068-4539-976e-fb648a14f0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919c8f6e-c52a-4a57-8164-df67023c4e1d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f0f79e-46c6-4ef5-b35f-5946d67b9aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2ff16b-2797-4cb1-a19a-ee5a9175c864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987affbc-9e1f-4ae4-97d3-40ca6845ddea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "18618131-f9dc-4a13-9aee-73cc8c6ae426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9612c27-8a85-4e18-8377-43af8280090c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e11780f-bc01-4940-a01b-86de1651ebde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ae74b6-e5cc-48f8-812f-cd10eee439bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba44307-75d9-487e-9b00-30231b08f7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd7dfe8-90a6-4522-a57a-19136c97affe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12078011-a64c-4160-beb5-5b260fc61b85",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc63c98-666f-4ed4-a7f1-f3c3d2e7135e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2f8359-11d1-4bbf-a5a1-f3913c36cedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969e0b3c-92c0-417b-92ef-211e88328269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3c81a1-e6d0-4b6d-8416-4c9e7bd3da5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295b40a2-d8c2-43a7-a237-4d363d2ae25b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f067fc50-78f7-4497-bfcf-ecf842cab8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7718c6e5-022d-4372-8593-cebaef4ab26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614e2482-c9c9-4c7e-89fc-c4febf72813f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a385d0e3-fa49-4b90-a1ed-8daa44cd7649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99876fb-752b-40e1-b0bc-e2b85203a614",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf71110-d38e-47ef-9a65-b0f9fa365239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e28c1cc-e383-4691-bba5-2fa4c9409467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe83af7-a670-47fd-885d-5b6a99ca1685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b37bdd5-4f70-4e8e-b1e9-7a1e2b95c8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cc0241-39cf-4fe5-9c81-fa32c3df3d33",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e9f1cd-8045-4a6c-8165-cdc5f9cd2592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c8d495-1ac9-448c-8a91-fb1fae1e71e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b43238-b9c5-4064-b640-bd81f9de01e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2186abc2-030f-44ae-b5f6-25c5859b1eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f53d04-38c1-4a31-8727-faed241257e8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363bb69d-ee7a-4755-bd8c-f4197b780a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb78aec6-8d73-4bc3-b1a9-e21049f135e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55528ecc-8c38-4d64-979b-14c6875b6701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "500c79e8-c2f3-4f31-868b-0d015f4342c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956a0648-85ae-4a25-8ff7-eaa6242b951a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d94abee-b021-4f29-83aa-24d3814d8f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734ff7a8-d7e4-48fe-aa1b-9a3d05e334e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f8077c-d4e6-4d30-a43c-7b27e5fac6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8732216-4ca5-4e42-b82c-49e37512bf39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f543d46-4378-4835-af85-78bfe92bf421",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4c75fc-c215-45ca-a597-abc9d2d81a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aadbfe2-fd67-45f9-bef8-6f17d2141970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697c9491-5a58-4b17-bd06-4a692b70ee26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12cff3b8-95f6-42dd-a6ff-b23524eb18c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290c948e-4aaa-4903-877c-52f0c7daae5e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ac1e9e-5b3f-446f-a2fd-e79a69e1f24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516095aa-2ca9-4d76-8733-e2c46a5f2ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196efb2e-4ac0-4fcf-a163-d9685955c27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49c02d91-5516-4a06-8110-2d1c8d2afa3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeee459-b3ba-4fb1-becc-f132153b105f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35041af5-7c21-4f14-9347-7cde444946a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6e56d4-a480-4e09-961d-47dc8fcbb502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a687fcea-8822-407e-8952-093697755c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a410e42-1938-4b54-832d-7a9f0db1bb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ba9433-9a65-4b65-9d08-9ebdc3ff1829",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a80cf2-9bed-4ba0-8537-f7ae1c79b2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8f08d8-346d-403c-8b69-9aafcba05d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec53895-e7c3-4818-8b57-dce4a27f2000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eec25899-bda4-4bd7-942f-c6951f02400c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f816cbac-ccb8-4446-bdb9-2e940501b5e4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9932cb2c-e6f8-4ed6-98e7-fbf75471da53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bd42a8-8953-488f-8165-43de05c67fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa35aa9-9aca-41d5-b767-3813927a8897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a427bb77-4dd8-492f-9a17-3eb0445113bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0716159-41bc-4138-9942-b396a4c78cd0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce4d567-86fa-4380-bb39-911ecd516acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c59781-a5b5-4b00-86b8-2493180a9402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8131870-3556-41c6-ac8e-56305e5ed0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4664767-43bc-497d-9fc4-756fcb319c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95ec4b5-5aa1-4eda-933d-c92c9dd6b63e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cad9e8b-e8a1-44d2-8bc3-09034cc36ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e976c1-2b59-49fc-af09-e02ae030d048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87aaf2c-c2ba-49ab-be90-923d17bb73c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb44613a-12dc-415f-a3a1-e3a4e217ce08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf3d3fd-b819-4eea-9471-1a1d34a8a02d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07efc4b-5a69-40cc-b3d0-d3f2d9020286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86289cf0-8388-42ed-9a5e-6a1ecab66c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec69b2f-8966-4513-8935-9f44da036ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "407c0990-6d2f-412f-b656-d13cfd136fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b342faa6-d032-4f51-afc2-11c14fe0f362",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6384e54-4ce6-4920-985b-d8733db3a071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a7dd6a-adda-4189-8e9e-a95899427d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaf9dc3-0d77-4984-b59f-000a18d25f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9becec4-9a9f-4da4-99e8-a0502eb51f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c9b277-f9c2-45b8-98ee-4b1d7701ab11",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60890437-fd80-4391-869f-d5e4d8b65b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f965c4d-c3b4-4458-8157-804be33889aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75749fe-238f-4ac6-ba19-a75db74425fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4397d261-3530-4548-9d94-61a8a06f2d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1bbba4-8821-4c71-bfc8-2ea736c1204f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0288aefb-0c55-47fa-84ae-36fbc3aa51ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08cecbd-4838-4615-b978-338d56a76ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a49a4d-36af-4ce1-a3d7-0981780e2364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9649609-c60c-4441-aa26-6d8550b8184b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e81d39-3f21-4fac-a740-f62d0f1ec54b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0bff89-5801-4f45-8520-5086ff4b3463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a720e6-eb38-48e0-9c4b-6e5736998890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7532ba0-269b-4393-8b57-e5a0489f575c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c556be48-33d0-4eb0-964c-d5110ae8647e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8291b662-6247-49de-9978-ecb8440ca9a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea359e9c-442a-4226-bae5-d91dff646a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b9d1e0-7f0b-46c6-85fe-93cbe557a2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35fc25f-1119-4935-95a6-a74a604d006c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "57a5532d-af15-4af7-87dc-186ca897d453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9331545d-fda9-4d9c-8d87-d74693f34f24",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3ab32a-607f-48dd-b03f-d8adddab3d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fe7d40-bda2-4341-bd12-f620a5a2a81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca78beb-e5af-4aad-a802-4e044649a692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bba275-d17a-4b59-b249-6fd2fba322d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370b1965-6ea8-461f-8d2a-5c3ebda15922",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca74f507-f6a9-416a-afdc-c04665f2c44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471bdd15-bab8-4fc8-9365-6f484aec7b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f591397d-26bf-4070-90c2-27fbede3b9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "54fb1be2-92a7-456d-883b-836bc36c4ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66216c3b-2d5a-42fb-887d-31dded5fb433",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca46259f-74ef-4803-a1af-5e07c5ab18b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074ec550-cb35-41ca-a4dd-6f8b2da4633f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77867270-f538-4485-b99f-6456a990aedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "daf63820-d6cc-4973-bf41-72633bb000f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f57b13-6639-4185-b240-fa2cc80a3116",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542e4974-658a-4380-9c62-a8faddc48a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88569a29-18f0-4b76-97ba-ee662df8c67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654a8775-7105-480f-bd08-d5942f36ad59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5274cb7-c886-4910-91df-a66c39774677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9098221c-4fab-4b77-b1ce-8c7c1beca021",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90125c75-d12b-408d-8eed-b0c1894896d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943c4793-3cb4-4770-a6ef-8969e9452e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38c79c0-f23f-4e4b-8b2d-28e8c2f180a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f052598-9992-4d9f-852a-855ab550bb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e595c256-9151-4ac7-b98e-0e7b0bc1e213",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f97f08-673e-454b-b97c-2108edcf179e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f1d658-1a60-421c-beda-ee6298963a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0e3f35-ff08-41bd-81aa-3f1b524c5b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "047e1f14-701b-4a5c-87a1-38b6bdb752b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa8bacb-3bfb-455b-aa10-427b6874345d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdd4e0f-8e06-4466-8015-04b645a884c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44189626-60f6-4813-ab78-9a061b2c21f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7998e82e-18f2-4806-a0c1-2a4a6d85e333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "09d0f490-9623-4cac-91a4-17d2855dbe04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b214b8-034d-4eca-a207-d833cff86c0b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e5d5d2-8144-48c3-969b-d02527ccf2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf51e5f-317a-4be6-bbec-13a43b03bc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd733857-8fdb-4f73-a2f3-c2b6dbc6326a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa84d24e-6c33-4938-86ef-c0f233cc0699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb9ac02-e417-497d-ac15-94608b959396",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402394f3-df5f-48a0-8871-532ad017e380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b461f1f-7783-4e8d-86ce-32df32cc80fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1853d71d-d45f-4274-a980-b18ff50d0417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce830b26-c64b-413b-b993-74d5419a16e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8285a823-6177-46a2-b797-528789711d9a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de032eba-c356-426b-8695-a16d80e7bf05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2cac2e9-fd5f-46a6-9337-b9cb7427d3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2350288-b185-471a-bc08-4ce2c90baf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82cc4d62-27f2-401d-ac16-4aaff3c15221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b1dc1f-6091-4a04-ab90-04924a5408a1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3280ccc-9eaa-4014-8458-ea085a63d5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20a60d7-af6b-4ee4-b7e3-737de572a8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a4918c-1fd6-41bf-bbef-90b6b1d8b248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b04fdf13-2c06-481c-9946-10bc5075581c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b525d90-574f-427b-a23f-30be0028cebe",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df28328-ea7f-45ca-8bf5-212aa007015d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cea88c9-efe3-4000-9559-a28da1b4b82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ffa8b2-5b10-4a4c-93e3-000474e7b4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5291b294-aa78-480b-a517-09b0acf4ec9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a2a094-2b7a-415a-96e5-6f874512ef7b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a9a92e-a420-4eb5-bf1c-b6bb990fe78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33df3b17-cc87-49b3-a6e1-3d9231b55b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bf785a-14b7-47ae-82c5-22736223dd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd669e9-48fa-4732-84f4-ed570ef22358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae13bcde-f053-45dd-bdf8-e22f59720b2c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149c6710-c81c-414b-80cc-a9130dcabf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf132675-c8a0-4b91-9f13-de597a92b0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0dd35d-e959-4c5d-91b6-4712abfb256b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "104d8149-19e0-46c5-9058-88ed772deab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5166f2-ec6a-489f-af63-5aeba4f58bbf",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2a9106-0961-4131-acc6-e2a35cd412a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8723e5-ddd0-4061-9a67-7fa9ec7ed234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693a124a-f506-402e-9969-b85c3b5091e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17e91bda-b722-431d-b2c3-72d8d6601275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4c095b-04c2-4be5-825d-aa36ed3ce807",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bad7be5-da5c-41c0-b11a-67e07b24267d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb8280e-5888-4976-a47b-ce45b5aa3aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5726cf60-7c8d-401a-be50-b423305379aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c71fa5f-787d-4c64-9b8b-b2062a94c403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dd4f07-c65d-462d-a779-6471ebb100e2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6be9ee-07d5-4df4-9d1a-a5af04fce7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd015ee0-ca39-4807-a09e-8e7ddfe664dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5481df7-ae09-4165-9c95-4779049f9c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7383dd8f-a699-4bac-998c-9b0bf456f49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca24cb0-5847-4eb2-9fb5-d02f25ff96a6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0312449c-b21a-41f4-89c0-210e32bccd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59ca78b-efcb-4b0f-be83-fb63adcff734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d97a030-55d8-4913-82ff-84658e43b52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad33187-81f8-45c6-8055-8d87951b53ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee522c6-490c-48ab-bc67-977c16bc44fa",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f954a7ed-b17b-4391-9799-1adfa66d9609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef800c0-e240-4044-9ddc-c0244becb23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed519c1-be05-464c-b610-47b8d47beb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f798c5e9-33b6-4f9d-8f1d-5e7222cbec34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0735c2c-5919-4b3d-859e-ac5a24de555c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e0cba3-5318-4ff4-a0d8-02fae9926d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7cac6fa-df3d-4c7d-8cc1-ec76d4c197d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257a39c9-9bdf-4115-a0ff-b45eb0190520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8e9c1b-e994-48f2-95e3-9ec950eebd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680d2b73-32b6-469c-8564-170e07b99448",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b2996c-f2fc-4c93-a21a-7dee0ef14cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81febf32-31e5-45ec-b43c-8f0fa7f644af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4119744d-4e4c-4aa1-b331-2098fc00453a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8eda94-1105-449e-af70-5f2e213974ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b538643-fedf-475c-a8e9-a28ba6752c83",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4460463-733d-47fe-9d64-7935383f678d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4930433-76a8-4cc5-a0db-5382a8c12ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c34198-6280-4957-97b3-f049bb3f0483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70e12af6-ebc2-476a-b28b-df23cbcb584b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17144e61-212e-4868-a498-054e03bb8df4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c6f51b-83c5-4f47-a3a1-408cda9b0ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d7225e-c26a-4eb4-9a68-7b240c147944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b776a7a-2f85-418e-83bd-981f5f173be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2966f637-4f0a-4bd8-b880-cc7c15a08bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6710f6a8-6c4a-476c-b227-998327c76e46",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d127fb0-5e1f-47e5-9186-06894ee0f804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103dd4a1-2b5e-4853-afb4-1fa10f35e265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b4f8e2-2c25-41e6-be1c-137bb550fc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1badc4-ffe0-4b8b-94b7-4e5826860609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eeb7fd8-eadf-4fb2-a832-dc8cf5a711e3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b263e70e-df74-4a75-9f2e-d5c27560be48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40200caf-5453-48d8-bdf8-7fd84de56e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b4a6b9-9899-47cc-9b71-e76b6834c194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba17893b-b276-49bc-bc89-8ed06d8235ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810a4b22-afda-4e41-be28-6c2a92579b0a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e204c223-6385-43b8-afba-39fe52dd6f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8b2c6b-727d-4f0d-b98e-bac621c5fd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ac3af7-9b92-4a19-97ad-e1b7a5d92e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4df932-896b-4638-8db8-bc1805a43cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d77b60-e977-458f-a3ea-f370afdd7a6d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a98423-157f-486c-9f13-06c742a25ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e20955b-0dfe-4352-8f0e-8483c69afb81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc6e492-4651-492d-bf83-35e131fc1fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef03b56c-5d94-4e39-b6fa-a57f6024f053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568d3cfd-a1e7-4923-b03f-4fa1c32770e1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752e53dc-6dfe-496f-8366-7cd5a586fb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbf26c9-d5b6-4655-acae-0a7b4c51921b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72fe292-218d-493b-9c0e-29b7dbba4d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f87f7d2d-adec-4c38-a5e4-c582b681c5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3d601f-7d7f-449f-bbca-69927bcbf390",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5e10b7-9238-4a65-ad34-78706b7ff8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2a4bc8-4db3-4636-b450-00c481a4f435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7656821-28f6-44d5-9eb0-1c200fcdd971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2480d6-d07a-45c6-a6fa-0af84b684f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebc175a-1c4e-4a96-93fb-6ff22b47df23",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a531ddd-b1f5-4a6e-ab89-72054e40a536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f795eeb2-8d72-44b4-9855-32a601500e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03619670-07d8-4349-95a5-384f70192a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "757588e0-64b2-41b1-8cce-44ffed0743b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917e7b3f-363e-44f2-84d4-7cea578a10b6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55091bfa-4077-4ec9-b2c7-3eb99cc2a50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a7c27d0c-846f-4590-ae77-4532bfc3cce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d513b9a-d22b-4cce-a248-f7252fc0680f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "afdfa190-63bf-4774-a8eb-13d3e2be1d08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41258821-3b6e-46f4-be68-8bfa9e03aad8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2016044-8663-40ac-b762-9aced6b25eb8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38214671-c0d7-470f-91a2-46e9212966d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e56c0c1-d536-4cfe-b381-a07a7d07c493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bbe447-ddb0-48f7-9e7d-059c6fc785eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46896c0a-3316-4033-ab1f-d06ba9828f4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "199e829e-75b4-47c4-b741-dd6779adcc63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4b9e606-c78a-4fd6-b11b-fe87bc151e85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a837f96-a318-4c1a-b5c3-1c2d84c300dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b97d79e-79ea-488b-abe0-530290bafead"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4dbb87eb-138d-4454-bbf6-79b91d065882",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01de36b6-29f6-427a-b845-a9d4ca5ac613"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "db98ff4c-d4be-4c23-b1ae-46819360f767",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0a66e84-1349-42ee-93ed-ecf938ff557d"
                }
              }
            ]
          },
          {
            "id": "5c53590a-68b4-4635-8a84-6fd609e7fa6f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19844820-9c5f-4a31-8301-13ddbbe607b3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "454e7e7c-cbc5-4a2e-9bf6-41c646c6ee41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9eb9c4b-4cf6-4cdf-9048-7b84a27114c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcb0f29a-becf-4b4c-846e-2cca4dd37e15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50286384-e00d-4f92-b1d0-9c0f57284549"
                    }
                  }
                ]
              },
              {
                "id": "86999431-3e05-498f-abda-961e7fd37d2b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7186824f-294a-4039-a4bd-6f103d93ec85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba146ea9-41ae-43d6-b690-57c2e7cce9e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "448b34eb-6bc1-47a5-b75b-153ef69cdbd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "91f63348-b946-418c-8b36-bd1d2eadb686"
                    }
                  }
                ]
              },
              {
                "id": "5aa646b9-52a5-4e58-a57a-ea856a169ce4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be224640-a2ba-4154-b17d-fe87c2cad297",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "731f0cc2-f60f-4ba2-8e1b-5cc37b7005f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff99198a-2263-4784-9044-4e7d979fc321",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ac091cb9-ae47-452d-b011-1e1e37aadec0"
                    }
                  }
                ]
              },
              {
                "id": "54bda1e3-2531-4be9-8dfb-8dd71cd02525",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83d1017a-1f66-45cf-952a-e7f0278222c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "642a6ab2-307a-4172-b7ef-737dcf68add6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5d44a85-eae9-4581-87af-72e3bf4051e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "903d4525-283a-4b93-ae47-19b8934f07a8"
                    }
                  }
                ]
              },
              {
                "id": "503d1283-9459-49f2-a564-e722f1817349",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4a5b541-e5db-48ff-801c-96bccba3d65c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6bbf69be-fc30-408b-8451-6b5298100a21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df784ea8-947b-46af-a9ad-264fbf8cf5ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cf73a0e1-a004-477d-9294-96fd9b125c51"
                    }
                  }
                ]
              },
              {
                "id": "59591862-a2f1-43f8-9d1a-65bb4c3ccd54",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdef779a-0863-406b-9ea9-8c6f0a09cb37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3f5e4a8-91df-40fb-a13a-d0dd40e38afb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cdee65d-5d35-4049-87a8-68aa61707115",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "adfbff7f-3565-4a75-bdf6-c0b640eb5f0b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28897076-8e77-4bb5-bda7-33a08598a548",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67af06a7-e470-4a88-aa6c-edbdbf6f84c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02b48269-c108-486c-82d8-6b766438b7aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5393c1a-46f7-4422-a8bf-873d3bf3dc1e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07779ef4-1082-4010-96ba-df8a14424856",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5e9b4cd2-18de-4242-9160-fb1d80823012"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6775de8-66a5-44a6-8d60-f9763c83e189",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0011af8-34d5-4515-b3b6-101f50ff6ba3"
            }
          }
        ]
      },
      {
        "id": "f6addeb4-dada-4540-9e15-7a68f4e651f1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f3d19ec3-3816-4ece-9e1b-3b8cf5a5bb28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c54b5bf8-4bdd-4509-939c-96c06fed654c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b9ffb40-4771-4528-908c-d84ac092bc98",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9f8a0a-8729-44de-a0a6-818e898ac1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa35876b-0935-4034-a406-bf059a64a611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efdc01a-2559-4d0d-84c4-17d2c5d58373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc271516-9c84-4176-bd2a-ab82f149f748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a283d35-58d7-4e24-b0ce-b020ebf79850",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3822f4f-187c-4d90-a859-4195cd012362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d93142c-f31a-4e86-af32-c37c3e077ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f5b723-abb2-49b0-a703-e3d599caec0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4eccd1-a486-4fdc-b997-dc4d227b2147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10882756-22c3-40a8-8e21-aac016f81425",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216c1603-a7c0-47c7-b72c-06f753bcbd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892d36fc-5db9-466b-b10a-d5802493ee73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663ab48d-c3d1-4977-af2a-b4aface13b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60d63802-c950-4ab4-b5b9-0ec57e04ddb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f944c985-47cb-4ffb-9aa5-a0b9117c05f6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86050ce7-2cdb-4949-b3b2-9b4cd15a4964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb8b59e-9daa-4efe-a7ec-b1060a5a9b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22df9abe-4ddd-4095-8774-33e1913fde36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abdf871a-509d-490d-9d90-2e624a725558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd22880-55bf-4256-a7f6-e8fde146b7c9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4bf08b-b177-470a-8c3e-5e4712d771d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59be2462-6e67-4070-82cd-2aa8c44d32ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb4650e-70b3-49fc-9be3-881f7460a827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f551993f-92a7-47c9-829d-134fc85a970b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3dc41c-8746-4b2b-ba9e-6a860a17bd2d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333b3e73-3b1b-4d20-9ab3-9e54b88d4559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6523a37-7cee-49a1-813c-e1a9604f978e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7401c78a-039a-4575-9a7b-5c0a46089e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "891e743b-5c65-4330-8c56-7e8a0bf025f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c117863e-a762-4ce5-875c-900711a0a6e5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a8d870-3db9-466f-b523-bdfc6d210da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ba8891-dc7d-433f-9ece-4d782575d90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abbca3e-96e9-414c-984b-353c83a03019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "712d84c3-9f19-435a-aa69-c99be146c57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807c1676-b829-4a47-bc6f-bd037fa294c9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b3a959-a164-47c4-9a80-0c999aaab3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310929c7-3bc7-468f-86db-271f1bc47744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1dd882-254c-4b91-8453-5936ae2bf54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "745dcc97-f9f6-4b81-bf4b-eb4a66dd8fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6838aca2-1955-4c8a-ad3f-eb4ab94853ed",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3ea007-a5f6-4509-b85e-a85ae760912b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a949c1f-455f-4bfc-96d2-47ee4a5d4a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e68d86b-8baa-473a-8302-687612223543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8338d77-247e-4b48-80d4-2e2639b9180b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3822d42-ca02-4592-9de8-448e3271e896",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65664519-7fcf-47d6-aa12-b873dc21d849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7daa8693-4b39-4fc5-b4e9-5f2c3a789c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02bf846-4e3f-4ac4-93f3-cf4f04fb264c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "217e080a-9343-4a58-b3a2-0ac956c580c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582c2cee-ff12-4aff-b71c-35b617255efe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e46db9-a21a-45b5-92b1-f6b59a12dd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa5a0df-d7b9-40d7-8818-d75697a725f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7503f4ba-64a7-4dcd-8ccc-74907a27f81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "25d5fe03-5c39-457b-89ab-28a31ef36469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e705dc3c-d74a-47e7-85ba-4d9ba7e35515",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0890fd1d-bbfa-4f56-bf18-29656b10796f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abe2803-bc75-4d69-b358-ea1cd6049036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e1bff1-21d9-4710-ad7f-c3a1ec6025ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b86e6c2-097f-4fca-bd69-46adb811ae7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462c4f2a-469c-4293-ae94-934ebe443738",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a1c145-5b1a-42e3-9b68-4f20a5cc835f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb9da20-ab88-4b9c-a4e3-b7ff75885978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4002d490-4fdb-4964-8872-f394ac1f620a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d66687-770c-42ac-ba7c-64b739b76e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ea5b9a-fba9-40e0-97f6-cebefc7c8887",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee68858-a306-4457-8647-05571b38f5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e1bd05-96c5-4289-83a8-bc6629ac6985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cca65d4-a1dd-4935-a812-2813340e9399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "744a80df-c6eb-47ba-bbc3-436d839714d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b276ea90-499a-4ff7-9a42-abf2874c2b01",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c48d38-f8b9-4a2d-81e4-49560c91e267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a748290-3e55-48d0-998b-2fd78ca5d97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25933747-9708-497f-9df1-53184e2ff72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c50d70e-8e6a-49fb-b400-6fcd23fa38d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543fa1c7-c865-4a4a-ad7e-21591a1f66a2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3199f55f-65d0-4639-b3e2-23104be4b7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c899d33e-e468-4d13-acfe-0afcb2e9417c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ad9309-1db0-4319-becb-ba5dd40f9fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e38360-5349-41be-ba3f-d33352681a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598b50fe-5e84-46bc-a373-5e6dd9c64cdb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18db537-a0b2-41ea-b7b7-209c184475d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1f3be0-bd75-49b2-9297-002b23457d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131d1fa6-764c-4412-8482-02974e98d1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b31e53-dd9b-45c3-854e-ff242b84f8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684be843-0188-47a3-9af2-f6277a2b306f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a5ee7a-f7ea-4646-8952-7a1372dd2a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dcd93e1-7783-47e4-87e3-be76a0af13dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e258559-6ba6-44f1-8fc1-afeda64031b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cac86d5-d3bb-4df5-a114-9a25809de54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28846b5-d688-412d-a338-195fb4c76a3b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74982874-a378-461e-9a0d-89f84abd8457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c214975-a45d-417b-955f-bb4c51d3b78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa84ea0f-54ac-4f4c-a44f-d02a5890f659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76c38e52-56cb-4a02-a528-19aaa71e6730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73acea8-7b65-4199-9ff9-98aea667d491",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde6cc49-cef2-42fd-9574-a14c61bebc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d86912-af15-4d4f-933c-bd8f7ad6bf11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431ab818-35b4-4ef4-ab63-3bc99be5de56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5801465-d975-4bc0-abbe-44027fc53834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a45639-5d5e-4e50-a1a8-833d8974d31d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2d5a73-2256-4fe8-8b4c-93608379e6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc1c11a-fbe3-4314-86d4-41259e113988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda1f008-2813-4128-a76d-990e883d786a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de34d202-6b1c-4bc8-81d8-77a536b30e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f8cccb-19c1-41be-9cd2-54d8aa365a1f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17966e5-970c-47e4-88e1-5c0a81ab018d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8c4b48-8cf9-451b-9d61-929cf28bb38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21baed42-8c93-4396-af1e-ebf8e95cf9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e91bdda-77c2-47fa-83d5-22a1cf575d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f799a1fa-a5fc-493e-b060-c554bc244596",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a57983-d945-4045-a29d-b1ad2e81d1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d981eb7-cf60-4bf2-b282-201071ccdc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e486023d-2970-4ed7-b165-525ff167fe4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8902a987-d3d6-4aeb-aec2-c5d3652bb0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859cbbd4-5394-4e3f-aa59-c64239734300",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1586e457-b3a4-4192-b565-e67058ade993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bec2ee2-9b2f-4f8d-9e24-a3f2140ad6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10dba18-ec5e-4ef3-a93d-d53ca6c4b1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d3135c-068b-4b7a-863c-27c3da0b876e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f161e6f5-611e-4a40-b0cb-80850274b5e4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5857ce-5224-48ac-a196-80932c0f07c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b7f24c-b8ca-4c5a-8380-0bc0c18f1a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99069730-a667-4e0a-9d2c-1ade0c9056a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da2b262-1e22-4970-af1b-0e004786d8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549a3fc9-6ace-43f4-86ad-dbc524b131b7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010be8bf-da3d-4193-a43a-2e3599d6bd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187610b2-9c15-4339-9d84-370f77ffa2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1e9882-339a-4d51-a0f2-48f60e0c3d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "224f53e2-ea40-4609-925b-ad4e8c932462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b67b251-6ae0-490d-b96d-3934a2e6cfc9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1562921b-4c4a-4828-b45e-15d69bb1e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6ce5bf-b75b-4d0e-b955-6933f203d9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f00256-041f-4f78-8b9c-0571bd80c74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef759de9-3cf6-413f-b5f2-2b5ac023dc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0454c04-1da6-44ff-b875-c5966a817d2f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f32c2b-2e35-49c4-a135-9a153e881adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4ba356-8429-4428-8d35-73469ef14f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d619f824-0204-45ba-b6ed-08fc53dce738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87188b0b-2673-4bf1-b913-a5079f7b620a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbde86a-ebe5-4ce4-bd97-4892699f9517",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157c3957-cd03-4a86-b35b-e04ea6c2cfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb7819e-9a03-4ae0-8859-a7024ec6e5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b1eb03-838e-4c06-bfeb-cd45ba636ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c564ab-d784-458b-93a0-97383f834fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a453f7b-0022-4d20-8686-3b48ca1ec6bf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6542cea6-82e8-4034-a0d3-f8e207e14aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff3da30-b1e5-4d49-94e7-592e120d155f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b28814-16f8-4691-935d-19b7f0a26b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdbc109f-1ffd-4cfc-9616-c472593bcf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f288d25b-f2ca-4119-b086-8718d052405d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5126dd-343f-40d0-a6d8-f7efa721c516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe96154-7517-437e-a12e-654e558bf3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58171882-d280-489c-8d1d-5a6a4ae23ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df9c2c49-1377-4e4a-9799-82beb792d0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd588553-c794-4ebf-bac3-807e222b449f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d72fc1-5af3-46a8-9918-940608499349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c0dd53-0952-4c6b-a8c7-1a9a3061cfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34960e0a-2709-49a7-a3cb-167dff02f54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbc22d6-152d-4be6-80ef-8552d97bfb99"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "877b840a-e42b-4c5d-8c23-035231c088f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "086bbfe7-6fb7-44c6-83dd-034415d749b7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a72173f-ce6b-4881-b3a0-6eb02546e96d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "47cfe381-7471-4c77-9313-4ebf2a907884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0a43f7-c1fc-4ac9-9d81-8ab1636e51f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dea4b9fe-09ff-4b2c-8f35-8f8a3639cb60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17d83b5d-aa2d-4558-b42a-1f45edc59dd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb4193d1-364f-4a40-bf90-64b62630b9c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59fd031d-2c29-4449-84c5-b85a5818db4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ca1c530-fab9-47f2-aa76-efe530ed75fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4c6000a-5934-4c55-9ad9-c3f647751c63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "82a555a9-9290-44e2-8fab-bc31c223570f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18822a2f-5409-499b-a0fb-e55fcabe26ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76ceffc6-56b7-48fe-9839-d28102671e6a"
            }
          }
        ]
      },
      {
        "id": "688bfdc1-ade0-464f-b703-19ce3fb831fd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e064e522-fda9-48e5-8ef0-fc0d7fc8d433",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e6f5802-396a-49b8-a0cf-9bc5c64e9029",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ae96f448-b7c8-4a4f-a33e-11e0ca115726",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d81b7b1-4b5c-4579-9cda-4a7b40e8da87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce7b1e3-80ae-4866-ad56-56e5600f8eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84546cd8-0db8-46ff-88b2-f6a413b5ec09",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a08fa8-c5e5-47ad-b038-412fbfda9001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca1c1da-fadf-42d5-923e-3e6f88cb1172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837811dd-04db-4e57-84a3-ca26bf6eecd7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d83071-b83d-4f47-b4ef-3cb491952f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c17c1ed-42db-4833-900a-c660daf80324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4c1c28-9514-4cc6-be94-6aa578aec027",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59faa8e2-7375-424b-8d44-8e8ee2f93c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3babc29-36e2-43a9-b758-cc7515f6d466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44714602-3add-426a-b7cb-35dfd31ff433",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f8c0b5-28fd-418e-acee-7cc2596cac4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23da491-ec0b-4d7d-b16e-0ea76be43ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91090cb0-67c1-4a90-ba8d-75bc4f444644",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa8b159-9ff0-4476-a580-628f2fdba032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb86126-1a24-4580-aaf4-9104089a1e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db158c2-3503-4c1c-9d9e-ae9c7760ea33",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a54dbab-29ba-48e4-98ef-776e1c4e25ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1d3772-3fd9-49cd-84bc-8aa36dae89db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6981ff4d-bcb3-439c-8a72-8d62326de749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c3de44-f084-490c-b6dc-00debf85bb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36ed452-59aa-493b-8eb1-ca1fa971a2a6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462f5571-d85c-4b7f-a053-ed4afd63be4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5bb9607-77b2-44a4-9a9b-224b3e17c5f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9944cd16-347d-4336-adb4-973594ebdb49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ef8164-4313-43f6-a5b4-bcf2949d53d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dabcbed-1865-4140-a450-2e5924188d86",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319d52e0-40e3-4c06-90dc-8ae5d39667a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "092feb12-65d8-4bfb-923d-2db7e76ec79e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9282c8cb-866c-4b0c-b7d2-20eba143b7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597f296e-f30a-43a0-927c-9a34742bf166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dcf65b-19e1-471c-a3bf-5194b192ea83",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2db5645-f010-4c2e-aa56-2ff6bf2a6384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ab87c57-fc82-4e3b-8ce5-c9daaf8a062a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d81e039-234a-4051-bb72-b64430e15dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1424c359-79cc-4457-aebc-07f8f540e9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37d5821-d220-470e-9955-8345d00169bf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b64b3b-e6d9-4117-996f-3fc9d9d6db00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3776f959-85e0-4636-aae5-f778704e25d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a92da0a-b7ba-4da5-a64f-7d3b999d95a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b6d740-4e99-45dc-823a-8a35f5d5a076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816c0e55-b254-4a4c-9968-a7476f83ed93",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0996946e-1e95-46bf-b576-227c1efa1f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6cf1e1-db77-492f-a015-a8351101d3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2099259a-ad58-49d7-91b1-cef7b81c17ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69457c60-7762-4702-a78d-a88583820510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e73877-a632-4579-9720-7a31e4cc3d12",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984278c8-2a95-4129-8051-1ce8a13f20d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b571d3-e345-4e2a-a5fd-bfceeff5ae0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4bd49c-2af5-4333-b047-6ec14b39c05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e738e1-5e07-4816-8e55-5b51dcb469fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c0a48f-1688-4692-a967-52dc579310d3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abc3aae-cbef-4173-b7ae-d8c8e4b66ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96789aec-a8e2-471f-a551-e316f1b2446a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92d68dd-b249-4278-b613-11318932117a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94884170-2b98-4fb2-8a9c-669a55b24dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1f585b-3720-47f3-a947-e726d22434e3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140847f6-42f8-4951-abe5-0e52a0ca5e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07eeeabb-57ed-42ba-9991-295334cfc43c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850bf636-6d74-4265-9e03-50c522def96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c24ae9c-1f5a-45a5-b328-442cb44d0753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b88c67-7b51-4a31-8893-8b00b63ab4ee",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c21d831-72a9-4dd5-b298-6542be3889f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab776043-1415-4ab8-b88f-d40c651be97b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fd6c04-9038-4bd8-ab7f-f9c90feb17f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dfa04a1-ca4c-4a03-b4cb-4ee34e2b3fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3a9973-66d7-4bd1-9bdb-31f96689c1ca",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563aabce-5353-4dd7-b668-efacf40493d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2092c773-3696-43a1-8208-ac186b911d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742d43b3-f7f9-4010-975c-0bccc6eb3c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a4d4e2-d6dc-4c97-972d-62d39781c841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11681a5e-e3ea-4552-82e2-13dfa9c5c5c0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d165f2bc-02b7-407e-8845-7c788b6cab60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb445e29-5984-432a-85eb-c39e07c06248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6531c58-95c1-4a8e-b44e-d50a0573b273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecd0b8a-db16-4f65-b682-151b119ab1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340cef68-1c4c-4540-b605-f41452acae45",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93703c40-e7b5-4d0e-af95-f072fc0a99e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1021a75e-dd63-4b8d-9b21-c531be31de7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bfb8de-6f00-42ce-9379-8fa6bd2382f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670c91f5-e9ee-4c7d-9adb-f8eee1754b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf3bdc0-5e31-4e7f-bb87-3905b23f8b84",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44643394-4393-4440-bb51-bedfd230014d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55eae17-959a-4b14-a1b8-0660fbf5d0a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437fb223-7b7c-4676-aef5-e7542a3a2422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ba41c9-5d75-46fc-b47a-71fd9f7b7027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a72bbf1-6249-43f6-ac44-58a1a3d4d9b5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53742b8-547d-427f-bfdf-920d78e798ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4409b1e8-3b8c-4d8f-a490-900fb56899ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fba9db-1d27-450f-9fd1-ad10214ce997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bbc655d-c407-48e8-8f63-a27807646ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a963890-695f-448b-86e4-bd25f94b4fa2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff555af6-47f8-41a6-9612-3e5a19d20683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127a44ef-07fe-4ee5-8a64-f6752297a3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4774ff64-e27d-4e60-9e5d-8700ca1e0117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d70e51-cd7e-42fb-b0e3-d28d1ef1136c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfb986d-eb50-4272-b241-01104293e906",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d65c81a-638c-487b-b047-8f00f717938a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05dd4885-9666-4cdf-ba80-bf506bcacf2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22099d7-0795-40d9-8cb4-f35528a46198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2880aaad-21a1-4322-872e-1a0816ee481c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e67d4a-60fb-4630-aa59-c47196f96fa1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c314785-29f9-41b5-af1b-106ccdeef3c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9418e9a0-4ec2-49d1-a4d5-c0b42373bfea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bcc43f-8a1a-446e-a129-9e44e216ad38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8843244d-8270-431b-9682-1ed9dd7ddfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0639f171-f280-4abf-954a-227bf9935ee1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e581e4fe-b97d-4a22-b6d5-59e66b1d531d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff7a903e-2c2b-4db3-827e-5d91989267cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e00950-600a-408d-90c7-fdeccf300249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9122762a-6ee0-4b29-aa85-06b7ae6ced6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e312db-61f9-45cc-8370-6c4b7b651717",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e617f3-be8f-4cd1-ad17-233d36c29a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a3164d4-4724-4474-9e2f-05d36521b6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a4429d-bd84-4911-8ea7-d9a2ec7de9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0441bf-dd91-4891-a8ce-06829305f6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c1e53d-0f9f-493d-9fd0-73b6b2efa2ff",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2208ca-de1b-4d0c-bdaf-bb6cbf033c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39d08d86-0698-4433-8ef0-5364a9f00deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dd70c9-b706-4145-9d51-293a19134c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e9afa8-7a81-40b1-b361-ee8a65685800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91c1f80-9cf7-41bd-a980-6c5da8b37379",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd0efea-f5be-4b52-bc2e-96e879bea0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ea254d-94eb-4cb5-bc30-a2156b0d76d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3751518-99a2-4455-a9c4-63095e577372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8319ba-7649-4806-a896-65f4321dca13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63dbb24-0ea5-4144-9b17-6cf2edbca416",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a95d64-f613-417d-bd46-8d51ba7a72bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f602fdf4-6d55-4233-a40f-28d87ec11faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336979d2-5c5a-4540-8d41-d5aae91ac8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bba750d-2e6b-4005-898a-a77763eca482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd335f85-25f4-4514-9570-5f6ca01bb67a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82057e8-e72e-4d89-b830-0b4ef24afecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea472f30-6041-41fb-8426-581e34f2dbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50957a3-ed05-444e-bae0-f3c1dddece8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9655f6f2-b773-4581-b8a9-09961f45b2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d4ba70-43e1-4dea-abcf-2af48d516746",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bf42a6-8c32-4fd5-9004-a30788ca5ed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8dfc19f-c539-4031-b57c-0b7e7165825a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d83b09d-252c-4fa7-84b2-c95ecc576dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9812e24-38d7-462b-8491-869910972806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05784128-221b-474a-bfbf-2373163fa21a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b1f085-b0d5-4012-9fd4-cfda3e6bcbc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e06392-4955-4df4-9822-9044a035141c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747ec5d1-2e38-4a7d-a985-8b68a9359d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea212b0-39c5-4cb0-b72a-5a3f55fc52bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793f29aa-235d-41f1-bdc9-91e35ef0ad87",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8a9fc7-117d-45e7-a86d-c9104c156f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e06c0348-8974-467c-ab0a-7e167c7750e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08202476-da71-46bd-a53f-824b2fef7bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ea5e4c-9c43-4c99-8fa1-132befa0281c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd90637-141b-4def-8eb5-716f6e106da9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0308e7cc-84f0-4414-871c-3368ee09e929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5e3949-f151-4abe-a666-0a7dc6b8a680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4b7368-bb38-4948-b024-8cb57064d175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c5307e-5dc0-4521-822e-434562c4d102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378e1a29-2e68-4df4-96e7-dec776a594b3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e326f2-b32c-42a3-81d6-61d499d2dcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61d433b-13b9-4b8f-8f91-2a40acd5c3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6908973a-5671-4dbf-9a68-563e58a6f935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53ea61b-ad1f-4c0f-a978-92e13909c9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dc97f4-4cb9-4949-8fbe-2ade72acdebd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cdc0b8-40f8-4655-90e2-4f8ad29cbfbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802b3d83-ca79-4cfa-9ef8-8d69e93cbf3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae16c54-746e-43b7-acb3-5bf167b9e589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f47c69-dcb2-4a53-b983-2660d169b40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ff6967-9392-46b1-8151-5e0e5ef5b271",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a209584-7f07-4db3-a8a3-82ad7814f1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad7ccc8-54dd-45d7-bd74-128e0f3c59be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eb1cb7-beb1-4d7e-b6dd-0f6757a8d900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101210db-e700-409e-b682-f5c2dcc6364e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2093718c-a979-4b0e-8533-6da68b69f754",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd532a96-d3f9-4b3c-b63d-fc30898220eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b063c177-5354-407f-bb1f-38e1e17ed913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6a5b06-a693-41af-87b3-1d2b9ffa828b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbdea74-19d9-4e55-bc31-474e269a3b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c87630-9bf2-4daa-9e70-89e0e419e25a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12ec959-1aa3-4989-991e-fe8cd8e59a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d939b7-39ce-455d-8c5b-39c9042489ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7065465a-64fa-42f8-8c26-ee8c6891de29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2648dbf8-0005-4c64-8d0a-0fa98e741ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ed128e-0c73-472f-b9e5-45b0ef1c7ec7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2a36e3-33b6-495e-83b9-204e61e91fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4372638-26a0-48c4-abc1-dae9280ef1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b18e015-769e-4210-bf44-99e1e86345af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd907e73-d12a-4e5a-9e8b-190d76b95468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3deb7ccf-b911-4655-ae7e-7f3b0e4d755f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622363d6-99b9-42c8-87d4-2ca9a9ffb1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ede8565-d595-4998-a5f2-e1b60f499f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9fce9f-81f4-4426-87b0-5b611d688341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f46bff-5926-4399-82e0-c7d97e0a2c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c586e6e5-1de1-4061-923e-1dfa25e22e40",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2ccf2b-82df-4c62-aa6e-6d2341f8b76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cf0a5c-51f4-4dd2-983d-e0c7e7eb5895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17adbe6d-eed4-4443-862e-6a801fb87f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2446f831-4d7a-4774-b33a-0e99905be700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb7e68c-f5e5-4b5f-a8bb-21199a200c81",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee3bcb5-28c4-4393-b62b-2029fbd0fc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c74e341-3feb-429a-9772-7d61a54832d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904be3be-7343-4ed7-be53-7d5da35ba780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc42c4f-60e7-4a61-8c3b-b0e9a9a1712a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27794f58-ab39-4d37-bdb2-c5c54eba1714",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89a9f60-f50f-40a7-9dc4-1a34b838acc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f488f13-bd8d-4e72-8224-ef15c8d289cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "161f5b08-8cfc-44f7-bae2-5013689b3a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3118b7-a2c3-4bcc-83a4-9fd0f937d4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48a0cad-449b-4962-9dac-306a0fc51953",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7aca870-755c-4380-9b4c-999980098407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6b5ff4-5c48-447d-af50-a5200bfd06f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa31379d-3a5e-4a86-9390-c4683b68b5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd860f41-985b-4196-b5b3-c721f90f0794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04480533-ef89-4956-a1fd-0e9d07563679",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90472029-8d74-43cd-888d-2a37ee86ad90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c1b781-ee94-442a-8ec7-8698c63e9e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5694bd1-a9e8-4805-827e-31f08fba9478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78329107-d680-46fc-ac52-9350acd01b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792bf845-e97b-4db1-b90c-6797562f0b7c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0150cca3-bd60-435f-9279-4237cb7f7682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597feb24-7c17-4e36-afb7-ed28fbd38125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73063e79-e635-41b0-8a63-38ec604d9b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ad8cbf-923e-47c4-80c8-9b015f0f8987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b86f8c-3163-45b1-b2c4-2323960cb053",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1fd8dc-f272-43b8-9b0c-84a84870bac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b285e56c-1e2d-4823-8328-b411cdf590de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e726c743-5914-4c7e-ad84-72e7ba682d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efafbf69-a284-465f-a912-96141dbe24e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4c35f7-782b-4236-b28c-a6e0acbec8b8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae9b747-b6f3-4232-a82e-0ed33dba093c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66832fe2-8a2c-48f5-bb88-031e709ccec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb3c153-764e-4245-ab4c-51bffe9d54e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba739ec-912f-412b-af94-b8a249015bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72912fb5-9895-425d-a85b-c14ab868efe8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5523a4a2-61e1-4723-b130-5d97b2d61f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1f48ef-723a-4659-a092-56423e54e864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452be828-bff1-4b82-82a1-cb5d1299652e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e02c61-c84c-4498-b0e6-a6460e3ed0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362f448a-02fe-400b-8389-057acc95a0ac",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7939ef7f-87cf-4177-adcb-77a6c15baf9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1d4fef-98b8-413b-82d0-8975c72dc96a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b594deb6-2cb5-4bd4-b02a-fd611475467d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e588a24f-bded-4c9a-ba9c-94326041487e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b20a71-8d15-4653-b2ca-b4b90923530a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915f1353-9dfb-46e2-9535-11d4b0909320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56305c0c-b85a-4a85-8b32-dd5609a29bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de46f63f-7362-4225-800f-db487d8c5ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbf1046-6af9-4fa5-9d9f-63092f2165be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9b6af1-79ee-4c53-b193-50b003b22d00",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20d05b9-609d-4cd5-9ed5-f0b3476e5dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23d62e8-bb41-4737-b0ae-940c4e7e8f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b3d5fc-5f20-4832-8922-0183db567af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd768fd-6ef7-46cf-8dff-402326e3e183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675319c7-d3b7-4f03-b89c-8eeef6abef85",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e44a2a-412a-4c0e-90a4-96883d10d4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c415d6-3d9e-4581-80f1-b48027536aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06838fe3-6e7c-4b8b-8669-ba7e0d3b04b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c70a42-86f2-4aea-8670-1467ffea3d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e82b9f-662c-4509-a179-b94b61c0b1fb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8e3ceb-cdb7-4530-ae98-f800e58440f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a292fa-4a33-40e6-b20d-27c9a42fd9cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1076c1-dc31-4e60-b7cd-2a3359211380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2756ca7f-0409-45bc-99a4-1d4b0d36e2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92eedfdb-66cf-4c6c-ad82-7cc5c9788573",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a0a508-1192-4467-b91d-f630cafe9cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81451c6-84da-49b4-a5f1-7148082f5ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448fd2b4-860a-464a-a6c2-c18738c0d982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96709c50-93da-4e7d-8257-bd9fc4c37b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0a941a-e4ec-4476-af45-9572578412eb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e26465-a0b1-4115-a597-db6b3b616dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dac389d-3b24-4377-8129-6c1a2af177f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa90da64-a2b0-4e37-8d13-24b6eeb60743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae645ce9-e4f3-42bb-a017-d1711a78bae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520ed7a4-8cc3-42cf-8bf3-b1ef7008c838",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d580ce-1966-4e57-a85c-754adec0292a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ae134e-abae-4035-bba7-601a4453b0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dea39f-7746-441a-a3cf-e3cdfbe550ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf7d45b-7149-4707-8919-fee6ad3c341a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7844d574-5890-4bb5-a7c4-a4db0852f3e8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d314bf-6e94-4444-b9e3-48ef9c4cfd0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ddc64e-5622-4d83-befb-5561b696a94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "272c6741-387e-4368-bf4f-9dac0a8db882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914e28c4-d236-4b25-b15f-4a01aff55efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bae042-1092-4c03-b4ea-92ce33fad64e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd692756-05b1-4ae4-b652-796f9b134af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8bc582-d7f7-4006-adfa-5bd4dcf18189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989f21ba-69d9-4324-b978-121f8886503d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fd1a98-a0e2-4b33-8218-f49879c31865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70183d83-ba19-435a-968a-bb0edf015b0c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fad8de2-5ea6-4c2b-b42a-350fcd2d97d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb6e4d9-978c-4159-86a7-8b5a92f8f3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3a897c-f812-4e4c-a3dd-cbc559280f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44b27cd-1b7f-4c1d-9169-1e69db97fb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be9724e-c325-46df-9bf5-eefc13e499be",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7cc233-5146-4c97-bb56-133f7556b16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aca89dd-c1d7-4a05-8ab0-29474cd5aacf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded2dbbd-4268-4b0c-acd2-c197a011032f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9ea099-438a-4eaf-95db-be343f0a6cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c9e2bd-2949-4ac5-8f20-7073791d36d9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae46568-096f-4866-9f65-0dca075cbf74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5699586-2114-4fe8-a947-7a692428d24a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2c9bec-a653-4c44-b4da-b79803264eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f160f7e-6a88-495b-ae35-4e42690080ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d1a9b5-885d-447a-a20b-305e40edbf94",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270770dc-2fd2-4b30-a1c1-b4e7789e03e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab08e8d8-b882-4e2d-9748-81a978d16a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8261da9-a7f5-41a9-b829-65400e08386f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2168496-dbc2-4f44-a4e8-829860f17d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259e3d8b-a9cf-4589-b3ad-08cad1135f28",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1347fcc8-bccd-4604-8a50-a73844f7ec34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e410cc-07aa-43d7-87d5-810a7f645a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf3ad26-83e5-4358-b646-ba69ed9f8deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd3506f-25b9-4a73-a0ee-588c629d17a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c88a84-21ba-459f-a83b-5a1b0a8130b4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066a4ef8-fe38-4e1f-9cb3-c032d2275ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff49c142-4cf9-4f1d-a580-9914ac8c8314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c01029a-1bda-4080-8b6d-24f4807ac615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417ca88f-dfae-4d7a-8126-31822509b528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52377950-9b2c-47d1-b6dd-bc0aee0bbf41",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4940b6-5f07-4396-ba2c-e0c6086a94e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7759edbf-943b-42ca-a8d4-29bb64f97579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72629ce-cdc1-4386-b34a-e47fa5f56b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315abf34-a174-4533-a412-48f35feb02ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58066f51-2897-4a59-be57-608ead6bd910",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165f55ee-11c4-459d-b404-552d1c3efedc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa78f34-f9dc-45cb-b195-11fb44944435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62fe407-882c-4b60-bdba-a5e3a74a8859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c5cef5-4309-4e88-882b-ca86e2adeaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08178381-0c7d-4f53-a0d4-555cf24e6a4d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a245096-929a-468f-bdc9-6c6b04fdbe65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c195e321-81b9-4b2c-8e60-bc760d6f47bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6cd5da-c297-4e58-98e8-40dc3b63d417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75b5208-1044-49a3-84cd-65fa14085be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44486ad-d8b1-4cf9-ab7d-4930fd0d93a5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b73b45-6a37-4e4e-bf36-01bb6ec518d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ea3a4d-0138-4a06-a8f1-5553ecf0884d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73bbca3-0900-4525-a597-dac322e5c88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb9ce02-43b7-4faa-93c4-6cf1b42f6820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76f607b-9ee6-4cff-b919-8c16ad446b64",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78372e49-c6e7-4a7f-8e59-fd50ab91dc64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ea9db35-28f0-4e77-9953-b51c432b31c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9195cc54-4388-441a-8509-c75aa8cdbeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1789051-9901-4447-aa91-89f3aa617abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6af52c3-f9dc-49ef-b3d8-cd56e20927ce",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605640b8-3e1b-4c6e-b376-a979349f3e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ff1c77f-3b16-4c02-901d-ceca92a15342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1c3652-203c-41d0-bb59-022646f10dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1810c4be-ffe0-4136-add7-aeb3ac58b86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2142e6b4-b6da-4689-8c2c-6ed900b279a3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ddb210-321d-498c-a4fd-1067b2d7dc01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f84f06-81cb-4f18-be19-42c99fe78e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b736a6-f5f4-4bf1-9293-e4bbea781572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0cc2ff-0457-4684-a7b6-ef10abe3b7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c7cddb-9ee8-4fad-b9ad-155cf87a320c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bfc2cd-c9ab-498a-b2e9-3014e4375219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a846a32-1385-419f-ab3e-e4ae16920504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c8dacc-0283-4ea5-8c94-0b4179af0456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4909a9-cfdf-4fe2-a8d5-eca311f80440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda90eca-e20d-412b-9577-086ec4cdea68",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a44893f-48fd-44fd-8af5-f97bebe561a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5227f23-c291-472f-9b00-e7a93442f207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102b048c-9e8f-4492-b11a-23b984f193e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a423d2ee-0ed9-48c1-ab06-7bd12af3a4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a457697-17b0-4aef-8d0b-20538ea5e957",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe773f1-8b46-4ace-a587-0e7f4ff1fb67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a4dacdb-b77a-4b7b-8e02-6c39ae9212fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610663b3-9ef5-40d6-8668-9b80e53bf953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2ad757-feda-4b42-a597-f958600d5911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e1a0fa-ea15-496e-b4cd-aaaa25ee9877",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a423b43a-701c-4976-a032-27017add5ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01f8d14e-9bd2-4bc4-a49b-f2d702104568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e28175-d71f-41ea-9104-65f97585ed79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31beb5d7-1249-4b49-820f-377c71d7f281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f5722a-6095-4b51-b185-eb83886b459d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbba398-34a8-4d03-a5e4-48ffdb10c28e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98ec3f62-34c8-4007-99ec-e94cf50346fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749b4077-12a6-4936-9ed8-71f0b042146d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ec6712-ef66-4534-8327-aba9e01b8d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc53095-b9dc-4eac-abde-9392f6fb36d6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3a2152-6ff7-4813-8ab7-5cc4c898d472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d0f2f9a-682a-46f8-954c-6bb0849e3943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082d71a7-81d3-4e0b-8106-11223a1e0f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0077d74-8a27-46c0-a79b-289697b32e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38fa7a6-c732-4e82-b3cb-96a254cffe6a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c4b549-b7b7-4b18-93d8-3cfe5df20103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b4e22af-8ec5-4a1e-b6d1-2307ebdc9559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa30146b-7055-4a6b-babb-58d26949a2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e193663b-e77a-40ce-93b7-337a8d562648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fd06ec-5d12-4ad1-8948-15a8c3ff9229",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4217bd57-ee95-4c8f-af3e-d30f11a56927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f39afb5-f0e8-42e8-8b7e-6afde187e2fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68c2be2-c249-4d71-b042-cea4ec7611eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de6bea8-f637-47f8-a2f2-283d4b40702a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e9ba1a-1e95-4919-ad5d-fdae59265838",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5ca164-fd48-4c7c-83b9-c929ab07ce66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f272bc29-046f-4014-a226-8a3f232faa9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6bd728-a516-4c68-8378-90049b5799eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb86ef6-2b30-4449-b839-75b03d4cfb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ca6d55-aaac-4470-ae25-68b96db10e8c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07affae6-0e2b-431b-9947-e72caa5e6f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aafb160e-bdd7-4501-b8f1-4a66456681a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fedee4-e949-4358-9c67-d68df39a71da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3795f214-ee24-48f4-a332-4048d2fd5882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2973d67f-24d6-4fd5-b9d5-c64262f79eed",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb164664-6280-4bee-a959-0e42b023b9f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b5393bf-62bd-4822-85a6-0f6d2c330531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32532bbd-9621-49b2-b89d-f98796aa210f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efdfb93-d835-4252-9e9f-86ccfb79aeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0048ea-79a5-445c-be32-b02f06cbe4a7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc13ed8-45c5-4ba9-8b63-57d17b4c262c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b36dff42-0f21-4d58-baf0-67d141129c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717cd7e4-9be4-4ee1-957d-d1e65b23adfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862ab2b5-78ac-4f2f-a932-d19ed2122de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367c03d9-6964-4669-89cf-42d941098247",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3d4fa1-3df5-4eb8-8a76-891106b2ba20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a775b4d-fc51-4eb9-9abf-c2ebc37cd591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2a6e44-55a8-4b20-a924-7bd497f09a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d52e84-8676-4042-88da-8c7d1adbfcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08df079a-f6f2-445b-a9c6-d07f2969c245",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb06e881-3f3f-4545-89da-5d76abf7a51f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0f9e29f-7437-4855-a398-76a6d09be47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf439635-c796-40bc-80ad-07d3d9aaefda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40817e5-fc58-4553-a713-813218bbe54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cb6fb5-e51f-4558-b188-6d588ac250c3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b156bd-64ed-4d48-a256-1550e961b2c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c900b04-2114-4c7b-a0cc-389b989a04a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d702fb-749d-4c66-b6e0-1deb2f84287c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abce3967-1f05-45ca-b54b-d2db9f245be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c59e54-6d63-4b06-bb30-ed6c6508a8cd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f1c446-59da-46a3-b88a-8d2a2484321a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a5f9d24-9d30-4faa-81ab-47b5cfba9399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6a6ec8-44bf-46a4-a26c-4f72a1c3e10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce85727-246c-4105-bef2-900a33607c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7eada4-1f1f-4245-b77e-d0c294ca7dc1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e1e309-f998-4735-ad49-3986417a3074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3729fe1d-276d-4564-be5b-3e5826e184ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18722f6a-f517-4a28-819d-e30d0da438a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2091ad8-3ada-4c50-abd0-88868f35982c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be43ab6-0cde-4da2-9f10-ed29e40b038e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dda0a02-5037-49c1-b1c1-5e84399fac5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d13401f-fda3-4ec6-8766-a25a350b2ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d25f31c-3435-44b2-8a0f-4902daa1b38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ad8700-bf4c-4f14-bd3e-4e30905364d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474480dd-a18e-4a09-b3aa-49e4cf57f561",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd56c0b-5dec-4193-9c8d-47de1d28893a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7844afc-2083-4cf0-bb4c-a3c5adf279ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fb1c07-cae3-45af-affa-d7d3c8471d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e05373-2b4c-4b69-9431-524891b39362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6b28a4-2ae6-4a66-8af0-8b3b794ee9ba",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a863a537-93cf-4d06-ae6f-dd521fc259a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ef558a1-3041-4980-949c-fe5655af802f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a515a4-81e9-41ba-beff-63ae94112c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561766db-3576-4149-92ba-03c39eb29234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7e5e09-909a-497c-921e-12d5a550b30a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36106ed7-ca94-41c6-bb05-3e7b1a306ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfdd3a98-2e86-49a5-b6ec-6af43c6160b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a522ab-4cb9-463b-827d-fc9b602071e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4081d5-1285-40d8-a8ca-db5854d63143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae694eec-36f7-448e-8ce2-d2e1ec3e6f01",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c976856-caab-4d3f-9975-c30e6ec278c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3851ba15-ec63-4bb8-acdd-a7c9702ab343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5affdb42-ad6d-43a5-a2a7-5ae420061762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a34517-ab97-4fdb-837c-23df407c90a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab3fe5d-9ef6-4cfc-a37d-8e3c43f5b520",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc7f6dc-6156-4780-a83e-f5ed0eb0cfcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46463324-1bbc-439e-b9d3-fb4cdce926cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c07f834-af53-4a91-a41f-104de7dd7615",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b393162-9e67-435b-a166-291cc2017603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37448e4-5bf4-4bff-96cd-08388bc06562",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034cd0b8-9c58-4dbb-9eef-cef0f5b656e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b439148f-ae74-45e3-8edf-e7a63fdd1de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5f5255-4975-4096-a297-d3c5ef0368d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531c04eb-91f4-452d-b903-1d942db4d0b2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23281b01-3d3c-4521-a2cd-f0cde615ada7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b901e3ee-ca7c-4be6-b326-8b19606e6a97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d34f067e-81ec-4fbe-a51a-29c4a4e3a872",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5292f0ce-158e-4384-ac31-acdd64d75951"
                    }
                  }
                ]
              },
              {
                "id": "114804e7-f15d-48a9-ae9b-add8c316904a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "981fdb50-77f4-47a5-a60e-2222c138f9b5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7abcdc3-68e2-4d2f-9505-3d5edf350d7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "09ee9944-75f6-49c0-babb-42486b0564d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e007d76-4922-4df6-bed4-30436af84313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f641a73-aa92-4afd-a258-3f5c39d93552"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb39433b-fe67-469f-997f-da2de9f2ffb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f5489c6-ec22-4566-8a1a-82959ab25b81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10010c57-6acf-4580-8f24-5dd3e8812b7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a35e8fb0-9772-41cc-b1d2-787f72248d39"
                    }
                  }
                ]
              },
              {
                "id": "ec361e6a-5a03-4b68-a28f-0df045c3870a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1cac1a9a-db1e-444b-98a4-20edc9189918",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb044e1-657e-49bb-971f-4f700221a4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2637f86e-d10a-4a9b-9762-fe3434c00f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce04a9f-946f-4057-a7e9-ba8f0fd1417c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a573c941-b205-4ee0-8c76-cb8e441b6e68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e3df1b2-d98d-4bd2-818e-2de299c60521",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7de3d96e-5014-4f59-bba3-6d30df698d23",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "261addad-ae40-41bd-b13a-1cff7a505021",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1c2fe56e-e854-4658-a7b5-95af433a8291"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa3af6ef-89c3-4fc7-a698-b23f08f91b62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e0899f7-8e65-45fb-8e07-b00eaf684824"
                    }
                  }
                ]
              },
              {
                "id": "02989e5b-3d3e-4863-af73-603e439ccf74",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29156718-5160-459c-884d-8eb7298f97f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "96ccddd3-ddbe-486d-b632-90265ee7fb93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe3d7603-d019-4992-8fe5-59a8684e711d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "298d2c94-9f8a-4361-9d04-4de2b5088ce4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22059bec-362c-4241-8179-686a203c79fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "842224b0-223a-48cf-a35f-5a48cb85b009"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3be2fa9d-2514-4f38-a6a9-1e3900b10860",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aed73d35-ab04-4c76-b7a2-97dc73a8c0b6"
            }
          }
        ]
      },
      {
        "id": "d83e10b5-c578-40e9-ab45-ee477090595a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "66da6300-7a80-4eca-8055-cf699551ee9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e0e4bcc-8bf4-42df-b3be-5a0b794dfabc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce2fcdd3-9ef4-413b-a219-7bf84a3834b6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13a33e5-1e9e-47f2-b439-62f6f14ec70a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5bd7474a-a5c3-4070-89e1-abfdc84eee21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df0284f-22d2-4d19-90b1-aeb2d9583765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06a639e1-6dd8-4d3a-92e5-a9b96b0fecbd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b11e5299-73b0-4e39-8b59-6416bf9b35eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9e299d5-e886-4974-a48f-ef5ebaa74bde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "612d1c99-3449-4416-9f4a-daf59ad10d10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "968213ea-5728-4f56-bd68-a6b0d885e9a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "749daa5f-c832-43d0-92f2-dd431d40b532",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "83160b7f-6359-4722-982a-74cce86a747b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0060d080-b32a-4279-8cf8-e5aba05126fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "079dace1-d7af-4d61-8afe-304c03a05553"
            }
          }
        ]
      },
      {
        "id": "97200eec-911c-4d55-8d2b-21f02d6b487a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "12ca2a23-e000-443e-aea0-59456ebcb4d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96177816-bf06-45a4-bc0d-f1876c1d602f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d9b8b50-2bc7-445a-b944-7b1872f18f2b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc95037-f387-4271-ac6b-cc04169112ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bcc41fb-300f-44e8-bf30-881079da8b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5277c633-313a-45ac-9dbf-88e05f69b15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9734aee7-b15a-40b9-b5b5-932710be88b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6704935-84cf-43f2-868a-261ae6f9d736",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fab0df6-cbf1-413b-b286-400146ee3f28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0da7fef4-9bca-419f-acee-cba84d80f886",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "119969da-0f81-47ce-8c62-aa4aef1f3308"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d08aa93-21df-4957-81df-400e68815f27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3db0ac8a-bba6-442c-a2b4-693e65aec3c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc27a792-b8d7-4751-9236-0201e3d39ead",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef47f246-891a-4e29-8a5e-e88a0faeede5"
            }
          }
        ]
      },
      {
        "id": "20b9e7a3-4dba-4a40-8493-8b89171c5169",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2563a0c5-9ced-404a-a1f2-cdd9bdde2cc6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95612bc3-e9d2-495e-94aa-43e89487a070",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42189d37-77d4-4c20-8895-4a5d32c639b5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359a7876-722b-4eb0-adba-8d5a3f2afc74",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c60be705-516a-4c6c-b585-479d16fb5a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faebc3e9-d851-4302-b073-2286858c81be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f07eda1-2a2f-43a7-9096-85befb4272a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acc81721-2a97-4094-a0d0-be24ea173275",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c35a3d4-04eb-4ce4-b3dd-648526b3bc09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13260ba5-c2a7-4d22-9a56-aa44514c6e34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce3d2bed-d6f8-41aa-80d4-9166983d2694"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9adabaf-c6d0-4321-871b-0aeabfad2ec6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93a265b9-c03b-4eba-9df9-6088985c4305"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e75fbed-19a3-43f0-bb98-bc129d28d365",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "082e8aab-12bd-4809-83dd-023e55f16fb1"
            }
          }
        ]
      },
      {
        "id": "a81de9f9-e10a-432f-8e52-c4f3b6933912",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50710aed-8c04-4fff-8fcc-8611c9215843",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca81c660-6855-4db5-8588-6ffc03891b6e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ecc9e9fb-5a5a-4b6f-9384-7c16b462099a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "267180fe-ed06-4539-931e-e215271ea401",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3cc3547-40ba-499a-988b-f2b820f420cc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 622.4186991869916,
      "responseMin": 9,
      "responseMax": 6750,
      "responseSd": 854.745090784057,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686789700397,
      "completed": 1686789865252
    },
    "executions": [
      {
        "id": "a697bc9e-486c-439a-b7e4-5f276bf93692",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4079e55f-842a-4c5b-8b63-d2d5f84f3a1e",
          "httpRequestId": "d638f9a7-7775-45a6-9d58-f4f03d82f7d8"
        },
        "item": {
          "id": "a697bc9e-486c-439a-b7e4-5f276bf93692",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ab4689e8-2e76-4138-88e1-1e8a09e91b59",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "11abcaa3-b434-4a21-83e8-85197d50fede",
        "cursor": {
          "ref": "b59074aa-47c0-47ad-9977-0f751f6dd7da",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b1dc0eac-b194-4fc4-a34f-3cad37a18b63"
        },
        "item": {
          "id": "11abcaa3-b434-4a21-83e8-85197d50fede",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e4f47ea4-b8cd-43d1-a6e9-a5bb7f2c9bce",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "3d3b8cf8-6baf-47e9-8270-700cfc9769da",
        "cursor": {
          "ref": "40dc1f76-1a73-4184-a6a0-4b7dc0b8ee59",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "61ace2c7-5b6a-4297-aea3-4931ce32f3aa"
        },
        "item": {
          "id": "3d3b8cf8-6baf-47e9-8270-700cfc9769da",
          "name": "did_json"
        },
        "response": {
          "id": "25b1378d-059b-46cd-a98d-06a04c833334",
          "status": "OK",
          "code": 200,
          "responseTime": 4219,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba63bdbf-6fe8-4567-8e75-d0dafa97dcb2",
        "cursor": {
          "ref": "f2f40aaa-68ef-40b1-8261-5f3d5316e4e3",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e77bb3d5-af4c-4d36-850d-9765b4cdc795"
        },
        "item": {
          "id": "ba63bdbf-6fe8-4567-8e75-d0dafa97dcb2",
          "name": "did:invalid"
        },
        "response": {
          "id": "f2c6a582-24fe-4677-a34d-d543bb63b0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba63bdbf-6fe8-4567-8e75-d0dafa97dcb2",
        "cursor": {
          "ref": "f2f40aaa-68ef-40b1-8261-5f3d5316e4e3",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e77bb3d5-af4c-4d36-850d-9765b4cdc795"
        },
        "item": {
          "id": "ba63bdbf-6fe8-4567-8e75-d0dafa97dcb2",
          "name": "did:invalid"
        },
        "response": {
          "id": "f2c6a582-24fe-4677-a34d-d543bb63b0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e551660-af4f-4018-b27d-0e20cadd7743",
        "cursor": {
          "ref": "457a65c5-19bb-4603-aaf8-32731f12d6e7",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "33484149-5a7c-4fdd-8552-9e542a885608"
        },
        "item": {
          "id": "0e551660-af4f-4018-b27d-0e20cadd7743",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a24fce56-f14a-4aff-811c-71b324af5430",
          "status": "Not Found",
          "code": 404,
          "responseTime": 622,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c265866-56bb-4796-8ed6-1ac8f051df19",
        "cursor": {
          "ref": "bce839a4-e448-43c9-a00e-3e99ad1a20df",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cbd2dea7-ebd6-4879-b5c9-66a7beed4305"
        },
        "item": {
          "id": "6c265866-56bb-4796-8ed6-1ac8f051df19",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "405eb5c3-82ff-47c9-86b8-6e29d192c5ae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 675,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d61541-430a-45bf-b250-d21d7153c5ba",
        "cursor": {
          "ref": "88fcef67-eb59-4ba0-b991-b03bfc9e3514",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0f20e9f3-7eaa-4c8e-8746-42f889f5dbdd"
        },
        "item": {
          "id": "32d61541-430a-45bf-b250-d21d7153c5ba",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ecb72868-68c2-4519-93f8-ca878e61a1f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5951a549-a37a-4a8d-ae8d-28c44c954fa8",
        "cursor": {
          "ref": "9099b7cd-2638-464d-a512-ed2ad2b691b9",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b80c300f-6520-43e5-b128-c674c7b1eb4d"
        },
        "item": {
          "id": "5951a549-a37a-4a8d-ae8d-28c44c954fa8",
          "name": "identifiers"
        },
        "response": {
          "id": "75f9458b-f22b-4870-9230-b20064e318d9",
          "status": "OK",
          "code": 200,
          "responseTime": 1206,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3130b0fd-c656-464d-9c44-17beae23e3e8",
        "cursor": {
          "ref": "2719735d-6746-4cee-9125-4bdb9bab1564",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ae4bde36-2fba-41aa-a3af-8ea13477d855"
        },
        "item": {
          "id": "3130b0fd-c656-464d-9c44-17beae23e3e8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "892b01d8-d61b-4b70-8f8b-25d2756be69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7d2e31-2f04-4385-9775-e623c2c67589",
        "cursor": {
          "ref": "04f03f64-c812-4662-9c5a-44edee545fd9",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fda60ed9-05f5-46b7-9dcd-d02b8e02ba48"
        },
        "item": {
          "id": "ce7d2e31-2f04-4385-9775-e623c2c67589",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ab7ab81b-02b7-44e2-a1d5-2a5d9cd88466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68550a00-8d71-4a76-99f3-a1881522a2b2",
        "cursor": {
          "ref": "f0d41d7c-c6df-4560-800b-055889e168bb",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3625cd34-452e-4155-b724-488a9293e55d"
        },
        "item": {
          "id": "68550a00-8d71-4a76-99f3-a1881522a2b2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "df9c92bb-1a8d-4f1d-9cdf-74bc5c022ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e3dc3a-453d-4ac9-9d5b-9ab5126b595c",
        "cursor": {
          "ref": "a785892f-56a1-44d0-828e-5c0fc8372546",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6900cfe8-be85-48c3-a106-ab11ebbabe32"
        },
        "item": {
          "id": "54e3dc3a-453d-4ac9-9d5b-9ab5126b595c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "659a8446-ac5d-43fd-a25b-251d0b72258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76faf37b-6eba-4fd9-8342-38955c734af8",
        "cursor": {
          "ref": "2f2764e6-130c-4249-ba4a-c9538fb1b747",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a968b937-2731-493e-bc60-ab79b43ab6b5"
        },
        "item": {
          "id": "76faf37b-6eba-4fd9-8342-38955c734af8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a4bccdbc-799e-47c4-827f-0bdf63f5761a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6afe97c-e604-40d1-9c9d-ffc09b83d092",
        "cursor": {
          "ref": "052f3aed-dd17-4629-ad6c-99b947fda52e",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bc1eca3c-bae0-4bf2-b808-45b7b879c251"
        },
        "item": {
          "id": "c6afe97c-e604-40d1-9c9d-ffc09b83d092",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e5d07ecd-9116-42de-9ac3-1411848cd938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aea9896-68dd-46ec-9062-7d33a9a4fca2",
        "cursor": {
          "ref": "2ebfcd87-7039-4541-98cb-2a05d8f11837",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b57499d6-6d41-42af-8de4-71f23c6c7094"
        },
        "item": {
          "id": "1aea9896-68dd-46ec-9062-7d33a9a4fca2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "27a83067-4d9c-4dca-ad68-600ec4c87239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e72418-bd5c-49eb-8eb9-0cb98033c1f4",
        "cursor": {
          "ref": "0812306a-7411-4b0d-be5c-f39a94ad2750",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4228dcea-24ee-4eeb-84ec-0c7028e2d675"
        },
        "item": {
          "id": "c0e72418-bd5c-49eb-8eb9-0cb98033c1f4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "594e4f54-09c1-4244-aae2-790f3ed24fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebfc360-1f1a-44a9-8385-e4aec10c7efc",
        "cursor": {
          "ref": "c455fcab-fb23-44c9-b394-675a11a7da43",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f911f4f2-e912-41fa-8cf0-c683e0b16395"
        },
        "item": {
          "id": "1ebfc360-1f1a-44a9-8385-e4aec10c7efc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "96bce30c-bd2a-418d-98e2-ba20473d548d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd64cdb-5992-4a75-bc73-0747d8ebd050",
        "cursor": {
          "ref": "7b38f81e-9e44-4da2-b247-6a70ae200cec",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3f00bd5b-2c07-43b9-ab0e-caf93e7521be"
        },
        "item": {
          "id": "bfd64cdb-5992-4a75-bc73-0747d8ebd050",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c2c821c5-99da-4235-a546-6b4870eb6dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931496af-5b07-46b7-a551-5c4faee8692c",
        "cursor": {
          "ref": "2dcc148e-7518-4bf8-a565-7e2b2edb9d57",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "18df3f27-c59a-4296-b73b-d47162e6b869"
        },
        "item": {
          "id": "931496af-5b07-46b7-a551-5c4faee8692c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3f7752be-bfc9-4e25-b045-f05f429a11b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b40e66-f7e8-4883-8eb8-a18859089806",
        "cursor": {
          "ref": "3edd169b-b55e-478f-a416-e894644a531d",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cb031505-01ee-47f0-b42c-ff1588a2fbf7"
        },
        "item": {
          "id": "45b40e66-f7e8-4883-8eb8-a18859089806",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d00dd0ed-4287-48e9-bf39-c1d42b185cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394566f2-a43c-4ee3-b269-506d317bf4d6",
        "cursor": {
          "ref": "1f2218d5-9bb2-4241-b42b-bcb1053181ff",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b0076906-b420-4c01-81d0-a2e4f491b3c4"
        },
        "item": {
          "id": "394566f2-a43c-4ee3-b269-506d317bf4d6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "87bf1327-b3f9-4e15-bcef-34945d2e52bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ad715f-2e7d-4f35-bc77-7594f7e87096",
        "cursor": {
          "ref": "5dd551fc-c5e2-4aec-80b4-0b91391ad422",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fd49a8ba-5586-4483-85f8-7e11b7904113"
        },
        "item": {
          "id": "52ad715f-2e7d-4f35-bc77-7594f7e87096",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e502879d-1b54-47fa-8a9c-95b802b0c700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33793e83-d234-45e5-8411-44f050ba380f",
        "cursor": {
          "ref": "29c4a82a-9e49-47ee-9b15-51cbc55a0512",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "83833186-cd9f-41a6-bf53-aa936821b201"
        },
        "item": {
          "id": "33793e83-d234-45e5-8411-44f050ba380f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a33c1251-250e-4e2a-93b2-4dda9cfc9939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7afcd9-68e5-4bc8-9236-5e969bdcaff0",
        "cursor": {
          "ref": "a6535106-33ce-45b2-99bf-a267b68af057",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9df9108a-a05c-465c-9fea-0d7a7c5811ea"
        },
        "item": {
          "id": "5c7afcd9-68e5-4bc8-9236-5e969bdcaff0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "472f4209-59f4-4ed7-8bc4-2830135a7cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40026ced-b67c-4f8a-bb36-04828a090ba8",
        "cursor": {
          "ref": "17f775a0-fbb4-4e6c-be68-2e8d50b53271",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "79cdbe2f-33c0-4ee8-8f98-4023b95bbb89"
        },
        "item": {
          "id": "40026ced-b67c-4f8a-bb36-04828a090ba8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5b4c37d4-4a35-45e7-a000-36741e919ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee58dd28-b1a5-4df3-af53-dd1e42e5e580",
        "cursor": {
          "ref": "e91af2a1-3474-45b8-a09c-9557c6b9d2e6",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "553980cf-b1ea-47a7-b8f5-0e2a1e47da50"
        },
        "item": {
          "id": "ee58dd28-b1a5-4df3-af53-dd1e42e5e580",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ff75d35d-b727-497c-800b-744c50dd3445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df4dcd7-953e-4a79-b2fd-3981cd347af6",
        "cursor": {
          "ref": "5c4f9da0-9e94-4502-8bd9-87aabec903ef",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1d21bf6f-71fe-43e0-8f8e-7992e1874c0a"
        },
        "item": {
          "id": "1df4dcd7-953e-4a79-b2fd-3981cd347af6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1f2b8be3-f0b9-4175-b913-25fcbc6674d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db87ec82-192e-4e7f-8ac8-d75e2f51eb71",
        "cursor": {
          "ref": "ae2063ef-05ae-403f-be09-22e6139810a1",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a2605ff5-fba5-4cd4-8ab6-e1de931cf8d6"
        },
        "item": {
          "id": "db87ec82-192e-4e7f-8ac8-d75e2f51eb71",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "20547308-e64b-41dc-82fe-2686a6e49bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505fe2e7-f4d6-4257-8ed5-556649c3137f",
        "cursor": {
          "ref": "92ebd4db-d000-411d-b6f4-3bb24080aeff",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a081b796-61bf-40e6-8a97-8b2d4b05240d"
        },
        "item": {
          "id": "505fe2e7-f4d6-4257-8ed5-556649c3137f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fe7970d6-036f-43a5-8695-128efdeee53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34649106-1443-4a7e-b151-bba8c3cc4cad",
        "cursor": {
          "ref": "5315fff5-2158-456c-b834-2d96f5e4f38a",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a17088be-a014-49d8-bfdd-d88cd3a2080e"
        },
        "item": {
          "id": "34649106-1443-4a7e-b151-bba8c3cc4cad",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4c412ffb-16b3-4e0e-bfb6-9080d237358b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb75a42-9960-4101-9225-a4ceeeb51fa7",
        "cursor": {
          "ref": "fb2f72b9-9d04-4ee4-b71a-e14728f99ed6",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "83abe577-6be6-40a3-b034-398da62a0ec0"
        },
        "item": {
          "id": "9eb75a42-9960-4101-9225-a4ceeeb51fa7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5ff2ea49-eba3-4f33-a5c8-8219a5c42185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a924eb-4b6f-438b-a958-9b43f219a521",
        "cursor": {
          "ref": "3b41881e-49c5-486b-aeaf-0c3dcf4d936f",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1558d783-183d-43c1-89c2-2c0c90d6728c"
        },
        "item": {
          "id": "a5a924eb-4b6f-438b-a958-9b43f219a521",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1026172f-be43-4418-a87e-84bfc2978a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7991583-23ac-4595-826b-df052f8e2fb8",
        "cursor": {
          "ref": "471f6a7a-e2d5-42ad-a9eb-ff654ac085ff",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ae95f37a-8d63-4dd6-9a80-abefb5a5a814"
        },
        "item": {
          "id": "b7991583-23ac-4595-826b-df052f8e2fb8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "09fc4f29-18db-4b2a-8624-cd6f80be5a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa76564-fac4-46d4-95ef-34e02909ec7d",
        "cursor": {
          "ref": "156468cb-cdba-4e73-ba99-f87d82638edd",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0e20a0f2-0cbe-49f1-a899-6929bb7f18ae"
        },
        "item": {
          "id": "2fa76564-fac4-46d4-95ef-34e02909ec7d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "06819e27-6bf0-4bea-a302-5de15f399118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05ae03f-4878-45a9-8600-c50579140324",
        "cursor": {
          "ref": "0618ab2b-40ea-4515-a8f3-69fc3c51278a",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d0e56b6e-f64e-4a0a-a3ed-e6427aa55e34"
        },
        "item": {
          "id": "b05ae03f-4878-45a9-8600-c50579140324",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fb23e025-a3f1-4453-a52c-62f2746b8e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18450420-6e2a-412a-951b-fd748a6f12fb",
        "cursor": {
          "ref": "2845b046-c415-461a-b2e0-838cb388eb48",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0cdc414c-a9f4-48af-ab7a-70eef30f6855"
        },
        "item": {
          "id": "18450420-6e2a-412a-951b-fd748a6f12fb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "892c1988-094c-4458-835a-bb12c501cdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354140f8-8697-43fc-bb84-2ca179dcf20c",
        "cursor": {
          "ref": "d3245c63-6939-4e3e-88c6-11f65e14f0d9",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "11229f30-3b9c-4b94-9f4e-ab25c198187b"
        },
        "item": {
          "id": "354140f8-8697-43fc-bb84-2ca179dcf20c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a481c03e-ad9b-4315-8857-4041b62d8428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47dbff6c-f507-4783-8b81-441eeb36842b",
        "cursor": {
          "ref": "1c6efd60-b67e-45ce-bbf3-e81bee223b72",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e4c93871-97bd-43d8-824a-0b81cf2d3f9a"
        },
        "item": {
          "id": "47dbff6c-f507-4783-8b81-441eeb36842b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a7ada879-dc1c-42fc-9e9e-bc0a06b01de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6de5b7-a3e5-4dde-a3a6-cd6bf130945c",
        "cursor": {
          "ref": "72c986ba-ac63-491f-afbc-7840a05e7099",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e96fd763-1b6d-4ce6-a84e-de7187d770de"
        },
        "item": {
          "id": "2e6de5b7-a3e5-4dde-a3a6-cd6bf130945c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1735e7f8-1274-4d38-83c0-b903fa777e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af979c3-0c16-458f-a86d-ba215d3aadf3",
        "cursor": {
          "ref": "c61d2232-deef-4cb1-a946-d5911c96f303",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "77ec6901-19ac-457f-b132-e5d47a1da35a"
        },
        "item": {
          "id": "6af979c3-0c16-458f-a86d-ba215d3aadf3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2515f87a-975d-4eac-bda6-58fd0cb38d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25eec89b-e687-4986-a0c0-f772a4b58d31",
        "cursor": {
          "ref": "2a9aa136-ca05-40cc-b1a5-c528742fd2dd",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3abfec23-f36e-400f-9326-cd8ad7aaa168"
        },
        "item": {
          "id": "25eec89b-e687-4986-a0c0-f772a4b58d31",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2970b6c5-c0ec-4625-a60d-22ec55fd8fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c050a5-f7c7-4610-99b3-363fa50d655e",
        "cursor": {
          "ref": "d0919aba-757d-42e2-bade-9923dea69560",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "092d1e54-f995-41bb-8010-0e4163f8e36c"
        },
        "item": {
          "id": "90c050a5-f7c7-4610-99b3-363fa50d655e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b2abfdf9-d2b2-42b9-9e2c-9fcd918e08fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef157ff-3f4a-402c-ab80-8d9c3cb9deaa",
        "cursor": {
          "ref": "9fe21469-bfc6-464d-9efd-b6bc78627c50",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "face1378-2cfd-448c-9d00-d22b6375f423"
        },
        "item": {
          "id": "8ef157ff-3f4a-402c-ab80-8d9c3cb9deaa",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3bbe544d-ddc4-4a60-a9ab-8b761b7f01a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333e69ba-4ea1-4b42-8697-eff62fd7b84a",
        "cursor": {
          "ref": "6b19de80-b726-447c-9402-dd8abfce9814",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3a5955e8-bb84-49c8-813f-ca3c762282a7"
        },
        "item": {
          "id": "333e69ba-4ea1-4b42-8697-eff62fd7b84a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "80f82c7f-2302-4e63-beb2-422c99bb9151",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 711,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5900c68-4406-44d2-978f-2a98e43b951a",
        "cursor": {
          "ref": "0cf49f14-d661-4eb8-a57d-c1cf84d4ee14",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "43999253-2e15-43e7-8b39-544713e5c928"
        },
        "item": {
          "id": "e5900c68-4406-44d2-978f-2a98e43b951a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "340f5b48-8299-4f21-913e-5561eac2d3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c12e96f-9681-479c-bb6e-54bf9c9f0625",
        "cursor": {
          "ref": "c2ca2a8a-408e-47f3-b1ef-cc9fa6bbed9c",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "457795d7-b7df-46d5-8835-d14b116f2a61"
        },
        "item": {
          "id": "0c12e96f-9681-479c-bb6e-54bf9c9f0625",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a70690a4-b53a-428f-ac4a-4e02d8adf576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1274,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a15ee5-a569-45f9-9afd-6badd24322e8",
        "cursor": {
          "ref": "256718ec-ed01-44a7-893d-9f25fb2d1547",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0b25d4dd-4818-408a-94c1-7b14bfd402be"
        },
        "item": {
          "id": "21a15ee5-a569-45f9-9afd-6badd24322e8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1f360574-6fbe-4980-a1af-9dc914443d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f17a0e7-0fe8-4d80-8aed-29c2f6d56dc3",
        "cursor": {
          "ref": "c4cb8547-ab6e-4088-baa9-17494c21538a",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b5158ff7-e1fa-4a98-8696-108c1dd3d714"
        },
        "item": {
          "id": "5f17a0e7-0fe8-4d80-8aed-29c2f6d56dc3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bc8c8a81-6d19-45c4-a45e-235082341664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919c8f6e-c52a-4a57-8164-df67023c4e1d",
        "cursor": {
          "ref": "128339e7-f98a-4a37-9c89-9565c637f4f0",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d0acf16a-77d9-477a-8191-ad6875478927"
        },
        "item": {
          "id": "919c8f6e-c52a-4a57-8164-df67023c4e1d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "82f523da-f6db-4bd5-9de9-34e0c96bb2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9612c27-8a85-4e18-8377-43af8280090c",
        "cursor": {
          "ref": "8f6af822-1695-46c4-99d6-3c7381bf15c6",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ccf9496e-8852-4ff5-b442-ee8023bcd62b"
        },
        "item": {
          "id": "f9612c27-8a85-4e18-8377-43af8280090c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9e1a52b8-05bc-4d86-a242-c65c6c88e967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12078011-a64c-4160-beb5-5b260fc61b85",
        "cursor": {
          "ref": "7edca886-3af7-41f8-8d3e-702f327954d3",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1dd44903-bdcd-4f8f-af9e-c7a2f677fc65"
        },
        "item": {
          "id": "12078011-a64c-4160-beb5-5b260fc61b85",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8aa69af9-765a-43f5-b894-4b778b879073",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 712,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295b40a2-d8c2-43a7-a237-4d363d2ae25b",
        "cursor": {
          "ref": "b31fa116-0bcd-4fe7-bedd-37f89745ae7c",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cf582187-9dde-4168-91bc-def17c7944dc"
        },
        "item": {
          "id": "295b40a2-d8c2-43a7-a237-4d363d2ae25b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b3853458-1ae3-41b4-bb3c-6a748dfab19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99876fb-752b-40e1-b0bc-e2b85203a614",
        "cursor": {
          "ref": "7fe54e1e-ba27-4de1-a62b-45f003690405",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6e2ae9ac-5327-417e-b2fa-436f9f688ae1"
        },
        "item": {
          "id": "b99876fb-752b-40e1-b0bc-e2b85203a614",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4c7ff35a-0f37-4a00-adc1-45c6065a8df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cc0241-39cf-4fe5-9c81-fa32c3df3d33",
        "cursor": {
          "ref": "78c43002-844d-4480-a4c2-1de0cf42c3dd",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "35326624-7cb4-4b57-8d6f-f85c72948fd6"
        },
        "item": {
          "id": "e6cc0241-39cf-4fe5-9c81-fa32c3df3d33",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "daae3613-6f25-43f7-9639-30cd84db3352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f53d04-38c1-4a31-8727-faed241257e8",
        "cursor": {
          "ref": "16983e84-f3ac-45a0-8ce2-3969b30ffc12",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c4658dfc-95cc-419c-95cc-f2480771cb6d"
        },
        "item": {
          "id": "14f53d04-38c1-4a31-8727-faed241257e8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ee232d37-5ad7-4b64-bd07-4a4c54db579d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956a0648-85ae-4a25-8ff7-eaa6242b951a",
        "cursor": {
          "ref": "58736c71-7bd9-490d-ac5d-a10f745611d8",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "51b980a1-cc43-4f5a-9d91-9587c1449ffa"
        },
        "item": {
          "id": "956a0648-85ae-4a25-8ff7-eaa6242b951a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d289b89a-081f-453f-8165-a985f53b78d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f543d46-4378-4835-af85-78bfe92bf421",
        "cursor": {
          "ref": "71ca83d1-551f-4693-ae9a-2a9694ba81d4",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a73b6860-d982-401d-991c-8ae216364a1e"
        },
        "item": {
          "id": "2f543d46-4378-4835-af85-78bfe92bf421",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dcbd3d73-562c-4c3c-af14-434741c52c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290c948e-4aaa-4903-877c-52f0c7daae5e",
        "cursor": {
          "ref": "fb0601e2-4683-4fc2-ab35-878a4f8bce79",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cc63826d-6908-46c4-91d1-1d1fc67ddc14"
        },
        "item": {
          "id": "290c948e-4aaa-4903-877c-52f0c7daae5e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c6b10120-4390-4ca9-b5ce-2f771c135d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeee459-b3ba-4fb1-becc-f132153b105f",
        "cursor": {
          "ref": "ab7a94cc-db75-4495-a84d-ffd6e19540f1",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3d6ceb22-c5c2-4e28-8cd7-d82544cd83c5"
        },
        "item": {
          "id": "1aeee459-b3ba-4fb1-becc-f132153b105f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "90f55260-8045-463a-b947-8da4b97c03eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ba9433-9a65-4b65-9d08-9ebdc3ff1829",
        "cursor": {
          "ref": "1b27b3ec-36ed-4657-b253-d4f937d8c3a3",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7469d008-cad8-4077-9cef-c4ee13b92f25"
        },
        "item": {
          "id": "79ba9433-9a65-4b65-9d08-9ebdc3ff1829",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ec67a592-c650-4af7-a2d1-6dade5cdc94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f816cbac-ccb8-4446-bdb9-2e940501b5e4",
        "cursor": {
          "ref": "8b0f6912-9854-4fb8-b9da-33437762c5cf",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "95ad213d-683d-4df8-966c-5b8ebfe5b0d4"
        },
        "item": {
          "id": "f816cbac-ccb8-4446-bdb9-2e940501b5e4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bd609676-c6a3-429a-a09f-c202aaff295c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0716159-41bc-4138-9942-b396a4c78cd0",
        "cursor": {
          "ref": "690bfc0a-cdef-4569-8bd0-45abdec3d8fa",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c90bac8c-f6b8-4802-8fae-fd1956f5c00f"
        },
        "item": {
          "id": "b0716159-41bc-4138-9942-b396a4c78cd0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "162ed45e-2aa7-437b-9646-cf58792effad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95ec4b5-5aa1-4eda-933d-c92c9dd6b63e",
        "cursor": {
          "ref": "fcb9913d-2f6a-432e-a070-9e6667c7b5b3",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e38b6ebe-b574-4ef5-800a-1c19bf2e1540"
        },
        "item": {
          "id": "b95ec4b5-5aa1-4eda-933d-c92c9dd6b63e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6f6492bd-c7d0-42a0-849c-93704c871a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf3d3fd-b819-4eea-9471-1a1d34a8a02d",
        "cursor": {
          "ref": "3719a30d-1e56-48e1-a312-cca8a8adfc8f",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dcb3cd8c-68df-429c-bb15-e08dadece7ee"
        },
        "item": {
          "id": "cdf3d3fd-b819-4eea-9471-1a1d34a8a02d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "464a39bf-e336-4d10-b210-44daece45673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b342faa6-d032-4f51-afc2-11c14fe0f362",
        "cursor": {
          "ref": "959717fc-9f60-4afa-ad50-4a40f02c41e4",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3eb9fdcc-5f03-4cb2-a310-be37bd2676b8"
        },
        "item": {
          "id": "b342faa6-d032-4f51-afc2-11c14fe0f362",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "09248b4c-f243-4807-a4c7-02946d0edca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c9b277-f9c2-45b8-98ee-4b1d7701ab11",
        "cursor": {
          "ref": "39cbb346-43f0-4d5d-baf4-4256d6f5b93c",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0146cf05-be97-49a0-be15-9172e913c730"
        },
        "item": {
          "id": "11c9b277-f9c2-45b8-98ee-4b1d7701ab11",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "252f3bf6-24ad-4222-98f4-7e3fe4b1ed37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1bbba4-8821-4c71-bfc8-2ea736c1204f",
        "cursor": {
          "ref": "88137896-dc6d-4663-8ff7-b0e22f9ff7ff",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "771c0e4d-ca76-4c27-8265-134b72e5691a"
        },
        "item": {
          "id": "ef1bbba4-8821-4c71-bfc8-2ea736c1204f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f5aec131-0353-41cd-bf28-cbaa710d803d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e81d39-3f21-4fac-a740-f62d0f1ec54b",
        "cursor": {
          "ref": "2132aa76-595b-42e6-bd70-747b1829a63c",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a036a073-b00a-4152-9c7b-63e21a6e2089"
        },
        "item": {
          "id": "82e81d39-3f21-4fac-a740-f62d0f1ec54b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ec8f2b3f-8f0b-477b-8504-a0a772d71139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8291b662-6247-49de-9978-ecb8440ca9a7",
        "cursor": {
          "ref": "03d65018-a2ee-497b-8f23-61a545b44789",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6f01c2bd-fff4-4815-adf1-b3c35f6590fb"
        },
        "item": {
          "id": "8291b662-6247-49de-9978-ecb8440ca9a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3b8ac2b8-747e-4ca5-8c4e-be21282969c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9331545d-fda9-4d9c-8d87-d74693f34f24",
        "cursor": {
          "ref": "96db4401-dfc4-4459-a645-22456d452069",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "090b8c62-6d4e-41cd-959a-e9f84d6f0d79"
        },
        "item": {
          "id": "9331545d-fda9-4d9c-8d87-d74693f34f24",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b36163f8-0510-4cc8-9a99-e30146dda81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370b1965-6ea8-461f-8d2a-5c3ebda15922",
        "cursor": {
          "ref": "4752f2b7-b0cd-43ec-a21b-9209e6438d71",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d2b25359-ceb2-488b-8185-2fc435034cc0"
        },
        "item": {
          "id": "370b1965-6ea8-461f-8d2a-5c3ebda15922",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8dc69920-bec7-4a4e-a480-afe819be4450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66216c3b-2d5a-42fb-887d-31dded5fb433",
        "cursor": {
          "ref": "0c413fdf-cf0e-4a77-bd26-df23ec689238",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f78cb262-02ce-45f5-aa6a-31692eb18183"
        },
        "item": {
          "id": "66216c3b-2d5a-42fb-887d-31dded5fb433",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "01c793b6-69cf-420e-aad5-eae9b9e18e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f57b13-6639-4185-b240-fa2cc80a3116",
        "cursor": {
          "ref": "a8aeb316-9889-42f1-9f88-8c2c88c6bb78",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e36f7921-2cf3-44d1-bc48-42f98f39dc85"
        },
        "item": {
          "id": "49f57b13-6639-4185-b240-fa2cc80a3116",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "130316fa-99b4-464d-8cb6-d89d2bc9a5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9098221c-4fab-4b77-b1ce-8c7c1beca021",
        "cursor": {
          "ref": "29e44cb4-be68-491b-a62a-07a944c5e70f",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "343b177d-7e87-4976-8acb-dc896214d30f"
        },
        "item": {
          "id": "9098221c-4fab-4b77-b1ce-8c7c1beca021",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7b7b3f8f-0130-4ca4-96cc-cc4acf617d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e595c256-9151-4ac7-b98e-0e7b0bc1e213",
        "cursor": {
          "ref": "883c2241-f5ad-4eb2-9bec-9dfbc3c07b3a",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a8c7cc51-1649-497c-959b-a8467062867b"
        },
        "item": {
          "id": "e595c256-9151-4ac7-b98e-0e7b0bc1e213",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8ecc6477-55b8-4db5-931b-c4da17a47d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa8bacb-3bfb-455b-aa10-427b6874345d",
        "cursor": {
          "ref": "0f67188b-cf2e-4dd2-a112-6e1e049d973e",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ce59f1e5-6c0e-428b-aae0-a17c1e06a9ca"
        },
        "item": {
          "id": "bfa8bacb-3bfb-455b-aa10-427b6874345d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "76b820fa-6e4d-4d84-a861-a2a1c49759b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b214b8-034d-4eca-a207-d833cff86c0b",
        "cursor": {
          "ref": "ba371a1c-4f92-40cc-a0a0-980df3408b43",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d996ba2c-7531-45cc-a8b7-58068820e09f"
        },
        "item": {
          "id": "a5b214b8-034d-4eca-a207-d833cff86c0b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8eb6099f-f260-4f3c-b405-f84949d72a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb9ac02-e417-497d-ac15-94608b959396",
        "cursor": {
          "ref": "7ff3fc6e-4002-49a0-9531-d1049e939f11",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5d34d2d1-30e0-4042-abb7-b6a27d7b1178"
        },
        "item": {
          "id": "cbb9ac02-e417-497d-ac15-94608b959396",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0d9ccb17-c454-4bc5-8552-c983d2f91072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8285a823-6177-46a2-b797-528789711d9a",
        "cursor": {
          "ref": "2ea3bacb-7340-46a2-8d49-d55fd8ed9c3c",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d6ee894c-b5a1-488b-b6a7-101c50c03701"
        },
        "item": {
          "id": "8285a823-6177-46a2-b797-528789711d9a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cced2464-891d-480b-bcb9-ae4d9a52829a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b1dc1f-6091-4a04-ab90-04924a5408a1",
        "cursor": {
          "ref": "7a808723-c897-4642-9bfc-b3dd72954366",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b09bcf8d-1d5a-4d97-a686-312e9c839f61"
        },
        "item": {
          "id": "29b1dc1f-6091-4a04-ab90-04924a5408a1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "87081cb3-eec2-4998-bdf3-85de1d47a0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b525d90-574f-427b-a23f-30be0028cebe",
        "cursor": {
          "ref": "76a4ebdb-be6f-4609-b8bd-339edafc5a69",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c5577b95-5c71-437d-adc9-0442d88866d2"
        },
        "item": {
          "id": "5b525d90-574f-427b-a23f-30be0028cebe",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bfbca961-4d02-48eb-8df8-1e0614c949f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a2a094-2b7a-415a-96e5-6f874512ef7b",
        "cursor": {
          "ref": "6814a1a0-8075-417c-9d4d-84c2faba301f",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "62cc42aa-fa95-4f41-8ff6-f5ed38d0781a"
        },
        "item": {
          "id": "69a2a094-2b7a-415a-96e5-6f874512ef7b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b889c3c8-772b-4f10-8dc7-f41772d23ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae13bcde-f053-45dd-bdf8-e22f59720b2c",
        "cursor": {
          "ref": "a4e76702-9f8c-4cb2-9b18-41d7a1a4c3a0",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2e96ab5e-7062-4802-8e51-b55bb3a3a2aa"
        },
        "item": {
          "id": "ae13bcde-f053-45dd-bdf8-e22f59720b2c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "004d1e6c-b087-4019-8ee3-7ea1072963f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5166f2-ec6a-489f-af63-5aeba4f58bbf",
        "cursor": {
          "ref": "021e8f0e-ba55-49e9-9f93-0452a63bbe4c",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4d6ec233-045d-4204-85f8-9c8877581433"
        },
        "item": {
          "id": "bc5166f2-ec6a-489f-af63-5aeba4f58bbf",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8ab268af-5336-4d3c-8786-2fecd163f302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4c095b-04c2-4be5-825d-aa36ed3ce807",
        "cursor": {
          "ref": "c80340a5-9178-471b-b82b-a9e2e5d62346",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3c1a6caa-1113-4a4a-965c-d5c40efc052a"
        },
        "item": {
          "id": "bd4c095b-04c2-4be5-825d-aa36ed3ce807",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1cc1e717-4ea1-4259-b130-9aa9f538a802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dd4f07-c65d-462d-a779-6471ebb100e2",
        "cursor": {
          "ref": "8d93e0f7-793a-4956-8623-507178dff1db",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1bac6219-50db-459d-a50b-6173ec2d9823"
        },
        "item": {
          "id": "32dd4f07-c65d-462d-a779-6471ebb100e2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "87347150-700d-4a99-ba57-f472ce8342bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca24cb0-5847-4eb2-9fb5-d02f25ff96a6",
        "cursor": {
          "ref": "2acf0632-3fc9-4129-be7a-893e193ff00a",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "81e90bcc-4469-416f-8a8d-355d29258dbc"
        },
        "item": {
          "id": "8ca24cb0-5847-4eb2-9fb5-d02f25ff96a6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f8a76c0d-c585-463c-9e97-905990199849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee522c6-490c-48ab-bc67-977c16bc44fa",
        "cursor": {
          "ref": "8bef7775-6c6a-4eb0-95b2-85c0d130f613",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aec1f7ee-8aee-459f-8f9d-773e198b5a14"
        },
        "item": {
          "id": "6ee522c6-490c-48ab-bc67-977c16bc44fa",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bc48a59d-a115-4402-bddc-ae12b6e625a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0735c2c-5919-4b3d-859e-ac5a24de555c",
        "cursor": {
          "ref": "ecb793b7-18c3-4c22-8048-f4b6b2257daf",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9f4b6c76-04f4-4917-9f8b-3aadea69eb27"
        },
        "item": {
          "id": "d0735c2c-5919-4b3d-859e-ac5a24de555c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6c1cb72a-db2e-47f5-9955-afdd1087e492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680d2b73-32b6-469c-8564-170e07b99448",
        "cursor": {
          "ref": "914d7133-fad0-48fd-ad47-532bcc1bcd37",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c0f55e37-f21d-4c08-a59d-03d53b64d0d5"
        },
        "item": {
          "id": "680d2b73-32b6-469c-8564-170e07b99448",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0486cecd-74cc-443f-9376-e25f072ca6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b538643-fedf-475c-a8e9-a28ba6752c83",
        "cursor": {
          "ref": "f4752342-ee70-44b1-be82-4f519511bb0b",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c9f4c163-b6a0-4a8b-ab40-7b81db9c169e"
        },
        "item": {
          "id": "6b538643-fedf-475c-a8e9-a28ba6752c83",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a5b8f2a3-e94a-4205-b775-9858d4da65d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17144e61-212e-4868-a498-054e03bb8df4",
        "cursor": {
          "ref": "d5c0e77d-00f6-4293-9af6-270c2007f3b4",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4f012f58-a459-4865-92fa-05a04d37ffdc"
        },
        "item": {
          "id": "17144e61-212e-4868-a498-054e03bb8df4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "81f5aafc-7fdd-4d6e-86ae-043c8bda72f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6710f6a8-6c4a-476c-b227-998327c76e46",
        "cursor": {
          "ref": "cf934d5b-2831-4a40-904e-a93b8ca74323",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a6d8d732-3729-4ed1-b2bd-8ef4a6ac76e1"
        },
        "item": {
          "id": "6710f6a8-6c4a-476c-b227-998327c76e46",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c3193f66-1a51-46ed-83fe-a5edbd9668da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eeb7fd8-eadf-4fb2-a832-dc8cf5a711e3",
        "cursor": {
          "ref": "1278c212-2f0a-420d-9e4e-a12a457fd092",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "277e7223-fd1f-4566-8d3a-fc3caa52285d"
        },
        "item": {
          "id": "0eeb7fd8-eadf-4fb2-a832-dc8cf5a711e3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cb528a5f-0129-4887-aa15-9d4bf492d2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810a4b22-afda-4e41-be28-6c2a92579b0a",
        "cursor": {
          "ref": "70cf7431-c4d8-4e78-be46-3ce7d5a5d9b1",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9e8f0a0b-883a-49bd-b91c-f4b744ae0ea3"
        },
        "item": {
          "id": "810a4b22-afda-4e41-be28-6c2a92579b0a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a4fca454-dd4e-45c8-99e4-37d5286511f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d77b60-e977-458f-a3ea-f370afdd7a6d",
        "cursor": {
          "ref": "9aaf92a1-b054-4622-9a62-a2f094dfd6e8",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fa1e2c7e-cf77-4a34-9553-b0c27558ccdd"
        },
        "item": {
          "id": "56d77b60-e977-458f-a3ea-f370afdd7a6d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6cb597a5-7a78-4837-847b-69ef87fefabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568d3cfd-a1e7-4923-b03f-4fa1c32770e1",
        "cursor": {
          "ref": "3ff77c1f-e550-4e89-86f1-68d916eeb6ce",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "07e0215c-4c3c-4703-8120-3d620aca2942"
        },
        "item": {
          "id": "568d3cfd-a1e7-4923-b03f-4fa1c32770e1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cb84b758-532b-45cc-9d82-33251d3225d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3d601f-7d7f-449f-bbca-69927bcbf390",
        "cursor": {
          "ref": "7d159761-828b-47aa-aaec-115f4c9c637e",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3b73d476-0286-49c6-bad5-d4af71152dac"
        },
        "item": {
          "id": "2a3d601f-7d7f-449f-bbca-69927bcbf390",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f168fc8b-92a8-4a54-9ea2-20a8dbcac3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebc175a-1c4e-4a96-93fb-6ff22b47df23",
        "cursor": {
          "ref": "7aee18d1-fe37-4b31-bc68-c16d69f9e65d",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e0f258b3-4282-44ea-84e7-db307d363304"
        },
        "item": {
          "id": "8ebc175a-1c4e-4a96-93fb-6ff22b47df23",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "db94baaf-440e-4a68-b517-1c9482bf1d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917e7b3f-363e-44f2-84d4-7cea578a10b6",
        "cursor": {
          "ref": "768487c9-40ac-4329-bc6a-b20e1d513d80",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1bb3f8d5-e17a-43ed-829b-9b6af7f97045"
        },
        "item": {
          "id": "917e7b3f-363e-44f2-84d4-7cea578a10b6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "535cfc62-374b-4196-8b00-23f46236c537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2016044-8663-40ac-b762-9aced6b25eb8",
        "cursor": {
          "ref": "c1d26289-8efb-4b22-8cf0-a42a952e8272",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d159f887-0468-47ce-95db-85d19327866f"
        },
        "item": {
          "id": "e2016044-8663-40ac-b762-9aced6b25eb8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a6ee0335-5023-4645-81d0-ce0ff029a38d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19844820-9c5f-4a31-8301-13ddbbe607b3",
        "cursor": {
          "ref": "2b6cfb80-f716-4c74-8982-ce1d9d715d75",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8c432d1c-fe5b-460f-a985-94bd26e4090c"
        },
        "item": {
          "id": "19844820-9c5f-4a31-8301-13ddbbe607b3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8c8ab928-6e57-4b3a-99c3-aca55707cd57",
          "status": "Created",
          "code": 201,
          "responseTime": 5987,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "86999431-3e05-498f-abda-961e7fd37d2b",
        "cursor": {
          "ref": "045cb845-2955-4164-87e6-18c2406e4669",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "12b6c8b2-3077-46e2-aaa8-71bb58d154df"
        },
        "item": {
          "id": "86999431-3e05-498f-abda-961e7fd37d2b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a8f1e71c-5f68-4115-9f71-e81938ab49da",
          "status": "Created",
          "code": 201,
          "responseTime": 5090,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa646b9-52a5-4e58-a57a-ea856a169ce4",
        "cursor": {
          "ref": "b5ec40b4-8f96-4f21-8a97-628bfeca5c90",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5bcdbfbd-5d3f-4387-bf5c-f24ba26a0f2d"
        },
        "item": {
          "id": "5aa646b9-52a5-4e58-a57a-ea856a169ce4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "97c4fd84-6913-4283-ace1-767b2536f003",
          "status": "Created",
          "code": 201,
          "responseTime": 5845,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bda1e3-2531-4be9-8dfb-8dd71cd02525",
        "cursor": {
          "ref": "6d90a90b-74b0-4b98-b207-5e01edd8707d",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c3df63ba-1432-4cd7-b782-b689536561fc"
        },
        "item": {
          "id": "54bda1e3-2531-4be9-8dfb-8dd71cd02525",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9bdc7c20-bb03-4c97-95e3-7a900b0aae2d",
          "status": "Created",
          "code": 201,
          "responseTime": 5123,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "503d1283-9459-49f2-a564-e722f1817349",
        "cursor": {
          "ref": "6957c350-286b-438f-bc76-56f9c438b646",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "efb55cc4-f4b7-4f9c-a7f7-06bc17e2c2ca"
        },
        "item": {
          "id": "503d1283-9459-49f2-a564-e722f1817349",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d158af10-1416-4cd4-a45c-ddc9d702483b",
          "status": "Created",
          "code": 201,
          "responseTime": 5153,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "59591862-a2f1-43f8-9d1a-65bb4c3ccd54",
        "cursor": {
          "ref": "28573313-985c-423d-91df-ef20c462a7cf",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1ff6d5ca-d592-4ca3-91d8-76a9f54c8bbb"
        },
        "item": {
          "id": "59591862-a2f1-43f8-9d1a-65bb4c3ccd54",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1b07d793-3ec2-4342-a8f1-c736447e2c73",
          "status": "Created",
          "code": 201,
          "responseTime": 6750,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9ffb40-4771-4528-908c-d84ac092bc98",
        "cursor": {
          "ref": "92d4a1b0-17d6-4813-a124-ed9b160cdd51",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e0306c74-18a8-4729-a4d8-baa49d4e8387"
        },
        "item": {
          "id": "4b9ffb40-4771-4528-908c-d84ac092bc98",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "98f27d30-01ba-42a7-bed6-4cd031eaafef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a283d35-58d7-4e24-b0ce-b020ebf79850",
        "cursor": {
          "ref": "543feb9d-9471-448d-ae57-5949b50b8117",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b8a8d0dd-8ad2-4176-8ec0-504a6367a3a4"
        },
        "item": {
          "id": "2a283d35-58d7-4e24-b0ce-b020ebf79850",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "feb94425-5b9c-4bb5-8c16-dc09e59b8be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10882756-22c3-40a8-8e21-aac016f81425",
        "cursor": {
          "ref": "f958a7ae-ba5c-4f10-9429-c92eb5b41476",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1a144c0f-6c81-452d-8289-6e8ebe9a5dbd"
        },
        "item": {
          "id": "10882756-22c3-40a8-8e21-aac016f81425",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8874bbdf-7c75-41ac-a2ab-759a84c19c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f944c985-47cb-4ffb-9aa5-a0b9117c05f6",
        "cursor": {
          "ref": "fa667a0c-ec4b-47a6-bc4f-e2636dd5abd5",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "24cf4ee3-ef92-4e32-9fa1-a7e7361b9ef9"
        },
        "item": {
          "id": "f944c985-47cb-4ffb-9aa5-a0b9117c05f6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "70777fbc-0020-4438-a737-18855a53235c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd22880-55bf-4256-a7f6-e8fde146b7c9",
        "cursor": {
          "ref": "b52fbf77-dd63-43a7-b22d-b28cadd4486c",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9480c796-57e1-4aab-92d6-a41ee47fb9ed"
        },
        "item": {
          "id": "4cd22880-55bf-4256-a7f6-e8fde146b7c9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fa7f5157-0f6e-4ac3-bafd-2a9449504072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3dc41c-8746-4b2b-ba9e-6a860a17bd2d",
        "cursor": {
          "ref": "02ddff81-c78b-46bb-9e16-af3b3b905c31",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4f1f0698-5bfc-418f-b90f-a705e0597aff"
        },
        "item": {
          "id": "2d3dc41c-8746-4b2b-ba9e-6a860a17bd2d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "61abd2cd-ed31-4761-a0b1-f02cff58c276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c117863e-a762-4ce5-875c-900711a0a6e5",
        "cursor": {
          "ref": "a7b2c982-8737-461f-867c-fd260bd5adaf",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "80da3e0c-2546-4a4b-8e01-a341a9c52fea"
        },
        "item": {
          "id": "c117863e-a762-4ce5-875c-900711a0a6e5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "471b8130-3fc3-4337-83f4-ddbcdb86805d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807c1676-b829-4a47-bc6f-bd037fa294c9",
        "cursor": {
          "ref": "1af25936-c58e-4a89-a75a-562944fe1e6f",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5b2502cd-e300-448d-9162-19971570a8b1"
        },
        "item": {
          "id": "807c1676-b829-4a47-bc6f-bd037fa294c9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "185abdd6-df09-4e65-a430-67ab06f2f8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6838aca2-1955-4c8a-ad3f-eb4ab94853ed",
        "cursor": {
          "ref": "82543baa-a2f8-464c-bee1-89aa3d93417a",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "340ae295-3645-47f6-bf0c-164983f26e6c"
        },
        "item": {
          "id": "6838aca2-1955-4c8a-ad3f-eb4ab94853ed",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bd1d0d02-0aa5-4991-a893-f8764749cb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3822d42-ca02-4592-9de8-448e3271e896",
        "cursor": {
          "ref": "e6dadde9-8236-46bd-b9b9-2b9878814a0f",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fa24f939-7ee4-44c6-b8e9-3a363c2d65ac"
        },
        "item": {
          "id": "e3822d42-ca02-4592-9de8-448e3271e896",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "28856f4b-5b34-42e9-9009-83672e88a682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582c2cee-ff12-4aff-b71c-35b617255efe",
        "cursor": {
          "ref": "367b3da6-7b12-4a4f-a206-d71e106462e5",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3089e9b5-331f-4316-a908-de2dd8fd55fd"
        },
        "item": {
          "id": "582c2cee-ff12-4aff-b71c-35b617255efe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "41a4103f-1c1d-4ac9-a82d-f2cc07935769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e705dc3c-d74a-47e7-85ba-4d9ba7e35515",
        "cursor": {
          "ref": "088fa4e6-457a-42ee-92eb-a457246e2fdd",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c69a79f5-f735-445b-aedc-4c91253ac33f"
        },
        "item": {
          "id": "e705dc3c-d74a-47e7-85ba-4d9ba7e35515",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "18245acb-750b-4278-b6b4-96f6c2e4e983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462c4f2a-469c-4293-ae94-934ebe443738",
        "cursor": {
          "ref": "a3ea0850-3024-45a0-9e30-e7e8a3061d1c",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ac51b3c8-ddec-4ac9-84aa-dcaf3b323dec"
        },
        "item": {
          "id": "462c4f2a-469c-4293-ae94-934ebe443738",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "84a080b1-5118-4a39-92bb-4dd6350b55c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ea5b9a-fba9-40e0-97f6-cebefc7c8887",
        "cursor": {
          "ref": "c0fb4283-2658-4c85-b5de-676bbe76f246",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "31e3616d-4b29-43e5-b1ad-54a4567b9f29"
        },
        "item": {
          "id": "53ea5b9a-fba9-40e0-97f6-cebefc7c8887",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3c58ddac-7a41-4e3c-9e55-decfc91d0330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b276ea90-499a-4ff7-9a42-abf2874c2b01",
        "cursor": {
          "ref": "5db8a353-3fb9-4f77-881a-26d3a2791f8d",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "db245821-b081-4d1b-95d6-84f697d06317"
        },
        "item": {
          "id": "b276ea90-499a-4ff7-9a42-abf2874c2b01",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "34dda828-1757-46f0-b71a-c6bc10488b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543fa1c7-c865-4a4a-ad7e-21591a1f66a2",
        "cursor": {
          "ref": "82bb5a10-26f0-4d1d-8ef8-32297f7bfee9",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "aaab113c-55b2-46a9-a255-5f25fe4e962e"
        },
        "item": {
          "id": "543fa1c7-c865-4a4a-ad7e-21591a1f66a2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2e978d57-edae-4e2d-9795-294f7982cadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598b50fe-5e84-46bc-a373-5e6dd9c64cdb",
        "cursor": {
          "ref": "01005935-c640-4ead-90e1-fb1923e3321f",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "09176be9-d20e-4fd3-af27-b769b47d388d"
        },
        "item": {
          "id": "598b50fe-5e84-46bc-a373-5e6dd9c64cdb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ca0ab031-19de-483e-89b2-e6feead68c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684be843-0188-47a3-9af2-f6277a2b306f",
        "cursor": {
          "ref": "00a6dab5-11b7-4c18-ba95-bf8e2afe3163",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c0e4f899-afe8-4d1d-87f9-7573d5cbfa03"
        },
        "item": {
          "id": "684be843-0188-47a3-9af2-f6277a2b306f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0118b9b0-437f-4d8a-9d16-3925179c8223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28846b5-d688-412d-a338-195fb4c76a3b",
        "cursor": {
          "ref": "36ca60ab-92be-4f04-814b-a4ff85d2194b",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1b0c650b-bf29-4838-9493-8afc787d9305"
        },
        "item": {
          "id": "e28846b5-d688-412d-a338-195fb4c76a3b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "72a99c12-d172-42a7-b1e4-9156b39c83ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73acea8-7b65-4199-9ff9-98aea667d491",
        "cursor": {
          "ref": "d57688aa-b156-4ec9-a70e-eb67f83a943e",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1e2b1b24-5e19-45d5-83c3-cdf37f570a7c"
        },
        "item": {
          "id": "d73acea8-7b65-4199-9ff9-98aea667d491",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "add2d8af-163e-4a5a-8cbb-c2de7cc05b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a45639-5d5e-4e50-a1a8-833d8974d31d",
        "cursor": {
          "ref": "c59a9442-d40d-432f-b250-b07f64a72973",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "09e71ceb-e5b1-42d2-9b1c-e55dd92ff567"
        },
        "item": {
          "id": "70a45639-5d5e-4e50-a1a8-833d8974d31d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6fd34bb1-9a87-4ddb-8ab3-852a1e523aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f8cccb-19c1-41be-9cd2-54d8aa365a1f",
        "cursor": {
          "ref": "d4f8b6f4-e369-4b7d-8f35-7c5f6af57dbf",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "49fe7fd2-fdf8-42cb-a110-c32f06d75c0e"
        },
        "item": {
          "id": "39f8cccb-19c1-41be-9cd2-54d8aa365a1f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "764e101a-0a93-4e3e-b5ea-8b49a88568e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f799a1fa-a5fc-493e-b060-c554bc244596",
        "cursor": {
          "ref": "10c9e4ee-40ba-44d3-baa9-978aa00e445c",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8a42a000-b002-4463-8abb-e4c88622a211"
        },
        "item": {
          "id": "f799a1fa-a5fc-493e-b060-c554bc244596",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a95a9375-070a-4ccd-90e3-65e73f982fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859cbbd4-5394-4e3f-aa59-c64239734300",
        "cursor": {
          "ref": "d57f0a3d-3ce5-46ca-bc80-5a73229760db",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1d27fe7f-10a9-4d8f-9a32-2d7f94ae669f"
        },
        "item": {
          "id": "859cbbd4-5394-4e3f-aa59-c64239734300",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "66ce74e6-7f6a-4a5d-9151-30a1c8f129b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f161e6f5-611e-4a40-b0cb-80850274b5e4",
        "cursor": {
          "ref": "6422f9f1-b33b-49fb-8778-0311c4525409",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "eefb7a98-d1cb-424f-b571-733eb2096e2e"
        },
        "item": {
          "id": "f161e6f5-611e-4a40-b0cb-80850274b5e4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5352eec3-9e0d-43ca-85a1-37f5ed9a86af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549a3fc9-6ace-43f4-86ad-dbc524b131b7",
        "cursor": {
          "ref": "84d109a3-34e0-472a-977a-20bd27862c01",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f4997696-e8f0-4e0c-8058-17c5453b4c96"
        },
        "item": {
          "id": "549a3fc9-6ace-43f4-86ad-dbc524b131b7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4db8e0f6-e77a-4fbd-b98b-456bc97a1f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b67b251-6ae0-490d-b96d-3934a2e6cfc9",
        "cursor": {
          "ref": "2170b793-f2b2-46d9-b57c-f3ddb09c90b8",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "324fe524-f9ab-43d0-a98e-799bc7621b96"
        },
        "item": {
          "id": "1b67b251-6ae0-490d-b96d-3934a2e6cfc9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e92765cf-47af-4231-b9fa-0d470fd1fd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0454c04-1da6-44ff-b875-c5966a817d2f",
        "cursor": {
          "ref": "f9f7b112-c4bc-47e0-a050-6de347eee3e7",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "626f6e19-f0fc-4bcc-95bd-72424d94d7f4"
        },
        "item": {
          "id": "e0454c04-1da6-44ff-b875-c5966a817d2f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9e97196f-88d9-44fc-968d-47cf6491ef17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbde86a-ebe5-4ce4-bd97-4892699f9517",
        "cursor": {
          "ref": "1c30dd58-b4fe-40c3-a73c-8d8a27924989",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "726d2250-945b-4b41-bd71-6e979c937fea"
        },
        "item": {
          "id": "6bbde86a-ebe5-4ce4-bd97-4892699f9517",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "66bdbd6b-78e0-4bdb-a7fc-3baa938789bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a453f7b-0022-4d20-8686-3b48ca1ec6bf",
        "cursor": {
          "ref": "317e7a77-49cb-408c-8759-c525bbd4da11",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d039f59d-c970-4c4d-887c-1b6d7116591b"
        },
        "item": {
          "id": "2a453f7b-0022-4d20-8686-3b48ca1ec6bf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2d2e15eb-dffb-4c36-8575-602d0be17fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f288d25b-f2ca-4119-b086-8718d052405d",
        "cursor": {
          "ref": "ef9cd82f-c543-4d4b-83ae-69475f35312e",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9b5eda94-50ef-4591-87e0-50ee9c2980f7"
        },
        "item": {
          "id": "f288d25b-f2ca-4119-b086-8718d052405d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0357516e-c230-4374-bc21-4d90e56a7b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd588553-c794-4ebf-bac3-807e222b449f",
        "cursor": {
          "ref": "89158ecc-7812-436f-be48-d9486af8f07c",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3513328f-baf0-4cb0-acfe-e127189ddf8b"
        },
        "item": {
          "id": "dd588553-c794-4ebf-bac3-807e222b449f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a6397c77-6e46-4449-b0cb-35c2bcdfde76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086bbfe7-6fb7-44c6-83dd-034415d749b7",
        "cursor": {
          "ref": "0a11ae3c-c783-4ea3-a1be-892ddc61ec68",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8ac9b4b3-2ad4-4a3d-973f-324702b0d324"
        },
        "item": {
          "id": "086bbfe7-6fb7-44c6-83dd-034415d749b7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "91b2274c-2078-4eaa-b747-31ad1a69e6eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae96f448-b7c8-4a4f-a33e-11e0ca115726",
        "cursor": {
          "ref": "1f1a7cd4-992c-427e-bf93-5acfc4ca7cd0",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e7587314-3346-4e44-a534-2d8a70d6f89b"
        },
        "item": {
          "id": "ae96f448-b7c8-4a4f-a33e-11e0ca115726",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e20b2327-3122-480d-a898-a683a753eb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84546cd8-0db8-46ff-88b2-f6a413b5ec09",
        "cursor": {
          "ref": "40644428-5b3c-4da1-8e7f-290a0c70d0ba",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5c236c69-5559-40c3-afa4-befc150b3ba0"
        },
        "item": {
          "id": "84546cd8-0db8-46ff-88b2-f6a413b5ec09",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c168fc98-f3a5-43fb-a736-0a335340e208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837811dd-04db-4e57-84a3-ca26bf6eecd7",
        "cursor": {
          "ref": "b9ae898c-8306-4ba7-89fa-375b046ab0ce",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e7cbea69-072d-4698-b22c-3c02042260f9"
        },
        "item": {
          "id": "837811dd-04db-4e57-84a3-ca26bf6eecd7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6fda3556-82b6-49ba-8cae-73636bcadec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4c1c28-9514-4cc6-be94-6aa578aec027",
        "cursor": {
          "ref": "2fdeabd3-af64-4090-b389-0911ad6db718",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "52a2915f-bc19-4c95-904c-0664e131accd"
        },
        "item": {
          "id": "7b4c1c28-9514-4cc6-be94-6aa578aec027",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "51b716ce-9ed3-402c-8be5-312ecd99a245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44714602-3add-426a-b7cb-35dfd31ff433",
        "cursor": {
          "ref": "de8ae566-b01a-47f2-a086-d3f450854246",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "47d9eb18-0549-4b10-b8ea-64c98ded9ea3"
        },
        "item": {
          "id": "44714602-3add-426a-b7cb-35dfd31ff433",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b1455d65-f451-4a85-bc40-90b02ffa0843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91090cb0-67c1-4a90-ba8d-75bc4f444644",
        "cursor": {
          "ref": "89c268e2-29c2-4e11-b962-ee6779b14b8a",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fe4449f8-c8df-427b-9ce8-c3d672c68422"
        },
        "item": {
          "id": "91090cb0-67c1-4a90-ba8d-75bc4f444644",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ea3ab02b-a5ee-4ed4-9d0f-d4728b7266d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db158c2-3503-4c1c-9d9e-ae9c7760ea33",
        "cursor": {
          "ref": "70abff5f-2a3d-416d-8470-7f221bfa8a57",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "84ee172c-777a-4bb9-8a17-4b43e6bef379"
        },
        "item": {
          "id": "4db158c2-3503-4c1c-9d9e-ae9c7760ea33",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8ee1ac99-58a5-4e9f-9468-d7158ab9b3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36ed452-59aa-493b-8eb1-ca1fa971a2a6",
        "cursor": {
          "ref": "c5adf0aa-b708-4e66-b657-27cdcada5c92",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e1d1881b-609e-4f14-bb2e-89d7c6f8a51e"
        },
        "item": {
          "id": "d36ed452-59aa-493b-8eb1-ca1fa971a2a6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "861968d7-e493-4b15-a045-01f9e50e0130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dabcbed-1865-4140-a450-2e5924188d86",
        "cursor": {
          "ref": "6fdf3064-ef91-469e-90b0-1bfe2e6c1a8c",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a913181f-6ae4-47d9-a9df-d98bd6ee50fe"
        },
        "item": {
          "id": "8dabcbed-1865-4140-a450-2e5924188d86",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0cc29696-acb0-4a86-a7f6-fc2ed749a165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dcf65b-19e1-471c-a3bf-5194b192ea83",
        "cursor": {
          "ref": "2163cba3-22b0-4cf8-8378-79409dd93e35",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ecc2eaef-2967-4b07-a036-7db8a6f5ab59"
        },
        "item": {
          "id": "b3dcf65b-19e1-471c-a3bf-5194b192ea83",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "34fe1a19-40d2-4faf-89f4-91c805d6536b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37d5821-d220-470e-9955-8345d00169bf",
        "cursor": {
          "ref": "5de685c7-7e53-4e05-9939-02af1964236d",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a9230f41-b920-4cc6-b03d-2f16750d0bb5"
        },
        "item": {
          "id": "f37d5821-d220-470e-9955-8345d00169bf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b63c0bf9-fec2-4961-aaad-e56a8f91b214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816c0e55-b254-4a4c-9968-a7476f83ed93",
        "cursor": {
          "ref": "b0589f13-b35b-41e8-a49c-7c92a434ee16",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5035d0bd-b7d0-4249-b856-dd19dc541f31"
        },
        "item": {
          "id": "816c0e55-b254-4a4c-9968-a7476f83ed93",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d57526c3-657c-4070-8160-e7ab11215772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e73877-a632-4579-9720-7a31e4cc3d12",
        "cursor": {
          "ref": "55e104f4-43db-414e-aabc-c6fee7b03d31",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "38f3d2b9-2d15-4e79-851c-a55e65899688"
        },
        "item": {
          "id": "70e73877-a632-4579-9720-7a31e4cc3d12",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "131371e4-bf55-4ce4-9622-dce70a6dbe9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c0a48f-1688-4692-a967-52dc579310d3",
        "cursor": {
          "ref": "9d9bc43c-b3cf-4286-ba71-018e5a94917a",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dcab5fe7-41cb-4309-9abc-6c8c1dd5f3cd"
        },
        "item": {
          "id": "96c0a48f-1688-4692-a967-52dc579310d3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d2289a17-11bd-43eb-830a-b734562bc778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1f585b-3720-47f3-a947-e726d22434e3",
        "cursor": {
          "ref": "73127c21-aa51-415d-a4f6-01ab46a50a3c",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b528800f-5b7d-4805-9731-b43425510453"
        },
        "item": {
          "id": "5b1f585b-3720-47f3-a947-e726d22434e3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "87c45663-67e2-40d7-a7ed-bd2e423fe7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b88c67-7b51-4a31-8893-8b00b63ab4ee",
        "cursor": {
          "ref": "3303258c-7a7b-4f7e-a20c-978e48e1ce51",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "721b7a79-4067-43e8-b948-e69477f67e68"
        },
        "item": {
          "id": "e0b88c67-7b51-4a31-8893-8b00b63ab4ee",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b768399e-d800-43c0-82a3-56088e15950a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3a9973-66d7-4bd1-9bdb-31f96689c1ca",
        "cursor": {
          "ref": "aa5179e0-17d9-4af3-afdc-cd339fff955c",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "97c310c1-5dbb-44ad-976f-e2e28d130aa6"
        },
        "item": {
          "id": "9b3a9973-66d7-4bd1-9bdb-31f96689c1ca",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2e92011f-4962-4231-acdb-162fc26cad63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11681a5e-e3ea-4552-82e2-13dfa9c5c5c0",
        "cursor": {
          "ref": "22c8f280-863c-409d-8b11-9445263e6da3",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3579032e-5fdb-46c8-9b29-169fb39a2da8"
        },
        "item": {
          "id": "11681a5e-e3ea-4552-82e2-13dfa9c5c5c0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "58264040-4967-4009-a0f9-3b8251cd1672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340cef68-1c4c-4540-b605-f41452acae45",
        "cursor": {
          "ref": "fb783b97-3bed-421f-94f6-eb1774fd90e4",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1338edf0-5255-47ad-9b56-39594015e6d6"
        },
        "item": {
          "id": "340cef68-1c4c-4540-b605-f41452acae45",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8b0497f7-6edc-46c7-9df5-1f671f10567c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf3bdc0-5e31-4e7f-bb87-3905b23f8b84",
        "cursor": {
          "ref": "684a76ad-39cb-497e-b0f5-a426e060f201",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d333f650-6b67-4486-b9e6-1811e14cad40"
        },
        "item": {
          "id": "eaf3bdc0-5e31-4e7f-bb87-3905b23f8b84",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c8096683-adbd-45ba-bce5-34bf7404810f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a72bbf1-6249-43f6-ac44-58a1a3d4d9b5",
        "cursor": {
          "ref": "95056fb2-9d65-4d5a-871d-5fc509b5818d",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f8ebe7f6-4329-49df-b208-b817d2766de1"
        },
        "item": {
          "id": "8a72bbf1-6249-43f6-ac44-58a1a3d4d9b5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "74896c62-d027-42c3-9655-e8371dcac696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a963890-695f-448b-86e4-bd25f94b4fa2",
        "cursor": {
          "ref": "c0cfe042-eb0d-4418-8b7c-e0d01f1def4d",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dbfcfa2a-6814-428b-9833-5b65ae9d3031"
        },
        "item": {
          "id": "4a963890-695f-448b-86e4-bd25f94b4fa2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "369e99d7-a15f-4974-a74c-edff506c8d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfb986d-eb50-4272-b241-01104293e906",
        "cursor": {
          "ref": "15c1ed6c-c987-4d6e-8a00-f7b6264b5c58",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "876ba5ff-3791-4133-9dc1-b60d2fca92f0"
        },
        "item": {
          "id": "0cfb986d-eb50-4272-b241-01104293e906",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a4455ff2-9832-4239-ad8a-ef13e4cf3522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e67d4a-60fb-4630-aa59-c47196f96fa1",
        "cursor": {
          "ref": "2bd0c3bb-84b9-49ad-bc96-31190b9996bb",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7082d3ab-3722-4efd-86ba-88f1e5becc03"
        },
        "item": {
          "id": "08e67d4a-60fb-4630-aa59-c47196f96fa1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "262e717a-31a6-4488-8823-fdacfa2519d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0639f171-f280-4abf-954a-227bf9935ee1",
        "cursor": {
          "ref": "0e4d894f-1600-49d9-a11a-cc9c73e0decd",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a71b7d53-30e6-4e7f-b3cc-f383c3d2ca73"
        },
        "item": {
          "id": "0639f171-f280-4abf-954a-227bf9935ee1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e88af51c-ca19-494d-8fa6-14c8cd10ff0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e312db-61f9-45cc-8370-6c4b7b651717",
        "cursor": {
          "ref": "92637901-c496-4036-b418-f578c0acdae1",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0fa39a5e-df8c-4be8-8ae3-5c7921f70aaf"
        },
        "item": {
          "id": "51e312db-61f9-45cc-8370-6c4b7b651717",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c0d3022a-0bc0-40e2-8460-187ec828cf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c1e53d-0f9f-493d-9fd0-73b6b2efa2ff",
        "cursor": {
          "ref": "f23c8ed0-d060-481b-bfd4-6faeb1490a17",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6507cbe2-2aac-440c-b26b-b7abd7c3a8c8"
        },
        "item": {
          "id": "20c1e53d-0f9f-493d-9fd0-73b6b2efa2ff",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "707caf5a-65bf-4940-8c68-40a03f86bf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91c1f80-9cf7-41bd-a980-6c5da8b37379",
        "cursor": {
          "ref": "9e312c20-6393-41a0-9494-f723510f89ad",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "637bd4b5-35cc-4b0d-a413-97c2fb7bce6f"
        },
        "item": {
          "id": "c91c1f80-9cf7-41bd-a980-6c5da8b37379",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "98eabd98-7ad6-4039-8806-c03ef42e21fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63dbb24-0ea5-4144-9b17-6cf2edbca416",
        "cursor": {
          "ref": "2567c2d7-6382-47e0-8ef1-f10c2b422436",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "97561dd7-1c05-4413-a3ef-13335f20b51d"
        },
        "item": {
          "id": "c63dbb24-0ea5-4144-9b17-6cf2edbca416",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d4b73542-78b1-4bef-a9f5-658143aa74ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd335f85-25f4-4514-9570-5f6ca01bb67a",
        "cursor": {
          "ref": "1cf483b0-7bc1-4bd2-bdc9-092c7b9066e2",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "00eab91d-e41f-4ba5-b51b-354220caaca6"
        },
        "item": {
          "id": "cd335f85-25f4-4514-9570-5f6ca01bb67a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "46189191-6914-4c5d-8997-7348b790272b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d4ba70-43e1-4dea-abcf-2af48d516746",
        "cursor": {
          "ref": "ac41da6b-678d-4ae1-a15b-7f17a8304ca3",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "71e7c99d-2949-41be-8c04-9460f6400afa"
        },
        "item": {
          "id": "45d4ba70-43e1-4dea-abcf-2af48d516746",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d6d74409-3132-4fb2-be78-cc3b6ca60aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05784128-221b-474a-bfbf-2373163fa21a",
        "cursor": {
          "ref": "fc35766f-7481-479e-b600-11de693f1baf",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d0fd9dfd-2f80-48c0-9e59-f882f6fce3bd"
        },
        "item": {
          "id": "05784128-221b-474a-bfbf-2373163fa21a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "42583af3-38d6-4299-8077-e493cb2905a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793f29aa-235d-41f1-bdc9-91e35ef0ad87",
        "cursor": {
          "ref": "a930566c-e417-43f0-8a90-96162e746738",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f7c28733-7c89-4cbd-8056-63714a8b99fe"
        },
        "item": {
          "id": "793f29aa-235d-41f1-bdc9-91e35ef0ad87",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "29e7f337-d3a4-4873-8092-66e1358de656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd90637-141b-4def-8eb5-716f6e106da9",
        "cursor": {
          "ref": "60db61cc-6f0e-4846-8689-386f40206f61",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3b29cbc0-65e3-4f94-8139-41a89a1ee5a2"
        },
        "item": {
          "id": "1bd90637-141b-4def-8eb5-716f6e106da9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2cf36e45-0fea-460c-84ab-97fd197ddb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378e1a29-2e68-4df4-96e7-dec776a594b3",
        "cursor": {
          "ref": "ee4c1cd0-aacb-444f-bcab-86884c8e7347",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f5cc1c0c-e17c-42c2-b5ca-49f0ca5b3e3e"
        },
        "item": {
          "id": "378e1a29-2e68-4df4-96e7-dec776a594b3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cd439734-88e7-4421-bd11-208f19a81c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dc97f4-4cb9-4949-8fbe-2ade72acdebd",
        "cursor": {
          "ref": "42a00314-c518-4545-9487-737c704941fd",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2182045c-96c9-4f1c-aba9-69c5a493bf95"
        },
        "item": {
          "id": "20dc97f4-4cb9-4949-8fbe-2ade72acdebd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6f09efad-7a38-4f68-a4ed-4e75058dbe02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ff6967-9392-46b1-8151-5e0e5ef5b271",
        "cursor": {
          "ref": "439f7e91-5968-4203-9eed-d07bd7f413a6",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3fcb28f2-b729-4bd9-96e5-2c0048a2eed2"
        },
        "item": {
          "id": "f3ff6967-9392-46b1-8151-5e0e5ef5b271",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b9e31b7d-a326-451a-8012-32da8d9026c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2093718c-a979-4b0e-8533-6da68b69f754",
        "cursor": {
          "ref": "8c4c86f8-ab77-4d61-a0c5-d22306fcb46b",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d1c9f7e3-fef3-455e-b1fd-b5a331a68aa9"
        },
        "item": {
          "id": "2093718c-a979-4b0e-8533-6da68b69f754",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "049cce36-ca89-4178-97e4-ea556be542bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c87630-9bf2-4daa-9e70-89e0e419e25a",
        "cursor": {
          "ref": "9c78705f-b0f1-4eb2-81c5-43139e1392e7",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "47bee47a-9083-428b-9087-44bf7735131f"
        },
        "item": {
          "id": "63c87630-9bf2-4daa-9e70-89e0e419e25a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a37e3bc6-dc11-4ed4-a35f-d8681c116ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ed128e-0c73-472f-b9e5-45b0ef1c7ec7",
        "cursor": {
          "ref": "8f53c0c2-53d8-4838-b94a-76f84a5d3894",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a0d9d714-998b-4e4b-a307-3d5de6b32ce7"
        },
        "item": {
          "id": "49ed128e-0c73-472f-b9e5-45b0ef1c7ec7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6d226161-cf62-4e04-b321-2e936b659ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3deb7ccf-b911-4655-ae7e-7f3b0e4d755f",
        "cursor": {
          "ref": "7a0d5b74-71c8-4b6c-a914-ab52aa95c530",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1d0bfb7b-22fb-47c7-89d0-e51c797df3b1"
        },
        "item": {
          "id": "3deb7ccf-b911-4655-ae7e-7f3b0e4d755f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f761abd9-d5a4-4f10-9473-9cd4e0e627a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c586e6e5-1de1-4061-923e-1dfa25e22e40",
        "cursor": {
          "ref": "c2ddabde-65db-4ab7-a635-26d65f7f4fcd",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6d2ebcae-62c2-440f-917f-877d0c808611"
        },
        "item": {
          "id": "c586e6e5-1de1-4061-923e-1dfa25e22e40",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fdb2f01b-3a2b-4679-bc4d-1c5d6ceb743c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb7e68c-f5e5-4b5f-a8bb-21199a200c81",
        "cursor": {
          "ref": "c0cb60c9-fb05-4490-8461-f43e4e053147",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4f5f0599-a226-4378-b1bb-77f3ab98dcfc"
        },
        "item": {
          "id": "cdb7e68c-f5e5-4b5f-a8bb-21199a200c81",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "09438dae-85ad-4cab-b1a7-68a894d880ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27794f58-ab39-4d37-bdb2-c5c54eba1714",
        "cursor": {
          "ref": "66b33d7c-4652-450d-b0c6-233221703e58",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3737de83-c9fc-4f83-987e-ec0be835ab1b"
        },
        "item": {
          "id": "27794f58-ab39-4d37-bdb2-c5c54eba1714",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0f185b61-b682-41cf-8d55-164dcf0fc77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48a0cad-449b-4962-9dac-306a0fc51953",
        "cursor": {
          "ref": "8447e71e-9adc-4fe6-9382-33299e33d89a",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "36a28b1b-506f-4699-8bf7-a622a54c7c4c"
        },
        "item": {
          "id": "c48a0cad-449b-4962-9dac-306a0fc51953",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "06a6538d-fbdc-4833-9e62-9a611dd69496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04480533-ef89-4956-a1fd-0e9d07563679",
        "cursor": {
          "ref": "e89a6e05-9d1c-4e36-b9c3-b9bdc1a73c5e",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d5249270-cfea-4b32-b947-2d49f064e872"
        },
        "item": {
          "id": "04480533-ef89-4956-a1fd-0e9d07563679",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2f464651-7ce3-4bf1-abb8-ecee52727771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792bf845-e97b-4db1-b90c-6797562f0b7c",
        "cursor": {
          "ref": "067238d7-233a-4be1-9f45-2f83de09d502",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6fe6d585-4aa1-49c8-89fa-c060d6f6708f"
        },
        "item": {
          "id": "792bf845-e97b-4db1-b90c-6797562f0b7c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8507028b-8da8-440b-99d3-c83aa3dc9460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b86f8c-3163-45b1-b2c4-2323960cb053",
        "cursor": {
          "ref": "d32ad890-9af0-4909-9be8-e6953831264a",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4a9dd39d-aeaa-41f9-a243-2eac142e702e"
        },
        "item": {
          "id": "71b86f8c-3163-45b1-b2c4-2323960cb053",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "837539d2-74c7-430d-bcea-2d95c7825f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4c35f7-782b-4236-b28c-a6e0acbec8b8",
        "cursor": {
          "ref": "f9b6ae8f-6185-45fc-acc7-4041cf10fc72",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "70f8f24a-5294-4887-b1e6-798e2ddeffe3"
        },
        "item": {
          "id": "5b4c35f7-782b-4236-b28c-a6e0acbec8b8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c4737412-c8ac-4d16-bc88-5a5e878caa6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72912fb5-9895-425d-a85b-c14ab868efe8",
        "cursor": {
          "ref": "29dd5d58-b42d-4e25-a74a-0229b03302f0",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6521f23b-f03f-44cb-96d4-bf0c743dfa1d"
        },
        "item": {
          "id": "72912fb5-9895-425d-a85b-c14ab868efe8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "44451362-0f84-44be-92f1-8215888908bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362f448a-02fe-400b-8389-057acc95a0ac",
        "cursor": {
          "ref": "1a694df1-6ed5-44b0-8ac6-e3e17f2e263c",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "31aa7a25-7549-40fa-96b9-a319f8ba7755"
        },
        "item": {
          "id": "362f448a-02fe-400b-8389-057acc95a0ac",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ac3d06ea-6fa5-4620-b956-924f5659aa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b20a71-8d15-4653-b2ca-b4b90923530a",
        "cursor": {
          "ref": "0072b50b-7b0f-4982-8924-e5438e9e609c",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7cf273e1-ca7c-4799-ac1c-5edbd458b35b"
        },
        "item": {
          "id": "c8b20a71-8d15-4653-b2ca-b4b90923530a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dceffbd4-936b-4f30-bc04-6fd4d8d83e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9b6af1-79ee-4c53-b193-50b003b22d00",
        "cursor": {
          "ref": "ceaa1cea-8ae5-4d52-aaea-3d34051327de",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9d77118b-8efd-4f97-a7ac-32aa62286b40"
        },
        "item": {
          "id": "bf9b6af1-79ee-4c53-b193-50b003b22d00",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "91db79a7-abb2-432f-b676-1b0c121563c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675319c7-d3b7-4f03-b89c-8eeef6abef85",
        "cursor": {
          "ref": "22f7f923-5e5b-4d38-9e47-3b8382ad150b",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ebed1355-0d93-4515-849d-07f7e2adbf38"
        },
        "item": {
          "id": "675319c7-d3b7-4f03-b89c-8eeef6abef85",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b825dd9f-d5f0-4cc2-a734-28dee1254b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e82b9f-662c-4509-a179-b94b61c0b1fb",
        "cursor": {
          "ref": "7a5417ca-eb26-4e64-8fc2-056332ad4dc4",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "eafd736f-faa5-4095-a285-dfe72a765379"
        },
        "item": {
          "id": "d7e82b9f-662c-4509-a179-b94b61c0b1fb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "50384f1d-fa84-4718-9304-b273e0e37bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92eedfdb-66cf-4c6c-ad82-7cc5c9788573",
        "cursor": {
          "ref": "fc29acbc-ba73-4846-a0e6-a72969f2bbfa",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "105ca884-f830-4989-9221-78f70a344570"
        },
        "item": {
          "id": "92eedfdb-66cf-4c6c-ad82-7cc5c9788573",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cc292f31-a20f-412c-ab19-bfcdf7ad92c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0a941a-e4ec-4476-af45-9572578412eb",
        "cursor": {
          "ref": "05f67a55-c861-4022-b9ef-0d0110cb89ec",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8007ace4-1d50-4d7c-9a5d-4118fad6c4c8"
        },
        "item": {
          "id": "ac0a941a-e4ec-4476-af45-9572578412eb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2d6acae7-1d5b-404e-b62e-c85eb45868f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520ed7a4-8cc3-42cf-8bf3-b1ef7008c838",
        "cursor": {
          "ref": "ab9d6e6a-a5eb-4fdf-b720-5c665c185c08",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8c9ffa53-c229-49f5-b492-fd152df5312e"
        },
        "item": {
          "id": "520ed7a4-8cc3-42cf-8bf3-b1ef7008c838",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "17f2a041-4599-4b6d-bb6d-9bfc538159cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7844d574-5890-4bb5-a7c4-a4db0852f3e8",
        "cursor": {
          "ref": "8f90dc1a-d2fc-4b6c-b4b1-2034594239e8",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4625c258-f593-4a1e-9980-4673d2f4cd71"
        },
        "item": {
          "id": "7844d574-5890-4bb5-a7c4-a4db0852f3e8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "149dd785-e324-45aa-84ad-957cc4b8ffdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bae042-1092-4c03-b4ea-92ce33fad64e",
        "cursor": {
          "ref": "1e407f33-3fc9-45ad-b7a1-9585bde3a5fe",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5ad14eb9-94fc-4949-84a3-cf9daf4bd5cf"
        },
        "item": {
          "id": "c6bae042-1092-4c03-b4ea-92ce33fad64e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8709bc3b-e414-4c21-9266-0cc91315d6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70183d83-ba19-435a-968a-bb0edf015b0c",
        "cursor": {
          "ref": "b9b6066a-6db2-461f-a80a-a13e77c9026e",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2d859eb1-221c-404b-a4d0-f19f35f476b6"
        },
        "item": {
          "id": "70183d83-ba19-435a-968a-bb0edf015b0c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "36ebd31c-aceb-47d3-84a6-a8644199db48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be9724e-c325-46df-9bf5-eefc13e499be",
        "cursor": {
          "ref": "68c5b6b4-7938-4b28-ba68-a5a89590868c",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b38d1d4b-829b-4eb4-869a-5a193ec26cc8"
        },
        "item": {
          "id": "6be9724e-c325-46df-9bf5-eefc13e499be",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9cb3f98b-126d-48f0-ba47-7c42637f27e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c9e2bd-2949-4ac5-8f20-7073791d36d9",
        "cursor": {
          "ref": "9b081abf-183f-4c1d-bc90-3d40aaf98ffc",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c51895df-e977-4381-b160-36cd8f113582"
        },
        "item": {
          "id": "88c9e2bd-2949-4ac5-8f20-7073791d36d9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "edc3063d-d8a0-4262-b64b-26c0fb2ea31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d1a9b5-885d-447a-a20b-305e40edbf94",
        "cursor": {
          "ref": "6b901291-8366-4a5c-9794-830a3cc56b80",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "22048dab-82f4-4873-b87c-8cf55d034471"
        },
        "item": {
          "id": "79d1a9b5-885d-447a-a20b-305e40edbf94",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f54ebbf4-300f-49a2-a6cb-d46e2f5a13ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259e3d8b-a9cf-4589-b3ad-08cad1135f28",
        "cursor": {
          "ref": "899bd5a2-5670-4f4b-8ea9-5573ab58e668",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6f665461-48fb-4936-af50-30d72a8286f4"
        },
        "item": {
          "id": "259e3d8b-a9cf-4589-b3ad-08cad1135f28",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f2f92b1a-72ef-4947-8907-0ecc077f0ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c88a84-21ba-459f-a83b-5a1b0a8130b4",
        "cursor": {
          "ref": "95385feb-ca18-4700-a3a9-3adfa7b1ce92",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f54fb0e9-eefd-44ca-b8ce-874e687a3c59"
        },
        "item": {
          "id": "68c88a84-21ba-459f-a83b-5a1b0a8130b4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5110b506-5d2b-43eb-84c9-a519fdce5993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52377950-9b2c-47d1-b6dd-bc0aee0bbf41",
        "cursor": {
          "ref": "82cc834c-747d-4d98-af31-9d3ea58c2c8f",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ee5f3227-0749-444b-b590-98604fddd803"
        },
        "item": {
          "id": "52377950-9b2c-47d1-b6dd-bc0aee0bbf41",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "eb546395-15c6-4263-bf48-27e61f052a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58066f51-2897-4a59-be57-608ead6bd910",
        "cursor": {
          "ref": "f1cf8341-117a-4908-998b-8c76c736a35f",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3938870e-24cb-43c6-aa5a-f7cc2a458c2f"
        },
        "item": {
          "id": "58066f51-2897-4a59-be57-608ead6bd910",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e853603f-946f-4424-9427-5a8ec38fc6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08178381-0c7d-4f53-a0d4-555cf24e6a4d",
        "cursor": {
          "ref": "01638dcc-8323-4ea9-b406-ed2f5ee7b1bb",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "79cd3eec-017e-4cb1-979f-4eb80b0185b1"
        },
        "item": {
          "id": "08178381-0c7d-4f53-a0d4-555cf24e6a4d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d4d2e167-40a8-4b14-867c-ebba49fae8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44486ad-d8b1-4cf9-ab7d-4930fd0d93a5",
        "cursor": {
          "ref": "7b9251dc-00c2-45b4-a020-ef73c2d2ed76",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b3b92d8f-74ea-4396-b99d-c42b59826de7"
        },
        "item": {
          "id": "b44486ad-d8b1-4cf9-ab7d-4930fd0d93a5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6cc6cf65-5236-4f93-9b6b-a7a49ed49d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76f607b-9ee6-4cff-b919-8c16ad446b64",
        "cursor": {
          "ref": "c7e57278-d94a-4c78-aabc-7eac63c6f1bd",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2c2f8580-f562-4e4e-96a3-94473ca71aba"
        },
        "item": {
          "id": "c76f607b-9ee6-4cff-b919-8c16ad446b64",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "74110fc7-fb57-4565-9bcd-4642e309322f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6af52c3-f9dc-49ef-b3d8-cd56e20927ce",
        "cursor": {
          "ref": "50408d7a-1ff7-4323-b9ac-2b691a6059f8",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1113a78a-9092-4414-9912-88bdeb5b3ba8"
        },
        "item": {
          "id": "b6af52c3-f9dc-49ef-b3d8-cd56e20927ce",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b6b217e6-1ac9-43c8-b864-152b3d5e85b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2142e6b4-b6da-4689-8c2c-6ed900b279a3",
        "cursor": {
          "ref": "c13d7d3c-bcd5-4500-9e0c-22cc82bd0d10",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8f41f5cb-87a8-4cf8-ad49-e649caa9b715"
        },
        "item": {
          "id": "2142e6b4-b6da-4689-8c2c-6ed900b279a3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ddaca0fc-05a9-4135-ae39-3e0067ffaad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c7cddb-9ee8-4fad-b9ad-155cf87a320c",
        "cursor": {
          "ref": "0b3a304b-f7c4-4c25-b1b9-68d004877540",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "69671e27-54d5-472a-aadd-0baa9852a1f5"
        },
        "item": {
          "id": "f7c7cddb-9ee8-4fad-b9ad-155cf87a320c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "420a24bf-9715-41db-a92d-8533b6305884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda90eca-e20d-412b-9577-086ec4cdea68",
        "cursor": {
          "ref": "6d1b7051-9d3c-4788-abd7-94d95c98693d",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0e545070-e896-400e-aaa6-e4b9fe9e4bc5"
        },
        "item": {
          "id": "eda90eca-e20d-412b-9577-086ec4cdea68",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "82cc8ebf-7286-47e8-a3a0-505842ea54c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a457697-17b0-4aef-8d0b-20538ea5e957",
        "cursor": {
          "ref": "9ce6f95b-c537-4c0d-9f24-ee7aad187676",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "49d1ae5d-ffe2-4a7e-8a34-e0723b6b2091"
        },
        "item": {
          "id": "4a457697-17b0-4aef-8d0b-20538ea5e957",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "255bad90-73a3-475a-a6e6-599b163eaa96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e1a0fa-ea15-496e-b4cd-aaaa25ee9877",
        "cursor": {
          "ref": "5cf10a34-645a-478b-a96c-54dcbfb4d84b",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "359e01c5-419d-4549-9824-d5afaaa5dbf4"
        },
        "item": {
          "id": "e6e1a0fa-ea15-496e-b4cd-aaaa25ee9877",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9eb13dd0-568f-457c-ac23-12237e171649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f5722a-6095-4b51-b185-eb83886b459d",
        "cursor": {
          "ref": "db27b1fe-f72e-48a5-af2d-656a9468f900",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "58fa8bb7-c68e-4269-b4c5-c898bcff860e"
        },
        "item": {
          "id": "60f5722a-6095-4b51-b185-eb83886b459d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3adc7cee-a4f0-4ebb-8342-e28f91279773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc53095-b9dc-4eac-abde-9392f6fb36d6",
        "cursor": {
          "ref": "f48997f5-b494-4778-89a6-614c35dca556",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9de64a7f-4c67-4e11-bafb-f6397288c56a"
        },
        "item": {
          "id": "1cc53095-b9dc-4eac-abde-9392f6fb36d6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e37e3540-da2b-4acb-803a-42f11bd9092e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38fa7a6-c732-4e82-b3cb-96a254cffe6a",
        "cursor": {
          "ref": "411af221-c8a6-48fc-a28e-ab3198781344",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fc061197-ca0c-4337-8261-45ac62b0ecac"
        },
        "item": {
          "id": "a38fa7a6-c732-4e82-b3cb-96a254cffe6a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e5b92ce5-cba3-416b-92b5-b66c5cb0c587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fd06ec-5d12-4ad1-8948-15a8c3ff9229",
        "cursor": {
          "ref": "8f273ce1-838a-4905-8dad-3eb9c8738423",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0b7d66b3-e714-49cf-b584-e398271c2a1c"
        },
        "item": {
          "id": "87fd06ec-5d12-4ad1-8948-15a8c3ff9229",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7c8e34e4-d3ee-48a1-8701-7289199fd36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e9ba1a-1e95-4919-ad5d-fdae59265838",
        "cursor": {
          "ref": "43174717-2484-4848-9e9f-160f3a5d8065",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "36994e8e-4237-4bb6-b431-777590afc4f5"
        },
        "item": {
          "id": "f3e9ba1a-1e95-4919-ad5d-fdae59265838",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e3695d1f-28ac-464a-bcc0-7396dd8051f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ca6d55-aaac-4470-ae25-68b96db10e8c",
        "cursor": {
          "ref": "c9460ea3-8574-4092-867b-169fab9c1b06",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "58c7fb51-d2a9-4faa-acba-e6a1e2571709"
        },
        "item": {
          "id": "b0ca6d55-aaac-4470-ae25-68b96db10e8c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4be0afa1-d82f-42e4-9b35-8ca4230f3530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2973d67f-24d6-4fd5-b9d5-c64262f79eed",
        "cursor": {
          "ref": "b7fe4f4f-acf8-467a-bdc1-f565781417b3",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1436beac-fea5-4158-b72f-01bc1baaa306"
        },
        "item": {
          "id": "2973d67f-24d6-4fd5-b9d5-c64262f79eed",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1f982062-54d8-4e97-8292-914e0e143e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0048ea-79a5-445c-be32-b02f06cbe4a7",
        "cursor": {
          "ref": "f078f8cd-08cf-4717-8b5d-bd91d2a647eb",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6894c7ba-fbcd-4876-988c-43d4982d90a0"
        },
        "item": {
          "id": "3f0048ea-79a5-445c-be32-b02f06cbe4a7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4be7c9f9-2297-47e7-806a-4ff3c201c34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367c03d9-6964-4669-89cf-42d941098247",
        "cursor": {
          "ref": "a366ecb9-e93e-4989-9eb7-e2671f77cdee",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5111bbe2-2ed3-4ca2-bc26-6c5bd842277f"
        },
        "item": {
          "id": "367c03d9-6964-4669-89cf-42d941098247",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "782470fe-9daf-4ac6-8c64-e853fde3c6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08df079a-f6f2-445b-a9c6-d07f2969c245",
        "cursor": {
          "ref": "a4225526-6d7b-4e99-bcc3-4a88f9d2578d",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1350127e-44ac-4bfe-8406-979884c73a07"
        },
        "item": {
          "id": "08df079a-f6f2-445b-a9c6-d07f2969c245",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "96709749-d535-4773-a47a-f378ab3ebb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cb6fb5-e51f-4558-b188-6d588ac250c3",
        "cursor": {
          "ref": "1922e1b7-5781-4b57-bafc-61af48d2affc",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "60a0c35f-fd22-46f4-804a-0a0a560103dd"
        },
        "item": {
          "id": "a7cb6fb5-e51f-4558-b188-6d588ac250c3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9ef88dad-edc1-48cb-80b0-5b5dc0fb16da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c59e54-6d63-4b06-bb30-ed6c6508a8cd",
        "cursor": {
          "ref": "93561abc-e84b-4672-ab7d-a5c3934a40d0",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1305b25e-7dde-42b6-b9e4-337c94373a97"
        },
        "item": {
          "id": "43c59e54-6d63-4b06-bb30-ed6c6508a8cd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2a7a816d-3ab1-4645-bec2-1441ea63a03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7eada4-1f1f-4245-b77e-d0c294ca7dc1",
        "cursor": {
          "ref": "714a2665-ec09-4ecd-a180-21dd39d988f4",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "98327b76-0f66-40fe-b086-0639f765c65e"
        },
        "item": {
          "id": "1e7eada4-1f1f-4245-b77e-d0c294ca7dc1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a66916f1-44e6-4c9e-85d2-82540b977d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be43ab6-0cde-4da2-9f10-ed29e40b038e",
        "cursor": {
          "ref": "6caf6cf2-3c42-4da6-894d-55532b33b415",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8f1fc166-6850-4d84-bf71-a13113a3b9a0"
        },
        "item": {
          "id": "8be43ab6-0cde-4da2-9f10-ed29e40b038e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cd30087e-3cae-4c2b-b8e3-26d3ebb11ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474480dd-a18e-4a09-b3aa-49e4cf57f561",
        "cursor": {
          "ref": "b80c4628-7870-4a7b-a754-2cab34a794ef",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "813ae191-40eb-49ae-8dd1-5c18438cf1ae"
        },
        "item": {
          "id": "474480dd-a18e-4a09-b3aa-49e4cf57f561",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "31de0478-7717-4974-a051-2496e0500696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6b28a4-2ae6-4a66-8af0-8b3b794ee9ba",
        "cursor": {
          "ref": "edc09590-fae4-447f-b7b8-de23dd741569",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "00611888-d8a0-4ca0-842e-082092dc9a4e"
        },
        "item": {
          "id": "cb6b28a4-2ae6-4a66-8af0-8b3b794ee9ba",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "df4c78ee-2e70-4252-82b2-c9f5066080a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7e5e09-909a-497c-921e-12d5a550b30a",
        "cursor": {
          "ref": "7d800951-53b7-4ae9-85e3-2b444b0a1aa3",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f523cffe-860a-4c63-a798-44963a914b17"
        },
        "item": {
          "id": "ed7e5e09-909a-497c-921e-12d5a550b30a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5d118c6b-a38f-4ef5-8d7e-378e646ca113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae694eec-36f7-448e-8ce2-d2e1ec3e6f01",
        "cursor": {
          "ref": "0cb799da-1401-467d-a820-7439d18f5926",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "207a3d33-e5b3-44ee-8542-22abef0a9b10"
        },
        "item": {
          "id": "ae694eec-36f7-448e-8ce2-d2e1ec3e6f01",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fb60b703-12c7-4a5a-937e-da1683f2c994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab3fe5d-9ef6-4cfc-a37d-8e3c43f5b520",
        "cursor": {
          "ref": "8d01c483-a68e-446b-94c1-b32e888069a9",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fbf873e7-4466-4afb-95a0-a30e81880587"
        },
        "item": {
          "id": "9ab3fe5d-9ef6-4cfc-a37d-8e3c43f5b520",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3fc9ae41-b4de-46f0-b77e-f74bad9e24d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37448e4-5bf4-4bff-96cd-08388bc06562",
        "cursor": {
          "ref": "9229f6fb-9709-42e6-a266-d9fdbd67d410",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3a3b9e1e-d6f5-4df0-bd34-87829770662a"
        },
        "item": {
          "id": "e37448e4-5bf4-4bff-96cd-08388bc06562",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5d8bff51-c4c3-46c8-ba8d-2a386adc113c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981fdb50-77f4-47a5-a60e-2222c138f9b5",
        "cursor": {
          "ref": "3886fec2-40a4-410d-9d8e-67fc891f9f27",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1bd74048-74af-4464-8e4e-d13b6e230a08"
        },
        "item": {
          "id": "981fdb50-77f4-47a5-a60e-2222c138f9b5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ad4c6238-b0e2-44c8-88fc-2aadc77183e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cac1a9a-db1e-444b-98a4-20edc9189918",
        "cursor": {
          "ref": "661ae7f4-f9b6-4b44-b8f0-b3e9fa34b222",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b782690a-8eb3-417d-b440-6cd8d4f6cc8d"
        },
        "item": {
          "id": "1cac1a9a-db1e-444b-98a4-20edc9189918",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f0809463-75bc-43e0-81df-3cda7d90e64f",
          "status": "OK",
          "code": 200,
          "responseTime": 425,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de3d96e-5014-4f59-bba3-6d30df698d23",
        "cursor": {
          "ref": "028a7763-79b4-4889-b7a5-f297090dea6c",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3d84f5e6-1b01-4312-a6ea-c1221fc202ed"
        },
        "item": {
          "id": "7de3d96e-5014-4f59-bba3-6d30df698d23",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7daae36d-48f2-48a9-bdd0-5e1a499e3c97",
          "status": "OK",
          "code": 200,
          "responseTime": 1531,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "02989e5b-3d3e-4863-af73-603e439ccf74",
        "cursor": {
          "ref": "c4166d10-050d-4493-8fac-40f41ad2ac4f",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4ce86bce-11cb-428f-bddd-942d21fa27b2"
        },
        "item": {
          "id": "02989e5b-3d3e-4863-af73-603e439ccf74",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9aec6b0c-736f-4d4d-9f61-54043ebda220",
          "status": "OK",
          "code": 200,
          "responseTime": 1470,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2fcdd3-9ef4-413b-a219-7bf84a3834b6",
        "cursor": {
          "ref": "33dc3bcc-1eda-4033-a052-559451171976",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b1996048-8c6a-4960-9cbc-001fbeda9c25"
        },
        "item": {
          "id": "ce2fcdd3-9ef4-413b-a219-7bf84a3834b6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d7d4c2a-f6d1-4175-98c9-d3f996d7a263",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2fcdd3-9ef4-413b-a219-7bf84a3834b6",
        "cursor": {
          "ref": "33dc3bcc-1eda-4033-a052-559451171976",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b1996048-8c6a-4960-9cbc-001fbeda9c25"
        },
        "item": {
          "id": "ce2fcdd3-9ef4-413b-a219-7bf84a3834b6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d7d4c2a-f6d1-4175-98c9-d3f996d7a263",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9b8b50-2bc7-445a-b944-7b1872f18f2b",
        "cursor": {
          "ref": "093ca5d9-18da-4782-a83f-a2915c6975f2",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c5733257-16c8-41e1-8c1a-0bc972631dbd"
        },
        "item": {
          "id": "0d9b8b50-2bc7-445a-b944-7b1872f18f2b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fad8f0d7-d1e4-41a3-96b9-304085183675",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42189d37-77d4-4c20-8895-4a5d32c639b5",
        "cursor": {
          "ref": "1f9ab83b-f93e-4ce3-9c3a-87c042105854",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "280a1cbf-d7b6-47b7-bf67-bd1d0b11c33a"
        },
        "item": {
          "id": "42189d37-77d4-4c20-8895-4a5d32c639b5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b89e5a99-9575-428f-a2ed-924b95ad5fdd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}