{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e5787fbb-c609-40b0-b43e-aa2032d457c3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c01f67f7-4720-4d05-b2b6-084d83cd211a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffd01228-e46d-4dc1-9d1c-548240144849",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f2711ce9-b4f3-41e0-a91c-2e256cfdacbc"
                }
              }
            ]
          },
          {
            "id": "4b1de8bf-18df-42ce-8149-5773c0c21913",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f56bd97e-1df5-476b-bc0b-2369af4d88ef",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8bcf6d51-e64c-4e15-9b7f-175a0de35d03"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "333d6e92-4e96-4c3f-8871-2469ec3a5644",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a532ea65-b76f-4fa8-b116-0cf9503a97b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49b89f9a-7b25-4e97-893c-90dabf2d92a3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7288d68-01ce-4b0e-8b05-2c301729d618",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd40cc2c-8ed2-46d7-8af7-5aa07297ad28"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "add42ff2-14f1-4d70-b9c7-f93fdb80955a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9807099-d2d9-451e-b9e2-ecacdc17f958"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2347056c-1cfd-400d-9b76-58698e33579a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a2f8caf-3871-46b5-bb8f-29da515caf4d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cd03292-7b4d-44b5-bcd6-80e6e8481f3e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3d2480c4-6d5b-4610-9594-c18cc0bb33c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99b2e562-2c5d-4e57-a8c7-741609473cb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68a1cc91-cfb7-433d-b077-4cfa9b1f774a"
            }
          }
        ]
      },
      {
        "id": "e9017dbb-4825-4252-92cb-8f1100f869a2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "26a772c5-c38b-4380-89c5-bbd21d24caa9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa4579f8-87bf-48d2-9f7d-8a626710f3bc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d009b1c-8f9e-42a8-bdb6-470b94169c2f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317f4cd1-c2d1-420d-b71a-b6718355cd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f729f37-e420-4637-afea-ec571383d482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7602bb-641f-4c39-8874-5c32c7dc6379",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47db70bf-6e38-4f28-bbe5-7afd6fa86f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8144e2f8-a59d-46e5-a1c2-8856122908d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36aa2e8b-9828-49db-969f-e6f49283858c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd7d592-b429-4ba3-bb73-e417ba9cfbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6773561b-684f-4e80-9181-1a6f46983cd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8d3fd7eb-e7fe-4303-a399-8cf8fda4d918",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e099e79-f7ef-4aa0-b9ba-9ff954eca154",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a235d934-dc88-4872-ad4f-c7e8892b4b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51c637df-6882-44a3-8c6f-6ef536e6ee23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f30880-1949-4e69-abcd-f7aef9c7233a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03671d7-c404-4b39-b6ce-21dec8c13ae8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3a66f371-6871-464c-b275-8a38d6f03d10",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4c93a206-cd55-4b9a-a152-8850612a0a34",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94b55a57-1cdc-426f-b0e7-497541a68e92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e9a06144-a488-4a10-aa05-2ff45c2b3b2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4a648b6-2b2f-4c42-b888-a161c87df631",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a07910b5-cccd-46d9-a51d-1b9e0ee6b295"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f42a11b1-fed8-468d-abe3-7b1cffa78c87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8827a832-2f41-482d-b590-3cd21385623c"
            }
          }
        ]
      },
      {
        "id": "a7f11644-8efa-46c8-a729-d2ff4ba57d36",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "47d1379c-9d82-41a9-966c-1023eb1bff44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c53d539-6fd5-4539-b064-4099b10a240c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "815db2cc-9150-44e1-b0c8-08fef890b5b3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945545c2-351d-4907-ad86-d398b8e079dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b4d308-ff4f-4a7f-bbd2-6c8c27d9646a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bfe8eb-1e8d-450d-89a7-177ed47a298c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7faeb0c-ad49-4cf9-a3b3-0c55414b36a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f6d883-16a7-4800-a782-fc461a2b6095",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca67b94d-c188-43a5-8186-d1379cbbae63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53481e37-7d71-4d43-8673-954307d5044f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4aec4b-1dce-4e18-bc48-fa4cb2379144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f06e672-e39e-4ecf-8c8d-81b3a5bc3a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fe6040-ccc3-43ca-b851-ff8c60d9e2db",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538fcc56-a494-467f-a500-164e4c97123a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbabff48-d08c-4668-9928-834a6fce52d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2273c9f4-5125-4573-8b0b-4810b27e2ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46bfd9d5-9736-408c-b404-7a2233402615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7b2ca4-6080-4b81-8fdf-2766478e4379",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30280033-0493-423c-bc10-6ef878473677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0438574a-69dd-4385-a6e0-bc56a181cc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3201f3a-f2da-4aab-9031-a986a09b5dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0033991b-c9af-4820-a056-68dd603cd858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cd9f81-d1cb-4378-9de6-39148edc57ed",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c74e7b-9121-45db-a85f-298494f96e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9b60a1-2374-45d5-a2bc-c0e78ea39845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3664aeef-b06d-4a64-9a55-bcaa4e81b957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50235d66-24b8-4eec-92d6-a13ae7d867a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581c7258-c89b-4155-953c-4f7b44bb95c6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f9ce2b-a440-42d0-aaa8-99ff1e57f91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3badb3-58ac-4705-bd82-1320be1813a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77966b25-1bcc-44af-b748-4ee2d02d2027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d861471d-7cd8-4609-9a47-82cde387d1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b4bc7f-2783-4ce9-be48-9fc3721190a2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea307a65-eb96-4818-b5a0-47d218b77ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65be0102-5b4c-4b49-a0dc-74248b988c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212d9b50-276c-41c6-8bb1-f6c5d6911f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3b9ac3e-4df3-421c-8a0c-a00b589bfc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8737cb-66aa-4d13-a622-8fae6beffe30",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0552cde7-f0ea-4307-a3b7-de4da2224c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca869c6c-2c0c-4c2d-b50e-52ff9be7f9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3e8557-c05b-4a77-8bb5-67276425cf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e3cb1bf-cba8-4230-93c9-7230d8b5fdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4601a57-bb4d-4372-8bd3-2d51c60008a0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e48dd1c-02b8-4980-b605-68ad6c455e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec61fd2-39ed-4d53-8b66-539c769bb5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d60bd5-2871-47ec-802b-cd8663f394ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fd8be2b-f1ab-40f5-b00e-ee148ca1dc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648b65e2-85fb-4239-acf5-6cd011358967",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9938f2a-756d-4768-8a2f-ce032db4ed8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf0695d-c2a8-4ed1-b8c2-97773d32b8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ace04ea-c4fe-424f-adee-71e467c0c3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76a3fe68-b9ae-4795-8597-9bb7d270b3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9010b2af-6681-44d7-8057-f267f6f6f732",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec2770f-acf2-4c7f-a126-ffbd877c98eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1376ba34-d12c-456e-96d6-024c49bea6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc53b04-a73a-4da3-8943-22acdf390ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00c6ac86-bc76-4658-b44e-4216fe2081ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b76bd7-5f0c-488d-9606-d663d5fdeea4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc963a1-21db-4860-bf4d-0e70a03978ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c166a0f-7215-44b3-bf78-f8bb769b59f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b04e703-3380-4cb3-a015-06e469b330c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f83d40bc-68df-4fd1-b464-11282d34c491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67b963e-00fe-4a75-af0c-7c4e289784f0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e991dc34-1c8a-4ee2-ae00-d7fecb986fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cb3492-d5a0-4e9a-9e52-a6e24161c613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b44d39-386c-4aea-8da8-ee0171b33314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b911fa5-58b7-4de7-9c1d-e6c5a5e35ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ec44bc-5181-42f6-b1ce-d84087679bf1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404230fb-8d69-4727-9b87-9109f2641e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace3451d-4aeb-406e-b52a-836bf85d5745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d25d15-d76f-41e2-abe4-9cf3851591ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f2fd603-f788-40e4-af0d-5c6b7f8f95bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b4d7e6-55aa-4448-b15b-56257d0810b0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cd9edf-7266-48bf-8e9b-2b1bb575a66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe345fd5-ff20-4ab7-b811-3987c86a5402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c531f760-2e6c-4781-8a6b-f1e02b08ce49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3983375b-b348-43f1-bacc-0cc5fec2ff51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fd9d64-3bc0-4b89-8fa8-d09023689dd5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f060d8c-c021-4242-b402-7facf5c7beee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87c7675-8f2e-4eab-bfd6-7b2ae93e0bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0bf165-f958-49dc-8bad-374b85625f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11ee763f-5e7c-42c9-b843-3f72a6356c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d721da4a-5bdc-41e4-baa4-9aa60e24b82b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bb9b00-dfaf-48e9-9e3c-01e287e5ba5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c09d17-43ab-4e30-a2a5-0db9c90d85fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776451bb-e1d3-484a-9daf-e306b7c193cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5f68b27-df31-4742-bcb1-bae9ee49c53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af03d73-0d0c-4404-827c-7c16dadd9ca9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200f0784-ab3e-4888-a8ba-39b9688da608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2362bb9-1792-464b-a333-de06dfe4eaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd5c58d-7076-45ee-8cf1-d4c8891881a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b35b5b2f-6011-4bf9-8764-701aa622bab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ca57d2-a4cf-439a-9d6a-3e4af5a53eda",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11b2fd0-d335-40cb-8782-d74409c7803f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f526b605-089f-4408-a588-cd3dc0452930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e8c4a7-cb28-4ffa-b117-aae6170d8d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a42482-b454-4025-83b4-7bf03d05d04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9bf46a-1563-44e6-87ec-28cbb4694be5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a62af5-7e26-4887-9bc6-fe78c82bd6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68eca31-f0c5-46ea-a8bd-e7daa01ea48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2c3163-9485-460e-ab56-13bdc2a32b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed752779-929b-471a-ab8a-84bc6dabefc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd13b5be-40f3-41ad-9ffb-a708cf037bf3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e181f0-fd56-4458-a978-0ce30b820ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0fb2c1-9789-4786-b6c5-53a4f5250004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb239ea-b2b9-4218-ad73-5e447db0b0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6f01fe-6391-4d0c-96d7-b69add2f3d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed81199b-594e-4142-b75c-cef24765ba5e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec97764-ac83-4d8d-bc94-93a84af969d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c085f2-3896-4086-a01b-2ad1b2ef4282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8968baf9-1db6-4cdb-bebf-b70562001156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7c3f6e-0999-4d84-a800-09f82fbfe51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33371724-90b1-4bf2-9bd2-ea2cd17fba03",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3fec4b-3c76-4999-bd69-7d750284e25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b237c73-02a3-4cd4-a1c5-6cc61e24a9e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983969a9-5d43-48c9-9fc6-6d695979efef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b71595a7-368f-4511-9d9e-0b741f6c1c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0085725b-f771-47c9-b5c1-fefd7767c01e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303a8ff9-c8c9-451e-8de9-4144aef57195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5633d857-02cd-4846-b00d-3fd206329e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0328a2e9-1f55-42fb-a504-5998f9561d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "622b0b1e-f5e5-4bdd-892c-299e757d4601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b62849-6c15-4c35-9565-7a654d442ff6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5439a1a-0694-4bc7-a16f-11b6841a3126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2614ae73-d4c8-4d06-8578-7e160eb191bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f091ab4d-658e-4455-b645-ecd3c9ad94ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e148c3d3-1f1e-4b61-a949-5f6abad071ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c910a3b2-7e7b-458a-86a9-f00ae40865ed",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d64c84a-9b4e-4f8d-9945-74e338454f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a4d0d6-1383-4df5-b9eb-d35778f9923c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409d57bb-d227-4bd7-bae2-d0e58b0d3fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f779b55-5940-460c-927a-585023e649b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c4f0c9-4f5e-4103-b62a-926716c954da",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2502c863-5632-4d8b-88f6-8f66487c03be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b22739-478b-453a-8bbe-2ea5ebbd2691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6c99ec-dfeb-4c36-b277-b955b86368e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcf344a-411e-4c66-ad77-88bc2cbbe7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01448ba1-716e-470e-9cde-820efe3e44d5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8255b3-46ad-41bf-8de2-c4c1c1169d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007e3ba7-9f9f-4373-b28d-69303f9cce71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a12e176-4a2a-4d12-9eb5-7cbafd2b753e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "213bff19-bd0d-4999-8515-5571d28d59ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88edf802-bacd-481b-bb62-68853af9bf21",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa9602c-f634-4cf6-98a5-379ea1b0bec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4baa856c-f50d-4167-801e-e28645d90a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5439a37b-eb5a-42e0-8eb0-149483b6d891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9e17c7-c61f-4cd2-b5c8-e919dd2f5b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc63ea6a-7ec6-4d6b-8c5b-49abf91ba593",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2d859d-b797-4139-b87d-ad193f0930b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4441e8ab-3b7f-4b26-be72-1bd768e016d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1e9846-25a8-40f8-a456-bc8484915fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "15110355-0ad7-4a0b-a582-ae9a821339fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e252e85-3584-4692-bc3c-303beca1030b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93315751-bb44-47d9-8baa-8ebe78114893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b774d7c-1df6-46b9-9a74-cb6c90eac511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a1c5ed-9492-4a1b-89fb-42c94068f3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d911d8c6-5d02-4291-b80a-c9669c54d991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8223c3-a1ec-4d31-bc80-cbe78ce495ba",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d9b86b-63f4-450d-b71c-af09fce392dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24b6c33-95a1-4acb-99ae-ad25994bc120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a349722-c849-4b31-af2e-e5a30ad4dcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "190ecd63-06a8-4f22-b723-193b930cc31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678a1b14-f3dd-4838-8d93-8d6485f14b4b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facf223d-c221-4b40-86c3-18a0aef0c8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f67d027-7353-491b-a2fd-7e214a0b8428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd05896-8ea8-49b3-bf9e-ede89cdf3507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7de9d7f4-35e1-401f-a205-17a3defec79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b00d72-9f5e-4e5c-8901-1754db88ee69",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d409db-2a39-42b7-93b7-96e210607913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcd96cb-2796-4a30-9cd5-c47f5d87ec13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2666e2fa-b0df-4f1e-a109-73dabaaf63ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69e2084b-2f42-47a1-9cc1-3dfc0d02eef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e2a3b7-48a3-44e8-ab7b-5b66a6cd8d9b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6132ca2f-0176-43f6-ad10-e1a8ca362f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4266f508-dcd1-4aa8-a6f4-dc014a5ccd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a7ed09-6e99-4b9a-bbc9-515d9e83f4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a990f6-babb-474f-88b9-e9d94634c714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad372d2-55e0-455d-a4a0-1ed03c7a467b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf27cea-3b11-4ce6-af6c-a0b7ebe928fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d281c77-35df-440a-af32-85f5b0dac828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231a6207-9869-4f26-a832-b172790e500e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "045b33d0-7d11-4de5-a497-9711ec240279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5746ba53-db67-47ba-a7e0-ceff6c8e8be0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3989678-8f6f-471b-9b4d-233f6bf38792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1492d05-d1b6-4f65-a78b-27c3153ce48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc06c93-fe9a-4360-b34a-69b7d42a5f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5a74d7-f97f-4ba0-a3b8-3b5ed4ddd906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d204d41-7552-4efd-89ba-c8f924560ffe",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b2cf00-96a5-4d59-8789-243ad9ed0d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a77b59-b2c1-4de2-af9b-f3ec33ef1362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ceb9ac-eab1-4881-a0cb-7a89c4303f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8451b2-50ac-4bf2-b6d6-47f914f16874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758507b8-49e9-40a1-bb74-4e7736ef47f2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1e51a8-96cb-455c-ab0e-f950a44223b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e64878-85d5-4a29-820a-11c26f8d964a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24aec9ab-ee98-4d54-8fff-883be4c508fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b64cead2-5e59-457d-a74c-9137d999fda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77c7639-070a-46bd-aa80-863f0c1436dc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88938f59-6a26-4c6f-b31b-191a1a367604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e2c648-4ce9-42cc-be20-87ac14d04b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9909610d-8a6a-4e21-b94d-e589edba138e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2842d54-ec9c-4d36-89e8-1851b4988c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5b495d-c72b-44c6-aaa4-08f03d4fd428",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e1587b-87c0-4c95-8f0a-d6a617644017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9994cfc7-145f-4507-9677-54773255eac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9723c2-8f25-436a-b8da-0b48a51f80fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5442771-5fd3-4999-905e-f2b1551434b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4256d2-1f24-4600-b4b2-40a3c9e124f7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d707a08a-0674-4d58-b447-1b3cfe4df61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e187d08e-5158-49fb-97f8-e387196d8341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893d1f0b-ba83-4ea1-9a6a-64e669b9f739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "428535d5-358f-46c9-a54e-3afece2daaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4778c1f4-51d9-495d-aecd-aa28d9d782bb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f311676e-11e2-47ba-9cd5-079bfde67def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d33d56-6e8a-42de-aad5-8b528456f492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcaa57fc-587c-40f2-aa95-5bbed078c6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5caaf2e8-b314-4e13-beb5-d1eb3fe5e826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad4edd1-c0a4-41fd-91c7-efceb339b0f3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f48b756-f50d-4fc8-a7f0-6395a6368fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9b9c51-6fba-494d-b7ea-7565dda05fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dedf25-a0c8-4bc6-8f0d-35f6a9dc0204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "74256689-d1bd-400f-a810-ada2192f34d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b289c61e-63e2-4cdb-8fea-d36b0022b749",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e50e7bd-c3e1-47f3-a2a2-d0bfcd83f3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb63c80-7579-4bfd-b1d0-34defcb2830d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d76334-1052-42ae-acda-2f2ee3b0a047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "68abda73-86ec-4b05-8dec-0f1ae00871d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ae6a1e-b11e-424f-ad4a-9447326a92e6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117bf2f1-d609-4c01-82c1-e405284b4c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95712ff-6fec-49a7-837e-32f2aecccb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b40b39-8da8-4bdb-808c-40bd13fb0c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f403e07-956f-4f7d-8269-00081108f74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3e1dfd-44ad-43b3-92a2-fe7801f7b4e0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139f3aaa-bd8c-4587-87e0-74eb7311af4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce48b04-cfc0-4894-aa43-195d497d15a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f6a15f-07b3-44ef-9f87-7086bd924450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5aa07b3-eee8-4a09-936f-6736f5c099fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7394706e-d63e-447a-9a90-124f245f889e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4635bdf1-2f48-4569-bf48-38807c17dcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8995cbe2-e7ff-4016-b110-c94981e8a916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583af255-1352-4fba-ba4b-05d1ec0d9b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7de24e-c836-44cf-a1df-fd3f4239411a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bc3b44-b3d6-415a-be1c-66ee4f1d771f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e134b6e8-9c9d-4aee-b4f9-15cf931ce21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88443eef-1608-4458-9460-071ceeca84fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acccd543-87fa-414d-8c14-c7d5eeed1c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a28fde7-fbeb-4500-80d8-f21cbda3609f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0448e3dd-007d-4d57-b3c1-5d6d26ff8989",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ed9477-3b4b-40ec-af51-b7bf3e8d868f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33eb5873-75ce-4e3f-ae3b-f62d9070e72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b7ac64-601b-4a67-9453-28ed24ce1828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "186d9cf5-0acd-435b-9b8f-2b1349b0abb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad64ce83-ad40-4d43-9399-53ece33fdcd6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11aa62a9-60ce-4d33-a8ba-661e7bc8bf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17787a50-df06-49bf-baa1-1b13c62f1ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8bffeb-49c9-4d37-a1f2-6a04e9dc56d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3758f5c2-3d1e-4a1b-9a4a-9e3e6cac2c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac04ff7-a255-4f31-a401-19fd25dd5bd2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be6e5c6-736e-4004-aeeb-96bf41c02772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2f88b6-54eb-4dc2-8deb-86a34754c285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e18f061-d47f-43da-83b0-580cc45e05df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b85322-a12b-411b-b9dd-50af2a24acae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccef398-f875-4e6c-bbad-0b09fbe7c8e4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f18dec-8788-40b4-be26-e739303f73a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16603f8-9a8c-4560-96bd-62b6b13bda22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1588dcc-70bb-4b86-9ff1-8be0344305a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e3d963-6119-41c1-82bc-0f493dff4678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841a7480-77a0-47d2-babc-922371649af0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61086189-927f-403a-b7e6-cd19701a0a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c3eea7-942b-4a76-9434-8942c17ddd32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60d8151-15c1-4a74-8af4-3763641510ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcae922-608d-48dd-a65a-bca8eac0795a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b01a200-af4a-4893-b954-23ac3f4ec142",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0491bc63-c9dc-45fb-8517-6b227e791cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c44e9c-6d3e-48f3-bcbc-3761e58f1e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc393f94-7543-46af-b96d-9b56649bfa3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53b76a02-81f9-4231-bf7e-c5fe1b387f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6337f2-971c-4e60-9d0c-0c4a5d602723",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c96deb-92e4-418b-b5d6-a0624d660a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadd3969-fae3-4478-b8a9-08607ab4592f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72b735f-b77b-4c97-908d-0f658fe8e178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce69e8f-e86a-4e9c-9359-b25dcaa8e8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec80f2d-de0e-4340-a381-1e6fdc29126c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798ff26f-5e7e-4d65-a1e6-03f831007021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c196a963-381a-40e0-8556-f737636a954c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf09f3a-1fda-476e-a5fd-06bb5fbde130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ff8f0c-db98-48af-83f1-c647c5d3ee29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a78705-e036-44fe-861d-d954f3f15a87",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edfe6e7-61d7-4bbd-824b-32f83e201d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b9a430-79bd-4bbc-b49d-d7035e9ae293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f81f352-d072-4972-b631-de3a309eaad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "87cad59c-8a3e-440f-8b42-2901193d05b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7bb844-137f-47c0-95be-52dbf99ed01c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b4e3d7-6024-4857-b8a0-5db359a1b7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c2b8a3-a297-4a76-aa6a-80afc453fce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1862108f-3f50-42d1-ac4e-90533fbf6130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "703f3237-a3a8-46f8-b90a-3d5af6b48f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9299eac5-688e-4b38-9a61-3f888bbe923c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d526ab-47a7-4548-b5ef-7ed1f9ec2b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96aa5917-3c58-4aa8-931f-f620fd2f836d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6906611-f28f-4783-b296-838bcaf82bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4d35fd-e1b2-4c33-820b-6e99fba79255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cef775-0c16-4ecd-b216-86fd7536c000",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e43ce0-ff80-4a35-8d56-70393040e866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4ba2af-5ddf-486f-b268-9dc7d74918f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd410431-ffbd-4dd8-ad72-d6eb7d23f086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "abf214ec-2ea0-4b93-9bd9-9ecd071afb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7440bd6c-a4e1-4051-a341-82f1cef52067",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b781729-2571-4e7d-8ebd-d89d271052aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f289b7ad-c472-479a-8c6f-f6be565d4987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119a7b26-d88d-4929-bfec-49300557d9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd6d71d-1266-467c-8fe4-9ba5f082ff56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1428aa-8dce-4a76-b042-97110c1808f5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0bb4e8-f0e6-43cf-9a76-5ba0c2ee8462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aeae0c5-a47b-45d0-885a-ffeedc6fa7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ae20d5-da10-4f08-8d45-ea9570022768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a945025d-9c80-47ab-946a-7a1a7dab0b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f84fae3-93f1-4a0d-bce7-0c2f1e95ef58",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f9be40-6ec9-4163-90a5-75abed30f77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6d51c78-cea7-4572-bce9-6f20ff48dcfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da57b77-3b62-4e5c-9b2c-990990ba3822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb351d9-16bf-48fb-a81e-10dce99ad640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a757ee28-606d-4268-bcea-f3f4ac2f515a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1554e68-a8d0-449c-849a-7273b0b4e76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4e9549-d97d-4fb1-99a6-090db6f63dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e311a8d9-c60f-4f25-8653-064c45a5e1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdb4d5e-23cf-4f29-9cab-2dba67d60edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab61dc55-3a4a-4d4d-9194-ee8989330641",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0e0a1d-7489-4f89-837e-89b4f44153c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c2c2d8-0686-4969-a5cd-9911b1a6b421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671ed0ad-5f7a-451b-9931-3b8559c237a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "401ec882-9d54-45f4-a5a2-d5e90c49e85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57523eef-29d0-4567-a90c-7426235c0a60",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0e47d5-bca9-41d5-aebb-d609a085f631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615375d3-68ce-419d-8824-9d769567a72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5592336b-266d-43fe-bcb7-bb6335466f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6028ba04-07bc-4545-953f-8cdf50dc5a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625a5a3f-aa47-4c97-b0b3-30c029fe598a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd76500-293e-4a1f-a299-b08d209ac6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9472969c-ad64-4a11-9399-703d1dc60d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d51c16-c24f-4d4e-8058-605297f2fa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac37bc93-0b63-4b4b-bab4-6437837e8bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfd14df-5bb1-4f10-809d-cbf261b47904",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e07be3a-4275-4516-bd21-84384a99784c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c49db0-7095-451c-9361-dec7fdf34adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53708f7d-3722-40be-9b2e-96c8787e1634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "da405901-3402-46c1-b06c-a8727f9c2221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a6d6fb-0285-428f-9160-ddd038250702",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bc5e23-631b-46ef-9f20-09ac747e9f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d273f8-6686-41a2-a27c-5849a605f52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2801bc01-1f6e-45b2-a7d2-39aa501d4356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f23cadc0-6a28-42cd-a2f6-724949a3b7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7fee01-34d9-4990-a493-b2da05ad0c40",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e8f534-344f-4345-884f-737bc6bf862b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8d2fca-3ac9-48b9-9bd7-07c6de1a7104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9093861f-7a15-4698-9f64-987d5c6dec31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f168419f-7b9a-40af-bd8f-9a90901b8a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5e400c-a729-483a-8af1-d00ddf483a17",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329b5323-940a-4399-91b9-22fa54bde6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccea2456-3e6b-4f09-b5dd-e8f8e8c7ce02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085ece18-8399-413f-9bf1-0ce663b4ac64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a544ef1-4e57-4f96-abbf-37edd78cbf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11435fed-c3de-4db4-b0d9-7c9c3443d9d3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4096a23f-45e1-43ba-be08-b920ffe436a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de4eea6-8414-4457-ac79-a5691a901134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1eea46-6895-4c9e-b0c4-d4c00dfe0aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "628f0aa3-aa27-43e8-b3f7-e7bd6a7813c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570c96e8-1edf-4598-b67e-82a0fdad145a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa3e55e-550e-40ea-b017-43b12db57ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15be4f5-b522-4ab0-aad3-0abf966dcd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1f20da-6b6c-4ac7-bf6d-d11936dc78bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78b8aef4-51be-45a0-8c7c-cef47837ed0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada59556-a0f6-4186-a6fe-094abd429a58",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89853830-369d-43ea-a3c1-cb54d6ea6e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38399b9-cc56-4c29-85da-e5ed4e58d0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d807daae-ad5c-4020-b471-dd198e8f50e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e52055b-6c39-462c-8541-4f2fdb8a3dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7d4664-dd70-4606-a601-9fd0ad866371",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0465923e-2352-43ce-8189-9fe2e128ecfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fb5fbc-7f49-4a9d-b3a6-9cb17464ff9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e5f161-094c-4b45-83e6-857a92228601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad605aa-c279-432f-8f49-ebd3054b2532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b041d6cd-911b-487f-b8a4-f4ab308ab1e5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7e24d5-df4f-4df3-a182-80d44e5fb66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce2e731-2514-4e48-9c74-6149f9b13238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e29190b-74b4-445b-839a-aa39bf953d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6216aaeb-700d-41b5-b44e-6912efa6d825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7824358d-a641-4b54-bd46-ed3648b88e19",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d408d8c-a971-4f00-bd06-e58854fb9c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e50862-8347-420f-8a1c-64a7a14e1b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3afdfec-7daa-47ef-9b8b-85d4cc1254f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e169be4-e35e-4bc7-aae0-096b0e5e4b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918efdde-69e3-4abc-9084-ef08e8016944",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b92be9-c8de-41ab-8325-ad33e34dbab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91948989-250f-499c-a2e0-d37685a40313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bde1c7-cb03-42c8-aafd-2673461e19b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b95952c-4681-4e76-9efe-392e02a18bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9690f684-33e2-4eaa-95a2-d89e8b7bd332",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb4c9c1-5c76-4e38-804d-c7f3ce62507d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22d4b2f-910c-4238-86cd-7c020d4b44ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cfbebf-d4b1-4978-ae16-3d8820972bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "510e56d7-1f38-45a1-9e75-eb2a56ee61fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eece8f5-12b3-412d-9fa0-12f862b5fc9c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a7d2c5-b2d3-48e3-a874-21dce61e451e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bff8786-080b-47c3-896d-1a52407dae3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db271d8-bcfa-411c-b7d5-b36a8ea2ad68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "52d520b4-b159-42c9-8e94-bf4e4402124a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339ac2f2-21ca-4634-98a8-8a178f995dbe",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309962c7-b011-4a62-ada3-a21ef06567f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d25a60-ffa3-46a9-8753-0c885475f122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1802f077-aee2-4202-94d5-6885a1a25d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38c3b790-7d2e-4d42-8bbf-8025fb13ec18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdd10c8-d046-410b-97f9-7cb6a943b616",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82eba40-2707-4a8d-bacc-2e11b64f91f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4ab0e7-9a4e-45dc-81fe-d5a528e8d78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fccd47d-d44a-4765-aa35-1c260cee6fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95094d0a-f23b-4051-87f4-29d084b15efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c431ca-1b83-477a-b079-cd646050b662",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6141ab43-35af-4014-8319-46c6df388e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a0515f-a660-4428-92ed-794eb673d887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af629363-c73e-47ca-a431-daf4f199fb42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f481558-f3f5-47c6-ac8e-a2e580844d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120ba498-614a-4c4a-b168-d5dc21b28d6f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf880c4c-aa1d-46c7-947a-e9b56072a76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5209db3-7579-40e5-9b92-bcb6dc6fc308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4735a0b1-e1d6-4f46-9037-6b97ed25ec6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "faac3f6f-4417-448a-a7d3-f9262bd3621f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb5eb00-3d0f-42e9-a8a6-647b3d7a7c4f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe654cec-a286-429d-a4ff-d2646b74ac30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f4c242-9b16-4b3b-89de-72b15dac3365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ccfe87-f95f-43f2-abb1-2e496f32e371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd71ce4-4820-4df8-8b04-dfec189328b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1a9f48-3bf6-4f74-bc64-f53227f0f116",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70f1801-f619-4266-8508-dc4bf8b6ea63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e5ff4a-2261-468c-84fd-af4e2b6e79ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b0721a-1f18-40d9-9526-85330a4ecfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3bdf17-9103-4155-82e8-fff6e4eb50e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4e79b3-c593-4609-a459-37eb4a423ff8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5cc5e3-cc7f-49e2-b3d5-55e3d2ccd80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4208ea6-814b-435c-adad-d7fa9947bea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2dad5a-e7d1-4cbe-ab54-1017ca3f9e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d85c498-6b5b-4fa6-b232-336b9c8c9aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f19bf2-f45b-4504-8bfd-e7ea6cb989a0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9544c5c-477f-41c3-9949-c261ba116209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76538e7b-4e23-4263-a625-815bcc2bfc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdafa7f4-eaff-41cf-8b7c-988b9c1f67d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e002b87f-6230-489e-9427-a8b78b68ea42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda97bf8-caae-4d46-ba61-ab89a5eab950",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fa549b-e7e4-4f0c-ba34-9d47522d9de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db75ba81-1cdd-4a17-85c0-601fccc1c377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080c7ce2-423d-487a-94b6-281a7f20c22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "572d7745-eb54-4483-ba70-5e7789349fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cecb11-bc17-44fd-8d79-2fb4f33e8c31",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2c26b8-61ed-4c74-814c-46a7b732fb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf00bb80-caa5-4f1d-9720-481725deee75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b75a285-2472-4fc3-a0ac-c1a0ff098424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5839af-da86-41ed-b07f-02baa4899581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff66683-160d-4c81-ae88-0cebdb009b07",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96e1a48-b499-4a93-8bb3-0e66cc000bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c9aef6a1-490c-46b0-b5fa-37ba6098e7a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33772cc-dba6-47bc-bebf-6859ee01b561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a38d8af-6dae-4307-87a5-ac7af7374376"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "657cbcc9-87a8-454b-ae65-c21aad636f83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d8df316-ee18-48d4-b56d-653818ad1440",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a188ffb-344d-4e82-87b4-930a5f067534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb27956e-63d7-4c5c-918d-47a41608f0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4a7f65-9f6b-47d4-a0d3-83d5c160ea54",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "907052f4-5273-45b5-8d9f-d1458ee6680e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a06a0372-0d69-42cf-9012-8454f7a8b55e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4fc40fe-c0f1-41c6-9fa1-4a40c6e6c4d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1da380dd-7c11-46ce-a114-ee856f9ac690",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbc4b521-4da8-4cc7-aedc-cdd29dc6d7e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f93708b-8ad2-4807-b96d-e1f6ac340059",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2730b2f7-75cd-4353-b1f9-29cfb53c84b1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "97ab71df-306f-4b15-b2df-222f694e7070",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e411fc1-145f-4339-acaf-9484fbf8350e"
                }
              }
            ]
          },
          {
            "id": "da640e99-e2cb-41a0-acaf-7ce5814e9b1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4e0ad9f-9353-4a74-990e-95f52541dd14",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "64c72b0f-6820-4960-baea-cf6d29016afd",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38472f30-e6e0-4438-bb38-f9912cd98962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9f3f8c01-8c8f-4536-8ece-c4469be307c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee97a92f-d606-4d13-b770-c4d09f18092a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6120a3-3dd1-43c9-ba43-c027ad709d1d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "140ab26b-6b7d-4d02-9010-ac2a4eb17dbd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fe17d3c-1535-4496-a323-f4df099ac741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aed7f4fb-6341-456a-8a9f-8e1b0cd9c547"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92885713-8bf7-4959-9558-dc80c8955533",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8e03c556-b999-4648-8fca-a08325c47693"
                    }
                  }
                ]
              },
              {
                "id": "4fde5a80-b43b-4a1d-9bfd-95269b8705dc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef89bca8-d180-4a10-b40a-04aff0c22c26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9afe9f4f-16da-4106-ae74-134a454683e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92ad28f7-44d2-4ea6-8663-1d7b1bf6e720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3d367e84-ef6d-47ff-95be-886fdad2643b"
                    }
                  }
                ]
              },
              {
                "id": "0e0b1872-a7ee-43cf-8221-0b4169098481",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6ebf885-5db7-4602-b68a-f8f34837730c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ed0bf1e-d43b-4253-9805-f38036eaffce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18d91f3d-cfec-41c0-a492-4190a7baecc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1c65b1e7-0ffa-4990-a41b-2b7c5cc03c33"
                    }
                  }
                ]
              },
              {
                "id": "7b28a156-7693-47d1-aadf-e3c6f4e85e8f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "970fbfba-57e1-4c0c-87ba-b3d938191330",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0116ef0d-1f10-4481-bddd-66a4e21bf1d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d71029b9-cdb4-4d83-8809-2d5bd72e2c8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8c57217f-6bb5-4217-96d7-85bb89d9410b"
                    }
                  }
                ]
              },
              {
                "id": "0c44813e-d4f5-4567-bd59-678f5bdecc3c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df7b673b-76f6-446c-8cb4-0ae8ac63c27b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4f89796-5740-4ebd-a994-ff69c20423b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70a66a4f-0d2f-4095-85c8-6a267ac92ebc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "89c1d7bf-321e-4e5e-acc9-d8738284a052"
                    }
                  }
                ]
              },
              {
                "id": "4e04dcc4-cd51-4b52-aafb-b57b75373f0d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a628c13c-09f5-470b-8797-5bcbc6bb839e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abf2a53e-c37c-401c-88ac-5f5340fc2ce4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e687820b-20eb-4acb-b68d-9e51bce81105",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c3371da5-9c60-46f6-bff7-342887176f34"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38faccaa-dd60-4bc2-a62b-28133711a2e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16698f55-1436-4ede-8a22-3bac0ff130a0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8cee541f-d5a5-40e6-84d9-b217cc95b5cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a293f32-b63a-4e7a-ac84-3451cc764030"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "700ad4fc-d864-49f9-a6b6-417612173126",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "54a5d3e6-12b9-4259-b3ce-820bd9c9c9d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f43078f-a42b-4877-9a15-284e9862ea26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62d6e265-8265-4867-8450-2b0b9a8fa800"
            }
          }
        ]
      },
      {
        "id": "db0a2b14-c4be-4a33-ae43-a935d0e08c77",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8ed4f326-3f5a-4210-9691-fef1b6799bdd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e713d422-db51-42c6-b373-c71dacf79098",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a6bef53e-ec03-4743-8839-b292ca192b0d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1831602e-09ec-44de-8b26-52952da2f725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e72b82f-7c22-485b-b7c7-568bc337ebbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818e8f8c-d50e-483b-a4bb-9b6ad25568f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf1fd66-21d6-4474-b597-cf0839af7651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58dfe92-f9a1-4cd4-ac25-3384c6fe9691",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4773b0c4-3d1e-40f7-afd9-6200550901c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86401bb7-73ba-457e-8137-df23fd31b203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9448ab6d-2dff-4595-a553-3c88aab87395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4963892-f3fe-4839-8e93-89db4b34aa13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a91b74b-0328-4ea1-8acd-f8af70ee6c10",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1fb68c-0d1b-43ed-9453-879bf87917d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84463244-fc4d-48bf-88e6-771c5dc6ef9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b718e94d-d0ab-40c3-b59e-e63d174ccda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a0e573-2279-4b42-8f44-5616b3c69e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97bdd1c-85ba-4f87-b8fd-245f69c7d5a8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc302179-7ec3-4ed3-977f-732b960efd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff277b64-a75f-4a24-a7a8-e57075003f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9de1a3-0873-4bd8-9caa-b9b3369b78f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9249024d-1868-4547-b5f8-96333ec36ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc9d051-eba1-4c10-8d30-9d40c6026e96",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f3de05-813f-43a6-802e-bd025db79b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e520692-9c52-4608-8083-bb1b62c18c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8892fef4-6ae9-49f2-848f-c4cc5ccc2888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df260bdc-2d7b-408c-aa90-7c4fb57004e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed257511-9a3a-43ce-b69c-78fb0932dd42",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4bf452-b843-43d6-806b-ddcc754e8901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13698ea6-7047-4694-a592-934b36fe20db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057b567f-2722-4313-9744-7f696d349186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8651aca-70ab-46cd-a387-189497f19fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8deff3-15a7-4027-a150-bd851d8c527c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1474dce-f607-4e05-9304-ffb8c733dfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77913f00-af17-44aa-bea2-80bc6ad95a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5d8631-f6cf-40ec-b46b-f52ad6d524c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9770e68-ec18-4ab0-a314-de7ce0cd2a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cae1d4-b7f2-4663-bc6f-6c4e2fbc84ed",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b40c4f-4eb2-4857-b771-9f2f729f8867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2434d9fb-9a32-4b31-b2c9-9e7f04388155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a00b96-bfe3-4488-9b82-24d2a566496b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b40d6ad0-bf12-4a6f-99ea-a46f2ad9707d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71368b8-bf4c-49c5-b318-40d127fd2b33",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10036064-0806-4dd6-9ec9-646c11443445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b925b095-4a83-44d0-b951-a31c3dfd6595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd4f91a-eb09-4ae3-865d-1c4f4cda50c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c505128d-c0a0-4631-abba-cd2943e81542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e1747d-57b1-4226-8f04-814b56ab3a28",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d176eeae-fd8b-41fb-8dc9-5e4503ebbfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6334255-7dda-4f30-91b0-59bd2e14d6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03f7b49-7f42-403e-81f5-babaed3500dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af10d38e-ab7b-4b0c-903e-3cf63d9618e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318d6794-9070-4a50-b483-9bfb414a2fbc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5716495a-013c-4b24-993c-2c80b6eb08a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227b551f-b628-4abf-be31-3f51aa65e5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675d6e6e-b406-455c-bf64-e6063726062e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "875f62f4-bca9-43f2-9518-4bf06046d281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d519b02-a132-4513-92ca-8d8bb5bba250",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e1089c-2507-4bf2-a293-cff8b0d1dca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125b6211-2bfb-4c1c-9b16-cbf76b33918d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549299ff-a103-48dc-b94d-a0124bd587ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5136873d-2d15-4018-91ee-b12659db4f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4846095b-18a0-4457-ad47-ca758f4ae0bc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912e37d9-cb4c-4983-8abd-cc9c8a212e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cce579-9e64-435e-8aa2-81f1d18720ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2223f69-24e2-464c-844f-1290e78a04b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27d9f7f8-4b3a-470f-97af-9db37246b371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3f6416-014b-4fad-b5c7-b6b76169ef10",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919b4246-bd39-40d2-9e16-02553bf9f4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6161d0c-17a7-435d-ab9d-f8f0e73e7ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfcfe90-d1a5-4bde-8b22-a7b8582451ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1091c61c-1428-4bbc-a62d-caa64df027ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8de331-750c-4204-8a64-3c989e94e948",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c2b7e2-6fca-4cb3-8a6d-24967ade17cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b063ebf7-06f4-41fc-ba6c-de9110fe2ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c81777-9b79-40ad-8fe4-f4c1c619b9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aea657d3-3e04-4992-be49-fcb7004b6089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6185bce-04e1-4cd1-bcc2-2dba8869d3e0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b0d38f-1f99-4217-b9f7-9aa20fc86fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c09efe6-7442-488f-8519-33401bce4b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9ce0f5-d149-4c51-bb6f-e8800a37ef58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3084a23e-3ed9-428b-87c2-f2c4c2746f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e826e72-a855-4666-b2bb-430105f48339",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d485625d-6018-4874-95b3-03a6efb85a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdae6a2c-e5d6-405a-a39a-b4adce2c1b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ee1fcb-8663-4eb7-85a4-e2b49dd12680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "25b7b0aa-a89f-4027-9e21-9f1858089581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc73a1d-e1fe-485f-84d7-809d4b45ca05",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc5efff-1e33-44ae-bf08-d89cc6f8c861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ebd6243-94bd-4c9f-87dc-c375bc0b24de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4444194d-86cf-4fd5-a233-a81c52cd033b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5cb738-ef01-4205-97e8-2d2cc7f80cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37b46b8-b856-4926-a8b2-d2c7e405c65b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6040c3-454c-4a99-ba41-b8051fdf3571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f014f3-048d-4a3d-9902-cc3ac0e0e5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cfe406-49f3-421c-a0a6-e378ee4f560c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "217ecd28-8fbe-401f-9862-3e769b477e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902cb7c8-25cd-4a41-9200-46311c19d241",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403ee7cc-ac74-4d96-a49d-c0d5e1eec9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cea807b-2130-48b6-8fca-3724191cbef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eef29bc-5d53-4b70-a850-88c1b9df3929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9ac61b-6198-4b85-a359-5bd336aefafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939802e1-3755-41e8-ac75-f0db34d40bfa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5facb9-1f54-44eb-b7a4-c30dc33f07c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13115141-2e4e-44f8-bea0-a3b4622b13fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9158ec74-a7ba-428f-8e74-d293014e97c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20330192-d67f-49f2-b55b-f7c4fb0d39c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7702a862-6854-4bf5-bac1-1f64e5c905d7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7eb79f0-7cd9-4a20-8296-9c1760a74a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7b18bb-7d26-4e37-ba8e-51e32a11c09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a371a6c8-110a-4723-a986-232a0b9a8683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "169d3e3e-7503-4701-b2ac-52891c1f2c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d788b6-a8dd-416c-961b-f968f9ce1d7d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82eb423a-2bb6-4399-a9b2-e1f656323ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3a70e4-3838-477b-9562-5a619aa8eac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3081426-b4cc-4808-95e6-23e275e8c911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11437c77-a1cf-436c-9760-2a85aa3ee8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad74ff8d-5beb-4739-93c8-d3d41b2c72ee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497e09ef-12c1-4b79-9266-11ceed385349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e14a4b1-dbd1-4144-abba-1374f0f5ae21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac623cb-d9dd-407c-b077-b5ab4011d59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71abc0a6-822d-46ba-80e5-fa7d548fa659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee5929c-2319-4948-8ea3-aeb7fa4d26a6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd98cd7-a3c1-464f-bc9e-66904dc6725e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65ac3bd-602e-46b7-be42-cb6d8aec9d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fcda1c-29ed-4ed6-bdd6-f1647711ab7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3af18f-fc2b-466f-aea4-5588f07a7da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e4e3bd-3d39-4e7f-88a2-f5c844d3d937",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebe772a-05c0-43b0-b0f7-628eebfb91f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec1b857-a49b-4f78-ab5a-d7b1804306c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b57f35-f9ea-424d-abdf-fb2f96143e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "420e89dd-b944-4ee0-a74c-c3e72b176dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41301ed-c766-417b-a504-92d1ccfd444b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661b9f7b-70bf-4041-b766-b539d1518b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d887794-ea71-47d8-a5c1-575c65e113ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720222a1-5d2e-415a-8b62-3683dcb2c65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95cc162f-cdc0-446b-a1a1-941e146d320c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc58d5ae-a94a-4409-96ff-73429c9ed389",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c457e464-75d7-4bbb-8e37-ac774ede5f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03666f18-39f3-4a2d-ac49-23f8094c9ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d51ba8b-34d0-4618-bf27-e4ebd8c5c8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49172118-791c-4e1f-b162-3a5fae9dd605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fb0a83-aed3-47db-b6c0-3333fe4afe72",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a61078-b288-4336-8e08-2ed883cf0715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9e6fd3-0927-4468-ab9f-5296a12cc65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe50f03-57c8-4381-a26a-fa854ad7c985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b233d12-78a4-4a6d-b131-80a188ec796b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d934b02f-e725-4204-a7fd-27bf1ded4abc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1fb9df-8c48-4f47-a8a8-aa7cfd714d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a3a4d7-b110-4b0a-bca6-97a515427b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b0bb2b-f60d-46d5-a108-39c8424e3adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77fc038a-f3ec-47f6-ae56-95fde0c760c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19f61c5-6985-49fe-90af-d679d1ad5ae5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf7025d-d3f5-4dca-9582-9265404dbde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23751f82-8acd-42bb-9b55-50f609246faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea9575f-2bb9-4ed0-871b-0fa2f744b987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a0594e-5abf-4483-aeb1-1a9191bbfb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cb8cc4-ee5e-4ae2-9266-a1c6dca6a3d5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0968a5-880c-4b1a-92ce-bebbdf27ace1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bb5be4-0bfe-4ccc-9d9f-e742bc8f70ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ede9c8-ba32-4cec-ae62-97b6ccc5967c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f536637-d406-40c3-b22b-e6f7bd31a0f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d7c5097-4601-455c-b071-e559680bf36e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48b66713-4983-4a80-a8ea-57f670eed887",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbbe8da-ea4d-4a60-aaa5-713201cc1196",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9a21e6-44bb-48d7-97e8-6ad5f862e511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e9abda-351d-43a9-826b-de3c9d6afe11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a040c1a4-3564-499b-a0b0-d7a99799f8c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3319ecf5-8c32-4255-aaa2-8a11dbe4b3e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f634d239-6048-4a33-9b56-64e06ca1e3a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ab971a4-397c-4512-b36d-9f72b6b1fac9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bf6188b-5236-4469-a4be-06ad187e6162"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e03795fc-ed7d-4181-84f1-4a29d34c1557",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7cff05a0-a326-477b-9be8-4d78e347fa6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08abb897-1137-4918-a71e-e666bc7a2754",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "977e028d-756f-469a-bc45-577d379439ad"
            }
          }
        ]
      },
      {
        "id": "33eae099-21ec-4406-98f4-4a37e0a66937",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6f341bbe-4b3c-4ba5-b431-e231f3ac271c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6af2567c-a7ca-4618-8bfa-ea900e049bd3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82a791c2-b4b2-4cbb-b4e0-87ba3828022d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2822bc-2552-47c0-8987-b8776a3b9eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019e4682-b6aa-4a69-833c-a1261e85acf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad15254-61e9-4e4b-bad7-810b6a872196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eede837-e3b9-4466-bae0-6f8b3849a45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6a8ad1-091a-4199-93bd-7eee6da65b7e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2cdb1a-ecb8-49bf-bd02-21e51fe6ee76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07982949-3cae-4f58-81c2-683f56425611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87afa5ee-40f3-4e82-ba01-d8e5e9db19dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62026801-e25d-49f3-ad26-8140518b83fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5936a8a1-eb37-4143-a91c-063990af2132",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbdf2f6-4b03-42ee-a00f-675e458ef02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a780b687-0aa0-4f6e-8a26-06f7da9dc02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d564faf-beee-406d-8a18-0fc264682621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e73d7b4-272e-41b9-9764-1c482a3e9ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9cd99e-85c6-482a-bcef-a5686b145171",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0f539e-69b1-4a86-b7ec-c90b11bf1fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0252b6f9-b891-4832-a44e-6f7c59b76be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c8ccff-ad7b-4bed-9ea1-f10dc25798aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69e58afc-8a90-4b41-90f3-94d79b85bf4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a975cf1e-72ad-4a1d-bbf9-3a19d5a1a9d7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e09130-aaa0-431b-8980-0f2c093b14bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcffd8af-7daa-44e8-af04-41a6b9033f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73caf376-b4e0-40d3-a7b1-1ab4cdc3f9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "903fef45-431f-4920-ad67-ba990bbb6656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0b5ae2-d17f-4dda-b0aa-a5cbc2c477d7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7853ad1-0ae6-49db-a88b-f77b6adf4488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0317e8f-dcec-4e60-b831-698561bc6da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d30b22a-9e61-43de-a62f-44207c87d798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4e8803-9258-4591-aa57-f45a34264883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263615a7-2894-4f80-98e7-4c0bc62bb5c5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cc5752-07da-469f-bdef-81fb7ee2af55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15d1217-9f5b-4e17-87c2-5d1de0542090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abae694-f8d4-422c-9dfd-117871b61218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccbd496-07e7-4e2a-b393-c13d721a5b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16694a9e-fcd0-40d2-bdd6-9dac2cd84f48",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fa4289-a7c1-47f2-84ca-b6fa099f8b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce5aa15-40de-4510-b401-3247a83c4fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f053892-9c68-4eab-81e9-7a89b03f2d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5baa16c-310d-480f-abd8-44e133b5f9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed13dbe8-96bc-449a-a4f0-8ad38b44586e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84caed2-78ee-47e1-ad56-abd29dc033a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ffbd52-d9c2-4d41-8db8-504dba1cf4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467d26f9-5039-48e6-891f-5387317d3234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e4468e-e550-4cd7-9cb3-7655f8c8b332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deaf8dcc-6a7c-459f-998a-a7aafcb9c07d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519e24fb-f7a0-46fd-8d28-899c3d4a5766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a302969-41a9-45a2-8955-d51f1087df57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c532783c-0f88-4cc7-8c9d-9b90abeb3304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "662efcaf-2f10-490f-a672-bd4cd5a40ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8763457-1fff-4d2d-8fc6-fb8e907dfed2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c48982-b967-4dd0-9d5c-6a2b414c78b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f4376c-f1d5-4b4b-9e15-f3ff81b56c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddd1927-e328-4ab6-9bf4-c4f3acd3a8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ec54d9-3823-4c33-99eb-31f22e88e4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4f26f9-3bd9-4961-a33c-ab3dc3668fa3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5e463f-4d20-46af-9ad4-92dbc236b2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b5ef6c-fb8b-482e-8b1c-7098e3be96de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82ca526-521f-47a3-b812-41127f461e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27659595-a91c-4a36-a673-91ff3dd42cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03b966e-af92-4623-8df8-8b49aaf329b6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21860325-6d87-42a0-8b01-7527e0bebaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c27b960-cc77-44d5-ac6c-296e66849159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6206e98b-3194-43b4-9420-f9d5154ab54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad118bb4-56f6-4287-9f8c-02762e92ddd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f08b6a-10a5-4dbf-bb17-ad76c1ea283f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd57474f-9a4f-46ed-a1ca-28b1556606e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1852a5c-c2eb-414f-894c-1ce0fd29e95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003ad41a-5a2e-4664-b9ad-b54bb8a8ff05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0adbaf6-d58d-40ad-9992-a90ff511d41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49881d5-08be-4e8d-96f8-caafff0eccd6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc472973-3b62-4f65-bb6d-f39d98e8ff48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955f3fd8-ad66-4377-a508-9b7676665deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ab798c-4af3-4974-9741-e434e705bc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "243f786e-6d35-47fd-acb3-6bc808843571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6254bb34-8f46-45d6-8648-a2534c76f323",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a1103e-de53-44fb-a917-b042f0aaf478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e5d609-ba9b-4880-8872-c6adcb3e5013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37187607-48c1-44f0-9a58-38d885e49af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7f089c-b2cb-4e84-94d3-afef03c86e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5996462b-d23a-489a-8de7-6a47eff11914",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fdd882-25b2-422e-bb51-5920d70709bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439c9c8a-860e-4889-9e36-4568d112cc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7882a319-c2d6-426f-90de-8bfe5e48817c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2138f18e-9f72-4a78-b921-cfbf9b36cdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebf828e-be2e-48f7-acd9-ebccda9508d3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc09b6e-ac11-4004-8898-705ab392edef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fadc211-2c16-4e38-8849-95a0b1f0fedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8384ce70-7978-465f-821f-9ef2a8c81e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2db0aa-3b2c-4497-859f-b4bb98c87b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3c6279-46f4-4470-aaff-4a45e1331f8c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54101319-eeec-4a63-9cb3-06d4a4b54bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad789f2-3320-4270-b4c7-56fd099946e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb17507-185d-4f7e-a979-e3f87157833a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54143d45-9b34-4e30-8cd5-50d3df10acf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed753b48-76b4-441c-b596-3185cf5f5fcf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d95785f-f7c2-46c7-8672-2a5f2a376486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38dd47f-e384-4020-8ffd-44159536e3eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7063e5a1-5ba4-4957-94cb-59772a750c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd2456e-2dc1-4f89-84db-6346665794ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4b9dc8-730b-46c4-bdfe-e73559646175",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac3bec3-8ac3-47b9-b7ba-40fd3f88de6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fab8d1a-a66c-4fbd-abe9-4484b926171a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c969ed-f08b-4c90-9536-f8fbed9d1df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf95a6a2-65b2-49dd-b7c2-fc0432073c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4eb107-dbc6-4deb-a499-af23bc5bac5a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95412cd-915f-400d-8e55-85914105c359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e7b99d-1820-4718-8295-c809701f28a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983840bd-fcf7-48f1-a2bf-8f01b1576cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef2fc9c-8006-4e38-b03a-2a8c0f3c21f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc54aa0-5538-4a29-9b5d-18c039424fdb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb424b0-1aab-4bf0-8e9a-03281b8dee8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4301c68-8cfe-42e5-a150-64dc5941027f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662ff821-1dcc-4b17-a6b0-4f8203bd49ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c596758-444b-4443-9bd5-226755c6f807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9d4da1-a1d0-4bf3-945c-78323ca41273",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8294b8d9-427c-46fe-adac-364a99bc4785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5382d799-cd17-4e36-80cc-ca3a53ce5370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2016c8c9-0a8f-4eac-a389-6f0088de34ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9daa2bae-f2d1-4744-a7c3-f3fcf4677f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88d604f-488b-439e-8ffc-66f086d2f37b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5828c27-ceee-4d57-b307-0722025b0704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510f1971-1bdc-4d1e-84ab-5e55bf61df8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181f0668-a698-4dea-9bee-f310646c3d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9dc885-c52d-406f-9f06-a23fae3528a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119f7872-5fdc-423f-8e19-57395799a37d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6244ae6d-5039-44eb-bd2a-2a6941a040cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c35e3f5-3125-4eaf-8083-40fc88c93377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229688bf-593d-4c59-9751-4d2d66f292b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4660cc9c-5410-4da7-83fb-422031e3a9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fde36c5-8240-4ab6-a034-06abb5762deb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb5739e-a893-4d04-94dc-f83b58320e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e45f83b-30a0-46ad-8585-fa3f9663e1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82f4ba5-f8ca-4314-bbd6-47ff2c341fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3af4b6b-1d36-4659-b4cb-b9dc86286a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce7f163-a82b-4edf-9f6b-549ea6aaecb2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ba1c95-b904-436b-8ed5-ab2ab9602148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78eb0af-a36c-498f-a2a0-c14e654d834a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac25efc-7c2f-4314-8e16-1367de8a4a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47372610-9a62-479c-be58-773123d6da0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d9eea1-e164-4877-91ba-28522f2356df",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b74e44c-37c2-4e6b-98fa-8c01cac45b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57df8ca7-3603-4b83-b341-bc58027f5813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc4172f-76b0-4aca-ab87-00b8210d4dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02dc084b-8d9b-4676-8c2c-f1a832ad64b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77e2426-2bba-4ba2-9420-87bbcdc2c1c0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fff0e09-f1ed-4504-9adf-a5f53cb57c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5ec5eb-b62c-4579-8a94-4b5d086f3377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7c5b1c-d335-450c-958c-cf5e447e52f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c872ade-a370-45aa-aa35-7fe8d13ab3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565f581e-42ba-473a-9c4b-5d9ca3b53fc0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b245ae-a28f-4298-b19a-c72b29d409c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0c16e0-2e01-47d4-8c7f-9109e9c5c104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ace4928-344a-4902-aea4-9b47550d7e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3f205e-984d-4b72-a829-47e0a9dc5ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1973efd4-b9c6-4296-b132-fdf1f1d2db27",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbe5522-c6a8-4b50-adef-5b40074de1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a1d10a-99af-4106-9fde-38ffbd889c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4cca10-9161-4054-9e76-b2e017b3feec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb9374b-c1ef-4db4-85c8-f8f9c6151e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce540767-e58d-4032-a60b-eb32e2c82df6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59513aca-a239-459c-829f-693507488276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6538ce6-3ec6-424a-a6a0-3e5399663746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696f9dc5-1825-4a55-b92a-f007b1995076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90e53bd1-ae82-4eec-8d95-6f0fbe8be93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a180bc25-a4bd-42a2-b6d2-f0030af52258",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38818ffd-af35-46ac-bde6-9493448ac537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3f33d2-a647-4b01-a75d-6152f46f196c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0762b653-734d-414f-9ec9-dbdc32eee4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86be5304-0463-49e6-b173-e299f0cfd0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1a0f19-a3a4-46c1-85be-9f41092a826f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e975eb-ee67-454b-973e-7d89e54db5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd41b8e-4c17-4f2c-bb3e-e4dac58ed999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554085a6-da89-4af6-bec1-d2e292469a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc34a0e8-335d-43c6-8ca8-295d8a59c55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44240da6-b69a-478a-aaf3-1e67394165f1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f32f27-4fbe-4f1a-b066-6330e5c8bddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69a664e-f9aa-4010-b066-cfd6ef952838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33802bb-679e-4b2d-a495-ee962e1cd8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8250a5f9-8863-4670-a837-5bc0a6210ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad10710-abab-43f1-a982-89ebf4c5e051",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96d98e6-e3b5-4b8f-820a-d6f1302658e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41722f64-9717-4319-bc04-24027b89dd8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d25bc51-a825-40ef-9ced-16d75246b2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ecd130-d8da-4360-a93e-18bdc62ef7f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "511089c9-7e40-4ac1-8e41-b32b6ad88432",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97798f4a-8d94-4a91-9221-dbad283eef08",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a95f4d3-6a58-4fd9-999a-d027ce3532e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be519436-82a4-4bd9-941a-42c625129352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2b774c-dffc-4d65-803f-a9ff5c28fe8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16dea44a-5d2c-4803-9347-7c3559a20888"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e1fdfc5-d2a3-4c0c-ac13-c5b245ca0307",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6b5844a-7859-44a8-a75d-4377ad822563"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3459c07-a921-45a7-bb0b-dc1a5bbd6272",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f35bcd19-8a7a-432f-9cdd-f41320595b11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ede3fae-213e-470e-b34f-5f5e50e2917a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f9da7a4-16ca-4c7b-abf3-bc5070786b5b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2304d728-5be3-42c5-ac85-622494b97fc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a09d21c0-09e3-4d2d-bff8-7139bf96a7cb"
            }
          }
        ]
      },
      {
        "id": "4e6e0c1e-01fb-4a83-b136-67dc2d33fbdb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "36ce648a-89a1-4534-b03d-7f6bfd33050a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edc1b2a4-6b59-46fc-a043-cd062b0c10f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cf557c65-6516-4535-8cdc-8c0280d48c61",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b9d3b4-a8e2-43c0-ba85-89c5628961c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49295b17-b07f-43bc-af44-97e15ab77634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46490b3a-2167-4f13-a300-5dd2525bcb20",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09f9a1b-9507-427b-8f23-4bd9fcad62ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f194e63-ee1d-45e0-bf90-8132add3601c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89388ad3-6eb9-4c78-8344-9a757ea699a4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebbd994-5ff3-4fc5-b7ad-b1064fc73276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0383efe6-5fc7-412e-b734-012b623c0c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865428db-1bb4-40cc-959f-91286fe2a4a0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee26ac25-c683-4d68-9aea-46dc245e621f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcee7817-a631-4aa1-8ec4-dfc2b30c1d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1611909f-3886-4685-98e9-1f8f291b0880",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c446aa-18ac-4654-be69-cae4262e78aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ba938a-40e1-4fa2-8ad2-45965e61ad1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7829ca21-a2b2-4c98-bf3b-5b3272a7c19b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d0c91e-d23c-4630-bfe6-2e26c0512f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fff3689-6dd4-4732-b216-95f81ff18532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4f2771-4d48-42d8-bb7f-44659785063f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa681a56-5452-4820-8ea9-375f1ce280b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36362ff-04ab-46a8-80ef-2927d5eddbf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf81ed7b-b63f-46db-b366-5a7cbe020932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2196f80e-b112-43be-92b3-09ab8a9dc2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de2041d-105f-4a53-8567-b0044a98a94b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c696ebbf-6c4d-4dac-b731-33583327dddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3bb47c-32ef-46c9-8ed9-ae99c1277986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6b5346-4ea7-4650-9dd9-9650f3005f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ed3402-8a3c-4611-8b10-546c4d65e396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a891656-1ba0-4011-bb80-f2d7f6c9c36f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3023f1-8718-4475-975e-702804a39782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5876d2b7-fa47-49b2-8300-eb48f309759e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312b7edf-4cc6-4498-bfd6-8b21abb6a31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d2ee2a-cbf5-46d1-9756-70ee3d8c850e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fa7756-733e-4aa7-83b2-7036991f5e7f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a181a2-d514-4b1e-a85e-8ea543ea37b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a433ae35-e071-4d80-9e11-eaf6d0c92be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02342f9d-7ce0-484d-90b5-402f28628bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896136dd-823d-473f-9f35-c75a5540466e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffee089-e370-428f-8fd4-57da4648f027",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f41094-a8e9-48e0-a604-e786cbffbf42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b2a31c-06f8-4e86-a58d-26451935d75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4024ff-6c51-4898-8364-9bc0aca4dabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2323df-f93d-4417-a22c-76510a62063b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2335c7c9-f13b-4c46-80ad-297e7710ecfa",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989ad4e3-61a0-45aa-93af-4dd0981b601a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1548f91-78e5-454c-aa57-5c2180c6cd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9509468c-e3cf-4464-811c-a4a47ce2d107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea427f2d-f624-4c6b-8e54-f5d002728be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1988cf8-b0d9-4cc4-9a6b-e1fe87c59335",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531e9a30-9f03-4a24-8734-d2c33903449c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "019b60f8-7018-4286-833d-670d7ed69af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e93483-1090-4683-872b-8e9853dbf21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df47a2e2-b908-48b6-9e8d-4aff3f185723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03369238-5c68-4208-b729-ea3c231bfb0e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eea34d-781d-40cc-ba80-d135a3a058ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91ed902a-c893-45b4-8d35-eae9309557b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ee902c-e463-4409-beb3-04aca5c72aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f3bd1f-7434-4d19-8c63-476db98d604d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98cee1f-3f7b-49f3-bc0f-c594172b0648",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d87cb70-a93a-4c74-9747-2d40a15157e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70828f75-b6e8-403c-a62b-7941ead092d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0359a285-0da4-4c3a-b857-77d7887b6d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bba1274-735d-49b1-a66d-2d3639995571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e8a9f2-3746-44c4-8fdd-d9d72efe9556",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e0bca3-7281-432a-8bf9-8cdc23d07c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f66c655-8479-41a3-a6a7-3a9f16bb5d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075603fb-e4ce-45f9-b464-e4b8ef05df33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d32106-e525-4226-9f5c-a98600f0ae74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a63b3b-a207-42c2-913c-1f6979956caa",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd980aa-554b-4f13-837f-1215817cc3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ceebf6-4e9d-47fb-ab01-71c66be127a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3099a7-749c-419a-bf4d-5f92f3f63b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3f9987-ecb4-4825-902b-5fffc368fac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff45405-de02-4800-8d24-01612a232ea4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca572b61-4a19-4bf5-94f8-031688d476ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b43b819-de9a-4123-8b5d-f674f3c6b4d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6daa97d3-f34d-42bd-bc5c-0efadacd6b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0dd129-55b4-4c6e-8d69-fb4629ae7f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aeca47c-50fd-4d9b-8402-9dc5c9565a86",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0346a80c-d10b-4abc-8b5a-5a51dceb985a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825311a9-c1c0-4fc0-a86d-ec768b58c4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f985ed-126a-42b7-8cc6-d45821dae37f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ce3661-82b3-40da-8d31-6de6b8fb3d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80edcbb6-a362-4b21-beb4-099dd916cc1b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2def42b5-9cab-4399-ae10-68314cd9038f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f095e742-0951-42c2-9d91-4f224f7f633a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36617664-55df-484f-b489-50faf02e12e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab5dd28-4f81-4c97-bacd-5ca89b85842a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68fb2ca-751d-4e13-b9bc-98d0e0d8624d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df862799-3ccd-4d0b-9bae-5816195ce7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648b4477-44f2-4cc9-b73a-0fbdff3dd8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85ac23b-3fef-4d39-8955-4c17c5fd702a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0516579b-56c9-439d-9570-418dcee16dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec0c36c-fecd-46ee-96a3-d61f882bc563",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de5c2b1-71ac-479c-b40f-f40a34892827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50ee949-890f-4d9c-8867-ea8d84f8c77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9800f7-c3cc-4276-b130-40586f74231c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6266eae2-57aa-4699-b86c-61f5305b38e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1604452c-0622-4ddf-8c11-33c794fb32a2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc82b5c-a12c-457a-b85f-776570665778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc450e8-fbc7-41ef-b463-29fcc77f3622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72312c5-9c24-4ff8-ab09-3c5f6cf3f881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707a5c40-430f-41fb-8db0-24c80444f160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76722cfc-013a-4558-b2b7-bdd11ac4711f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b6d755-3899-4861-b505-5834c65c1a40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75083b9a-35a8-48eb-9a96-27f6a9bac6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0fc6fb-ad5d-4b03-9129-89022334117e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58eb02fd-11f7-4066-b956-dcd8addde3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ae121f-e106-4b7b-9c34-60487ac8020f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97451ff-d9cd-4878-ae56-946bb5e35a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d41dfe0-1000-4088-a45a-e4d46d149b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c29d4c-8080-4b38-ab59-de1c667407f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59c0e85-a364-4157-8e74-da30d46544a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631c3fb4-59d7-49ed-af03-06160e17c107",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e1c995-d0dc-430b-a65c-bb4539f1decc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9e820e7-0a2f-45e9-8419-e4eb0cf29dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4e1587-600b-4660-8a41-db0a0a768e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed96b546-a5da-4009-b052-e5f44819394a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb62b633-ed14-49d0-b5b5-133b4d786145",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7017895-4a67-49e3-bac8-91049d364f04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daf56fd3-222b-4140-98e8-af2121ec4b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3a97eb-4d39-429a-9879-b956feb1faea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4130bc-dd7d-40f2-bc5b-bfcbabe13b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0e8507-b9f2-4b21-ba76-f7a621b2ad0c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef937f4e-bb20-4535-a8d7-d106d31c454a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3572ed1d-43fb-449e-91b9-c00993d030f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e41ea39-e04f-4e34-9ca5-13f5883caa97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8849f608-0859-4186-b3d2-7273a4500238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909a5236-36fa-4497-8ee9-238cebbf56fe",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865a17cc-3df0-4803-a89c-d21d2c68a266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6efe732-df8d-4186-835b-3c64b02d3849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ee8312-3c5d-4a51-bb14-1db0bfc849b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e602720-0975-49f7-9dea-c3b8f11bcfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079fc176-08fa-4618-9d82-27e73622fb0b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f805c3bd-385a-4586-99ed-6db6af70879b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c3d737-b97d-42b7-ba35-b2c0bc531b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf272d6-c832-4a23-9cd9-9c1bcb380756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3661b7-3096-404a-86d2-1729ffc14cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ea7c3c-709c-4b40-8b20-c97b8ccd3256",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ddbefd-ee4c-4469-9b6d-2c6ed6805ee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e116d4-25f1-4326-ad96-7b12e439649f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32cd1dc-dcf1-4c45-b13e-b791d0adc507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad6cfe9-fe74-4b9f-8fdc-29ef1c996513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff1e649-62a7-4e05-8512-75226a48aac9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304b3d94-2ef4-4baf-9ccf-469cdad9f775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4bcc062-d6e5-44d3-b845-3b3a6a655bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63095774-e294-470b-83d7-d16b5c171da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf23aec3-320e-4385-a552-a9f91e321599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c49964-d7c4-46d2-b0d5-84ef3a05a065",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b30b60d-c4d0-4eb9-90a9-22394d8e97c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f61a602-f87a-4500-b6e8-df592fd1c1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e42e620-612a-40d2-a0e1-bc83008f25e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90e84ce-a42b-43e3-8c57-fcbd394ab39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c02fc87-48e1-41a4-8fcf-e60075d33976",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae525357-de1d-490f-ae9e-b422e7a5a357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ddf9eef-a338-4d8b-a821-9652ebe93270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "debe7268-a689-4407-a66c-88f3022a0d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccbd7f5-55a0-43aa-a922-4020f920779c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39105947-5809-44ba-9c12-0d02c012bf83",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6098f311-d938-4522-936f-45426316f730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e980e88-b4cc-4804-a60b-70ded142591e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc3e1ae-b49e-4656-9901-d2f7606f69f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499f46fb-cf64-47a3-8911-cd7127c54d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826c8406-1638-4dd3-8d57-90a1ade17b93",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cc98c9-0b75-4f49-87a9-d32c3ce2416b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580462d8-e732-4638-b6e4-130365440983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13baf9d6-b6e0-4b4a-861d-4c71712c1e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efeeedf6-3c64-4e32-ba3a-d38713148c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995b5285-93b2-4111-a5c7-5650b55eaa3b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9104fb69-3a0f-4970-9f29-23a69b64f87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d9e924-3637-4a49-8260-74fcbe632b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d43f7ed-f009-48e4-9ff9-41f3d543c7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d804f01e-2e17-49ed-b2df-53bf74ec7644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb7a7cc-1925-4727-b9bc-ca5454e158fb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52aec03-f0b9-45f6-89ed-01f84a5f5b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7a939c-cb43-4998-84fa-38cf26b61874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa8cf3b-3f2a-450c-a864-2bf9c364e486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62682956-7154-48d5-a9e8-2003b02faf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3d836c-df5f-4c9d-8457-7abd27a0334c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5be2951-afe0-43cc-aaf5-7f103cc75867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dee4bdf-3eaf-44ba-8945-eb7891ec2a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ebdbf3-0593-4bca-acf8-f4b24431f455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad05a771-95fa-4225-a800-e8edf7889f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1e5352-42e7-4a90-8323-09ea22b7ec45",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a05587-4b7a-4c5b-ae72-4ab9a2f871c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c67d3d-ee49-4d75-928c-7cd32d3294f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e654e9a7-3ee9-4ac7-accd-375399cf8be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fcff7b-925b-4d19-a5dd-3096b9b24489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8304310-1cc1-49aa-b35f-015fbf386380",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6607dc-0f6b-4afb-a4f6-bf5cf1ba281c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3cdb669-eeec-4e13-9c62-b8cb15a8106e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc840c2-e21b-47f7-bd6e-7401792865fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3feb9cb8-4d31-45ad-951b-6c8febdfcfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c5ab9a-0038-4205-8331-d2146e0c0259",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f294ad-e896-438a-af45-1acc6800fc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0281fd2-6587-4982-87e7-81f486900991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e0d072-bd7e-424b-8225-6c350c1b7dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4109fbdb-d4c6-4ded-92ff-ed45b852b7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31951dbb-70f3-4cf7-bcfd-c5357d051ebe",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9694bb56-62a6-433e-b539-d59aef69c9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60c36b3-e62b-4b00-94a8-f97e25c76aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e652d902-e6a4-46b7-8148-45ad895a5dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4d18ab-b8bb-4d04-9a75-664af277cccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5167841e-7171-4dcf-8b0a-786722c0b61c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cc7849-f9f0-4ed1-910d-fc5baf5fed64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4daf5b-a747-4c54-9e7d-5509854ac3cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a231fd-90bc-4562-bcac-a87abc80ac8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99004e08-0650-4f2f-8e7c-4e898f0bb91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d913ab-1eb5-42fd-9574-21a7a51ae21a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741d6d6d-a733-4458-b957-5d343e3b9391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f73e24-5955-4c65-946e-0354d44039c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "302166ae-93bc-4821-8070-c50bbe2637ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4239e52-8600-4016-82a0-fb4f9da9a131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23e9df4-0112-49f5-a35f-8868bc342d4d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9672a5da-679d-4431-a6eb-85e4706fb2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e28e9d1-d691-45c3-bd8c-67fb191bc060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc0f1be-32e9-4a67-83b2-83c38f927ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c4bbcd-3872-4d8c-9107-0533fd4f242d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111851aa-510d-4ab8-80ba-39e58844639f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61fdc7e-4f8c-4a72-aa0b-4e26501dee84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d425248-01c9-4b55-83df-3a68f757a1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c4624a-234c-4263-8eb4-b6f04b9b34c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e795604e-411c-49ba-b621-e11934bc9e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0581825-2c0f-49ee-9634-30fe4fe8f662",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16624ab1-fb0e-4bae-bc13-cd0df06fcb3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd56522-2a07-44cd-a30e-829439ff700a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2399182f-ff4f-4510-87ea-6c847537ed7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f04aab-70b6-462b-97cf-db5c052e6a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882ccaf1-79b7-42b2-b0e0-34ebd1ecb098",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9db814-d9eb-4255-84f3-28a3ad293aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0e48aa-006c-430c-a729-b5d5ca6e290b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a44aa14-5852-4602-aaf2-f9139db6780c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039e5f4d-f7d0-4eda-b5f3-b9a5fe5c4e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efb3967-36f4-4251-9780-cc6a27459310",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96041a8-1331-4d65-9d34-b59bc3b54179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bfad3d-fa93-476f-8501-0a138df304fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1a0140-d4c7-4bb1-8a59-935bc741cce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941a15ef-f1c3-4f0a-87f7-218c218d543b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d27b10c-6b14-4980-a896-3167cbc3ace0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf2e3a0-06cb-43de-98ff-e3c1ffb82122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2796b6b2-9b8d-43fd-a028-65a476b04745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1fe1d9-54ea-4d9a-aa08-fc4ec0c52432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50db898b-d33a-4a7f-a6c1-df8d35940540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3557b6ed-f57f-46db-855b-d3842060e1ed",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ed1619-af2b-45a2-b941-e4cb2514da98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e7f9d9-f83a-462a-9c0f-8518315e1896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6788b6a-f523-4145-9df5-95977beba2f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb677e8-1b6d-4d24-9403-dc409f3ea984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ac8e9d-2018-49ea-bae2-cf0544bfb0a6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b38b8d-b434-4a90-b624-41da9feaf40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4c26e7-731c-482f-a7a0-63d48396db2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc775d5-f3fc-44c1-80f0-80f1f61d5cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef10ff4-b865-4cb6-9013-01b2dfc07a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f617fa-e32f-456b-a18f-fd3707368c23",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0f7328-978d-4041-b796-79d043bc7ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc99a786-ea51-410f-bf5b-6d7eb4dd54e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7de9f98-d7b1-4690-bbf5-d6421c723141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115cac5d-8ee0-478c-a713-bf564dbedee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ca62fd-8282-4552-8df7-cb13f4c11f60",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee00d75-a4ed-42af-b15f-2908f695b77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1615ba78-ce93-48d7-a315-0f278ad59fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b602b55-ab22-44b2-8ace-1dd2df4574bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe8c037-37ee-4095-8ea3-79e090c4d1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f01d1b2-c17f-4c8a-ba7c-43e82793c16e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581d0f65-ba9f-4fe6-96a2-53a1aa9fa767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26549404-ccbc-4e90-b708-bd7b2d958176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b832ce-e18c-4a95-a6f2-6f589f4050b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d798e691-eed0-47e6-acb5-e83d7fc5cd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60db7ad9-54dc-451b-94de-1cb81c5dac79",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df0e733-0038-4903-970a-3575a660ca7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d40d049-3dc7-4641-9600-8bf999197404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5305c62b-9234-4bd6-bdbc-58108a3a869a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0522aab0-79ce-4fea-8700-8b6f568e4bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7a6340-9551-47da-9840-956f7067ba35",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c63acda-c29b-404e-ad42-3c8d56d4e41d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12803c7d-5e73-4c86-95c4-66deaa9afe07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55785a35-a8ce-44e6-af8d-889aa3f9639f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf2d69d-d1d6-49ae-a478-f428bf4e3f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7a240b-e3d0-46b2-92ec-14033cd28ad0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be4643c-e9ae-40d9-ab31-043d753f1b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89f4df4-d60a-47fd-bd22-ec2319d69f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db094e14-9137-4a38-86e9-be613de3411a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec5b221-19cf-445d-9f60-871fd43f09a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e78bb9-3c5f-40d8-9771-e8c4b282256f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fa68dc-4e5b-439e-baa6-a458ddfc9c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e568a2-6ab5-4c9c-8edd-2478a47c9489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e3de7a-4302-49ba-8a08-280015d19291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d49c58-3f0a-44cc-8523-99e18d9ab8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fece37e0-58e0-46a1-847a-c498b6312a23",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39858d1c-b590-4e53-8be1-4f7c977e89e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2590149c-a146-4b24-b0a9-33d45f99e098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205fe090-00cc-4448-a7f9-b438b8f4999a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9182023-e737-401d-b2b7-f14ce1a8fbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0ad509-9918-490f-92dc-da19f5e769ba",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1baef394-201a-459e-8019-cc6891c9f0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248f5992-38d9-4cc6-8e91-369df4de3c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23bcf53-4bad-48e1-bb3b-655dd2f1bbac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076d01c1-b488-48c5-8855-73104dc23d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561930ab-555f-43d7-8a7f-82c64ae554ad",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e01fab-7ebd-457b-a3b3-c5bd1e4ee880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d360b641-b7a4-47d5-8e93-f9095564e553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632c0d59-3d80-4181-8303-8c3088e62fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a260e76-998e-463f-9b59-930dc80c1d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b9dfec-27c0-48d9-8d58-748e00c94b1f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e505d25-1ff7-454a-9ea5-932a43a27bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cba5c5b-e295-40ad-9957-d0e9acb76827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "191209f2-a682-4624-9448-d22efcaf8985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc5ffcd-c3ab-4bc9-8560-169922bce0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093b02e5-b5ee-46e6-8976-436a0d671049",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd928ca5-23bf-4906-a27d-5566f37e8133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "295db0e4-9aa3-4ff3-9b54-9220780d5f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f6238c-2e92-4ab9-9f65-3dce055a5833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c76a8ec-45b4-43c7-b14c-dac76aac9bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de582626-a649-4330-b971-069c4177b449",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ef135a-4779-42f9-95e7-4ecd61294531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b05e3e5-f9cc-46c0-b8fb-1cf1d0fe73d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d07961-c8bf-4e9f-9c26-7e623ec6f3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac9e3f5-ded9-4f63-985b-0a6a857d85ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf457364-249b-493a-b955-16433699bd9d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edebdd9-c624-48c9-9aeb-690983632fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989f2dac-559f-415d-b730-4e16cc112408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36745d82-26ee-4710-93d6-4b605f524361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c51147f-7f9f-4554-8ecb-72e27e0fa48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb88594c-4bc3-4dc7-956d-d7ef6ae9f887",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bfd068-e0fc-4187-acec-10f63ea9232d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5fd1a64-bcdd-4089-be38-a5055354de91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ec1d83-270e-45ad-a16c-f14890039f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3478dc2f-65f1-4ff9-8b52-a99e7d1a2273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a621d24d-b97b-45a5-a724-c104139816f9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9aa9862-3f10-4dd4-a0bb-cdf78e897f09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88735b6a-a797-4ca5-8524-180ecbbf5cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bcee10-6310-4f35-8269-ab40472b5674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1890f087-1103-4d04-b52e-e7244ac2399d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f54321-8e5b-47fa-a5f4-9b84c8cd8598",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb501d9c-e5df-45af-812e-edc8b98e9c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdebf247-4d25-42b6-8419-503ad0148155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2032b117-e78a-461e-a882-14a833856177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d825e6-3808-4b61-ae09-18e83553648a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2525f6-1de3-45a8-9de7-791c4206e915",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a94084-49b1-4ee8-bfb5-4d6cd7a98229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e58010a5-c2a0-4f8c-a634-e49856efe679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb90dc3f-360a-4d38-8466-52007a128156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40946816-c166-45c1-a688-bee1e8b79277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed09c53-9d31-4905-90e3-f4c5863dbecf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397729b0-0a1a-46e5-a2fd-72ca2a82b8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "920259fb-193e-4d61-aa98-677a8e5c24ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da7a442-3e13-41a9-bd04-3f262342d810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e645c8fc-0ed9-49c7-9c85-cf0943adb8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2afff6-1f91-4417-a6cc-881c870d1841",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c36cd25-ba5d-4027-ab9e-d838770eebdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77504f2e-d9d5-4658-a459-c844683eba00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cffe789-51b1-40ab-bcbb-309c6d3569f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9df4f7-7777-47d4-b58a-9e2565cccc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a381274-e628-408a-9425-963528824b40",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480432df-96c7-499b-aaa8-3af150e244de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360e71e2-0b00-488e-b720-6dfa4e009e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8071dd9-32cd-48ab-9be2-0570a856c6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848a39ff-a544-4167-a454-6cbe64c2e78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a5a163-d7ad-4dbf-b1d2-1cb364623add",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97513837-0cf2-4814-b0eb-78aa8f61c1bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b697a10c-64eb-4f10-9267-feeecb2de92f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f73cb8-f077-4cea-be67-e747de84c01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561a7310-5e45-46a1-b18f-58ae8d70f92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be829a75-5abd-4284-8b0d-ea99cdcfa2ff",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da064e65-84dd-4ad5-96c0-15a58ebda3aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f282b083-24d2-4fb5-beb2-5a3e568ed4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53c0762-98f9-4e5c-9a65-ea8b46345cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb03209-f39e-41ce-889f-427f9c8ec138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d159b07d-eb9b-4370-93d2-c35d1eb06782",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2a4dbd-6569-4d70-bb70-159280ca3941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd86a32-4d88-4131-b5be-bd90aa219a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e174b583-c692-4def-ad9f-86d18b293560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76e3069-1534-4485-977a-01f3d8b71f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec798b62-2a81-4fa4-994e-b12f65a2d6ec",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bddc81-4801-4603-b2a7-d2bd0f56010a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48acee59-7a5e-4455-85de-a95daff5d06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929b2fe4-8aeb-4e81-bf9b-c613be246e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024e3d9c-d8f8-4f46-929e-e949b90b10a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956efebb-544f-42de-b6e2-6b3438ff47a8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f4202a-8f38-49cc-babb-f1a7773527bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a395b81-88e9-4a20-b568-7625dfc16e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19619273-6c92-4d07-8f1f-cffad4184709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222db313-8af3-47b1-8dd1-095fee399394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d961531e-86e3-4693-aeb8-d316a534319d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad21fba8-6ff8-4f5e-a068-adaf35b0dee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d26f99a-ad7c-4aef-8182-918349728c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b150ebc-b0b6-420c-997c-ab3cf2ff9ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b987af0-80a6-4fb9-8b60-7371b287fce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e23b69-2e44-474a-a830-2ecbe93f48c0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07be5473-5d06-48d7-8d35-672739f80d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63519492-1973-4d27-b8d0-85658d5a7ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4658e63c-4ba8-4e7e-a5e2-4c8c920df787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ae5fce-28f4-4e67-8ce8-5ebaec251f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb86570-a630-48ef-a2fc-88902ae669c5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7a36d5-675e-4b46-abd8-354a2f945011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4394c34-4a66-4ef2-8069-715b0f802bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b79d76-d7a3-4ffe-b376-0df883701536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b53a887-27e2-4b4c-9a18-93b49cd15810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b2f621-8cc2-49f3-91eb-a7361a539e99",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20205801-4029-4094-b56f-0f8c40e49c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "307c71d0-c85b-410e-b5ab-de2e6a036c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6a471e-2c57-4ef5-aa05-7bf259cd8751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ebe0b5-21a9-428e-9965-8b1dfca51294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85864633-e1ed-465c-a413-dd4e93e964d0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebb3616-03bc-4286-b971-a9ff2378d5e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8cb9185-87f4-47b3-9d11-14c069b65ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f8d218-d08a-4914-b32c-f7ee0db6ed75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d79139-27ae-4e0b-8974-5f3e08d0f36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bc6a71-471f-4474-8d94-51d68f5d8eda",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47796ea2-8628-4b3a-ac7d-e7f94d89f2b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08d27fc-cf24-472f-8db1-8227d9ec30d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b87d715-bbd9-4a9c-9013-a328e6d82f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d479931-ef84-408f-ac23-b773c779c603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d794df-535e-4732-b21d-9d3038ab91bb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8575b1a-b825-4d82-88f2-beaf116ed540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af308143-3d03-451a-a6f6-fdb61718d0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f695f80-37ff-4691-92ff-6dc5f499e17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba861311-937b-4741-a763-0599eea89c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8673eff6-2cd2-4100-9432-0494e9aeedb5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bee3c19-5b0c-4508-a437-2aca262af084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7758857e-a9af-4532-ab4d-c5484d4500f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1dfdc8-be14-41ce-b18b-cf2f511289b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63be351d-cb14-4269-afa0-8b34885770ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdff45f-dc8d-42b6-a953-d8883a82502c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5a21b3-7733-4dbd-8377-a852050aa982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c981df1d-2055-4c7f-9018-d7e9b195819d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce31d47e-b11e-463e-b866-68e7dd18974e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376b5a2b-37e2-4ef9-8e9d-aa6261b67254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2985a6-f2e6-47b0-9ca2-93f652013855",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca2067b-0e7f-4d51-bc6a-67824b9f05a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89167c3d-ce24-4c69-a5f4-461d98a88ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738a0bcb-c5dd-44cc-919a-ae84dd6500bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d00d33a-d2d9-40b9-9d44-50add9602960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b29d69-c5fe-45c6-893c-75d66fd37cb3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a842a6-c4aa-4937-b7b3-62fc6f3c4701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60c90b92-dfef-42a0-9502-8b936456ba29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f653f7-4fa6-4f7d-a063-11a6a302ec5d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b9e372-a886-437f-a030-e09c78a995c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb964d1-808f-4ac9-b808-9a6fd3e6cc6b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d6af09-f475-46bb-acca-851324a0076a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4ddbd22-638f-4408-8587-7acb2af82fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a71e06-1255-4a7d-824a-8efb5cd0fdb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc500132-cf31-451e-84b3-47d8cc624a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881cc3a8-982c-48a3-8f94-35b79b66e2c6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f520d92-fd89-4cc9-aac9-6a7142f3dd38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ab1a74d-382d-46a6-b51c-8db200903a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b33fb2a-c1c2-4d8e-80a5-bb99569be622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c37109-af5e-4a91-877a-4f0e0ea831f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d66c33-b68f-4378-9d37-f2f42bddb33d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f984f0-5c68-4e31-be26-d7b94237e463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ebd3316-47bf-4eaf-9210-716c810b14c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc9b368-7b7c-4416-8174-1f5e53c4e296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab20b6a-6d2c-4c1f-b3e2-5547a488231c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76274670-e11a-44e9-81d8-a41a96202cc1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91e51ea-6d5f-46ac-8504-ad8094c2dd30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c15ff63-1572-42b8-aaf6-7a5ea198100d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528ab49e-9de4-4205-9020-32403b77f8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76896d5-04ad-40d5-8f31-c391109abffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c0aec8-8c2a-4efb-90f0-faad1bbfe547",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df63f3c-2ddf-449a-8f74-003b46474e7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b52950a-2234-479a-a0b0-3285bdb80bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da190885-b478-4a14-b1b3-0690b04bba2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a26150-4b5f-4d3d-b24e-0f442840f67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b716678c-5924-4b9b-b60e-ca8c16515462",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a74694-9a82-415d-a2ed-769f06d9dd02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73ef7ccd-1129-42c6-ac6e-8fe96e5583a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0645a07-56c8-40a6-86d9-c7b96211dc87",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee8145f-66d8-4796-bdf2-f86e6475fdb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4259e04b-0de5-4d84-a3b5-5416fa2deb0d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073f79b8-4c41-4f56-97b3-e282ff55338e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b52129e-ebbe-49a8-be6f-dc91a79caf82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc615650-2732-452c-b0e2-c88960868893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c98fc5e-0a35-4654-b09d-8a96fc2714dc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82f6a02c-14ed-4198-9558-ebd2df850f3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d98a7a48-c78e-438c-8038-ebf96c38a407"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69e48ed8-fdd7-4e78-b2ae-31b6d21c1f7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5ede324-3ac2-4903-9e6f-646bb2d6f5a4"
                    }
                  }
                ]
              },
              {
                "id": "1a4045f1-1758-4163-bd8f-7db13553ccd1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "daca8a14-0cdd-4bfc-812e-9f04b5460997",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55655e8c-5d98-4cdc-99ee-1ffd313a68ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d5b1b20f-bbd9-41ae-b28f-263bd4ce6bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5302a37-c814-40b3-b803-367ef55ab873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "300725cb-486f-4faa-9c37-eb8af1352cd4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "267f6943-7dee-4705-808e-a4aab7bb0e5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5bb4fd9-2349-4395-b3b8-9c08e6dbe7cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c575fa09-cffb-41b7-a8c8-a3d679445491",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df6c2c04-912e-42c2-b631-4c04535c9339"
                    }
                  }
                ]
              },
              {
                "id": "bdb10309-cb46-4075-bf59-bc64d0830dc7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "43b13add-306c-41e5-8163-c7f909fa959e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ed0a76-2cbf-4926-9d7f-92d7f35e931e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6e0dcecd-546b-4d0e-9a51-be4cd0c5a2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc20d67-cc2a-4d25-b669-cbd13765fd9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71e2485-1175-469e-9b0c-0c6c57fdb270"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6079369b-c1ac-48d8-b997-11c978bd0949",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60fc04cc-b29d-404c-a6cf-31b128d1dabe",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86cddea0-34c1-4f55-80c1-746b8b70610a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f359bd59-7ad9-4f63-a72f-0230a341266e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4e6a835-845f-4cb5-b0dc-d2e87a0b2e39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2542cc8a-e620-402c-9bbc-5a50a5068dc5"
                    }
                  }
                ]
              },
              {
                "id": "507604b7-6f42-4c53-b58e-3ebc9e3947e6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c4df612-ac5f-42de-becb-675bfd7310b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1dba945b-a7d3-4ecd-b85e-b99dbd6db3e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74d8517b-39fa-460a-be4b-7a7bbc1d9826",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ee27d6a-d771-4e89-8cd2-d6c7278fc467"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78d38c0c-ba02-4001-8e99-dbc87a2a910c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6c834748-8b47-434d-9b29-7409134bcca9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ec75356-7974-4fa7-9ee1-870e7ab01a17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89d11157-04c0-4319-8c33-ce371972a2e0"
            }
          }
        ]
      },
      {
        "id": "a7f21741-a2d3-463f-b727-f4837bb9338e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "80e7e67f-5ad1-46c6-8ee0-34b1294011d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9baafc69-6ef7-4b84-9896-51a46c7a4010",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "363115bc-fcd1-4ab0-8a91-f5eee97cc06c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d12a38-7eaf-47ed-a0a1-89565ba34dde",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "02ee6cfe-edf4-4f7f-b3b1-ef61966e0ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e8ec35-0160-4c9e-8a43-d5a2d4be4f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8a1ff4c-3f18-443a-b315-04b4ae4a6a5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ea0aa66-462a-41a6-9373-df72864f0b22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d056657-e754-4e2b-a435-ffb3e6ba2e58"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a26cbdb2-1be3-4fb3-83ab-7e667736840c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3f750a2-9913-4059-a34d-f88f88d426b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d496fae9-2b34-41b9-b131-ac5646819427",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bf25a91a-309d-4df7-bcea-a39d25129112"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19269f20-06e3-437c-9808-adc9687116b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7820b0d-fbe4-451e-a2b8-34624c388493"
            }
          }
        ]
      },
      {
        "id": "99503cb0-240b-44ad-b54b-99d03c23ad4e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3c160108-8cc7-42bd-b086-a18d6770e767",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2834f1bf-6bcd-44f0-b927-d7669e92ebe2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9be629cf-dbd4-41ba-94ba-481c02284f81",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86166a61-79a3-475a-bfb1-b3304cea0f5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "461547f1-8d28-497c-ae27-2c6277ba2f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9717c20b-b76c-4253-ac3d-2dcddf81861e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe028128-c626-479f-963c-e09c986d63a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a97b6e4-6326-42fa-a04c-9168ca0feb8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a14c8723-a78c-4402-aa80-38667c9a134d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "993cc61c-7b9c-44a6-af3b-d7b787fed9aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "364b5a54-9bce-49af-b4e5-917b9a78d611"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5dc00f5-324d-493a-9b77-508da88e0baa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a9bead4f-7172-4eb2-9b0e-005e9bff453d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85d3db03-2a94-4b74-a79d-3ee22f946e28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a490a19-45e7-432c-87ed-0073ac8cd5d6"
            }
          }
        ]
      },
      {
        "id": "89c5a085-166f-4c39-aa07-5f74472ade61",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "705b57a8-d5d7-43be-b1e0-eb11b34f2a37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9f64989-7106-4032-aff4-77531c125a7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f14c5a3-bb45-47c8-a671-eb986d554fc9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260a8042-3d0e-45f1-ac75-b235a6cda1d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b56873d5-b3a0-41dc-9702-120d00c32326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c763b55-c398-4cd3-820f-a75232f3f04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf7ccf5f-dbcc-4bb4-b5cb-c0913bfa67c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3b943e4-7c21-4f28-93d4-c1041c942c8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d699d5b-132e-498b-892a-83a02dd385a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd732c94-cd7c-4ef0-ae21-6add6fb452e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5e2a6a7-8c42-4dff-b89f-cdc06abab9dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abea6399-089d-4132-bb16-81b10e343b95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64897097-24a4-4efb-b386-08584d6ea7c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3873661c-2309-46b7-ab8e-e6a7e864cede",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7880d956-a237-4c13-8283-954ea2d3d4a2"
            }
          }
        ]
      },
      {
        "id": "93a98298-cdfc-4093-9e8d-0e1a6a78e168",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfb06eb8-f7da-4b37-9f28-ce59f441a314",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "560c685d-f79e-48c5-8831-133225ee96f6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8ee08ae4-5cc1-4f2d-8ab2-67ed2918b86e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "035e5f69-b54e-4c9e-a7d6-a699367db38b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33202fde-f2a0-437b-a9bf-5b777bb21dc8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 127.35789473684208,
      "responseMin": 21,
      "responseMax": 4710,
      "responseSd": 366.33504698322247,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701045366249,
      "completed": 1701045411967
    },
    "executions": [
      {
        "id": "c01f67f7-4720-4d05-b2b6-084d83cd211a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bd7dc52c-5f2b-42fc-847d-e4aaa4c56cf6",
          "httpRequestId": "0921c3ba-77b5-437e-9d57-7a0bc80a16f2"
        },
        "item": {
          "id": "c01f67f7-4720-4d05-b2b6-084d83cd211a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ddd91d42-af16-4770-8a8e-355d216e8b03",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 0
        }
      },
      {
        "id": "4b1de8bf-18df-42ce-8149-5773c0c21913",
        "cursor": {
          "ref": "05954e7f-1ea2-46d6-b863-9dbc96d77868",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7144b117-4812-45a9-981d-858e2dcaebaf"
        },
        "item": {
          "id": "4b1de8bf-18df-42ce-8149-5773c0c21913",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "44c2e88c-8c75-4057-889c-5caaada12d03",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "49b89f9a-7b25-4e97-893c-90dabf2d92a3",
        "cursor": {
          "ref": "f092d889-59e2-485d-ba9c-27b7eadec19a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cc71c88c-7d40-42ae-bb5d-030f74604395"
        },
        "item": {
          "id": "49b89f9a-7b25-4e97-893c-90dabf2d92a3",
          "name": "did_json"
        },
        "response": {
          "id": "9375791c-dd41-4f22-9cf4-dacb08bbd8af",
          "status": "OK",
          "code": 200,
          "responseTime": 305,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d009b1c-8f9e-42a8-bdb6-470b94169c2f",
        "cursor": {
          "ref": "ce299196-3751-4ba6-90db-3514d5c990f6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6c1a5177-e782-4cec-8bf1-b46eacf81f59"
        },
        "item": {
          "id": "4d009b1c-8f9e-42a8-bdb6-470b94169c2f",
          "name": "did:invalid"
        },
        "response": {
          "id": "8e7d453b-836b-4086-80a1-30f342ac7041",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1033,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d009b1c-8f9e-42a8-bdb6-470b94169c2f",
        "cursor": {
          "ref": "ce299196-3751-4ba6-90db-3514d5c990f6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6c1a5177-e782-4cec-8bf1-b46eacf81f59"
        },
        "item": {
          "id": "4d009b1c-8f9e-42a8-bdb6-470b94169c2f",
          "name": "did:invalid"
        },
        "response": {
          "id": "8e7d453b-836b-4086-80a1-30f342ac7041",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1033,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7602bb-641f-4c39-8874-5c32c7dc6379",
        "cursor": {
          "ref": "36b99c1f-0f5a-4b5f-86a7-a149c0766067",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ce7b57b8-2f65-4a03-9e70-a20816a6d6fb"
        },
        "item": {
          "id": "3f7602bb-641f-4c39-8874-5c32c7dc6379",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "843e653f-cf04-4bcc-a1a4-50fdbed4ae7f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36aa2e8b-9828-49db-969f-e6f49283858c",
        "cursor": {
          "ref": "61e1eba5-7048-4286-87f6-404f94d36ee2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c71aebb5-79df-43c1-8e9e-a673a956e61a"
        },
        "item": {
          "id": "36aa2e8b-9828-49db-969f-e6f49283858c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7d31750a-95ec-4952-b446-ee5877deac4d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e099e79-f7ef-4aa0-b9ba-9ff954eca154",
        "cursor": {
          "ref": "ba784f9b-081a-4b19-802b-36928af39e1c",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "22b998ae-3918-43e9-8a45-91c3a237fd5f"
        },
        "item": {
          "id": "5e099e79-f7ef-4aa0-b9ba-9ff954eca154",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "735406a9-6818-4b0b-99f2-01ce794e12d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c93a206-cd55-4b9a-a152-8850612a0a34",
        "cursor": {
          "ref": "bd27a3b0-3223-46b6-94f1-ef0e452410bb",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5f033e16-1bcf-4e55-aab8-f64d95e6bf01"
        },
        "item": {
          "id": "4c93a206-cd55-4b9a-a152-8850612a0a34",
          "name": "identifiers"
        },
        "response": {
          "id": "29fe67e9-ab86-419d-a29e-9ccea89fadd7",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815db2cc-9150-44e1-b0c8-08fef890b5b3",
        "cursor": {
          "ref": "7e16d786-dc68-4ad0-88fc-fe468a63c273",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c21baaef-4bb6-40e2-8219-e0725941408c"
        },
        "item": {
          "id": "815db2cc-9150-44e1-b0c8-08fef890b5b3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8748d52a-0b75-423c-b814-02d52af2bf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f6d883-16a7-4800-a782-fc461a2b6095",
        "cursor": {
          "ref": "483a0ef7-f531-45e6-9eed-a2dcc37120b2",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "99405956-2766-4a65-8bfa-e6e194bb80f0"
        },
        "item": {
          "id": "c7f6d883-16a7-4800-a782-fc461a2b6095",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "578f2b2c-91fd-42b4-b66d-eb6d9a9e4e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fe6040-ccc3-43ca-b851-ff8c60d9e2db",
        "cursor": {
          "ref": "19a06f07-e311-4395-88eb-2fd518833312",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c98af954-c9b3-44a4-8c14-5a6bde60b2d5"
        },
        "item": {
          "id": "a7fe6040-ccc3-43ca-b851-ff8c60d9e2db",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e17f4141-b9aa-49b0-8bfb-b3f8c02d011f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7b2ca4-6080-4b81-8fdf-2766478e4379",
        "cursor": {
          "ref": "5a727bf0-880b-4328-97ef-6e65b0ca2f06",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "18b9693b-7ae6-4aa7-bc4c-719b37767990"
        },
        "item": {
          "id": "ea7b2ca4-6080-4b81-8fdf-2766478e4379",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "51b18310-c5f7-4232-9882-4dfff1542420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cd9f81-d1cb-4378-9de6-39148edc57ed",
        "cursor": {
          "ref": "026634d7-303f-40f4-b92c-f06a5e8b030d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "95ac8517-c577-4667-aa8b-0e7197d0cb12"
        },
        "item": {
          "id": "12cd9f81-d1cb-4378-9de6-39148edc57ed",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5ffca1ab-12b7-401e-8ea0-cfdc5844db3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581c7258-c89b-4155-953c-4f7b44bb95c6",
        "cursor": {
          "ref": "5c160667-9938-4744-899f-5bee6e2606c8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "11b851dc-809b-47a2-88f7-ac91b61b3475"
        },
        "item": {
          "id": "581c7258-c89b-4155-953c-4f7b44bb95c6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "25d1ce3d-14f6-44c2-a569-46232d267321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b4bc7f-2783-4ce9-be48-9fc3721190a2",
        "cursor": {
          "ref": "42c14990-bc03-4c61-bba8-c4155e26d951",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dc01ad3e-cc40-4f90-8f2e-7eef968b13aa"
        },
        "item": {
          "id": "26b4bc7f-2783-4ce9-be48-9fc3721190a2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e5df24e7-a39b-47ea-94a9-db5e4f55f86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8737cb-66aa-4d13-a622-8fae6beffe30",
        "cursor": {
          "ref": "e342dec4-1d69-48bf-90e5-728232b050e1",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2b26073f-9837-4534-ab7c-d0b437410050"
        },
        "item": {
          "id": "4a8737cb-66aa-4d13-a622-8fae6beffe30",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c4c32993-58a9-46aa-a6a7-c4d5d59c9173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4601a57-bb4d-4372-8bd3-2d51c60008a0",
        "cursor": {
          "ref": "cbc14b3b-d2fc-4ad5-8f22-6b6e7b6e5481",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c07146ce-509e-43e5-8629-a5aa0dda66ec"
        },
        "item": {
          "id": "d4601a57-bb4d-4372-8bd3-2d51c60008a0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "54a5e64a-ccfd-45e9-820c-6b2c8df06cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648b65e2-85fb-4239-acf5-6cd011358967",
        "cursor": {
          "ref": "2316190f-9356-4cb8-9b6f-34eb8f7233e8",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3396c642-cb96-4046-83fe-7cc12d28a09c"
        },
        "item": {
          "id": "648b65e2-85fb-4239-acf5-6cd011358967",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "955b8870-415b-49b4-a11b-19a5adf4e703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9010b2af-6681-44d7-8057-f267f6f6f732",
        "cursor": {
          "ref": "7cf7d8b8-f776-49d6-9484-0aa0e0d61f4a",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8ae4795c-aab8-46c5-839e-1f226f0b3c90"
        },
        "item": {
          "id": "9010b2af-6681-44d7-8057-f267f6f6f732",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e92b166c-fa0d-4b9a-b5b2-6014bd44bddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b76bd7-5f0c-488d-9606-d663d5fdeea4",
        "cursor": {
          "ref": "f9b96d4b-9c1d-4615-942f-d633252dd487",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "08eb27dd-4e6c-4a02-9068-8c1296f89285"
        },
        "item": {
          "id": "18b76bd7-5f0c-488d-9606-d663d5fdeea4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fab235c6-053c-4cc4-a7c2-d2c899ae2946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67b963e-00fe-4a75-af0c-7c4e289784f0",
        "cursor": {
          "ref": "a82633f1-9907-488f-97a9-fae44b54360d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c1a2502a-c226-477e-b40a-6bfaa1f3d1ff"
        },
        "item": {
          "id": "c67b963e-00fe-4a75-af0c-7c4e289784f0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3199d2c0-1971-4640-9dc1-2997733572b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ec44bc-5181-42f6-b1ce-d84087679bf1",
        "cursor": {
          "ref": "f54a4bf5-6312-4aa4-a35d-0f5ed928d236",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b2f7d1da-f319-4375-b324-8d44e4bf2201"
        },
        "item": {
          "id": "25ec44bc-5181-42f6-b1ce-d84087679bf1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "14a369a0-e71f-4de1-ad5d-c798d1867d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b4d7e6-55aa-4448-b15b-56257d0810b0",
        "cursor": {
          "ref": "0600aff3-61bc-45b1-9958-d425df69eccb",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cb259252-14cf-435d-adb8-c550d17f8d14"
        },
        "item": {
          "id": "a8b4d7e6-55aa-4448-b15b-56257d0810b0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "df7808a9-4ee9-4267-9afd-fddee278dd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fd9d64-3bc0-4b89-8fa8-d09023689dd5",
        "cursor": {
          "ref": "47538de3-21f6-43dc-b5f8-a69bca1a419b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "577e67bf-28e2-439c-b8d7-996475243422"
        },
        "item": {
          "id": "79fd9d64-3bc0-4b89-8fa8-d09023689dd5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c3f8a571-c3eb-4432-b746-6e99cb716f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d721da4a-5bdc-41e4-baa4-9aa60e24b82b",
        "cursor": {
          "ref": "282d7517-31e8-48ca-b7eb-9804c95510f3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ab80df19-d70f-4916-84d0-24ce2b7fd197"
        },
        "item": {
          "id": "d721da4a-5bdc-41e4-baa4-9aa60e24b82b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3ea42dd1-7278-4439-a4cb-995edcb7530b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af03d73-0d0c-4404-827c-7c16dadd9ca9",
        "cursor": {
          "ref": "8dd4eacf-61b7-4fd2-bd1a-2b40c39af8cb",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "67c7db3b-fd6a-46f7-886c-eec17a62e0c4"
        },
        "item": {
          "id": "0af03d73-0d0c-4404-827c-7c16dadd9ca9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f08e4507-f5ae-4fab-894f-58c7ac50767d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ca57d2-a4cf-439a-9d6a-3e4af5a53eda",
        "cursor": {
          "ref": "a470a8a6-f1f2-499f-91df-1b66e37fc7a6",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "82ee65e8-202e-45a2-9f45-3bb2d8b7fa58"
        },
        "item": {
          "id": "20ca57d2-a4cf-439a-9d6a-3e4af5a53eda",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "db220695-8f9b-4be6-8a5c-7394e150d624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9bf46a-1563-44e6-87ec-28cbb4694be5",
        "cursor": {
          "ref": "ea1a1cd1-48ca-404c-9a32-2732c76f699e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "13291f26-b717-42bc-8c77-b907d38d19bb"
        },
        "item": {
          "id": "3b9bf46a-1563-44e6-87ec-28cbb4694be5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "366a6217-def0-447a-adbf-4c4da7f280cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd13b5be-40f3-41ad-9ffb-a708cf037bf3",
        "cursor": {
          "ref": "3dde6e18-9788-4234-a9b9-95149ca54c19",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2e3af2a9-4bbf-4462-8294-a2a4dfcd98f6"
        },
        "item": {
          "id": "bd13b5be-40f3-41ad-9ffb-a708cf037bf3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "31f03b1b-eed2-41c0-96b3-841c35531856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed81199b-594e-4142-b75c-cef24765ba5e",
        "cursor": {
          "ref": "070cf36d-48dd-4ab2-9bf0-d1b2daa9b655",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "997cd53c-6d6a-4cf1-b68b-ef43f3157c4d"
        },
        "item": {
          "id": "ed81199b-594e-4142-b75c-cef24765ba5e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9c471f7a-f8f9-4cd0-91d8-58c818764cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33371724-90b1-4bf2-9bd2-ea2cd17fba03",
        "cursor": {
          "ref": "314ed5cd-6215-4322-844e-d6cf89f1c65d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c88927e8-7270-4b51-bc14-871f07d64013"
        },
        "item": {
          "id": "33371724-90b1-4bf2-9bd2-ea2cd17fba03",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "13428fb2-e4e4-4b62-a3e3-c088da24090f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0085725b-f771-47c9-b5c1-fefd7767c01e",
        "cursor": {
          "ref": "d15bdc1b-18e0-453e-b0a8-8acd1ed8364c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "63e57e69-850a-4034-9009-c3d23d075a05"
        },
        "item": {
          "id": "0085725b-f771-47c9-b5c1-fefd7767c01e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "651dcec3-ef04-4410-ab02-95826529e333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b62849-6c15-4c35-9565-7a654d442ff6",
        "cursor": {
          "ref": "2c53820a-0a08-42ea-b2d8-f96f0775523e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8a723395-f24e-4c57-a7ab-eb52d51967e4"
        },
        "item": {
          "id": "67b62849-6c15-4c35-9565-7a654d442ff6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0b4ea0d2-8de4-4be2-9b07-9d5f8116a575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c910a3b2-7e7b-458a-86a9-f00ae40865ed",
        "cursor": {
          "ref": "75bbb7fa-2694-4b05-9afa-46ff6e82f5bf",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "be91f5e1-f49b-4147-8505-865b02597df9"
        },
        "item": {
          "id": "c910a3b2-7e7b-458a-86a9-f00ae40865ed",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "248baa32-586b-4703-942c-07b75d371247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c4f0c9-4f5e-4103-b62a-926716c954da",
        "cursor": {
          "ref": "c452f77a-7dd5-4a12-8b29-6d0864a24aeb",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3b5429ed-a7d6-4a67-b93c-eb33bce427a8"
        },
        "item": {
          "id": "91c4f0c9-4f5e-4103-b62a-926716c954da",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4412be18-8795-46e2-a77b-9223086df124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01448ba1-716e-470e-9cde-820efe3e44d5",
        "cursor": {
          "ref": "c20ceb2c-1a2a-4027-a114-0cdcf8505adb",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9a2a4c60-4e78-410f-9edd-af9fdbe231aa"
        },
        "item": {
          "id": "01448ba1-716e-470e-9cde-820efe3e44d5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f957daa9-0781-4f4b-b75d-fbf5c16fa573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88edf802-bacd-481b-bb62-68853af9bf21",
        "cursor": {
          "ref": "ec09af83-7602-4955-a529-c46b7820cbb4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dec1ef8c-a819-444f-b831-6286bbee81d0"
        },
        "item": {
          "id": "88edf802-bacd-481b-bb62-68853af9bf21",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2e1c4c64-713b-4000-8dbc-26f6615797ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc63ea6a-7ec6-4d6b-8c5b-49abf91ba593",
        "cursor": {
          "ref": "0bd724b4-e803-442a-8056-0224efdd7b6e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "de3cf138-0657-4978-8006-41ce724934cd"
        },
        "item": {
          "id": "dc63ea6a-7ec6-4d6b-8c5b-49abf91ba593",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "05bf62d6-ba34-4124-9c12-8e469c4e86ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e252e85-3584-4692-bc3c-303beca1030b",
        "cursor": {
          "ref": "71ae3307-d39d-4ee6-8ed2-73e0475d908b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7d566950-0aff-4c91-85de-759501fd48ea"
        },
        "item": {
          "id": "2e252e85-3584-4692-bc3c-303beca1030b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c84054f9-a52a-41c0-b70b-dfa987ba8e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8223c3-a1ec-4d31-bc80-cbe78ce495ba",
        "cursor": {
          "ref": "d37fd4bd-7b01-46fd-aa87-90a50bf6237b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e797b54a-6051-416e-a935-a1e36bd5f7eb"
        },
        "item": {
          "id": "2f8223c3-a1ec-4d31-bc80-cbe78ce495ba",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9dc4dd9b-a39b-4912-affa-d7c237424e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678a1b14-f3dd-4838-8d93-8d6485f14b4b",
        "cursor": {
          "ref": "ce8f9451-f77e-4a90-bcfe-8a0a713f605d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0c191e2e-b6a6-477e-94f6-16aa062942af"
        },
        "item": {
          "id": "678a1b14-f3dd-4838-8d93-8d6485f14b4b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "35e27989-50b4-4c5a-9f22-f58725b89938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b00d72-9f5e-4e5c-8901-1754db88ee69",
        "cursor": {
          "ref": "6d7b6c99-6d2c-4526-b6e4-4232939affcf",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5b06ab9c-49c2-47c4-a21e-8db487a48723"
        },
        "item": {
          "id": "64b00d72-9f5e-4e5c-8901-1754db88ee69",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7e82482d-d3da-4f8d-9847-397604203cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e2a3b7-48a3-44e8-ab7b-5b66a6cd8d9b",
        "cursor": {
          "ref": "6608aab8-d50f-493c-9c6c-206cef5172bd",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1b49f7f3-3b2f-4b1d-acef-cfdb0f2b354c"
        },
        "item": {
          "id": "f7e2a3b7-48a3-44e8-ab7b-5b66a6cd8d9b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "608a6c23-429b-4ce7-8818-8d4e351f39b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad372d2-55e0-455d-a4a0-1ed03c7a467b",
        "cursor": {
          "ref": "63c5ee08-ddff-489c-9fd7-e85cfd3bc263",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "16675b4b-0729-44a4-b8e2-ff1cab826aaf"
        },
        "item": {
          "id": "bad372d2-55e0-455d-a4a0-1ed03c7a467b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ab7cca28-7d3d-45a0-bd11-62426610738d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5746ba53-db67-47ba-a7e0-ceff6c8e8be0",
        "cursor": {
          "ref": "9e1c382e-23d1-4349-8633-448a95d82986",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "efe3a6ba-426c-451d-bd4a-6496afc6d5c0"
        },
        "item": {
          "id": "5746ba53-db67-47ba-a7e0-ceff6c8e8be0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b161e8b6-ebb6-4c3e-b235-46b162aa4535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d204d41-7552-4efd-89ba-c8f924560ffe",
        "cursor": {
          "ref": "e52dbaed-21af-4015-a29d-2aa26fcde015",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "80c9bc96-85d4-4af1-9e65-0f066b2fa0bc"
        },
        "item": {
          "id": "1d204d41-7552-4efd-89ba-c8f924560ffe",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "54c5d702-955a-4546-aa81-8a170d8c5d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758507b8-49e9-40a1-bb74-4e7736ef47f2",
        "cursor": {
          "ref": "51e27f76-34c0-4fef-aec0-8a058df44224",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a303e167-f24e-4feb-839d-e1bc1aca3081"
        },
        "item": {
          "id": "758507b8-49e9-40a1-bb74-4e7736ef47f2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a4017124-25f7-40b9-a76d-179c9895cebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77c7639-070a-46bd-aa80-863f0c1436dc",
        "cursor": {
          "ref": "4bab7774-a760-4f15-a40a-0e686cd00166",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e518fcc6-7d06-4385-a856-d65a3146db86"
        },
        "item": {
          "id": "f77c7639-070a-46bd-aa80-863f0c1436dc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c8d91818-7d66-4903-8e73-a51d4a258c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5b495d-c72b-44c6-aaa4-08f03d4fd428",
        "cursor": {
          "ref": "4b4992ca-8c7a-4ae5-97d4-309a3516c478",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "165f1f6f-fc79-4d76-b215-1ec6c1fd0acf"
        },
        "item": {
          "id": "ef5b495d-c72b-44c6-aaa4-08f03d4fd428",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cdfb0b5d-0007-43b8-9503-13a3a6a63e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4256d2-1f24-4600-b4b2-40a3c9e124f7",
        "cursor": {
          "ref": "f4b0e5b2-f521-4e2b-94f8-169a74c67225",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3e57ff8d-f9c4-4fdc-9845-8ec6328e7f3b"
        },
        "item": {
          "id": "2c4256d2-1f24-4600-b4b2-40a3c9e124f7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8e38ba06-9fb7-4c10-9ede-70d07651eb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4778c1f4-51d9-495d-aecd-aa28d9d782bb",
        "cursor": {
          "ref": "60265698-a2f9-4473-bc78-8c8581d8b3dc",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e0757568-f5bb-4b95-a342-c71a0084a2fc"
        },
        "item": {
          "id": "4778c1f4-51d9-495d-aecd-aa28d9d782bb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2668a866-ea0b-4d66-89e4-da37e5a3934b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad4edd1-c0a4-41fd-91c7-efceb339b0f3",
        "cursor": {
          "ref": "38209f7f-5a43-4910-b437-f3f900e969c5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d580f064-ae5d-423c-9c84-69eb3e49c88a"
        },
        "item": {
          "id": "2ad4edd1-c0a4-41fd-91c7-efceb339b0f3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d2d32ab6-51f6-48c8-b7ef-eb874bcc29b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b289c61e-63e2-4cdb-8fea-d36b0022b749",
        "cursor": {
          "ref": "1a879557-4578-45e4-b784-425117e8e571",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "98596b0f-3b61-429c-b9ab-4e683de31a99"
        },
        "item": {
          "id": "b289c61e-63e2-4cdb-8fea-d36b0022b749",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a273920c-81de-426e-9d29-2eda6ebc4051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ae6a1e-b11e-424f-ad4a-9447326a92e6",
        "cursor": {
          "ref": "575fc4ee-b7c3-4f09-92dd-71cbcb17be9c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c09acfc4-c39e-461c-bfbd-5089f37e17c6"
        },
        "item": {
          "id": "49ae6a1e-b11e-424f-ad4a-9447326a92e6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "84555575-d808-4e63-a5a5-49e4efdfe4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3e1dfd-44ad-43b3-92a2-fe7801f7b4e0",
        "cursor": {
          "ref": "e654704a-3910-4f54-93e9-39d22f3c241c",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "25fb2ebd-382a-42d3-9613-34f0de7b2b23"
        },
        "item": {
          "id": "5a3e1dfd-44ad-43b3-92a2-fe7801f7b4e0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4e1a64eb-ad1b-4086-8dce-0c87103479f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7394706e-d63e-447a-9a90-124f245f889e",
        "cursor": {
          "ref": "a9d2d4bb-62c9-4ac3-841d-79e411a27fc2",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cf4afb2a-fd86-44b4-8dde-f780cf2754ca"
        },
        "item": {
          "id": "7394706e-d63e-447a-9a90-124f245f889e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b3095325-8b7b-4a54-b6ea-803b4a45e11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bc3b44-b3d6-415a-be1c-66ee4f1d771f",
        "cursor": {
          "ref": "177ca57b-58c8-4624-b2d3-4bbfcd5bafca",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b83bbfa1-845f-4613-bb54-0a6645c084b2"
        },
        "item": {
          "id": "18bc3b44-b3d6-415a-be1c-66ee4f1d771f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f52a14ac-0f0e-472c-bf7a-20d13a571000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0448e3dd-007d-4d57-b3c1-5d6d26ff8989",
        "cursor": {
          "ref": "2479c41b-76f7-4fbd-94a3-2caabad96c48",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "27ec852b-902e-4edf-9eac-e564bf6d9479"
        },
        "item": {
          "id": "0448e3dd-007d-4d57-b3c1-5d6d26ff8989",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9ce0fdf0-3008-48a4-909d-acf4234dc399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad64ce83-ad40-4d43-9399-53ece33fdcd6",
        "cursor": {
          "ref": "2da43aff-01a3-45df-a131-7ce2373d98f7",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "29d5d092-bc8b-4a99-a555-c5eefff4f6c4"
        },
        "item": {
          "id": "ad64ce83-ad40-4d43-9399-53ece33fdcd6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b1dd8f2e-2df1-4084-b30e-f90fb23fad6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac04ff7-a255-4f31-a401-19fd25dd5bd2",
        "cursor": {
          "ref": "00eedfba-826b-40fe-b9fe-fb0c61768154",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "99fecee1-b2c2-4ba1-ae89-6c5eb9b58058"
        },
        "item": {
          "id": "2ac04ff7-a255-4f31-a401-19fd25dd5bd2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d3069784-c856-4dd0-9d6c-78248003a620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccef398-f875-4e6c-bbad-0b09fbe7c8e4",
        "cursor": {
          "ref": "f5c3aabb-5c2e-4559-a5bd-ccea617947e8",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "98233c9a-55f9-4a2f-ad5c-b3313732ef3d"
        },
        "item": {
          "id": "8ccef398-f875-4e6c-bbad-0b09fbe7c8e4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "21a8f0a9-dad7-4058-996e-98f5b553c24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841a7480-77a0-47d2-babc-922371649af0",
        "cursor": {
          "ref": "55c1f837-4032-4ea6-90c0-b43542cbe7fd",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1749ee0c-677a-4dee-b3ab-7f465ca27e68"
        },
        "item": {
          "id": "841a7480-77a0-47d2-babc-922371649af0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "89804ad9-92c5-4f96-875f-5260c0867c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b01a200-af4a-4893-b954-23ac3f4ec142",
        "cursor": {
          "ref": "e9d8ee5e-0884-416b-8604-0ccb527f0d3f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "14e37bbf-8026-4e8e-9556-70987352dbe8"
        },
        "item": {
          "id": "2b01a200-af4a-4893-b954-23ac3f4ec142",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2524e09d-a25f-4b58-9b2c-4a45131886b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6337f2-971c-4e60-9d0c-0c4a5d602723",
        "cursor": {
          "ref": "5343687e-d365-490b-889a-383f313321f2",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c6e668f7-3756-4754-a456-9315eba9026e"
        },
        "item": {
          "id": "1b6337f2-971c-4e60-9d0c-0c4a5d602723",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "24614aec-52c2-4a22-a36e-c703946a7649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec80f2d-de0e-4340-a381-1e6fdc29126c",
        "cursor": {
          "ref": "8da2be8c-2713-4e88-9b66-e2eaf3df63e7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "28e09cb6-92e0-479c-ae32-b5c4eaec8828"
        },
        "item": {
          "id": "7ec80f2d-de0e-4340-a381-1e6fdc29126c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "90920895-2c02-4bc6-a37b-9c097cccb310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a78705-e036-44fe-861d-d954f3f15a87",
        "cursor": {
          "ref": "a8ed6882-c2a3-4a7a-ac2e-060d3bc839c2",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "805f184b-81f4-4fa1-8c9a-4748ceadff08"
        },
        "item": {
          "id": "d2a78705-e036-44fe-861d-d954f3f15a87",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "30f67e7f-5c21-4859-af50-dbabc6a5489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7bb844-137f-47c0-95be-52dbf99ed01c",
        "cursor": {
          "ref": "c45a0716-7752-48bc-a359-c43fe437891e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bd6e423a-16b2-45d5-9202-2db8acc1f4b1"
        },
        "item": {
          "id": "0a7bb844-137f-47c0-95be-52dbf99ed01c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4a106d7d-95b0-4ac3-b44a-beca3b0050bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9299eac5-688e-4b38-9a61-3f888bbe923c",
        "cursor": {
          "ref": "bdfa9045-bd40-423e-9862-5302665dac00",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "97789b91-cb90-4a0f-89a1-968d5f12c503"
        },
        "item": {
          "id": "9299eac5-688e-4b38-9a61-3f888bbe923c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2dfafb16-15f7-4f0f-9883-add9ac51abe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cef775-0c16-4ecd-b216-86fd7536c000",
        "cursor": {
          "ref": "f22ffd5c-feaa-429c-b3d5-5303b411af57",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a5100758-107f-43a1-9f9c-e58c096f2ccf"
        },
        "item": {
          "id": "a7cef775-0c16-4ecd-b216-86fd7536c000",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c7bbccec-03d7-460e-939d-d66c15dbfd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7440bd6c-a4e1-4051-a341-82f1cef52067",
        "cursor": {
          "ref": "d3dfff4c-f743-411b-9784-d14834f14840",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "361b47cf-a170-4c93-bffa-922cc0934c7e"
        },
        "item": {
          "id": "7440bd6c-a4e1-4051-a341-82f1cef52067",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4d5f5e2d-7b0a-40ff-905d-bd6f1c9afcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1428aa-8dce-4a76-b042-97110c1808f5",
        "cursor": {
          "ref": "59220a84-2d7b-458b-936a-f6a49aece63a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6846aff7-a3dd-4db8-a345-102c2c2b5c37"
        },
        "item": {
          "id": "1a1428aa-8dce-4a76-b042-97110c1808f5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e0dee84a-d747-4674-bfde-428e9d50362f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f84fae3-93f1-4a0d-bce7-0c2f1e95ef58",
        "cursor": {
          "ref": "fe75858c-f5af-46b3-bf0e-12f63b4d643e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fc350443-e736-43d0-961b-d066719327c1"
        },
        "item": {
          "id": "4f84fae3-93f1-4a0d-bce7-0c2f1e95ef58",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7fa3ec9b-33f3-467c-a03e-33f071edd678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a757ee28-606d-4268-bcea-f3f4ac2f515a",
        "cursor": {
          "ref": "140b5d01-7a89-4122-b4bc-4b9a137b802c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "49a22adf-1a2a-4271-b0a2-e502fb22be56"
        },
        "item": {
          "id": "a757ee28-606d-4268-bcea-f3f4ac2f515a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "265414a9-cfe5-4bdd-bf50-f60f178bd54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab61dc55-3a4a-4d4d-9194-ee8989330641",
        "cursor": {
          "ref": "3ba2a35e-0433-4c4b-96a0-d9b34be58b71",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "66784511-7aab-4aaf-9b17-abdb08685138"
        },
        "item": {
          "id": "ab61dc55-3a4a-4d4d-9194-ee8989330641",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "efbebb60-546e-4d60-8a14-10ebcdc907e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57523eef-29d0-4567-a90c-7426235c0a60",
        "cursor": {
          "ref": "338a1083-f501-4139-866d-5c1ef47d4906",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "63bd9a1d-b8a3-4acc-b9cc-d15e48301442"
        },
        "item": {
          "id": "57523eef-29d0-4567-a90c-7426235c0a60",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4a0ad776-1ab4-4bc8-8da3-5b6735fb5e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625a5a3f-aa47-4c97-b0b3-30c029fe598a",
        "cursor": {
          "ref": "2227bff7-a0f6-4db1-a1e8-8570de438c0a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "783efced-9108-4774-98d9-41d025694b34"
        },
        "item": {
          "id": "625a5a3f-aa47-4c97-b0b3-30c029fe598a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "30edd587-45bd-4026-bc6e-2c2f5d3f8a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfd14df-5bb1-4f10-809d-cbf261b47904",
        "cursor": {
          "ref": "52b09335-ffe6-412b-a68b-00194d1e610d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7f54b485-f3d4-4fba-bcb9-78bea4a79a46"
        },
        "item": {
          "id": "4bfd14df-5bb1-4f10-809d-cbf261b47904",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3f765c71-36db-4045-a1f2-3583cab422a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a6d6fb-0285-428f-9160-ddd038250702",
        "cursor": {
          "ref": "d52ac6e2-86b7-4f75-9d40-bcc736bc1a9a",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d8133c2c-626a-488c-9a66-f95a8c9aa890"
        },
        "item": {
          "id": "30a6d6fb-0285-428f-9160-ddd038250702",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fe752d1d-a2de-43a2-813d-0e53304c6bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7fee01-34d9-4990-a493-b2da05ad0c40",
        "cursor": {
          "ref": "dd48b73b-f5e9-4502-b287-36fdc2736a7d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c210fd84-5291-4e2e-8572-418273408252"
        },
        "item": {
          "id": "6c7fee01-34d9-4990-a493-b2da05ad0c40",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5d64614d-ef2f-447f-911b-1f724738e8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5e400c-a729-483a-8af1-d00ddf483a17",
        "cursor": {
          "ref": "616bd375-7dc0-4054-b573-73ef59637679",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7b91428d-00ce-4544-81cf-3fb91ca20bae"
        },
        "item": {
          "id": "6a5e400c-a729-483a-8af1-d00ddf483a17",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "465e8c73-98f2-43d9-828b-dd55aa100781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11435fed-c3de-4db4-b0d9-7c9c3443d9d3",
        "cursor": {
          "ref": "7a4f12ad-31bd-418f-b1b7-b6d6c5db09a7",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "690660b9-6db6-49a9-b1ed-ac5a83cbf234"
        },
        "item": {
          "id": "11435fed-c3de-4db4-b0d9-7c9c3443d9d3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c4a21956-6192-4b38-92e0-401fb512cd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570c96e8-1edf-4598-b67e-82a0fdad145a",
        "cursor": {
          "ref": "75bcbc4d-d0ea-4462-8b04-b6080314a0d9",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cf358175-6f1a-4d0d-a723-6770f7d8e080"
        },
        "item": {
          "id": "570c96e8-1edf-4598-b67e-82a0fdad145a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "443975a5-8069-462f-9612-cfd5454e65f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada59556-a0f6-4186-a6fe-094abd429a58",
        "cursor": {
          "ref": "dab4ab52-3136-405e-be79-2ae7df938ae0",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1169efde-5ee4-421e-969b-eeafea9b72f8"
        },
        "item": {
          "id": "ada59556-a0f6-4186-a6fe-094abd429a58",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4f548b64-01d4-431e-821a-601f1a995d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7d4664-dd70-4606-a601-9fd0ad866371",
        "cursor": {
          "ref": "e7dc14bd-eee0-4ab8-8c9f-252da436ebe9",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "72e466b7-1773-49cc-ae00-ae1d8466e4ca"
        },
        "item": {
          "id": "0f7d4664-dd70-4606-a601-9fd0ad866371",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e71e63eb-8bed-4384-adc2-e0fc11675120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b041d6cd-911b-487f-b8a4-f4ab308ab1e5",
        "cursor": {
          "ref": "6d757bec-5e9b-49a7-a656-105cd9f3cee8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "77447ac4-416d-4ef3-8102-beac3e7b3d1c"
        },
        "item": {
          "id": "b041d6cd-911b-487f-b8a4-f4ab308ab1e5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "eb80c447-253d-4219-ac1a-0ca84513376e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7824358d-a641-4b54-bd46-ed3648b88e19",
        "cursor": {
          "ref": "55dc9834-b072-49a6-a01c-522cb6f9e5c1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0ec3b601-32e2-47dc-b08e-4fa19207d7e6"
        },
        "item": {
          "id": "7824358d-a641-4b54-bd46-ed3648b88e19",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3770cb80-1eba-4593-b864-c464e9c01e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918efdde-69e3-4abc-9084-ef08e8016944",
        "cursor": {
          "ref": "1bf5d48f-716b-4dc1-a4e8-883087a03ac8",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e9147e13-903f-4f9f-aa5a-ce900d7aab89"
        },
        "item": {
          "id": "918efdde-69e3-4abc-9084-ef08e8016944",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "57ed6bae-f4ec-4378-8a2c-b4d79d09da27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9690f684-33e2-4eaa-95a2-d89e8b7bd332",
        "cursor": {
          "ref": "d90c52d4-b3e1-4bbe-9bac-5c1ec34f1f15",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "266f9adc-6313-4481-b131-384567180f89"
        },
        "item": {
          "id": "9690f684-33e2-4eaa-95a2-d89e8b7bd332",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9bc01161-99b4-43ab-b1a8-d81dfae0a55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eece8f5-12b3-412d-9fa0-12f862b5fc9c",
        "cursor": {
          "ref": "1bb5529b-014a-469e-950f-a28a151cd3a7",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fd28a9e4-c02a-4e41-be47-8998ded28a46"
        },
        "item": {
          "id": "0eece8f5-12b3-412d-9fa0-12f862b5fc9c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fe6e11c5-40b5-4eda-864c-c7df9f232f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339ac2f2-21ca-4634-98a8-8a178f995dbe",
        "cursor": {
          "ref": "03cfab7b-6817-4e72-9666-3f470de60c6b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bb2dbe3b-2bc9-4819-bb0b-7f62272dce6a"
        },
        "item": {
          "id": "339ac2f2-21ca-4634-98a8-8a178f995dbe",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1da406cf-9ed5-4ca2-b7b4-5d725cc31e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdd10c8-d046-410b-97f9-7cb6a943b616",
        "cursor": {
          "ref": "f23d2eea-c52f-4d01-95bb-32d7d3cc343e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b662b5a4-5850-42fe-a134-6474ff661fee"
        },
        "item": {
          "id": "8fdd10c8-d046-410b-97f9-7cb6a943b616",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f84994a5-f380-4d4b-a7bb-b1fe15de3288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c431ca-1b83-477a-b079-cd646050b662",
        "cursor": {
          "ref": "bd8994e9-efcd-4d0f-9a68-cc4697040e0f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9e837636-ab35-43d5-8cc2-70949a87a1ee"
        },
        "item": {
          "id": "d6c431ca-1b83-477a-b079-cd646050b662",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3b2a4048-7639-4f0f-9bc7-37d5dc00be96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120ba498-614a-4c4a-b168-d5dc21b28d6f",
        "cursor": {
          "ref": "9ce9901b-293d-43d8-84ef-802c6ea3788b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ed4e9db7-a759-48e5-85a7-9e463780a8b8"
        },
        "item": {
          "id": "120ba498-614a-4c4a-b168-d5dc21b28d6f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "18faec3c-1742-467a-87c5-055fb1711c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb5eb00-3d0f-42e9-a8a6-647b3d7a7c4f",
        "cursor": {
          "ref": "6aef6ed3-3083-47e8-8c2b-00e09e7d0dd1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "16ce49b3-c680-483e-9c3b-a6ab9d42bdc9"
        },
        "item": {
          "id": "edb5eb00-3d0f-42e9-a8a6-647b3d7a7c4f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b31a8c41-58a5-4b65-9f1f-90da849a91af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1a9f48-3bf6-4f74-bc64-f53227f0f116",
        "cursor": {
          "ref": "77c66cce-def4-4964-bec1-dba282572336",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5989e43f-fd59-4862-b0df-141af38a8dc8"
        },
        "item": {
          "id": "bb1a9f48-3bf6-4f74-bc64-f53227f0f116",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2e22c943-0b96-46d9-88e5-e0ddebd8e7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4e79b3-c593-4609-a459-37eb4a423ff8",
        "cursor": {
          "ref": "48003fbc-9075-4912-b035-6669aadd4031",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e51218fa-4e2d-41e1-a0ac-8ddbea93d58e"
        },
        "item": {
          "id": "ba4e79b3-c593-4609-a459-37eb4a423ff8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "70a67760-7043-43db-a996-16848e880e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f19bf2-f45b-4504-8bfd-e7ea6cb989a0",
        "cursor": {
          "ref": "cd5b4fea-a16e-478c-97f0-e2b390ead27b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "18302aaf-937f-4f2a-ba61-7a728bdc0826"
        },
        "item": {
          "id": "51f19bf2-f45b-4504-8bfd-e7ea6cb989a0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cca3a8e7-4f60-46fb-872f-39418e8b7156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda97bf8-caae-4d46-ba61-ab89a5eab950",
        "cursor": {
          "ref": "d0be4ca9-931f-4839-8fc1-030020c66aec",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a2b329ac-2cbf-4b75-a1c1-232bf27b8ada"
        },
        "item": {
          "id": "dda97bf8-caae-4d46-ba61-ab89a5eab950",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9ce82250-a474-4ce9-9081-8b21c538878e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cecb11-bc17-44fd-8d79-2fb4f33e8c31",
        "cursor": {
          "ref": "fea880be-2a4a-4480-a1f5-f28b4ea9b6ab",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d325aa62-657b-4cb3-aac3-9e1bc9baa83b"
        },
        "item": {
          "id": "65cecb11-bc17-44fd-8d79-2fb4f33e8c31",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3e783cc5-8626-4e06-bb44-1e7a351f19cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff66683-160d-4c81-ae88-0cebdb009b07",
        "cursor": {
          "ref": "fed1eda4-906c-446d-8fe4-05fd7a532a0f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c9eb430e-8fed-411f-bc83-af81c28b62af"
        },
        "item": {
          "id": "aff66683-160d-4c81-ae88-0cebdb009b07",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "55b81c4d-2098-4a27-9bfc-29436808e3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8df316-ee18-48d4-b56d-653818ad1440",
        "cursor": {
          "ref": "fe8f748e-3dfa-4df1-ac61-b9ef60275be3",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "32140e4f-641b-47f2-9dde-62c1e2eb88df"
        },
        "item": {
          "id": "8d8df316-ee18-48d4-b56d-653818ad1440",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dc360a94-c923-4fe1-90b7-1d9792cce7ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c72b0f-6820-4960-baea-cf6d29016afd",
        "cursor": {
          "ref": "5e660759-2976-4f67-a304-adc168dbe92d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "01f8552b-a73c-4ce2-9bc8-1e311d4305b7"
        },
        "item": {
          "id": "64c72b0f-6820-4960-baea-cf6d29016afd",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4d98f621-94a8-4ee8-9dcb-13e3656b28b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "140ab26b-6b7d-4d02-9010-ac2a4eb17dbd",
        "cursor": {
          "ref": "06d7c4f8-e271-483e-8c3a-1b19e25a2de7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2534d7f9-e5b2-4d0a-8d65-fcb36a929a75"
        },
        "item": {
          "id": "140ab26b-6b7d-4d02-9010-ac2a4eb17dbd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4f9de584-b7de-49b1-be27-79b1ee2a9658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4fde5a80-b43b-4a1d-9bfd-95269b8705dc",
        "cursor": {
          "ref": "6eaaa41f-5efa-4a5d-85e9-35bd8c6581cb",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3b3ac121-1b94-4b98-a4f7-8f0d39338647"
        },
        "item": {
          "id": "4fde5a80-b43b-4a1d-9bfd-95269b8705dc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fb9f456c-a628-4a22-b5b4-6fa50f794fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0e0b1872-a7ee-43cf-8221-0b4169098481",
        "cursor": {
          "ref": "42cf9c91-193d-4d19-b2e3-e0da90c3067a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d3f0ef84-3d06-4c99-adfe-341527ad07ec"
        },
        "item": {
          "id": "0e0b1872-a7ee-43cf-8221-0b4169098481",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f73aa994-f0d5-43a4-8d23-13d6d45b7617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7b28a156-7693-47d1-aadf-e3c6f4e85e8f",
        "cursor": {
          "ref": "c3394b34-465c-4751-ae6b-5082b4a7fd18",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c1affcd4-40a5-4dc9-9ef8-1d10de1f496b"
        },
        "item": {
          "id": "7b28a156-7693-47d1-aadf-e3c6f4e85e8f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "52772c87-e15d-4b26-93b3-e66591a09119",
          "status": "Created",
          "code": 201,
          "responseTime": 4710,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c44813e-d4f5-4567-bd59-678f5bdecc3c",
        "cursor": {
          "ref": "8f41b689-378a-4566-bc9a-068a16ee1cd4",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "07feccb2-0b58-42bb-badd-ad4d3a0d42b2"
        },
        "item": {
          "id": "0c44813e-d4f5-4567-bd59-678f5bdecc3c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3d477c2f-61fa-4bb3-bdb5-ebfd8e275489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4e04dcc4-cd51-4b52-aafb-b57b75373f0d",
        "cursor": {
          "ref": "d5c5d83c-3e5b-4011-b5c7-1b464a1921d2",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6b9b836e-cc73-4541-8503-7ce8f9525017"
        },
        "item": {
          "id": "4e04dcc4-cd51-4b52-aafb-b57b75373f0d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ab2c2c1e-c021-4f5b-858b-0d914cecb3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a6bef53e-ec03-4743-8839-b292ca192b0d",
        "cursor": {
          "ref": "880956c4-1856-45ec-915d-2edb0108e607",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "58c2d698-8a73-4a69-92c7-da95bd8f70a5"
        },
        "item": {
          "id": "a6bef53e-ec03-4743-8839-b292ca192b0d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dabcea5e-e250-4437-b9f4-ce4c9f5740be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58dfe92-f9a1-4cd4-ac25-3384c6fe9691",
        "cursor": {
          "ref": "b4016162-c63c-489f-af54-c9b4015c7c1f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "26522f45-2375-4e54-8c39-a732c912b8b2"
        },
        "item": {
          "id": "e58dfe92-f9a1-4cd4-ac25-3384c6fe9691",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bf59e132-1acc-4667-99e9-4e5d5f36f966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a91b74b-0328-4ea1-8acd-f8af70ee6c10",
        "cursor": {
          "ref": "4ede1ff9-bbc2-42f7-b9cb-66bf246a87d3",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d3e4ea36-ee39-484c-bc57-9f430dec00bf"
        },
        "item": {
          "id": "6a91b74b-0328-4ea1-8acd-f8af70ee6c10",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "920c58cc-de65-4399-b814-7d020d0b8c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97bdd1c-85ba-4f87-b8fd-245f69c7d5a8",
        "cursor": {
          "ref": "17e294f6-96cc-4fcf-ace1-db4f62880661",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2e38168f-8ab7-440c-a22c-505171044306"
        },
        "item": {
          "id": "e97bdd1c-85ba-4f87-b8fd-245f69c7d5a8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5dead7cc-177b-4448-a9f5-a0298a69e9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc9d051-eba1-4c10-8d30-9d40c6026e96",
        "cursor": {
          "ref": "02d9a3dd-c3d7-4029-9cc2-c2958cf7be88",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7a8f1869-a3e1-4b51-a071-eabb3809282a"
        },
        "item": {
          "id": "efc9d051-eba1-4c10-8d30-9d40c6026e96",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "df33340d-3e0f-4846-a32f-d431ded7e4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed257511-9a3a-43ce-b69c-78fb0932dd42",
        "cursor": {
          "ref": "295b6da8-8672-489d-b0d5-caecb0efc9a8",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3898128c-4658-4ec9-8081-d6ca8c48df4a"
        },
        "item": {
          "id": "ed257511-9a3a-43ce-b69c-78fb0932dd42",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9f953984-c799-4867-b1c1-c4d3cef9a087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8deff3-15a7-4027-a150-bd851d8c527c",
        "cursor": {
          "ref": "6c13944f-94d0-4d38-8493-f0877b928dca",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "80bbc129-1818-47af-9940-a7ae9630bd9b"
        },
        "item": {
          "id": "2b8deff3-15a7-4027-a150-bd851d8c527c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4c46f41d-45f5-40b4-bff2-6259a447b1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cae1d4-b7f2-4663-bc6f-6c4e2fbc84ed",
        "cursor": {
          "ref": "ea57c312-21d3-47e9-a4a2-8cc7137245cc",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6d1a4a6d-6a58-4658-a9f9-39b5add8c69b"
        },
        "item": {
          "id": "78cae1d4-b7f2-4663-bc6f-6c4e2fbc84ed",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2eba831f-a982-4ef9-b4b8-cc8871f4b85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71368b8-bf4c-49c5-b318-40d127fd2b33",
        "cursor": {
          "ref": "28764ecc-6710-4950-9984-4fce5b93d94f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d707acc7-a2bd-429d-aa87-3d3455fbafca"
        },
        "item": {
          "id": "c71368b8-bf4c-49c5-b318-40d127fd2b33",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b9cbc8c9-03e0-4efb-9305-999a4bba7d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e1747d-57b1-4226-8f04-814b56ab3a28",
        "cursor": {
          "ref": "acae1a33-b472-4bae-8d20-7486d5596cd0",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "92c9e160-cf66-4c76-819e-fdcfe1429224"
        },
        "item": {
          "id": "53e1747d-57b1-4226-8f04-814b56ab3a28",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3620822f-d54e-4f50-97da-87d7ac17b8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318d6794-9070-4a50-b483-9bfb414a2fbc",
        "cursor": {
          "ref": "2213b3e3-ab57-47f2-a526-1961e4154cb1",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "afc1fc2e-11ec-4a86-a13b-85891e12e31a"
        },
        "item": {
          "id": "318d6794-9070-4a50-b483-9bfb414a2fbc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b5f94ced-c155-4296-a711-75a332f70550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d519b02-a132-4513-92ca-8d8bb5bba250",
        "cursor": {
          "ref": "813d98c9-ce9d-4e91-aa27-a4e5b519a9b3",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0fdf48eb-ed55-4bd0-a514-5104a1c6a7e9"
        },
        "item": {
          "id": "9d519b02-a132-4513-92ca-8d8bb5bba250",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a99e1f82-9925-4cfa-ae43-5f90cfd95714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4846095b-18a0-4457-ad47-ca758f4ae0bc",
        "cursor": {
          "ref": "85fca451-3049-4148-91e3-29dff964ffb7",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8b28d28c-10e1-49a6-bf49-151f34ae255d"
        },
        "item": {
          "id": "4846095b-18a0-4457-ad47-ca758f4ae0bc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "12c498e4-a018-4989-b817-9a36081a4088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3f6416-014b-4fad-b5c7-b6b76169ef10",
        "cursor": {
          "ref": "11e45896-e2b5-4269-ab5e-a07da5021329",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "686c60fc-b420-4f24-919c-831b6c39b88c"
        },
        "item": {
          "id": "9d3f6416-014b-4fad-b5c7-b6b76169ef10",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b16a09d0-7a11-4ace-8c26-6e919860b493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8de331-750c-4204-8a64-3c989e94e948",
        "cursor": {
          "ref": "1ae2e8b1-09cd-4729-9d01-93b6aa598e78",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a2aebb47-4899-41fe-8314-2a7fa0dd62de"
        },
        "item": {
          "id": "cd8de331-750c-4204-8a64-3c989e94e948",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9953fae3-e9df-4645-9524-0738de56c6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6185bce-04e1-4cd1-bcc2-2dba8869d3e0",
        "cursor": {
          "ref": "11952817-f7a1-4eb6-92e1-96baacf1797d",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2712778e-9bf6-42df-beef-b115225e7642"
        },
        "item": {
          "id": "c6185bce-04e1-4cd1-bcc2-2dba8869d3e0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2dddc221-064f-4f4b-8c53-18fbbab0a1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e826e72-a855-4666-b2bb-430105f48339",
        "cursor": {
          "ref": "745b6731-67f2-4c09-b7b0-069b73dacc37",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "41824be1-979c-4434-b8eb-360102eb74b2"
        },
        "item": {
          "id": "1e826e72-a855-4666-b2bb-430105f48339",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "09a51c1b-a47f-48f1-88b4-41635479566b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc73a1d-e1fe-485f-84d7-809d4b45ca05",
        "cursor": {
          "ref": "d5d38011-3be4-4ded-821b-7fdc70f93402",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "edea6ac0-cb27-478a-a795-1c90db7d6da8"
        },
        "item": {
          "id": "cdc73a1d-e1fe-485f-84d7-809d4b45ca05",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d6170558-cc54-4d1c-975f-99799e794703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37b46b8-b856-4926-a8b2-d2c7e405c65b",
        "cursor": {
          "ref": "0c31f2a8-fb37-40d1-ac2c-ad90f396f53c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "00d574aa-4fbc-401e-83dc-ff8d274933d2"
        },
        "item": {
          "id": "b37b46b8-b856-4926-a8b2-d2c7e405c65b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7ec7ca8f-dea6-45ab-a572-12b7853d4680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902cb7c8-25cd-4a41-9200-46311c19d241",
        "cursor": {
          "ref": "83d66579-43f7-40d5-b9f9-c9b2675dcd0d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "47a87920-cba3-4458-8e77-9ba6cf4fbb1b"
        },
        "item": {
          "id": "902cb7c8-25cd-4a41-9200-46311c19d241",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b6c155b8-3f3e-4a70-b94e-a897fa072f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939802e1-3755-41e8-ac75-f0db34d40bfa",
        "cursor": {
          "ref": "784f382a-001f-4992-8235-11533a327e0a",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6ede0afc-3c11-4520-92f6-d783f10c956f"
        },
        "item": {
          "id": "939802e1-3755-41e8-ac75-f0db34d40bfa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "55644bf3-0d18-4c5b-b4b9-786644e28440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7702a862-6854-4bf5-bac1-1f64e5c905d7",
        "cursor": {
          "ref": "b870b539-d041-47f4-aabf-45d44cc1f1f5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "50e561c7-c621-4125-8ec4-f088235c364f"
        },
        "item": {
          "id": "7702a862-6854-4bf5-bac1-1f64e5c905d7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4b0b9aa6-82b0-4469-b94f-c40390c41713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d788b6-a8dd-416c-961b-f968f9ce1d7d",
        "cursor": {
          "ref": "411de432-32c9-47e0-8bb5-1ad86a60d4e4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e907dec3-4702-4b36-bd17-10310b63f07e"
        },
        "item": {
          "id": "61d788b6-a8dd-416c-961b-f968f9ce1d7d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6f84b150-8dd0-46c0-bde2-ebccc47aea1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad74ff8d-5beb-4739-93c8-d3d41b2c72ee",
        "cursor": {
          "ref": "1a6ff31f-4d81-4b09-9b3e-56b61f857d80",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a23c6f95-ddc7-4d72-a34b-d94f7a88b332"
        },
        "item": {
          "id": "ad74ff8d-5beb-4739-93c8-d3d41b2c72ee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5a699d57-197c-48ba-a79c-eebbd27e7eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee5929c-2319-4948-8ea3-aeb7fa4d26a6",
        "cursor": {
          "ref": "cbcaf1ee-6138-442a-b53a-ae38ed3833d2",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "44a1b8e5-39ff-4847-9f85-f0288ed5b3ad"
        },
        "item": {
          "id": "7ee5929c-2319-4948-8ea3-aeb7fa4d26a6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1024ec0e-4a7a-4fe5-a2c8-3e4dab138c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e4e3bd-3d39-4e7f-88a2-f5c844d3d937",
        "cursor": {
          "ref": "a951ce79-795f-440c-9cb6-2a782103ca20",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "25635088-6ac9-42aa-9404-eb50b3c5146f"
        },
        "item": {
          "id": "a6e4e3bd-3d39-4e7f-88a2-f5c844d3d937",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c3fa99de-4dc4-4514-b46b-c5a2a1a7f253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41301ed-c766-417b-a504-92d1ccfd444b",
        "cursor": {
          "ref": "6f9b6b75-8e4b-486b-a4cd-0cfd5d69de49",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "56c5b9c5-4b8d-4572-b607-a817a3cbbc36"
        },
        "item": {
          "id": "b41301ed-c766-417b-a504-92d1ccfd444b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ac912780-c3f4-4c76-adec-ce066f86ef5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc58d5ae-a94a-4409-96ff-73429c9ed389",
        "cursor": {
          "ref": "6d7e89a5-1983-44dc-b7fe-2142f66d4d69",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b56720ff-06b4-4eb2-8df9-a78ac28399dc"
        },
        "item": {
          "id": "cc58d5ae-a94a-4409-96ff-73429c9ed389",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d0b96e59-48f1-4817-b08c-694b74e37835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fb0a83-aed3-47db-b6c0-3333fe4afe72",
        "cursor": {
          "ref": "61b0a853-def1-4bf6-bea4-f4b28e4c4f58",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e7a95d81-6da7-468a-8e3b-a70d7f6c545c"
        },
        "item": {
          "id": "21fb0a83-aed3-47db-b6c0-3333fe4afe72",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a7010d51-feda-4723-9d18-bea587247f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d934b02f-e725-4204-a7fd-27bf1ded4abc",
        "cursor": {
          "ref": "b6040e28-ff4e-42f1-b9b8-700beaf200ea",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4e50f2dc-0af6-4bef-8110-6e5955b51ab9"
        },
        "item": {
          "id": "d934b02f-e725-4204-a7fd-27bf1ded4abc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dbd4e910-d5a3-4fda-9fa0-89be8649d1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19f61c5-6985-49fe-90af-d679d1ad5ae5",
        "cursor": {
          "ref": "4dd982f1-151b-4152-b6ef-1c6656f86b81",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1dc1940c-fcdc-48d4-a3c2-bfd202367d98"
        },
        "item": {
          "id": "b19f61c5-6985-49fe-90af-d679d1ad5ae5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "49c361c5-6328-4d32-966c-16721fd4026d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cb8cc4-ee5e-4ae2-9266-a1c6dca6a3d5",
        "cursor": {
          "ref": "343003ed-b2ef-4c3f-a117-451cb68f684c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "49250679-baf5-413d-a93c-fab7074caf6a"
        },
        "item": {
          "id": "c7cb8cc4-ee5e-4ae2-9266-a1c6dca6a3d5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5eefb75c-2e68-4133-bdf2-b8122d4e31d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b66713-4983-4a80-a8ea-57f670eed887",
        "cursor": {
          "ref": "ef6bbe66-ebe0-4b1b-9aaa-3f0937c5235c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0d204af0-b7ab-4e7a-aaea-78d04c39ef27"
        },
        "item": {
          "id": "48b66713-4983-4a80-a8ea-57f670eed887",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "678f37ef-10ab-4616-9c77-a039425c9b72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a791c2-b4b2-4cbb-b4e0-87ba3828022d",
        "cursor": {
          "ref": "81cfe3fc-14bb-4dfa-bbc0-89465a069328",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "74d1c086-dbf5-4ab5-aac1-d2258f305a5d"
        },
        "item": {
          "id": "82a791c2-b4b2-4cbb-b4e0-87ba3828022d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fc3d2411-d025-4bc9-87bb-a739b493f30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6a8ad1-091a-4199-93bd-7eee6da65b7e",
        "cursor": {
          "ref": "6f3dddf9-9ede-4311-8de1-b6e9fd8de35b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8d1392e0-82f8-4f95-aa1a-0885c2ffe029"
        },
        "item": {
          "id": "5e6a8ad1-091a-4199-93bd-7eee6da65b7e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9ec825bd-e761-48b5-8176-3669c5e3ebf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5936a8a1-eb37-4143-a91c-063990af2132",
        "cursor": {
          "ref": "f4ddface-c3b7-42dc-ad88-2f6520be367e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ae83d64b-d20e-40e3-92d5-976627618212"
        },
        "item": {
          "id": "5936a8a1-eb37-4143-a91c-063990af2132",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "147cb737-be05-47f6-9007-665a1ad64cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9cd99e-85c6-482a-bcef-a5686b145171",
        "cursor": {
          "ref": "5fb3f3b4-fc54-4ef3-811f-ef303041cb7a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b59c5f11-107a-47a6-89cc-f99105bc9c60"
        },
        "item": {
          "id": "de9cd99e-85c6-482a-bcef-a5686b145171",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "314a52e2-98b4-4e87-8b0d-f848a3393282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a975cf1e-72ad-4a1d-bbf9-3a19d5a1a9d7",
        "cursor": {
          "ref": "9992007b-8574-453f-b9a8-7d31da756c8d",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6048d2c2-bc28-4ff9-af36-2aa256002635"
        },
        "item": {
          "id": "a975cf1e-72ad-4a1d-bbf9-3a19d5a1a9d7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "339f861b-3fef-4bd3-9ce1-aa38fb2e40b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0b5ae2-d17f-4dda-b0aa-a5cbc2c477d7",
        "cursor": {
          "ref": "d096be77-270d-4d10-9301-1bdc97692812",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c33fab57-5209-40cb-abe8-24ad153dc839"
        },
        "item": {
          "id": "8e0b5ae2-d17f-4dda-b0aa-a5cbc2c477d7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "01b393a8-febe-4f18-b5dd-74aaa3993b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263615a7-2894-4f80-98e7-4c0bc62bb5c5",
        "cursor": {
          "ref": "ac81ee2e-93e4-41c0-a238-1a52f2b8d62b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e948ac0d-7b0b-4474-bf05-1dc8bc010985"
        },
        "item": {
          "id": "263615a7-2894-4f80-98e7-4c0bc62bb5c5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7cd1e36e-d04e-454f-b6ef-54f4973c0adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16694a9e-fcd0-40d2-bdd6-9dac2cd84f48",
        "cursor": {
          "ref": "1f37273d-58c4-4054-b6db-6056db6af10b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4047a81f-22d7-417c-9cf0-127f70c493ab"
        },
        "item": {
          "id": "16694a9e-fcd0-40d2-bdd6-9dac2cd84f48",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "18e44dcf-098d-4b90-8784-06aa3f4b0776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed13dbe8-96bc-449a-a4f0-8ad38b44586e",
        "cursor": {
          "ref": "bb6e7605-41d5-4644-a44d-8234f96d78e9",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "aec4de9e-b9fa-4ce2-bda8-a4f08ac4947d"
        },
        "item": {
          "id": "ed13dbe8-96bc-449a-a4f0-8ad38b44586e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b0633142-a687-4f08-a0e7-408147ea8dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deaf8dcc-6a7c-459f-998a-a7aafcb9c07d",
        "cursor": {
          "ref": "68f9c934-aa24-460c-b213-a0bef08ddb6a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a8253216-1364-40dc-8f37-abe34080f9d7"
        },
        "item": {
          "id": "deaf8dcc-6a7c-459f-998a-a7aafcb9c07d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3f6a58a8-5ac8-4f7d-9870-04cbe298ac43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8763457-1fff-4d2d-8fc6-fb8e907dfed2",
        "cursor": {
          "ref": "29d3eeca-4f3a-4bfe-bb18-a58c330c4a3c",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "64aa4291-86a4-4957-9da3-005b152f286c"
        },
        "item": {
          "id": "b8763457-1fff-4d2d-8fc6-fb8e907dfed2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f188e778-f366-407f-b03d-5fed9c8119b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4f26f9-3bd9-4961-a33c-ab3dc3668fa3",
        "cursor": {
          "ref": "7ce50a53-8f8a-4a00-bab5-f21f117f9ea5",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "61fa0257-ce98-4ba2-9c31-fe3c8f57ed16"
        },
        "item": {
          "id": "fb4f26f9-3bd9-4961-a33c-ab3dc3668fa3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8edbac65-8c1d-48bc-b63e-47740474d767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03b966e-af92-4623-8df8-8b49aaf329b6",
        "cursor": {
          "ref": "a142c0a8-994d-44f3-b2d1-fb4f71ffa376",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "03cd7efb-a137-420d-8536-67196dc15475"
        },
        "item": {
          "id": "c03b966e-af92-4623-8df8-8b49aaf329b6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e13b0af1-4903-4d40-96f7-900f1064fdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f08b6a-10a5-4dbf-bb17-ad76c1ea283f",
        "cursor": {
          "ref": "3afdbc1a-38df-45d2-a57b-c7916ef592d1",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1b23dc20-9f5e-47c0-9e36-5d4215dc88c5"
        },
        "item": {
          "id": "36f08b6a-10a5-4dbf-bb17-ad76c1ea283f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "70ac91d2-103d-4926-b8ae-ad02a241525b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49881d5-08be-4e8d-96f8-caafff0eccd6",
        "cursor": {
          "ref": "ccd95cc2-96f1-4906-b984-6e8cec990520",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "46d089e5-fa48-4a95-8a42-ce84d4279da5"
        },
        "item": {
          "id": "b49881d5-08be-4e8d-96f8-caafff0eccd6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "557bf629-e4b5-43fa-af83-55da5590e39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6254bb34-8f46-45d6-8648-a2534c76f323",
        "cursor": {
          "ref": "ff90f4a1-f567-435d-a4e4-12f1922b04c4",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c0975aaa-106f-4ae4-b0ce-d3c50df6cba8"
        },
        "item": {
          "id": "6254bb34-8f46-45d6-8648-a2534c76f323",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1332e8be-1522-42e3-a787-b970935170ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5996462b-d23a-489a-8de7-6a47eff11914",
        "cursor": {
          "ref": "a932cb5e-5fc2-491b-946d-4212823e2475",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fefa0fb0-0ae8-43fe-b2ca-3b5a5f362630"
        },
        "item": {
          "id": "5996462b-d23a-489a-8de7-6a47eff11914",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f4347b26-f848-4904-9300-285603d0573d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebf828e-be2e-48f7-acd9-ebccda9508d3",
        "cursor": {
          "ref": "712260a8-9c24-427a-ace8-9994776b7389",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a0e9a0ae-2a59-4a6e-b18f-e055fc425327"
        },
        "item": {
          "id": "2ebf828e-be2e-48f7-acd9-ebccda9508d3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "278eaf73-5d51-4057-ba98-379fd1227fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3c6279-46f4-4470-aaff-4a45e1331f8c",
        "cursor": {
          "ref": "0b4c9bd4-e96b-4bd8-8455-6b50ff8ebb9d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "17ad3f9f-62b3-4271-afdb-1816cda66d5e"
        },
        "item": {
          "id": "9f3c6279-46f4-4470-aaff-4a45e1331f8c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2a640d38-b42c-4288-9533-45e4af06628b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed753b48-76b4-441c-b596-3185cf5f5fcf",
        "cursor": {
          "ref": "152f40c7-b05d-43b2-a119-37eda1fa672d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a6c6db58-252f-4280-aed9-cfe3f4a077b4"
        },
        "item": {
          "id": "ed753b48-76b4-441c-b596-3185cf5f5fcf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c0ae44b5-b98c-47ec-8a67-caf15d7635ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4b9dc8-730b-46c4-bdfe-e73559646175",
        "cursor": {
          "ref": "1b0e72b5-56d8-4799-a263-07931f59c86d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9d2c9adc-4e81-4684-b368-63d2a7339058"
        },
        "item": {
          "id": "8d4b9dc8-730b-46c4-bdfe-e73559646175",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2805e169-c0d1-4b00-b908-316d91754b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4eb107-dbc6-4deb-a499-af23bc5bac5a",
        "cursor": {
          "ref": "e46562b5-0acf-40c4-a6e3-f3b2e22d5346",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b0297556-2094-4abc-902a-fadef42a4fb3"
        },
        "item": {
          "id": "7b4eb107-dbc6-4deb-a499-af23bc5bac5a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cef4f1d9-f8ca-4793-ad31-f10921e162c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc54aa0-5538-4a29-9b5d-18c039424fdb",
        "cursor": {
          "ref": "014a1413-e9f5-482e-b90d-9e5e6b418f46",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6760bfa8-255a-40a0-b379-e4bb89637efb"
        },
        "item": {
          "id": "6fc54aa0-5538-4a29-9b5d-18c039424fdb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "51be8f98-db64-4da1-98f3-5c921bf663eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9d4da1-a1d0-4bf3-945c-78323ca41273",
        "cursor": {
          "ref": "12b3ef2d-cc01-42ed-ac36-31a024a6913c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e116602f-2e68-4c2b-b939-925beceedd46"
        },
        "item": {
          "id": "bc9d4da1-a1d0-4bf3-945c-78323ca41273",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "44e0427e-1013-4fc8-8acc-62e2a003e580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88d604f-488b-439e-8ffc-66f086d2f37b",
        "cursor": {
          "ref": "dd4c1e67-b403-4c86-9b31-1a3625ff4bec",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "83165538-b2b9-4eb3-8950-6034f9d2e129"
        },
        "item": {
          "id": "e88d604f-488b-439e-8ffc-66f086d2f37b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6d9a3bf2-83b3-4b8a-8faf-c5ae1b8152c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119f7872-5fdc-423f-8e19-57395799a37d",
        "cursor": {
          "ref": "8bce6fcb-75ce-48a0-99e9-4d5d199982ac",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3c8ef6c5-9c46-4feb-8e15-946c942c81b4"
        },
        "item": {
          "id": "119f7872-5fdc-423f-8e19-57395799a37d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "245230ff-1eef-49aa-af06-acb37b80b3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fde36c5-8240-4ab6-a034-06abb5762deb",
        "cursor": {
          "ref": "c27f09f6-1ddd-429a-a2ff-8840a6030aef",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a041e4ea-f519-480c-9507-9c1f3fdd5a50"
        },
        "item": {
          "id": "5fde36c5-8240-4ab6-a034-06abb5762deb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "030df9a4-9e54-4739-8245-cfe171d7e55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce7f163-a82b-4edf-9f6b-549ea6aaecb2",
        "cursor": {
          "ref": "8569a009-fbd4-4f76-abf9-2101f122020b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b53660ec-2942-43aa-9e2f-d553cff4758b"
        },
        "item": {
          "id": "0ce7f163-a82b-4edf-9f6b-549ea6aaecb2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8444021c-dd89-46ca-beb3-6e0389b1c945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d9eea1-e164-4877-91ba-28522f2356df",
        "cursor": {
          "ref": "143b61ce-f815-4237-aba9-02448d613456",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7737488d-e51d-4d26-8833-195b75fa3d74"
        },
        "item": {
          "id": "e4d9eea1-e164-4877-91ba-28522f2356df",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c0fab436-0529-467c-9b9e-1a66a8cd3bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77e2426-2bba-4ba2-9420-87bbcdc2c1c0",
        "cursor": {
          "ref": "c83b222d-92af-4b94-8329-64600fdbb5cb",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7e457b33-210f-4cb4-81ea-8630e329fb19"
        },
        "item": {
          "id": "a77e2426-2bba-4ba2-9420-87bbcdc2c1c0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ebc4a337-e85e-48c2-a4b0-e2d49c91ecd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565f581e-42ba-473a-9c4b-5d9ca3b53fc0",
        "cursor": {
          "ref": "bca5bc5b-acb1-408d-9885-6bfc8c946d04",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9ee5ff16-75f3-4217-a88d-2f9b9a5b915b"
        },
        "item": {
          "id": "565f581e-42ba-473a-9c4b-5d9ca3b53fc0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "112d3632-9f70-4afa-b8b2-4e549a43f7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1973efd4-b9c6-4296-b132-fdf1f1d2db27",
        "cursor": {
          "ref": "f156fcc2-273e-4eac-a5cf-5e12355b6d41",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "41f421d4-d862-497b-b123-81a9739d1ea8"
        },
        "item": {
          "id": "1973efd4-b9c6-4296-b132-fdf1f1d2db27",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dfeba3b9-a19c-46f3-8bc8-eaac5218cf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce540767-e58d-4032-a60b-eb32e2c82df6",
        "cursor": {
          "ref": "fb34f9c1-28fc-4af3-9fb2-635067de7f30",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "191ffc0c-f733-4605-8633-737ba859889f"
        },
        "item": {
          "id": "ce540767-e58d-4032-a60b-eb32e2c82df6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9a862524-99b1-4bcb-9736-63d70e04dbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a180bc25-a4bd-42a2-b6d2-f0030af52258",
        "cursor": {
          "ref": "33c1afa2-f33e-4e0d-a3d7-9698b3d2c140",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "57d8781d-4a47-41a6-b9b9-711552914a58"
        },
        "item": {
          "id": "a180bc25-a4bd-42a2-b6d2-f0030af52258",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a8cd8071-a355-4fdd-b9fc-d1610b06d113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1a0f19-a3a4-46c1-85be-9f41092a826f",
        "cursor": {
          "ref": "1bafd411-8388-4852-bc3f-55feb715e2e8",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6427599b-69d3-4a1a-a52b-df644a54eb2e"
        },
        "item": {
          "id": "bd1a0f19-a3a4-46c1-85be-9f41092a826f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ba2712db-c55f-472a-974c-a99258bc518a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44240da6-b69a-478a-aaf3-1e67394165f1",
        "cursor": {
          "ref": "bb075374-cae3-4dcc-836d-11009a01f8cb",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "24d00a95-da19-4ac7-a9ef-7d4454cd0779"
        },
        "item": {
          "id": "44240da6-b69a-478a-aaf3-1e67394165f1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6a843cc2-c1f6-4a6d-9268-4124df822f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad10710-abab-43f1-a982-89ebf4c5e051",
        "cursor": {
          "ref": "53487244-aa54-4b35-9346-6dbad07e9a05",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "43727eda-a71d-4f6b-8228-497fb8d7f402"
        },
        "item": {
          "id": "dad10710-abab-43f1-a982-89ebf4c5e051",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c458195a-293f-4160-9ab8-0aa49842c792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97798f4a-8d94-4a91-9221-dbad283eef08",
        "cursor": {
          "ref": "9398d681-e374-43fc-bfac-e869a0e4d2e1",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "05f4aa7e-41cc-4317-bb00-9e27aee0438d"
        },
        "item": {
          "id": "97798f4a-8d94-4a91-9221-dbad283eef08",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cd82e17e-1484-433f-9a30-af46b28aac18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf557c65-6516-4535-8cdc-8c0280d48c61",
        "cursor": {
          "ref": "4e205b68-92b2-43e5-9134-6808efaaa605",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "38eb5395-b27d-4e58-bf62-b6a20bc7dc13"
        },
        "item": {
          "id": "cf557c65-6516-4535-8cdc-8c0280d48c61",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1db5ef0e-189a-4125-9657-90416588477d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46490b3a-2167-4f13-a300-5dd2525bcb20",
        "cursor": {
          "ref": "28c6d989-2048-4dae-94ce-7a5ad52b9a39",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "089ac87d-e612-4c47-8cab-df603c7b21c8"
        },
        "item": {
          "id": "46490b3a-2167-4f13-a300-5dd2525bcb20",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fede8ccf-c99b-4e66-8185-41e06b1c4ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89388ad3-6eb9-4c78-8344-9a757ea699a4",
        "cursor": {
          "ref": "8e5d5a3e-5c75-4b8e-9798-1472c897a1e5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "30e8813c-7c82-43e8-a5c1-2c27d5d8d24a"
        },
        "item": {
          "id": "89388ad3-6eb9-4c78-8344-9a757ea699a4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9e6e6828-1db5-4b56-9833-de0991887a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865428db-1bb4-40cc-959f-91286fe2a4a0",
        "cursor": {
          "ref": "80fb99ff-c79f-4fcf-87a4-e1342d1878b4",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3a413e4c-9bbe-4335-acfc-505a0f30e390"
        },
        "item": {
          "id": "865428db-1bb4-40cc-959f-91286fe2a4a0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6e71e788-f764-4711-99ea-5dee67f12352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1611909f-3886-4685-98e9-1f8f291b0880",
        "cursor": {
          "ref": "b5c1167e-0b61-44bb-9e96-476f5c7e6549",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c426637d-4712-423d-8e4d-273409a2124f"
        },
        "item": {
          "id": "1611909f-3886-4685-98e9-1f8f291b0880",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "29cb2c2d-e154-4714-bc09-0bf5d5a5e82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7829ca21-a2b2-4c98-bf3b-5b3272a7c19b",
        "cursor": {
          "ref": "81a2b418-421c-4d46-81ab-88fd54183484",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b8e7f3b7-fdc1-49b4-b3a1-266625f75d70"
        },
        "item": {
          "id": "7829ca21-a2b2-4c98-bf3b-5b3272a7c19b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dc1965b1-3e6f-4fef-a57a-db26dd079b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4f2771-4d48-42d8-bb7f-44659785063f",
        "cursor": {
          "ref": "42fee065-1449-45d3-baed-5db646c54424",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "036af0c2-4213-486b-b0a1-75b5eb61945d"
        },
        "item": {
          "id": "6d4f2771-4d48-42d8-bb7f-44659785063f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f5c88f8e-57b2-46cd-b7eb-4934fbf241e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de2041d-105f-4a53-8567-b0044a98a94b",
        "cursor": {
          "ref": "c017f120-c1a4-47af-a1c4-f2806e0d25d1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4c308b76-3320-4545-9f12-8c7dcefb2d9e"
        },
        "item": {
          "id": "2de2041d-105f-4a53-8567-b0044a98a94b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b65da754-c0bc-489f-b248-89046c92066f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a891656-1ba0-4011-bb80-f2d7f6c9c36f",
        "cursor": {
          "ref": "93525cae-9998-41ec-9c14-a4345364bc1b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4d029072-78b6-49f9-b856-acc7de8225e2"
        },
        "item": {
          "id": "5a891656-1ba0-4011-bb80-f2d7f6c9c36f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "891cfc79-5a54-459b-92d4-530cf93e6d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fa7756-733e-4aa7-83b2-7036991f5e7f",
        "cursor": {
          "ref": "df333465-f091-4dce-956a-0ee89dc821e5",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d7ee921b-3ed5-41e1-b893-441eec63bb54"
        },
        "item": {
          "id": "46fa7756-733e-4aa7-83b2-7036991f5e7f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ea6312d5-9b34-4756-83c3-82802efb24a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffee089-e370-428f-8fd4-57da4648f027",
        "cursor": {
          "ref": "064b170e-8ab8-40a3-acb7-954cdca8aa60",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b91270e3-e5a4-4a80-a0b3-df7f597fa091"
        },
        "item": {
          "id": "cffee089-e370-428f-8fd4-57da4648f027",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ed5fb4dd-a41d-4171-b9ba-1be20942a4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2335c7c9-f13b-4c46-80ad-297e7710ecfa",
        "cursor": {
          "ref": "caaa16dc-a7f5-4534-805d-6a67832f727f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9d0fcf93-9237-4b1e-a9e9-492794ded24d"
        },
        "item": {
          "id": "2335c7c9-f13b-4c46-80ad-297e7710ecfa",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fd7fd35c-837d-4573-bb35-8f1a4d464b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1988cf8-b0d9-4cc4-9a6b-e1fe87c59335",
        "cursor": {
          "ref": "f65352c0-0b4c-41ee-8651-0bac57ecf574",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fe4060aa-566b-4dea-973f-2026697ef7c0"
        },
        "item": {
          "id": "a1988cf8-b0d9-4cc4-9a6b-e1fe87c59335",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7611d0c8-e345-4101-8b4c-441560f27afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03369238-5c68-4208-b729-ea3c231bfb0e",
        "cursor": {
          "ref": "299514b4-1ef1-489d-b7ac-2c54c37251f6",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b4960f70-a52c-4c04-b2de-7b1d156725b8"
        },
        "item": {
          "id": "03369238-5c68-4208-b729-ea3c231bfb0e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "356016b0-e412-40ca-85f0-3a86738d705c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98cee1f-3f7b-49f3-bc0f-c594172b0648",
        "cursor": {
          "ref": "e1082d82-5929-440b-b2bc-bfe329ea6fa4",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "111f03cc-28b0-49cb-bd0f-550b22877c4d"
        },
        "item": {
          "id": "d98cee1f-3f7b-49f3-bc0f-c594172b0648",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ba2ae6da-2742-4cf5-9072-7b0a66b25292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e8a9f2-3746-44c4-8fdd-d9d72efe9556",
        "cursor": {
          "ref": "ae71cc93-ab3b-467d-adad-4c419369a892",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b8253050-e416-4e71-8df2-7f889dee03c9"
        },
        "item": {
          "id": "75e8a9f2-3746-44c4-8fdd-d9d72efe9556",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "73156fc3-1484-47d8-a1e6-617c04304cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a63b3b-a207-42c2-913c-1f6979956caa",
        "cursor": {
          "ref": "01a0cc2f-ca73-47a4-9079-d8e3d0bffc5b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "122086e5-5fd8-4872-a3ce-d18733ed40ac"
        },
        "item": {
          "id": "33a63b3b-a207-42c2-913c-1f6979956caa",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d463279d-2180-4835-a39d-185e34a1357a",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "2ff45405-de02-4800-8d24-01612a232ea4",
        "cursor": {
          "ref": "40b4aae0-0e69-484a-af4a-a78dcd7fd08d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3d78d801-7a44-4d0d-bfbb-ec8bc7e0b406"
        },
        "item": {
          "id": "2ff45405-de02-4800-8d24-01612a232ea4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f6392a6c-f379-4c21-98f6-ee14f6ec07a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aeca47c-50fd-4d9b-8402-9dc5c9565a86",
        "cursor": {
          "ref": "e93f9eff-a48b-454f-a71f-87afcd0cb050",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "91c65c04-dae2-4cfa-9d5a-b9a12269130e"
        },
        "item": {
          "id": "8aeca47c-50fd-4d9b-8402-9dc5c9565a86",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "57fca342-9ff0-47de-b295-7edf467b8e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80edcbb6-a362-4b21-beb4-099dd916cc1b",
        "cursor": {
          "ref": "a7b50207-4bdb-48d3-8f48-7ecd29158ed0",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2cbb9b21-09f7-4e3b-a527-7b1915b5ec31"
        },
        "item": {
          "id": "80edcbb6-a362-4b21-beb4-099dd916cc1b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "893dd3ca-881d-4bb9-9da1-a6f0c5f08411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68fb2ca-751d-4e13-b9bc-98d0e0d8624d",
        "cursor": {
          "ref": "881e3bac-e60f-4e47-b413-82b7418d1736",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "559ebdf9-9c6f-4294-bd26-8500efb9a495"
        },
        "item": {
          "id": "f68fb2ca-751d-4e13-b9bc-98d0e0d8624d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3babef8a-55a4-4bec-abbf-36edfe3887f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec0c36c-fecd-46ee-96a3-d61f882bc563",
        "cursor": {
          "ref": "2b1b2b33-9e13-4293-a8e1-ea9f93c7e68a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3c77f27e-bacb-4e46-8d67-5f8950ad00e4"
        },
        "item": {
          "id": "4ec0c36c-fecd-46ee-96a3-d61f882bc563",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e929cd4b-ae69-4ff1-a314-5ef98502ff07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1604452c-0622-4ddf-8c11-33c794fb32a2",
        "cursor": {
          "ref": "f0ed9580-9457-4092-899e-96d30511752e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ac45627c-cf05-43b0-b940-1512968e0da6"
        },
        "item": {
          "id": "1604452c-0622-4ddf-8c11-33c794fb32a2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f31b90ea-e66f-4758-a460-7bf5a7254dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76722cfc-013a-4558-b2b7-bdd11ac4711f",
        "cursor": {
          "ref": "f7ee6936-0706-4e15-ac36-2fa9260fd11b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "46a63db9-3a62-46c2-942c-c47e4a39a612"
        },
        "item": {
          "id": "76722cfc-013a-4558-b2b7-bdd11ac4711f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "91de35f4-1f30-46f5-825e-57bd01bfa3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ae121f-e106-4b7b-9c34-60487ac8020f",
        "cursor": {
          "ref": "ee0228be-6d24-4c13-97e6-1e37ba43f60c",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a31c1909-a5d6-440f-88f9-5d989baa8187"
        },
        "item": {
          "id": "47ae121f-e106-4b7b-9c34-60487ac8020f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1448c3f7-1749-438a-b858-e05d2d849ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631c3fb4-59d7-49ed-af03-06160e17c107",
        "cursor": {
          "ref": "44af661c-8396-4367-a681-0fb43943af6f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fd063af1-154a-4898-b8ee-a28fb06dfff0"
        },
        "item": {
          "id": "631c3fb4-59d7-49ed-af03-06160e17c107",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "49c68e16-2f67-4066-ab70-00befddda3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb62b633-ed14-49d0-b5b5-133b4d786145",
        "cursor": {
          "ref": "affcaa11-179d-40d4-9d76-8aad39db25d3",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "304e8bee-bbd7-4108-a8b2-66070c0b259e"
        },
        "item": {
          "id": "fb62b633-ed14-49d0-b5b5-133b4d786145",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "120307d9-6824-423c-b7b5-50cd4ba2bea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0e8507-b9f2-4b21-ba76-f7a621b2ad0c",
        "cursor": {
          "ref": "99d54aa6-4820-4791-bc75-43bdc7e62c3b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9c70439f-de28-42da-b825-e9b09de15f86"
        },
        "item": {
          "id": "1e0e8507-b9f2-4b21-ba76-f7a621b2ad0c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a926a064-e6b0-4223-bdaf-9056b4874819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909a5236-36fa-4497-8ee9-238cebbf56fe",
        "cursor": {
          "ref": "5f5661f3-4a0a-41ec-8b8b-728ba0fc8396",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "16925fcd-063f-4221-87a2-88a45491d6a0"
        },
        "item": {
          "id": "909a5236-36fa-4497-8ee9-238cebbf56fe",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3e799e22-5017-462c-8a11-85d8b1bb4c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079fc176-08fa-4618-9d82-27e73622fb0b",
        "cursor": {
          "ref": "486c1043-5ac2-456f-9075-50e85d9ba4f7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2738f957-8357-4c63-b7e4-1906045c3fcb"
        },
        "item": {
          "id": "079fc176-08fa-4618-9d82-27e73622fb0b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f93f0811-e244-4558-a328-a45651a41156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ea7c3c-709c-4b40-8b20-c97b8ccd3256",
        "cursor": {
          "ref": "c673f42e-0c06-4216-b07f-8b27c170301d",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "18146a6a-df6f-493c-8f4c-f4898e22163d"
        },
        "item": {
          "id": "40ea7c3c-709c-4b40-8b20-c97b8ccd3256",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e4c14b4a-9b01-4d53-9410-c2c5518e4502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff1e649-62a7-4e05-8512-75226a48aac9",
        "cursor": {
          "ref": "384cce52-4394-4b88-8351-0fca04163e29",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2e2e5d8c-f30d-44ba-bfff-e3b3d7dcdbcb"
        },
        "item": {
          "id": "1ff1e649-62a7-4e05-8512-75226a48aac9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "94fb28e3-59db-480e-94e8-4c891cc790d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c49964-d7c4-46d2-b0d5-84ef3a05a065",
        "cursor": {
          "ref": "0b88d45a-b96a-46f1-a609-602e05463b42",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "82cd8966-5ea1-49ce-8823-d95eb30d0621"
        },
        "item": {
          "id": "b9c49964-d7c4-46d2-b0d5-84ef3a05a065",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "611150ac-abcf-4dbf-9e55-2470664dd5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c02fc87-48e1-41a4-8fcf-e60075d33976",
        "cursor": {
          "ref": "25fa41f5-4803-4821-9b8b-0fd801b030cc",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d0043cd8-3ace-4c11-b7d3-67bdf1bb399e"
        },
        "item": {
          "id": "2c02fc87-48e1-41a4-8fcf-e60075d33976",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6861c168-5c4c-4eea-b61e-7df36ef4e54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39105947-5809-44ba-9c12-0d02c012bf83",
        "cursor": {
          "ref": "aeca574d-9c3c-46d1-b0ef-d973f667879d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d11da958-41e9-4aae-9df9-c7d1f1348b85"
        },
        "item": {
          "id": "39105947-5809-44ba-9c12-0d02c012bf83",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "30f1d1e3-1216-45df-8e53-b1d98cddba2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826c8406-1638-4dd3-8d57-90a1ade17b93",
        "cursor": {
          "ref": "b89c2c0f-f715-47e0-90b6-eb3f002e78eb",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "197212e6-73bc-411f-831e-3e5ed3c4e2f4"
        },
        "item": {
          "id": "826c8406-1638-4dd3-8d57-90a1ade17b93",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d43eded1-9f23-40f4-a57f-706fdb9096d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995b5285-93b2-4111-a5c7-5650b55eaa3b",
        "cursor": {
          "ref": "ad562b1d-b685-4f92-bceb-af87241099ec",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d72a9e0f-2a27-44c8-8d64-5fdcc041dd04"
        },
        "item": {
          "id": "995b5285-93b2-4111-a5c7-5650b55eaa3b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "995d445f-11d7-40f3-ab42-a4897809e5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb7a7cc-1925-4727-b9bc-ca5454e158fb",
        "cursor": {
          "ref": "ae7a0179-d9b9-49e9-bc03-e0b8ea4412ae",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b162a583-c464-4b26-968a-7d040df6fca0"
        },
        "item": {
          "id": "bbb7a7cc-1925-4727-b9bc-ca5454e158fb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e74f5ca8-c511-46ca-b16c-eb65f64771c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3d836c-df5f-4c9d-8457-7abd27a0334c",
        "cursor": {
          "ref": "ffde741b-618f-403e-b0f8-d6ce413f892d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "309c7011-9a36-418b-a4a3-7ac814c5b43f"
        },
        "item": {
          "id": "1d3d836c-df5f-4c9d-8457-7abd27a0334c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f5a78ced-b378-498d-8098-bd99634dad56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1e5352-42e7-4a90-8323-09ea22b7ec45",
        "cursor": {
          "ref": "0c8d3848-615e-424b-a7c8-fb0bffe1e775",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1f022165-7b30-4755-97f1-e208a611a2f1"
        },
        "item": {
          "id": "bb1e5352-42e7-4a90-8323-09ea22b7ec45",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e037ee4d-e15c-4dba-b692-66ebbef5ec2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8304310-1cc1-49aa-b35f-015fbf386380",
        "cursor": {
          "ref": "b877ff2d-b55f-47d8-be9b-cff238f1dcab",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "36098674-2176-4a29-a31c-9c3e0cc92317"
        },
        "item": {
          "id": "d8304310-1cc1-49aa-b35f-015fbf386380",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1b334c66-a22b-444d-9c6e-8e0f54cbd593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c5ab9a-0038-4205-8331-d2146e0c0259",
        "cursor": {
          "ref": "d9b4b86d-79f6-4856-b447-7ab63364c1ce",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b0a8e797-c203-49e9-b916-a8ea29ac50e5"
        },
        "item": {
          "id": "06c5ab9a-0038-4205-8331-d2146e0c0259",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3ced475b-07c5-4a7e-b6c0-0291bb03046f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31951dbb-70f3-4cf7-bcfd-c5357d051ebe",
        "cursor": {
          "ref": "9d4ab3c6-3b8a-4c2e-90f1-6666ac96fa27",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4aecb448-d5f6-4bc9-86b7-21dbf9670e48"
        },
        "item": {
          "id": "31951dbb-70f3-4cf7-bcfd-c5357d051ebe",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1c24cc7b-2615-44cd-b476-93fe04ba1761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5167841e-7171-4dcf-8b0a-786722c0b61c",
        "cursor": {
          "ref": "f3e1f217-9ad8-4292-b717-9fcb1f31fef8",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e14474ae-65f8-4ff8-8657-2dbf26438206"
        },
        "item": {
          "id": "5167841e-7171-4dcf-8b0a-786722c0b61c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8301f250-ce39-40f4-ba19-f4fd51128bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d913ab-1eb5-42fd-9574-21a7a51ae21a",
        "cursor": {
          "ref": "c32733a1-baec-43f4-9538-a6abaf37b460",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6185e374-74d7-43f3-b02f-91e27d7d4460"
        },
        "item": {
          "id": "54d913ab-1eb5-42fd-9574-21a7a51ae21a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d9a77871-7901-49a3-8d84-9868d2587435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23e9df4-0112-49f5-a35f-8868bc342d4d",
        "cursor": {
          "ref": "2520838e-e03d-48de-9a2f-327ffe2e9232",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8b7e9132-c0aa-463a-a6d6-7d6236ee288d"
        },
        "item": {
          "id": "c23e9df4-0112-49f5-a35f-8868bc342d4d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2650562a-7f15-4346-8ab1-19692fe4858c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111851aa-510d-4ab8-80ba-39e58844639f",
        "cursor": {
          "ref": "f581022c-a0df-4e10-88f6-e79093e52e31",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f5593077-9481-4f83-aed8-90d8c828d2fc"
        },
        "item": {
          "id": "111851aa-510d-4ab8-80ba-39e58844639f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d2ea4278-5c36-4855-923f-83dde94dfbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0581825-2c0f-49ee-9634-30fe4fe8f662",
        "cursor": {
          "ref": "d980d01b-ec16-40a9-9e6a-2f2fda8ddccb",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "162b6455-d8ad-4e47-8388-b6be12cae62c"
        },
        "item": {
          "id": "a0581825-2c0f-49ee-9634-30fe4fe8f662",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "066493a8-7902-438a-aefc-fa27fd739874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882ccaf1-79b7-42b2-b0e0-34ebd1ecb098",
        "cursor": {
          "ref": "efdc1f1e-290e-456a-a986-1c3d02f7a750",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5a39e158-6153-4fa7-a243-2081388c1326"
        },
        "item": {
          "id": "882ccaf1-79b7-42b2-b0e0-34ebd1ecb098",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "98a16de1-24c5-415f-a276-f9f3f92bbefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efb3967-36f4-4251-9780-cc6a27459310",
        "cursor": {
          "ref": "519a20a0-0efa-4037-950e-ebd81c0b51d0",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "942867cb-5f2e-4711-8985-0000cb1c3f0f"
        },
        "item": {
          "id": "9efb3967-36f4-4251-9780-cc6a27459310",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "83849484-e4e1-4f96-a004-80811b4ac8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d27b10c-6b14-4980-a896-3167cbc3ace0",
        "cursor": {
          "ref": "b158045d-c089-43ae-a2f6-17b8361981dd",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4a2b1534-bfcd-4c2d-b423-0c632c1e6849"
        },
        "item": {
          "id": "4d27b10c-6b14-4980-a896-3167cbc3ace0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f98860d9-41db-4999-ab4a-58ef35c58556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3557b6ed-f57f-46db-855b-d3842060e1ed",
        "cursor": {
          "ref": "decbd934-3dc1-411a-938e-7f0ad61e5314",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "14eb5143-5d94-47b9-bb57-46f32872517d"
        },
        "item": {
          "id": "3557b6ed-f57f-46db-855b-d3842060e1ed",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "53966d1a-4669-4e73-8165-319f0a69d0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ac8e9d-2018-49ea-bae2-cf0544bfb0a6",
        "cursor": {
          "ref": "9991d29a-be62-467d-8d0f-09e37c57bfbc",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "760674b6-1f51-4a2a-8881-d7ac7ef88b5c"
        },
        "item": {
          "id": "18ac8e9d-2018-49ea-bae2-cf0544bfb0a6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a704b1b8-e09c-4341-aa42-e7aee6e61b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f617fa-e32f-456b-a18f-fd3707368c23",
        "cursor": {
          "ref": "6d185ee2-2697-417c-9355-435204da241f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d16eb0fe-ba29-43a9-9417-72e3df94f619"
        },
        "item": {
          "id": "72f617fa-e32f-456b-a18f-fd3707368c23",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "324168b2-8677-4abe-92de-74424f4ccc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ca62fd-8282-4552-8df7-cb13f4c11f60",
        "cursor": {
          "ref": "b01dac09-a57d-4312-85f1-8e25b55689d8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "43e730dd-2536-4beb-8a5c-068a21eb433d"
        },
        "item": {
          "id": "a5ca62fd-8282-4552-8df7-cb13f4c11f60",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "387cb91b-7cab-4896-a94a-b89cbf629c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f01d1b2-c17f-4c8a-ba7c-43e82793c16e",
        "cursor": {
          "ref": "2f6dbac0-34da-4938-b8de-4508a9d80816",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd75bf23-e418-4e0d-bbfe-bb92d5c4eb73"
        },
        "item": {
          "id": "1f01d1b2-c17f-4c8a-ba7c-43e82793c16e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0e764ce7-08b9-4644-8b61-fac83d516ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60db7ad9-54dc-451b-94de-1cb81c5dac79",
        "cursor": {
          "ref": "3b9f17df-ab98-435d-9de9-25b9cf3a7c63",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d9309ea6-9ad0-4a57-b67f-2116da94f957"
        },
        "item": {
          "id": "60db7ad9-54dc-451b-94de-1cb81c5dac79",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "90f8b426-7d3f-44e5-864d-d5810ec4e50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7a6340-9551-47da-9840-956f7067ba35",
        "cursor": {
          "ref": "0c5dc6e7-d52c-4a24-9ef1-ced583c742e8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "135c7e92-9650-4c32-b656-85471cae0fa8"
        },
        "item": {
          "id": "fe7a6340-9551-47da-9840-956f7067ba35",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d7a824ff-9ae3-43ec-a7ec-6c8de5f65072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7a240b-e3d0-46b2-92ec-14033cd28ad0",
        "cursor": {
          "ref": "f2702d72-17e8-437b-a727-45dc490d9619",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "70b84246-135a-4242-858f-264d71569c04"
        },
        "item": {
          "id": "5e7a240b-e3d0-46b2-92ec-14033cd28ad0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4c3243b6-618d-4870-8e41-852b2bc9a12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e78bb9-3c5f-40d8-9771-e8c4b282256f",
        "cursor": {
          "ref": "dfd80545-2035-479f-aed9-ab071c0478fc",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "85e59197-f023-4252-8ef6-8d0e1f419ddb"
        },
        "item": {
          "id": "b4e78bb9-3c5f-40d8-9771-e8c4b282256f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f67f19e7-4e46-41a0-afab-4546b1d33ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fece37e0-58e0-46a1-847a-c498b6312a23",
        "cursor": {
          "ref": "6857f399-ffed-464a-9078-068ac23fac64",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "44bda030-8d15-42c4-8f87-60e064733f53"
        },
        "item": {
          "id": "fece37e0-58e0-46a1-847a-c498b6312a23",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b7f26e85-86ce-4243-b770-a0b2f859af90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0ad509-9918-490f-92dc-da19f5e769ba",
        "cursor": {
          "ref": "42ce0516-12ef-402d-9519-5bc0b24cbc73",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f7f6ae0a-421f-4961-ac0d-b71da64daa9b"
        },
        "item": {
          "id": "dd0ad509-9918-490f-92dc-da19f5e769ba",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e5b8d2c2-abb2-4155-b652-f655968deeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561930ab-555f-43d7-8a7f-82c64ae554ad",
        "cursor": {
          "ref": "011c4ec4-150c-4c2e-9c03-93c9a20d62fc",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "88b4c7ed-6123-4622-8172-1b775cb9f1e4"
        },
        "item": {
          "id": "561930ab-555f-43d7-8a7f-82c64ae554ad",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "22683dab-9ffa-4030-8a52-7b6020e07153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b9dfec-27c0-48d9-8d58-748e00c94b1f",
        "cursor": {
          "ref": "ee732fbf-9bb3-4551-9480-aa16481eb78b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "af769764-2d1d-4873-b0cb-3da8356aaffa"
        },
        "item": {
          "id": "b6b9dfec-27c0-48d9-8d58-748e00c94b1f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d4960362-1290-4528-824f-456e0e1594cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093b02e5-b5ee-46e6-8976-436a0d671049",
        "cursor": {
          "ref": "fe6a0dc3-54ca-4c67-b200-d6b7f51b05aa",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2b73096e-db36-48c6-8847-07055af97b51"
        },
        "item": {
          "id": "093b02e5-b5ee-46e6-8976-436a0d671049",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8da6df28-f950-4388-ad4d-42f6cd511e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de582626-a649-4330-b971-069c4177b449",
        "cursor": {
          "ref": "8d37dab0-6040-4e8e-bc35-ecb820142f80",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ed4c17e6-5bd0-49a3-aeb4-2b44ddb2f653"
        },
        "item": {
          "id": "de582626-a649-4330-b971-069c4177b449",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "10c8a9d4-4e69-4325-a519-960b049aea4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf457364-249b-493a-b955-16433699bd9d",
        "cursor": {
          "ref": "f2b23ee2-ed13-4593-a654-9d0ca91ad400",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c2ad672a-5f42-4305-8df1-9ddc60ec7b24"
        },
        "item": {
          "id": "cf457364-249b-493a-b955-16433699bd9d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8508f401-06ea-4cf9-be41-dfa5c1b89306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb88594c-4bc3-4dc7-956d-d7ef6ae9f887",
        "cursor": {
          "ref": "67e9e5de-0911-43eb-bcbb-7d750abc771e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "02529288-9513-4a0f-b9a2-da1160e34323"
        },
        "item": {
          "id": "bb88594c-4bc3-4dc7-956d-d7ef6ae9f887",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c0a01695-fd24-4d6c-9113-7e63764dad64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a621d24d-b97b-45a5-a724-c104139816f9",
        "cursor": {
          "ref": "3cf8deff-8cf2-4e6c-9b04-3672e81e1697",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7a485593-b890-4d4d-9f51-a68276bf222d"
        },
        "item": {
          "id": "a621d24d-b97b-45a5-a724-c104139816f9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "484deda7-ba71-49cd-a6a0-0fdf44a83939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f54321-8e5b-47fa-a5f4-9b84c8cd8598",
        "cursor": {
          "ref": "cc39e431-8ffd-4780-9fdb-b5e6bc3cd79d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "06ecf362-4ce1-46bc-bf7e-a8d981cc45d8"
        },
        "item": {
          "id": "f5f54321-8e5b-47fa-a5f4-9b84c8cd8598",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bacb5e08-7fd9-4dfb-ba85-8344be4bd40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2525f6-1de3-45a8-9de7-791c4206e915",
        "cursor": {
          "ref": "ddedcf61-7397-4793-8b7b-b360e7ba6131",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "31ea9315-1baa-471e-ada7-153bc3a0232f"
        },
        "item": {
          "id": "cb2525f6-1de3-45a8-9de7-791c4206e915",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c19e8a8b-340d-4bb4-bde4-3f8314bcf442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed09c53-9d31-4905-90e3-f4c5863dbecf",
        "cursor": {
          "ref": "e6948959-bbb1-4970-b454-2d0da2678e04",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "acf28351-3b5e-4159-8fbe-1ffcd10f85f1"
        },
        "item": {
          "id": "9ed09c53-9d31-4905-90e3-f4c5863dbecf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "50a4d46b-129e-4a82-9a4b-eeb9a7e44173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2afff6-1f91-4417-a6cc-881c870d1841",
        "cursor": {
          "ref": "d774077f-e4eb-4a51-8eee-7d067c34b3cc",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6c415b36-07fc-4cd0-8997-ef204b37b483"
        },
        "item": {
          "id": "3a2afff6-1f91-4417-a6cc-881c870d1841",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d2286b25-4051-49f1-a49e-d6761f9883d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a381274-e628-408a-9425-963528824b40",
        "cursor": {
          "ref": "ff331a03-8010-4985-b242-680c89b6c22c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "028c11ea-8f2b-4773-bdf5-57bb2469793f"
        },
        "item": {
          "id": "6a381274-e628-408a-9425-963528824b40",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1f94c5a0-1592-45fa-9bcb-8857e000a8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a5a163-d7ad-4dbf-b1d2-1cb364623add",
        "cursor": {
          "ref": "19906f47-e70a-4ffa-a920-80a8dcb91a66",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "feceb9af-50b4-4da4-8dc7-e3236644b9c8"
        },
        "item": {
          "id": "21a5a163-d7ad-4dbf-b1d2-1cb364623add",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8c6242e6-33df-4cd4-82ab-55409b3f676f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be829a75-5abd-4284-8b0d-ea99cdcfa2ff",
        "cursor": {
          "ref": "31141d85-3c6d-4fe4-9d4d-69fb50c10176",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6b708ad4-ca77-418b-a8be-1f0bbfdb0015"
        },
        "item": {
          "id": "be829a75-5abd-4284-8b0d-ea99cdcfa2ff",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9ba5009e-5723-404b-844b-f943232ee6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d159b07d-eb9b-4370-93d2-c35d1eb06782",
        "cursor": {
          "ref": "c96273e4-7e84-46fb-bdc4-5c26e2bb02f6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9bcc2c50-aa79-4491-ba5c-6c7b869efc11"
        },
        "item": {
          "id": "d159b07d-eb9b-4370-93d2-c35d1eb06782",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5d50088f-68ce-47e7-880c-ef7cf9fe1422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec798b62-2a81-4fa4-994e-b12f65a2d6ec",
        "cursor": {
          "ref": "b2fefd44-d3ca-4135-80e3-39dadf7e08df",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "17b05683-e608-4f00-b4d9-aa7df5b4f234"
        },
        "item": {
          "id": "ec798b62-2a81-4fa4-994e-b12f65a2d6ec",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e3ecc497-439a-4699-94d6-76e04df7c89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956efebb-544f-42de-b6e2-6b3438ff47a8",
        "cursor": {
          "ref": "39919229-fec7-4e95-aefa-7ce547c2b1b8",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a323ec2e-9f0b-40e3-a952-5eb80e2ab9c1"
        },
        "item": {
          "id": "956efebb-544f-42de-b6e2-6b3438ff47a8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8ee593ef-e813-4b3c-9546-c049ec6efbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d961531e-86e3-4693-aeb8-d316a534319d",
        "cursor": {
          "ref": "6b0f7e95-d2ab-43b5-a2fa-433697395c42",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "cbc0f698-ded6-4b98-b77f-16e9e44814cb"
        },
        "item": {
          "id": "d961531e-86e3-4693-aeb8-d316a534319d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a9461fd9-1bd4-40f8-bca2-92d0e3da238f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e23b69-2e44-474a-a830-2ecbe93f48c0",
        "cursor": {
          "ref": "a21c3ac8-8a24-4119-9a9e-eb0c251f3bf8",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f1aacb74-d70b-4f8e-b87b-fc6de04e3b4f"
        },
        "item": {
          "id": "34e23b69-2e44-474a-a830-2ecbe93f48c0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3bcd4a6c-8578-447f-af8c-f248bf3864db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb86570-a630-48ef-a2fc-88902ae669c5",
        "cursor": {
          "ref": "2e24c9e0-04e9-4ccb-9de4-a0c24ed267d1",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "31852288-8318-4cfd-8b71-8be55e24c12c"
        },
        "item": {
          "id": "ccb86570-a630-48ef-a2fc-88902ae669c5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "92f13dd1-1367-4fd5-bb5d-5900e7c27dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b2f621-8cc2-49f3-91eb-a7361a539e99",
        "cursor": {
          "ref": "40bc02f2-444e-4562-818b-061a874d0372",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "020b217f-7c3c-4975-b2e5-013c27bf638c"
        },
        "item": {
          "id": "b6b2f621-8cc2-49f3-91eb-a7361a539e99",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ab6b8856-7443-46ee-895c-99d381693312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85864633-e1ed-465c-a413-dd4e93e964d0",
        "cursor": {
          "ref": "6061a9d0-6f9b-497b-acd6-c311fecfc795",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e0434c7b-985d-4139-9d4b-8089528cd197"
        },
        "item": {
          "id": "85864633-e1ed-465c-a413-dd4e93e964d0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "59e050fd-986a-4ee5-bf47-7c95db336fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bc6a71-471f-4474-8d94-51d68f5d8eda",
        "cursor": {
          "ref": "97c43575-cc40-493b-829c-11de6ba3bec1",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "38164eb4-a1f0-4ac8-8761-7788c34fddf7"
        },
        "item": {
          "id": "a4bc6a71-471f-4474-8d94-51d68f5d8eda",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8aedf043-8504-45d8-a8c3-c8e8592b12ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d794df-535e-4732-b21d-9d3038ab91bb",
        "cursor": {
          "ref": "46848b9e-21fd-4f61-bcca-3d0bb9cfda04",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "aa37b51d-f3c0-4c73-b484-24a1d751de74"
        },
        "item": {
          "id": "22d794df-535e-4732-b21d-9d3038ab91bb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f4fb59b8-b0e1-47e1-85d3-ee92d6f55964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8673eff6-2cd2-4100-9432-0494e9aeedb5",
        "cursor": {
          "ref": "f91e214d-702e-4913-b6f4-b74fcae70c89",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bb69171c-752e-4842-bd43-ecf9bee24ed6"
        },
        "item": {
          "id": "8673eff6-2cd2-4100-9432-0494e9aeedb5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4ecbdc26-c3eb-4d30-a8a8-a97514bcd735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdff45f-dc8d-42b6-a953-d8883a82502c",
        "cursor": {
          "ref": "90700b92-6e3d-4d87-9889-699bcdcc0d10",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "dcbf22c9-7dd6-4266-967a-531f96728670"
        },
        "item": {
          "id": "acdff45f-dc8d-42b6-a953-d8883a82502c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "23a51c5f-3f96-43ed-a151-d253381e63dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2985a6-f2e6-47b0-9ca2-93f652013855",
        "cursor": {
          "ref": "28f8df4c-5a50-41e2-9be5-2d1dacb27a5d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a8e1b8e8-49ab-489b-8947-05e49bca2d53"
        },
        "item": {
          "id": "ed2985a6-f2e6-47b0-9ca2-93f652013855",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "aa36a535-487c-41c8-9853-110c5605cad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b29d69-c5fe-45c6-893c-75d66fd37cb3",
        "cursor": {
          "ref": "301260c6-8299-46bb-97c3-4ca51cfdae4b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d28830c0-a17c-4acc-9c15-3eb691447989"
        },
        "item": {
          "id": "55b29d69-c5fe-45c6-893c-75d66fd37cb3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1ff75073-3ced-4f49-bbf7-e43728bf4eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb964d1-808f-4ac9-b808-9a6fd3e6cc6b",
        "cursor": {
          "ref": "f87330a2-f205-4a8d-95df-cdac59ed90e6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2fd43c24-20a7-4899-bd37-5506b605643e"
        },
        "item": {
          "id": "0bb964d1-808f-4ac9-b808-9a6fd3e6cc6b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6c8c20dc-2e6c-4538-92fe-67fefb0cf41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881cc3a8-982c-48a3-8f94-35b79b66e2c6",
        "cursor": {
          "ref": "c02dcd21-bb6f-41f1-82e7-a8dba6002636",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d3c730d3-4846-42c1-9f7c-85a09c752df5"
        },
        "item": {
          "id": "881cc3a8-982c-48a3-8f94-35b79b66e2c6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7da9c5ba-aa9d-47fe-816b-7483d5ef6964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d66c33-b68f-4378-9d37-f2f42bddb33d",
        "cursor": {
          "ref": "9ded226e-a602-4924-9b51-12fcc14c7851",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "db6ad82f-d5bf-4a6a-b23a-8b750c35b6d3"
        },
        "item": {
          "id": "52d66c33-b68f-4378-9d37-f2f42bddb33d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0f28b0a0-9223-41b7-b8cb-a2c8ab6a91d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76274670-e11a-44e9-81d8-a41a96202cc1",
        "cursor": {
          "ref": "53ae32f8-f1df-4dc7-bb85-e0e4c8126ca5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1f4ebbd1-ab7d-4ba7-8105-1c8db2197646"
        },
        "item": {
          "id": "76274670-e11a-44e9-81d8-a41a96202cc1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2b5fcac5-0848-47b2-94ff-df5d27a6f59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c0aec8-8c2a-4efb-90f0-faad1bbfe547",
        "cursor": {
          "ref": "3c486e73-7d83-4c47-8211-609183466bb4",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "46107f13-0525-464c-83a8-784a91a3b8ff"
        },
        "item": {
          "id": "36c0aec8-8c2a-4efb-90f0-faad1bbfe547",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8f4e5200-2f6b-48b9-8c6d-9ce953fa3fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b716678c-5924-4b9b-b60e-ca8c16515462",
        "cursor": {
          "ref": "29a205cd-8675-46e1-9777-23f5d7a16fdd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "bf18dab2-3275-4656-bcb7-33bf701155a6"
        },
        "item": {
          "id": "b716678c-5924-4b9b-b60e-ca8c16515462",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0ded1139-fe18-42c7-ae6c-07ff821aec23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4259e04b-0de5-4d84-a3b5-5416fa2deb0d",
        "cursor": {
          "ref": "c3df0e6a-5875-4ca3-aab2-0a47469bb898",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "26ba4784-d8f6-4563-b3d3-62bcfac5ca34"
        },
        "item": {
          "id": "4259e04b-0de5-4d84-a3b5-5416fa2deb0d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e8b535bb-0b2c-4e5b-b659-8917d912195a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daca8a14-0cdd-4bfc-812e-9f04b5460997",
        "cursor": {
          "ref": "0e900012-9eb3-4ab2-8113-db20c6712f48",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "461f377b-2706-4575-a147-05a7ee8e91a9"
        },
        "item": {
          "id": "daca8a14-0cdd-4bfc-812e-9f04b5460997",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9d10950a-87a4-4753-b607-7cdc3ea28c44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b13add-306c-41e5-8163-c7f909fa959e",
        "cursor": {
          "ref": "9f29a6da-54fa-40ca-b889-a46ad649d07b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "95af85b2-df15-4dc6-b375-0f50fbdd54f9"
        },
        "item": {
          "id": "43b13add-306c-41e5-8163-c7f909fa959e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2ccd39fd-558f-420e-951c-20b5e22b516f",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fc04cc-b29d-404c-a6cf-31b128d1dabe",
        "cursor": {
          "ref": "0805ea40-78fd-4421-8655-a97601902770",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "eee168f1-b55d-4217-ad9f-8d2515cccae9"
        },
        "item": {
          "id": "60fc04cc-b29d-404c-a6cf-31b128d1dabe",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a10a2b34-8f9b-4a89-a929-ddc6119a1f15",
          "status": "OK",
          "code": 200,
          "responseTime": 2848,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "507604b7-6f42-4c53-b58e-3ebc9e3947e6",
        "cursor": {
          "ref": "3214537f-0203-4e25-aac0-48d8de692101",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "81cbb3ce-ca1f-489b-abd8-f1581a14648a"
        },
        "item": {
          "id": "507604b7-6f42-4c53-b58e-3ebc9e3947e6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9db30ea2-1a52-46b8-9ed9-9f734c1bf33e",
          "status": "OK",
          "code": 200,
          "responseTime": 2402,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "363115bc-fcd1-4ab0-8a91-f5eee97cc06c",
        "cursor": {
          "ref": "221d294c-6321-4cd9-8f80-f2e71dc541cb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cd6eb382-7e88-4784-aba4-1cf5ffe2b146"
        },
        "item": {
          "id": "363115bc-fcd1-4ab0-8a91-f5eee97cc06c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ba8187f2-29f9-43df-bd12-94937e7be51b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363115bc-fcd1-4ab0-8a91-f5eee97cc06c",
        "cursor": {
          "ref": "221d294c-6321-4cd9-8f80-f2e71dc541cb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cd6eb382-7e88-4784-aba4-1cf5ffe2b146"
        },
        "item": {
          "id": "363115bc-fcd1-4ab0-8a91-f5eee97cc06c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ba8187f2-29f9-43df-bd12-94937e7be51b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be629cf-dbd4-41ba-94ba-481c02284f81",
        "cursor": {
          "ref": "f68740e3-daa3-470e-9549-5c87ff04d0e7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d8b483e6-90ee-45f5-8850-420070e52f2f"
        },
        "item": {
          "id": "9be629cf-dbd4-41ba-94ba-481c02284f81",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "58c00bbe-bfc7-479b-9e38-7b5076792e14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f14c5a3-bb45-47c8-a671-eb986d554fc9",
        "cursor": {
          "ref": "e3de358e-2bcb-4150-8587-ffd79232a124",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e596665b-99c9-42dc-933a-9411a28960d8"
        },
        "item": {
          "id": "6f14c5a3-bb45-47c8-a671-eb986d554fc9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d66e2c5c-e7f6-48b4-8c99-aa0d344a18e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}