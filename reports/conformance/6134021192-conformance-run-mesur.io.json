{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0e0cc2d1-6e10-4204-8990-54103c43e2a7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bda96b23-8c2c-4e1f-ab69-8c9f190664d4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4da9780-6b17-4d4b-962f-d7eec0367529",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "73b68679-623d-4bb3-968e-81c35b5d09a4"
                }
              }
            ]
          },
          {
            "id": "5e83d349-edbf-4598-ac6a-cb04c7c447db",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ae10efa-0ad5-4ace-a30f-d9f7a09455dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "048489da-f7c2-4e0d-b268-cdac58d790a0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "14a60495-5d21-4e3c-bec5-3863ef46d8c6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9232ca5f-018a-4b94-a775-98b708c36f43",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02a310c1-2338-44f8-98a6-d8a7983d6bdd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afe7c9ec-879d-4b37-91ae-2b770d12eaf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f95754cf-206b-40d8-8e1b-e1c1b12de067"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "158c12bd-cb03-4d66-a6b2-84e044801503",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55cd6275-643a-4646-beae-96f19de9fcb5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "73f8c7d1-b9dd-4e7a-a173-d5c73581cdd8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6fade6a6-fba7-487c-bc65-e6736ee76114"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a4ec29b-4d6f-4f2a-9d16-5ddcbdd1bd5a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3d7d6787-d132-48ea-8fd7-e0edced5d126"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a7c4706-bf12-4518-8565-a9391ed00e16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67ae2eac-e484-4360-a124-f99942f38097"
            }
          }
        ]
      },
      {
        "id": "94b2fe8f-f8b5-4ac5-8022-c7b086d21bba",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d536de89-a82f-47a7-ae42-13f12bff9be1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80373d8b-47e4-4d7b-ba56-dc3e4a12fb01",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f4c30745-6033-4059-96f1-4e7d23d689ec",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344c8423-428c-437c-8212-2fa4bc721a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "610e8d9a-fc15-485d-8d27-0c71db4a7866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f573ea03-6f4a-470d-87ec-4f55ecf701a9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ad88f0-f353-4812-a929-527d58522fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f23a4f7-1484-45c5-b382-9e0faf8e178d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4670271-5f34-4f78-b5e3-2b638920195e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65929e26-2651-430d-a571-a92ad0975fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eea29e33-ef28-435e-b535-2cddc4ebcfc0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e101e131-6a13-41fd-a19c-5a10fb3b331a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc8a5cef-4a5c-4574-9e5d-61dc65ed3256",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cddd029-ec20-45ee-9d4f-0c03bec5f490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33e10012-785a-42ff-a2d3-ed2cdcd118f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e5cb08-f7b6-4709-bcbe-b29b1a75adb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36660461-4129-4c05-bf6d-74e6c4a717d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "50b103ea-a24a-4c56-9241-dc325f0f65e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "deccc590-e291-497b-a9ed-e0f971522bb6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "185e613c-8d73-4ec5-b068-1b468bb8328c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7f28af80-d861-4827-8cd8-467333ea3cb7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6b2e491-5750-407d-a10d-071a378d8d14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "17253fdb-6e36-43a7-a423-449a668c4619"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a32a5ec9-519d-4d99-ab49-395cb40698a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6cdc08d-4ea1-4011-bdd6-9821a5be0461"
            }
          }
        ]
      },
      {
        "id": "fe8f5722-2b71-48b9-97c8-06f66c22cadc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d2afc1e3-ddfc-4208-8ece-b760a331daec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06f525b4-5564-404b-b7e8-4885cec469bb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1508e3c6-200d-45a2-8c68-cfac40cfc691",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0316391f-add2-4cc0-b2e1-95417036202f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7265ab99-b1a2-4205-9933-39bf5eb93e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82c3c44-1e23-4f21-a226-f40e34c298ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87ed8b57-ea89-4c76-b2ed-8e64713cf027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9d5974-c8c0-4558-83a8-a4d65fcf5f21",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9d761c-0991-4d46-a8e0-bb3e6fb66d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1223f4-5812-49a7-a7ac-ba59c3f6f353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefca26c-97b3-4d84-9aa3-7f4fd4a5b3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fd72801-6b8e-45c8-a0a8-f3914d68e6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf539cc-77d4-45f5-a734-73af7e42277b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15765745-82d0-447c-9f98-eda9fc21d9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94dc85c-82e9-452a-b99a-98199bbdd82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7b8991-1073-4b7b-a663-7680f1ecaf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "594327a8-0cd2-45eb-bac9-4ee93a3d1a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a067e3-8a19-45c3-8987-049100ca7ba4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c276cd9-8a29-4003-a90a-087e733bea11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ccf298-a75c-42b5-9cae-4dd1df21cd34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843dfe25-b8ca-452f-9ce4-157f4bae6294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a750a0c6-fca8-42d2-9b6f-783b3759e8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de79f313-19c4-49c5-b82b-99ec546e0ad0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e473ba1-e0e2-44d8-b09a-0a4645aab973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e13b1f-ec2a-49a5-b04c-a7a4602a8399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdf46a5-2198-4fc0-b8d7-55b9bfe976f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c774938-e954-4430-8347-6342d8fbf3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5336664f-bc57-422b-a3c0-bd4e16491c21",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fafe509-60c6-4b21-83b9-8fba6cb63d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402335d9-c235-4ef1-a712-e2a64377f2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a7eecf-ca75-4e3f-a89d-0568f477c0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e542aa89-4b5e-45c6-b579-5909ff9c6475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f7f79f-03a9-41f0-ae9e-1afd68e128ee",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cd65e4-bdea-4e16-8907-6cf3ae4c2278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e553b2a-b2db-48bc-9d98-91f6dff1a785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5285d3df-fd17-4818-a286-1446a57649fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "affcbe72-924b-4678-aba8-491f32ceb859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ddf8ce-bc51-49e5-981e-359fc9794188",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8af3279-b177-4e5e-8c74-08dbc090e9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f657c3-4b26-4bff-b719-b3c24cca2366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f791141-dbae-42d3-bc66-23beba1dc2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a7d2106-f444-4a3e-b75d-60514328bcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a681c103-71f1-487b-b5eb-067a941cee27",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a76928-c954-463f-a0ec-1d32cf0984c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3560eddc-b6a5-48b4-bf77-e09e4f417970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f222f7-16ad-4a9f-800f-e1bdd12cfc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b3a14ea-5799-4688-9fa0-55efecfba066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2108c866-829a-4fa7-a648-182d564d49f8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c0af3a-f6c2-49ed-9d6b-f96216069971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9352bc62-c192-4be6-8164-07abe11ec5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da63fe72-111b-4260-8e43-fef6577a7678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6fa8473-2ef2-405a-a0d0-d2a557ceedd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8882b1-a904-43e8-b728-8c0b06258c77",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e226ead-baef-48c3-82c7-25672620ffbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1f7015-e41c-417b-a845-113b23a79e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5393a4a8-b64d-45e0-9644-eb5af5bff4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c899c95-4886-40e2-a8ab-28c7e0b44445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e5a4ce-1e40-48d4-9cb6-138b873850b2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89339102-7a7b-467b-bd1d-9abf8d4efdf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605425b8-abf6-492d-98bf-1c63cba59bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02dd382-be20-4b4b-9b6e-7a14a6a232b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6134d2a-84f1-4b39-9cd4-5386bd8dc5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6220f7-afcd-4fb5-9c3d-b35e46184d8a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18abd2c5-c759-4e82-9da9-e39408cb8aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d38ea0-ea1a-40fc-a6c5-e8e11586f92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2986942-6c5f-4956-a7f0-231d7c6fd226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fe75783-8372-4052-9759-edb93f25c333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ffb09d-1129-4d0e-87b1-54cfaa20a18c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9916d91-d375-4088-a34d-32fab4f249af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9ca1e8-a21b-4586-b8ad-72bbda4e09d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc50cb0-e0d8-44a4-8f43-eda3031efe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2daaaaf1-4187-4417-b0cb-1ff1b5e41838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d457f0-f8c8-4015-b900-079af0424f9b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12ce252-7f48-42e4-a0f6-9cbb76c10157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4500918c-516d-4556-abed-c59081e5a83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e0714c-b079-4f61-9fd2-847a4832f7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4efb0178-c06d-4ffd-8fbe-226b99ef0e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b331842f-d427-4bd4-a887-10655867b499",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e278fd-dcf6-40a3-9f63-f5c365b3b760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a76d775-27ee-4f2b-a19e-4b7ff69e6e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d4d98a-edf5-4170-8fda-c8c9045f3694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e3d1120-8a54-4a49-8f09-a2a123ade227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13358522-312a-4f7a-b67e-41497555aaca",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58afd30-572b-42fa-90f0-9a811143ff03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e3d49b-0715-45fa-94c7-b16148e94333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e623caad-156e-4191-9a1e-818a5f26faa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f10fbfef-aa05-486c-8889-aa5911fc412a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3558ff0e-523a-4548-bdba-5c6c6f7b49ae",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2f07f4-5680-4a7b-8d36-d475fc7c6285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5b60c3-9cd5-4772-a6e8-447155a6476d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7894d74e-33d6-4046-9114-f90561cd9ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "89c092e0-7cd2-4087-8de9-6c20ca18ddc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3424b29a-6d1b-4c44-8e41-ba28d2fc452f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e56fd74-55b4-4329-961d-635d521ac4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44afad4a-cc00-4d40-966b-6d2fb9adc712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0759fde-36bd-4284-8ab8-ce0611cfbf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c3a2bb-9773-4172-ab7f-09c5d8246144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9aea071-4473-458a-9645-5f48d33c7e21",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf801aeb-961f-4093-9c5f-52c6dd85c8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f177de04-92e0-4eb9-814a-e07e140e1511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62574de-75cb-41e4-98f1-aa50df89f138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bf1250-7cdf-41e6-a4f2-c3ea4ffc7901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a036b8f-941d-4fd1-a036-960f91271e93",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f23c612-b6e9-4a10-8e51-caa089a9f3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2426f179-9984-4733-906c-85054941743a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b24a548-fabe-4197-aac0-fd0cfaa7405d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f54c4a0-bb83-4329-bf81-b755b3fe9943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e09560-f3e6-4ba5-97cd-748563b5d92d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81f1d7e-eeed-47fb-ab3c-bccd7b1eea44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f56da62-2cbe-4af3-bbff-f1ae6e166af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b0b590-bbce-49d0-a934-a50b6fa9ee49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c62d86bb-e682-4ebf-8d5f-51f506041386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4731fe5b-a717-4f89-ac8b-981d839d1391",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c7fd78-9c3d-4060-ac89-01b9813af28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e668c22d-1226-475d-84fc-74f9a80a43ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b2cda0-706a-4b06-9f29-f049af850d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8931cb87-ae7d-464e-b118-3256bfa0d3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2f82a9-3bff-4594-92df-4e1c9e99ca05",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb30cbc4-d9a7-435d-9975-1271c0378d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab36422d-5ef0-4fee-a83a-ac507f55ae4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7b79e5-2c3d-4f20-bd32-48ac48ee6aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb14fcdb-2d6a-4b44-9e52-ca955a0484bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81191c5f-7964-4e52-9f8d-a9ab76e89b36",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2160757-3d4b-4356-9427-4d62b0ab3508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6dc65a-6a1d-4d72-b124-81ac2b4a58b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17509f78-30d7-4fc1-b596-92a02270d3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03865fb-06c4-4053-bafb-e2b5488a353b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea1f833-6e10-4026-a77c-7455238c7edf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c38643-5c94-4f35-aed5-557af65519f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9bdafa-43bd-456a-ba81-c15ab0c49d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32bafe5-a9ef-4c69-8971-5802ad31e98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee8154a-5de9-4917-bab9-6ffdbad8efe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d333178a-1e93-418d-aebd-f4a46cde6340",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a0554f-9e32-47b4-9c33-2a1caf128b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142bac66-a8a8-4480-bbdd-76289c365fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fc33d9-856c-4b9a-b2d3-3ec407beee26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00a45073-7891-459f-bec1-276a54e7b323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a3c20c-1dbd-46a1-b4ad-3460ae709085",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2bfc6b-ea8b-425b-a9ea-4ea4e0a4a722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93412a95-2d11-4980-bb80-0902dfe1e639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826b1c00-7740-43d0-af9c-63f3f2c8fa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0dd3dd2-a9ae-4b37-93b0-1f7052c73c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12857a49-210e-408e-b715-96f2f9c6bab2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9b127f-79fe-4aac-8dae-59ae358ecc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180ca86d-6f84-420c-a54b-d93544b365c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9112ff74-c14a-46fa-9785-244d03ab188c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dda6d873-216a-4332-aef0-eeb3dc8b947c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955a64ec-445b-4fd2-add1-e61f409b6c20",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b923fb8-0df2-4731-9749-b3e63ba384b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18524de9-1c3c-43b3-b527-1ab35ac276bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92aed2fd-9ca9-45bb-b6f1-da0cc25302ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d95b7b-d706-487e-837e-fe74b262e84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4ca402-f1a5-47c0-a819-dfa99fd36e95",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43517aa6-9786-428b-aaba-59e850f38302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21df26cf-12ff-4513-9b50-320c767e3224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6bf1ba-1290-4e20-b7ef-8a8abb1daa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef9592d2-82b8-4af3-ab5d-53baa17a7ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773903a5-4e32-417e-80dc-5134b06f7ea7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa3673a-1505-48d4-a9a2-1763fca3fdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a106d9-915f-4e53-b651-fb2400fb9bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da3849e-2432-4293-88ae-25d035eb82c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "760ee1a5-7969-452b-a484-102bd1f440d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d475410-39a5-44f5-ac17-211ad1edc5ce",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3bc738-c9be-4c32-ba71-10ac110e687c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46d0a88-f477-4948-8e9c-bec9fc8d4bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4a1e38-5138-49a8-b0f1-2783087210bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7792faf3-7615-4669-a435-9235d7277bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29118481-ce01-4adf-8b7e-ab7b7074ceef",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18653f94-539b-4fbc-8021-31a469e7e42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf55f7a-9ac2-42b1-976d-59e954e91f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c772661-d379-42de-87ac-cf5997c2edb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "156b40de-8f78-460c-ba69-cd818e550889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1595dfff-56b2-4abe-b610-db50aef6df2b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0128dc6-3048-4a93-903b-f9c57e777a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bee4b2-78ba-4aad-afa7-789fe33f2540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac37919-6ef1-4044-92fc-49eff478a685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "14805a64-7504-48d0-8177-e4f66e3faaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4467f74-ea74-4ac5-a2a9-6571699a67b2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca746333-4c4b-42fa-a001-ab99dfddf597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fd9502e-5101-43a2-ae49-b45edd4c4e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb43fdf-6d6e-4530-9a0e-89233b109a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f734fec9-381a-4a7e-8aa4-9b978b468de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a21e90-d5d2-4386-a837-1adbe2fe10d4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d395129b-a35b-4913-a043-d574802dfad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e37c5dd-d441-4808-a96d-c762fe989dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd22158-898c-4d9f-90bf-b7335e9b8abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4b4696-ec6c-48a4-9923-d5e8598ba192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efc92dd-ddee-4a1c-8f29-ded750fa1b34",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65354d7-076d-42cc-8007-112730b214b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc9312f-7aa7-4567-a515-266104fbc7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f7cd23-2f23-42fa-9575-beed775e99e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "65ec35c5-ed64-4852-bd7b-d10abedac74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68e085b-59b2-4dc7-88d7-b719dab49ad2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed6ff88-0436-4789-9969-c9e46e310323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9625f1-8ffa-4e35-a820-0d0c5e09528d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f59cc2-ab0b-4f23-bc26-964cbb338f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eac57529-7095-4a3c-ac24-51fa6185dcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3731ad39-05ca-4b77-bbd2-67a871d1cdd0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69de7fc-7e38-485e-b28d-95036c092628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45dde21-5542-4a65-86b2-135a65f8c869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e7bf92-d620-4233-9ad7-3058695328d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d5807e-8b1a-4752-97d6-57c6d4a92f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5708d03f-ebf4-47b5-9223-7e8551d9e84f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91808274-96f6-41f3-9960-21e64d236225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc48884c-2053-4bf1-8f7d-e128d73b611d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02911d76-2bce-4849-86aa-46edb7e42746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd16495c-6245-4273-abc6-6e65afc9de3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e004b6a1-a2ca-4e47-bbb7-a614e1328d4b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d95b3fe-a371-49ed-bd5b-3606e36977a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea02c2e7-0a4c-4574-9f35-dfcd30ffb486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b51f175-8d6c-4a99-9cd4-a61f8bd60c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "583f9f0f-75a4-433c-b977-ac637231382f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9eca2d-557e-4e00-ac21-9a695935b15e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64daf9b-d27e-4237-b7e2-3dac32e11028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fb19c1-432e-495e-a378-56e3a6a3a20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ca03aa-02f5-4b52-a767-b014b016fe22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "425b642e-8f0e-4ede-8cf8-ef2a9313f342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5072e4ac-362b-49bd-9f26-691016cb12f4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5e9e3d-dbf9-433f-93a1-ef9f10bf7344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882e36cc-1b56-4bdb-b0bc-1dc042888a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ea8a96-58e3-4411-b5f7-71d3b49fd664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2397ef-0373-43ef-ac8c-03db9078b26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1fd6d7-0687-440b-b16f-d7db495e0116",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658e4f3b-e6f5-4f42-b41f-37f086b587f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da38f20d-3ce8-4ea4-8d86-c09891a1697f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a327fdbe-31af-44f5-b82f-12d87ac36185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47e5714b-956d-410c-9c64-236db1f914cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b43f473-cd49-4cc8-8643-003a1c381e81",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f46ce57-9905-45b2-8be2-53dd1f75d44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4756b49-3e80-42dc-a2e7-13c4f402f77d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8af229-5512-4556-83c0-7cfc0c37bae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d79c7b85-6e6c-41bc-a863-bf33a857dd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10e2120-bd3b-4d10-883d-5a825382e68b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf8725e-97bc-406a-88f6-409d48e942f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ada8a8-e98e-45cd-9143-f4bbd5fa7f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f11abec-7643-45ac-9808-852bc84e82b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "215d0ff7-f07a-4473-aec6-6a2b8239bc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e0e16b-8501-49e7-b1e3-7df0ba25154e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c7610c-d72e-4df3-9b6d-c808893e8fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6586f3ea-bfbe-43b5-a7e6-1d6f338ea0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b52892b-3387-46e6-a206-66602788f078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29c2873a-fe57-49ec-bb9a-95398df22f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcf0b38-cc8c-472f-934e-f5306ef5d1e7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2169fb5-8048-426b-ad61-36e1a7e632f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec3c718-9630-446a-9562-85822140ec9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b36edc-17e6-41f3-b49e-dad692506917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b260d8-91db-45da-a72d-59e55c6ea2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0392e21b-4ae9-4794-b671-1b299f23db22",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d8b29d-0368-45e6-a41e-d864f70744fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54794095-19c8-463b-b8a0-65490814d3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ac0ce4-a134-4169-9183-caa54511d988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1178b3e1-1c3d-44f5-90e8-57182c8b5a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c3b69c-ad0b-40f6-b60a-3736bee4688c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276c9cb3-e9c9-4771-ac61-d764649b56d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f7212a-95c8-47f5-ac32-28b60cfed6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60713a31-094e-47a5-b82a-863de68f30c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "78dd07a6-0c42-4f10-aba6-41ef26d46ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4060cd5-a80e-4a02-a9b3-8fa84763c8c1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ade023-ac86-4717-a23f-e94a8b085572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050d78f7-4f4a-488f-adaa-212fb7572afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c80cee-92ed-47ad-b56f-a022c64c49ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5690e2-b7d9-4883-b8d6-6ecd0a454f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4808901-21cc-4e32-b1f6-cb02ee9106ca",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efacb54a-8b14-4b96-93b6-40e877cce622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc6039a-6539-4ea2-a811-3d07cb3525b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9845352-fbef-4dd5-9800-1cf2ca0db722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79668a66-4f3b-4ae6-bb44-c90649d7dd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d55c601-5ba4-4963-a551-b5c204c5c52f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cee0301-3221-4c3e-983d-50710beca209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed75cdec-012b-436e-a1c2-f847a1676bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ff51c1-6106-4422-a3fc-a580f5a4cf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc07e4f-f72f-469f-bc10-ce0661257981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537842c8-5de0-4746-a6cb-043b0d0f2aa1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439b4756-4da4-4471-9734-775ad83c43f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8158da-ace7-4b3e-946c-b6958c925a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cc83e6-77d9-43ce-aaf7-fddb6733740e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89359c71-ede2-4bc5-8be7-cf8640acf146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e4f6e0-5b60-4fb7-b140-2dd7a094f4e3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f41ef9a-b83c-466c-a9fa-e7ce090fcb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7ce6dd-a374-4e26-a306-1170cdbb4a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de34513-c228-4200-a937-95bf15950635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3b2391-ab36-4216-96df-c3dccba7555e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f6cc1a-e49b-4991-954d-d18fb7381065",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f42574f-25d5-4c20-8f1b-8614d7c6166f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600a0d3b-ec3a-445c-96b3-4d62323253ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159f019b-bd2b-458d-9a69-9f5f02699a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7454cf86-f829-44a0-be16-2623f867b979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617e6f5f-6b04-46c8-a621-0635cb4705d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60992bc0-6d4d-456f-bc7c-4a7aed191a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c08ea2a-e7fe-4125-84cf-9ebbe97d65da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c9c42b-910e-4f55-82f4-c4d496d1c602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e92133-3419-48d4-93cb-d8d897e7e1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27d49c3-15f1-4404-88a2-10a1bc7fc9d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d027de2-6933-4ea9-ac50-08fae1385905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432cd264-c0ec-4fe7-ae51-8ef91fedbd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb37f0ed-59cb-4487-a8c6-eb845d17a014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "55a4e079-3f35-4a77-89dc-64b6a7e3000d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34228f2-69da-424d-a9f4-9799e22594ac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c5cda9-ecc7-48cd-8730-86edbeabfbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafaef44-a328-4699-83e0-9b6d554fdb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d81c39-7e1e-4053-85f7-874ae6d7cc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "91bc3a2b-ed8b-4e75-83aa-6bcde435c11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7d910c-ddba-4ee2-89d4-e7e95b516be2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f94113e-812c-4271-8592-d4850e1ab2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7ee378-3381-4e4f-bbcf-dab98b5d014e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f96bdf-94b7-4ae9-aa9e-49e6d9f3f790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1dd868-4bf9-408c-bfbb-0514b2b8892b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416c3496-ddbb-479d-83df-7ddcff8580ad",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951f8f5c-3ab6-45e1-bca8-0fc78350a1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11bf143e-02b8-42c1-9dc9-96157736254f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4dcdcb-e5ca-4f94-810b-c86c2b0bd271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ef784e-e7ca-4e00-907a-10624b21873b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b6b581-34d1-43f8-8b6f-8c6aead3c24c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019f5bcf-edeb-465c-97a0-a3cbb6528604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f951e8e-010e-48f9-aa9d-689b6aafe41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc9fa36-c153-43be-9400-ed21870f55c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "982b10c1-c8ad-4f0d-a54b-e295d166de5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a2ad52-1c25-4f49-a975-e5702db2eabb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadcd3ff-7e4c-48f4-ba2a-434b9a9e948b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75377ac5-68c6-4fa8-9181-4c9202d98550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1d973f-a3cb-44a4-a3e5-f61d4587dffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3953b0f-5daa-45a3-91bc-aacc34877f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f754fd-278c-4942-afbd-29b6192b589d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d2c89b-61f8-4683-b15c-98ada29caecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4635c698-e425-446c-b3f1-81ccbe050559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff521b7-761b-4e20-a3d3-5e22dbac42fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bce5f52-4f1c-41cb-92b5-21dc0a5c611a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebfe756-fa45-40cc-9ef9-1e8bf393a6c0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ab502b-1170-4ad5-995c-6ad2749e804b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388bd7db-e0a7-4755-a37c-10ec2b9e0ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95686cb3-a696-4139-b6fe-572a5211bf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87314b17-04cc-49bd-b119-b2c53854dce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673ba5eb-dfc2-42ca-96e1-5b0d5efc104d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f28b94b-e087-4367-bb17-0c6e38620ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4f3a77-1976-4acc-8fd4-6c7105af47bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7911163-4098-46ea-9e9c-1b36fd17bde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3417581-0f1b-46fb-a116-d7265837ee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525a6884-2098-4dcf-bd88-2b5b92f66ea5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978dba5d-477b-4dca-bb06-715013e9fd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f57752-938f-40e3-ad1d-4956a969accd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b191c7-7ff1-4a71-bb90-dd2051f3be15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "91e3896c-fc04-43f5-9f4c-a292d46ce0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45c967b-127d-4695-ad3f-babefc7619a3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c570e1c9-4f0f-428d-b83a-83e43c890b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b348b87-3bfb-4b8c-a0b8-c80e5c5f4441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf8caad-89b1-41e7-bfbe-c625fc4a845f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd54575f-59b9-4144-b00b-25af86d5447a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df5047a-e4a2-4f10-bb67-46dddef1f61a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c38f412-e8c1-42c9-98db-9cc8f772036f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9f4241-bf04-4af6-ae10-c94e906e77d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c83b149-431a-46f1-a8d2-7d72ab5d5ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fef7ca5-1db8-4587-9cb2-cd201d2b9dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259b7c95-2667-4b97-869c-bf14d2e284c6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8006e4-b056-4d22-b55b-dcabdeba65cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6340865e-edf0-4b29-ae50-855031f1bc39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a5b70c-714d-437d-8aea-2660d7391473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "820d716b-3a64-4994-a395-bceade824a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1ccf17-8768-4e77-9838-7b74894a3e8f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb192044-6d3c-421c-896e-a40bbb9ae1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25144571-f7a0-4cd9-b90c-58209a65a641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d71d60-ad37-498d-9753-3b376cfefc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81d67c0e-f288-48e2-9f1a-aa5f743cf59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b87fe0-af2c-4d99-b905-2b84b2e0dd9d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a19cfa-847e-4ca8-927f-150004d6d9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd996c91-dc2a-4881-bced-1e4611d077ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425d227d-5c7f-4794-ba12-359ce319e081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f152bb79-68e9-471b-a684-a9389e589001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd7d51b-9679-45b5-83b8-907ee87e1b82",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe407439-b033-4d16-88a9-b01f83459a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0248fd-daed-4b58-bd4b-61879c60e8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ea6d82-f63b-4705-9594-d3b224061ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12bb167e-8593-492c-9420-19556608e2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c91f85-5917-4513-85ee-5c6219ffba63",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef9279a-8f3f-4fd7-9982-d1b6506a66d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d466b83b-d9a2-48cb-92ba-0c7dcf2082bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e507a0-f667-4c8e-ba0f-029cb7f35407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a19b1b43-1485-4a5b-a58d-8edf667c19c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa334a1-cf7d-4350-be2f-14d58ef7a496",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c16297-385d-44be-9486-f30a9ad0ea1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd521fc-66d9-4b07-bcea-891792c550d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b3b26f-3afd-441a-aa94-02a9d8180e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06a825ef-ec85-4e81-9c74-a9f24202e5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0a6cda-3b47-412c-bb8a-372199ba83aa",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598de342-329b-4731-8ae6-58f68381f4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56734cb-2ff6-47f8-81b1-71ba5b1f1312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9a51ef-3fac-4fc3-9b17-544fa559d361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da454460-0f97-4930-add6-531031e0cb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd30d52-d901-4cd4-b941-3805d7f56a82",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d244d4-87c6-47d7-a2a7-b17ca95039f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d2d880-9bf1-4e01-a2b5-417186420430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94c815a-9f9f-4ed5-8434-5780b41b2cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7452c6d4-120c-48c3-8641-0a4e3b4f1484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62c0382-55fa-4da4-89d3-cd43877dfdcf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43947f1-17ca-485f-860f-e7fad926f60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0012a9-ed53-4a16-a71b-2676c1ffbeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94e63ec-491c-4611-837b-bf1337848914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe4ac06-2ff8-4f6d-871f-634a3b3eda9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88159844-848d-4f1e-8546-8fb7b83affdf",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3161d55-591f-47f1-91a8-16dbafcc4078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463c503a-ca6e-47ca-8573-06bb05791cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aabb338-1fea-407b-b652-7a292788f516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "950fdbb7-3a75-494c-abe7-9d5f255a370d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fde3ff5-f7c2-496b-a87b-f2b59e5533ca",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffe010b-3260-4940-82dc-0deb8e444ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b342d28f-b1da-45c1-b895-4a0b853a8955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3cf674-0844-4b17-be77-c8b93cba096e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ca33df-1b1d-4ea9-909d-c6b5bf97701c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8dc5ba-171f-4aa5-bc43-94fb0f366906",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ae7f64-18a5-4a76-b9b4-cd79268e48d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0cbe28-74af-434a-ad5a-b47f4389d773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b0bb81-8742-43d8-83d1-d6c364b8c4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0343c709-4e2e-4153-b81b-634ecb8d1e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91df0083-b9c2-439e-b6d1-5dd6fc9cc27c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07943e38-a092-488a-8d43-f6a4155ec31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59974c4-a926-4a14-8db0-fc7be326ee3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb77d79-d669-4a0b-9e93-9020ef3f4b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5801400c-5ea8-4df6-b864-bfb627728c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591742c7-3c6d-4862-8e56-8498ca8d41a9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601a2455-c36c-40bf-a9ec-877f89418de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34dde46f-8cd1-4aca-8d74-84cfa489dd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f81b587-abba-4f49-af1f-63702bce289c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8bf46f-8ff0-4785-81cb-3b70a2761d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d49c58-e158-4ec3-b3cb-1555d917c5cf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9132da6f-f799-4f70-88a7-78b97cb60872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ea5a43-8450-4339-a3b1-50d8ce1c61e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6b98c1-dc40-4d93-a339-ac4ec36be7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9b26d3-4283-4f2f-b775-a8946b97a561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d90d3e-4e68-4fb1-917b-0c5f5477e823",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63abef25-a8b9-4a90-85a4-7ecab9d4ac0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da22bc4e-b650-48eb-be71-c01df334a8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046268e1-32a4-47e4-ba8d-c465b106385e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99993016-47c1-44f1-90f7-ad924a57ebc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd666009-d9d4-47fe-9602-d56e2e892a95",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3751add1-369a-48e6-a1b2-433fa16d4218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce91f59-fc57-46d5-a1c4-701107e2bf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211a146f-92a3-4ac8-b7fe-aa0dcf7206e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9ed4c5-b093-4362-aba3-ad4331a00dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686fb418-0414-4657-b822-32030a5861ed",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f7143e-7ccc-4120-98b3-dcf26eb5af9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1e2732-a9f2-4f44-b118-95e8802f31d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9945578-71b2-4614-a0dd-005681dfa4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8e4701-d4a5-4fa6-ae69-440f020feb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fdeb59-07c0-4c58-8123-51832455150d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e366204-a776-435a-b6f8-c4da56d56590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6a8202-12be-448f-8385-a6dc609feec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaf3b25-0214-439c-b8a8-74b0e2c7f036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4950d950-2b1c-4a2d-bda4-63c851522efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad7fc4e-8c31-4dcf-977e-84fb2455338c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea72d615-ed6e-407f-98be-cc54fc8687b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49824c0b-86eb-4eac-ab5c-dc936c048f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32546120-5f9d-4bfc-a840-ff9267b348f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0c2091-5e22-4c97-9f1a-1ee46d52d10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65812380-aa0c-4d2d-a611-71a11d73826e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e309863-fc3a-4dba-8686-84a4b1732567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba22743-fcfc-4003-8d2c-0fd846bc6b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95f4c91-746b-489b-aa10-291e4be2cefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e54c4bf-826b-40e3-a17a-df2111d654ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6819182-3f66-47ec-9886-21c625121759",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d641af91-b8ae-4b0f-993c-6f52f067ffb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a2626abc-8e64-42a6-bfd7-68f68dc484c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc856e4-e871-4694-ba46-cb52c4bc2d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8420761e-df28-46e5-92f4-237a23e869fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3ae95b1-0a4e-4ee6-a92e-269f8425326f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b870e27-1be9-4fe7-b2b7-462aed28f0a7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af72d315-2dca-4c4e-844c-70de7ef5ec98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34899026-ae2f-4ba5-b4bd-ed1aab042096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28831bb7-de8d-4a2c-80c0-2a6158a45156",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "030c69bb-0c43-4f79-84ef-4f6525fb08dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68b0afc0-8bd3-4b4f-94ca-735b94847b97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d5566b0-1d8f-4cf2-9f3e-b8507abf8ca0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddc95a2c-76d8-43f6-af30-9114704b18e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26fb8243-3436-4363-a3d8-d40dc4c839e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8aacd3a4-d808-41bf-a68d-397154aeb712",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89b45e7b-e4c8-4c70-8c3f-a9642cf9bb2c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9fadfa1d-26da-4592-ad2f-af2971e319e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dba79936-99bd-4616-9ccc-41b2cb880a04"
                }
              }
            ]
          },
          {
            "id": "bdb4c9d2-723e-4091-a831-89ac6833022f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7aa79cd5-69d7-48f9-8d55-709a21c44303",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dc5b24a-71a0-46c6-999f-3207f9755860",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73e47952-c4bc-4445-b454-5e29af192944"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6252f90-bdcd-401a-8970-d0d0539572ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b83b423-f836-44fa-8523-54ce62e45523"
                    }
                  }
                ]
              },
              {
                "id": "f2e410c3-d8b1-4f23-9ed3-261a5efdc295",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4932937-c1ec-4bf4-8c90-4b5e05ef3f02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1476455-5a89-4f53-9700-e68520229b62"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50048792-27f2-4611-8d7b-06bf6b83bcba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a7e6d50-010a-4c1e-abd6-fc3f79a6ad6c"
                    }
                  }
                ]
              },
              {
                "id": "92dd2671-bf2c-484e-9f2b-2e6a0d2d22c5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fde5b5f-eb51-402b-b914-a244fa77efdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbe40836-7223-443c-9ba3-295fa3824951"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0651f55d-f0ca-47f2-85f8-3157c8c32a73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f528ff6a-2a2a-46d2-86aa-640bed55891e"
                    }
                  }
                ]
              },
              {
                "id": "2b27f4a0-eb29-4678-847b-a4e86c0978f1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09fffc68-0f5d-4257-ad13-a02cea683903",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c55f9b6-95e0-4f33-a135-bd3b88a3ff18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e30da77-6e21-4e96-8d14-a9856ea06462",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "94e2788a-ae98-4191-935d-45e701ba8b1f"
                    }
                  }
                ]
              },
              {
                "id": "db74a88d-6109-404e-9525-9ed8f69630dc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29e3a5da-89af-4777-98b2-a1ec0fc1e77a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c6f13e9-b730-4478-91c4-be9777049930"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ad47580-f521-4eec-a943-3607f46ea53a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5fb82901-91ce-4b59-93aa-014b90921eb4"
                    }
                  }
                ]
              },
              {
                "id": "a9556d98-0ae1-4909-b972-7ba809cfdf2f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08de836a-c864-42a5-921a-fe83479e980a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ecbf7a2-f17f-4cbc-b359-b54c504bbf40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af28f594-2d93-4b6f-85f7-8847f9986fd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5f7e46c-929f-4075-a1c8-b3f4b97e9531"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5395e478-3c22-4c07-9548-576040fe31c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09bf0fb2-8f4c-4704-8234-8dc0466791d9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f2e83a8d-1d04-4f86-a626-4e6b98dc285f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4807f15-cc49-4875-ad38-4947fda8f917"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa502f8b-a85d-4393-a821-290c7e7f005a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8aeaa127-565d-4d97-8c72-b8bb7a933ad6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44064151-882f-432a-a339-0056d97ebb3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad6c5e03-367c-4661-906e-0b42040d3b79"
            }
          }
        ]
      },
      {
        "id": "5fef5a55-a322-4f5d-9a23-6bdb60093b71",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2aa00f13-1f78-4e86-8b7e-4332994ecbdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fb83ea3-8e3d-4df7-b79c-b7f060d7a7bd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6fd3f16c-1e71-4744-9e4e-fc2124f504fb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c5c2f5-2fed-4d81-8680-f8ad67d8ed78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b395bbd-0eed-437a-98bc-b2de459b2a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941e0667-f089-4bf2-bccb-ba1d34e7400b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb551b4-4078-4840-ae5e-7f73c6c9bbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c2f56f-930e-49e3-bdf7-5d572527f761",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f32115-3c3e-4f1a-b4a8-55bd4dee85bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b100910d-83cb-46e2-8665-e182122e7699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c532dfb-b08f-4734-8218-75927ae8137e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "434212ae-5447-449c-96ff-b79246df5599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8be299-d4ac-427a-8107-ed874d37146b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dad29d-3c03-4d65-bd5b-449949e50900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7755837e-81c4-4236-b08b-76e67a052127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1d3034-7e11-44fe-a496-19b57266a96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "548f76d1-ee9f-464f-bb53-87320173b7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fb3538-608c-4713-ba44-8a6325f470b3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027d0d85-f7ba-43e5-8c02-09077c4a60b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bca1688-0c7d-4711-8bd9-b532737a0dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a94815d-563d-4aee-b446-e5c168de11f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc9c365-dcd5-402c-bf59-01fade67b937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9214e575-7e9d-41eb-9ad2-b3296d99a829",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489156dc-e502-4d13-814f-6f2778ea87ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01282ef1-fa37-4877-87ee-13ff5aa0b2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83422ae2-1775-4465-8746-eb9e712bb558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c98521a5-116e-4182-9776-c49ce0a3b4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dd0cf4-7525-4cfc-946c-783c1691b60e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f1b8eb-9725-4c08-9dc0-e66642c523e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91986207-db04-41ef-b9a5-9d24891a43da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1549f816-8cab-4288-8b3e-0b5f9ac4d6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03b59458-d52f-4133-a709-2c8414727d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee61f6a-0f51-44a7-b46e-4c0c5b65e56f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6592f8fb-d1d5-4a8b-8e8e-493c946371fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b0017a-17ef-4ba5-be7f-2f59f22046cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87c607a-5ca7-4dbc-acdf-9f14f99cd921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "79181af6-5e03-4b41-8685-aa7e668d3c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5ce420-1aa1-44f3-b0cf-4d241d1883cb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e14a25-6622-4c88-a62e-f40721e58c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68027965-536d-4f99-acb3-8feba0a5d981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfcd2cc-a60f-4541-b2c8-f7de94d8c9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d63f08cc-340a-476c-bbfc-153930f743ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1aaf3a-02e5-4bfd-adf1-7e488c40a862",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96ca0ea-44c1-4335-b544-b254d61f57f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e560e25b-f5eb-494b-9b93-cec3928fad4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c5e1ad-9942-41d1-8162-9f1bc0cc959c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57b96ac9-7f3e-4a06-a45a-16daf44883c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e283bc72-b485-4ded-85f6-b012e090eee7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8353ab4-4841-41ef-8023-c259dad5e6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4baeadb-54ba-40cb-b62c-61e3b8da74fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1816e9-4849-4bc7-ade6-f4c06aa96419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f410ce-bf9f-4621-9742-b8f5c7d9753d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d875788c-20a3-4ee1-8b61-4aea3fea935f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d2872d-643f-4a69-85c7-781097589f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67ecc90-8bab-4f48-8aad-57ff1e202aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3411c2f1-b863-4836-b4e0-d44d08f640df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c660987f-f762-448d-877b-39ec6b238d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def2e30a-e4e0-4064-a4c3-880af5357ade",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e09865-d755-4f54-b8eb-edde05d98f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4586a59b-0012-4e08-961b-c361d22225e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af271ee-348d-45d4-8fb8-bd405eba68e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06b1f883-581a-45b5-86b5-c74369843ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c3ca12-d686-4fa7-abf2-0500b9ef3dc6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513ea0b1-3a81-4379-bfa9-52c484fa1178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0f253b-507c-4faa-8be8-cd25d800c405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555a3a56-0056-48d0-816f-0b49308df092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e63b8ea0-5fdf-49f2-916b-be333930eb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc7dc19-547b-4f56-b930-b13e0a12d8ba",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af9811c-a991-4a8b-800a-e4932990c43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0e5419-5859-4f67-830a-2f8a70a9915f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e764cf0-1ec7-4499-822b-c95a5fecd3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "056d579f-5acc-4822-91a4-325c927f0d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cb4fd2-d0e8-4453-8225-60c44b3bca84",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99025642-27d9-4ec1-a9ba-1b1ecbd4df4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a561640-8141-4f64-8a85-fda173f0e264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36e0c78-506d-4cf9-a8ef-24a99aa26264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a96ae7-7c05-47d3-8eb3-be249b6ec00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdc3db6-f5f9-4950-b6e4-52418a2c8652",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7eecd5-d740-4659-a664-67468d7b7327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d01c2f-cabf-4c3b-8b44-e45008d74863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427bf5a2-b14c-401c-83b0-6f7d0157933b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0454efb2-2637-45b2-be70-45d41a66fb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06f2c67-1f97-4a87-8cc1-86906ffa84f2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6336822d-2f8a-4057-858a-4c9ab89d7db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17771b76-05e7-4d63-94e3-ca18628cd111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d61e7fc-62c9-45d6-aece-c46d338ea037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "64aab598-8ec8-4678-989a-8914dbaa4511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b3407c-8383-481c-a1ee-b9e00f903766",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fa6e65-16cd-45db-82e6-a63e2155a241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e3f8f5-a0a4-4f0d-a8ee-f66692ec8b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63303bd5-13b4-432c-839b-591075e03122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6bcf393-c42f-4ace-9b23-1110785dc44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4291b4-4d2f-4f6c-850d-9659aaedd70a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89086b6-ec32-4b7c-babf-27d6cf803cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6e12b9-e175-437d-a00f-a4c577fdd0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9c96cc-a470-4050-8ec7-3c25e9074427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42161405-d9b3-403e-9b7c-7781c224af1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d944ad75-b041-437b-b849-9440aa178a5a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c10b05e-b3c2-475b-9413-bd8c2a2e68fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088ee14c-bb93-4d5c-b0fc-25ff49740f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a847438-a17c-408a-a1dd-289914a831be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d887b1-0aa9-44dd-96b8-7cab26762b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ede36d-575e-4953-96f1-8f3be87e9aa7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59c7fdc-57d2-4048-81f5-97bb515069f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f4692f-c248-4385-b724-07c26f5187fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f6838d-ec53-4830-bea1-d5a0a20f2366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51180cba-fcef-447d-9b86-0201518e6640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1ed850-7313-4625-8f0d-6e393e10f252",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced82229-92a1-4724-90f1-6dd3db1fa5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b8d3a2-6c1c-49b8-8f20-32cd7990d917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b0d451-d789-42cd-a85a-3b97890f7547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a96014d2-9266-4502-9d49-615edc8bc2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddc69bc-b04d-41d5-9ef9-f621c018e2c1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b36e43-d19d-4fee-877e-40f7348d0dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8523d5-771e-48a9-9675-7cac0643cd31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa4819c-9fbd-4aed-8e97-8d04ed4851fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ed9471-a0f3-40d3-938f-82cb919f9c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57acdf4-a25e-4c49-bb75-06205af5b981",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d0de19-5197-4c61-a40e-f8ecaa2f021b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e78311-c15d-4d74-98a4-70f4a78d3755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7175c763-6456-4903-ae28-22352edf8570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cbe366-66f1-49dd-8716-003811c182d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d893bc1-1d12-46b3-ae6f-4ffd684220f8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a6d6a6-f428-4d46-8626-d314962bba8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51e44a4-75a1-4cb1-a5ef-91a7c3c8b72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b2dfce-e7b0-4bb5-a366-1c7d6e29db99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08068ee8-cbb0-4a8b-9b69-198ab28ff141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06280c4-3978-4388-894f-f3b76b0813d9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7346fd-a3e6-4481-aac9-9075c4524e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3d8b04-0286-484f-aaf0-3f2a601372f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafc7c40-bfe5-48e2-916f-a182b04943d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02c92561-3b97-427d-983c-8cbd47da07eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21cdaa0-7127-4b43-8e21-9c480e59c27c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00088f4c-e447-4bdd-9c89-0e8875f2bd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b055b1-9652-4cc3-9d36-cb810684c7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb45ce40-12c2-456d-b30c-03d7859e6f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7800cb-f818-413f-bae8-f48362f76a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9f89bb-9914-4269-9b59-d13506e7ac06",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84888e45-f2a1-4bf7-97cc-47137e4b1ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceef50bf-b25a-4b23-8d80-77fd35beb64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fbc321-c403-49c6-a049-a7fff13957f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4274f5fe-d698-420c-8c16-3291d75c3d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce35d17e-a973-4ec0-bbf3-69a5516224e4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a03b430-6fce-4f1d-8d84-ae1a08ba078b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59213f73-5213-4e72-b0ef-1942850c1bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08884adb-270e-43eb-a183-a365c49fe9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "356d4c17-21ce-46ea-b0f0-81bc585f4ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea3b119-8223-440b-8bba-4864fad358d8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "280a72a1-eb61-4c31-81cc-4da39e1808cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853c7dc2-7f49-47f7-b6dd-f586b149e543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd91348-3114-468b-ab3b-d980803ea2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5eb18e-e6ef-4c8e-817c-62ec2b721cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66433f65-f799-4642-bc99-233baeec4089",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e0aa93-fe90-4ee3-a100-094c9c27ba9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5334e7ff-2e69-4de2-9650-36bbc9ce3171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd006fdb-b28b-4d23-854e-cff40715380d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "415fe18d-59ae-4ff2-ab1f-922f81d0cd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb35ff4-b5bb-4890-870f-8d7fb4266c1b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6e0590-ccd9-4313-aca0-df6698bde3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a907ddf-48fd-4ed5-8d6d-05b676949d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77820c62-0992-41f0-9d9c-0e39e9f4cab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6371f756-72bc-4770-a98c-31441d775ffa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de0871b5-ab56-41b8-9054-a3581a6a05f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d400c78-f278-4f91-9b00-e90b8360e895",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e168957e-4d9b-4aad-9967-c26f12939e4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8d441d0c-37e0-47fc-be7a-27a50c6c5cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e69b625-a4e6-41b6-8e4e-b718d8456480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "277346c8-6ec2-4023-8b9d-f3465aba11c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08f2efc2-3c9a-4b95-8a0f-850fd062e0af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8216f3f3-4873-4641-85de-5203e7483f0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f83d559-2be2-4fdf-b659-73e4626068f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a275e3ac-76e7-4aa6-97bc-eb2aefbd9abd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a0de9ae-a775-41f0-ba9c-7c8c2500eb4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7514398d-55ea-44eb-b8d3-b63a3ac957b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e219d5f8-db91-4ba2-b79a-2280a38636f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a331d871-bb0c-49e2-b073-1692b2e5471c"
            }
          }
        ]
      },
      {
        "id": "58a383ae-1a15-42c8-a49a-abf7aeef16b3",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c63e5440-1c07-4751-aa5a-a2ed56fd2416",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f906ac1-8a04-49bb-9cef-084c94cc426d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "31fbdb6e-2933-42aa-a13d-915908dc9334",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5624b82f-8069-4449-b21c-9707e41bfe7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b6ada6-5c99-4690-83e1-717113dfb288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446d74e1-7b2a-4942-b47f-74a93844230a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "06c54fed-ee84-4442-95bb-14312e7ff156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8755921e-95f9-4d3e-803a-1d7bb2fea8db",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6fa0fe-4b4f-46e0-b4d0-dff3f12d1871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8bd096-667b-4526-a24b-dd50ec1ad2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c511e6d2-5dfb-43c2-94c7-e3a78e0deca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "795e91ad-177c-402e-8a89-2334ecba1d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8124292d-f924-4285-8587-f1a9a9ccccb3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c77dfa6-4618-4ade-b81f-df657417ff0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81676081-6275-4020-a806-5a91befdc992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f23de5-bbf5-4dfe-9431-2d639a60bfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3424d83d-8861-4b9d-a9bf-3b68131a7eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d816857b-1cd0-4ab6-b245-93817d1fca59",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a548e6-fc87-433a-bb49-b9f7b189a003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41551d0b-fe60-4a60-a51d-0dba1cc7a004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6085c3-6d7e-4075-8fd3-917c61c191cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df20e457-3fd7-4b11-ad4e-284d207eaa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329de7c0-707e-40a2-9dd0-7621f1915713",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900cc8be-e530-4931-b163-01dc8981bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2280993c-cdf2-454b-8d1f-3e31bd344d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8dc8de-fefe-493e-9b8c-ef6b05db76bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "874ce26a-8017-473e-923e-0e2e194ba02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9386e4-2a86-4a67-b8e0-55477352b669",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b45cb1a-ab9e-4e8f-9d60-7e04d1a9ee1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd0c66a-c103-436f-bfb3-d5c79ce48f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a764b013-44ec-4505-b3b6-79e3edbe9802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c647f9b1-fb1c-4f71-879e-af58ca381935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89348f6-c5b6-43b5-a977-dd55aa23016d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f75dc75-e3f1-4dd2-885a-805c3a974bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca06988-c089-4ca6-8828-9808c8576e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e95187-a79b-4dae-9b0d-3373f9be00b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "910fddd4-909b-4043-b248-0eac5884a2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a874229-035d-4953-8988-b86533ba0bb6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d51479-0cc3-4285-b9a5-9d3044a7d425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49089c79-317f-44f5-91fb-d109598c16b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1b4dd4-c926-4ddd-bf52-ef00688ef0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "599e0a58-c7d5-4a53-8fad-2d998c5eab4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e2e380-74e4-40e7-89d9-b0210b3a837b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaba110-537c-4cbb-ad11-3353f48b2f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b83342d-26bf-459d-94ac-400a6d583d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f699ee50-fcea-45e4-86da-8c3db1a6b27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8606e0a6-4e9a-460e-ae78-604ba140e36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da67ad7e-7bf8-430d-8d07-77c4bd9f8be3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722b5e74-844f-43c3-987b-7db49d806146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665c4e50-5968-43cb-8242-e2d2648bd56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8dcb1e-e257-41fe-a0f3-543eb58bc98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36b3b4e7-8b72-4b23-b5e2-9289877c4f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30016a34-dd56-4d31-9270-bfb3a7fa778a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3772a04b-8620-4dc4-821a-c80312f0e1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e990729-2245-446d-afae-3b74eb783654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f699ed29-bc07-4785-8b92-deedf8a5090e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "81e0bd19-d6fc-4c89-8b27-7ace02b79153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea6d41d-123e-40d6-87b2-80c7658f2509",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb8850e-6274-4acf-95ea-bed191bbd2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09c1ebd-47ed-4eb3-b2a1-c2e1a44b0286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0e348d-740e-468f-bacb-4a7f9038b015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87c3f4b3-c13b-4fba-aa65-d6e239052431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9020b47-0be3-4a3d-9189-eb837bff5cb4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2b450e-fa99-41af-a7cc-b28965abaa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b448440f-a268-4dec-b437-313f6e5f29dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754b62cf-b961-44ab-a203-33e1bf4be733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9578be81-6f64-43f5-aac1-0dc0661c7e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611f6983-eef4-4119-9453-79ca8c688102",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7091ad5f-a2c8-4fa3-8da0-7f01b0a7dfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21ff0fc-d098-423c-938c-126e5ca152a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3937a84-bab6-4d88-bac5-aa372c690c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "660383ff-c948-4087-9a75-943f9280b61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd9d6dc-7043-4450-ad5a-9ffb2862b2e3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2e9087-5727-4ed4-9f61-eb3758c35352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7f5204-aecc-4931-89e5-7cb7f902515d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c8833a-2f7c-4cf5-8a74-92db43a8129e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6132446d-fef4-4706-9a09-6045384acbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7e89b2-29f4-4083-ae8a-98728bb18d43",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67de19df-daf1-400a-a229-d27c92e11c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2b0aaf-df74-4466-b631-918b6290817a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536347b3-756b-4651-b28a-266ffe3fc61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "49ed4147-813e-44ff-8238-04a18e63bd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081f6f29-709b-4001-b967-1cc979348c46",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d1d982-274a-48ce-a19c-f3e601042db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8ce74a-9647-456e-bff4-d33b1bfc209a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368afe6b-4601-4cda-bf4b-639ba8ad3ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0ca283-92f4-4bb4-819e-85d8d8d7fc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cef1db-4616-40f4-812f-b0e928270ea5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba915ec6-dbab-4e25-a31c-a5d285c63a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb3d86e-ed3f-483c-8a5d-134783c30d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296498d0-cb64-4c10-9c1b-e36ee417c65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c31f4600-2249-4c9e-82d2-9ed9898df68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cfc65e-754a-47ba-acfc-f02562617681",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd813af-e407-422d-b59c-448cab43ce47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fc121e-db5b-4534-a1f1-ec122db19c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d26ac6-aefe-41bb-b804-34fd43e1094c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04f31320-fb24-4a20-b7b6-7b68f51c2fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafce33c-927c-4233-8728-1b60b5eebd69",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486a3b9a-ec73-490b-9ca8-9dac4e08460e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e31e10-47c1-4dd9-8c53-b8d66dbfa282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeb10cb-bc51-46a0-ad21-5b51527e97d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d443a730-f6d0-4fa4-be8e-6ca4772084b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cb243f-adcd-4000-a1f0-14b05781a7e5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8af2fc1-14f9-41ce-9425-d81a7aee60b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aed2ae5-a6cb-4f1f-a0f9-21da2ec6d252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22b8477-039e-4722-a0f0-aecbb2dabf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f563e17b-6e6b-4c95-a613-0389fa700017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47fc923-5982-47a3-8cf8-3b30196eb220",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb018334-49c8-44c0-b860-d0a3709f3396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002928a6-bf7a-424e-b24b-78b39a7c9142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd44eae-1705-4870-a7be-908a00c52755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a87a7c0-088b-4802-9aca-e59bf1cffe33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f928ad-e708-40ed-8c4e-d8716737dada",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d64d7a-31b5-40a9-aa87-06f40cf30b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b61b43-6e5b-4989-bbd0-7c0498db4251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9070fe8-7b80-496e-9532-d1112d9b3235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d87124-4e79-4b54-a1e0-9dfed0b4e447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa24782-a6e2-4783-adcc-e29ab9698cb6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8717faa3-44f9-4dcc-84a1-0e72337d6747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c2e83e-b934-4081-8f5c-24babfeb5aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb560a0-c6e4-4db5-ade7-75d2176bccb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9db07b33-5e7b-4b78-b0c9-d6a2f22e86b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68b8fc3-ec6b-4ffd-9ce3-fc9c6addc994",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb4e470-1f3e-4804-afb5-d08a0bac6c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fbaa8a-5075-46a9-a1ce-b94c2d03ff66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eed4afa-3c03-43db-af25-da51a217a0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec58412-4f48-44a7-80be-874bf79a980c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcb2baf-9fc4-496c-a07c-82d7a79682e6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a892b672-47f2-42fa-96ac-118f5c022f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd81e78f-bcc6-4872-9f14-1a10c8061cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f155f7e0-ac41-475f-9681-f05671d65dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a29e5d-dc67-4437-b0cb-12eab6738f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b426e78-5300-4d4c-acfe-b60a6d41f5e8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b71d1e-2dd3-4c02-a4f2-e25d724aa049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed19de2-1887-4f91-bf84-e6d327ff361c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbb4868-a1af-4f7c-b2b7-f525fb4270be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53a605c4-a913-44e5-b375-c798cb04e6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4251175-0f00-4af7-9a9c-f2d65a37c2b9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb6cc64-4bb6-4df6-8772-acbff07ddd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d300f7-2d75-49ab-ad03-65f55b3c7e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06ca8fa-a09a-4646-9b0c-de31e9360f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "073b934f-89df-43cb-8d00-3ba225b99be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ff2182-47fb-45bc-b61f-8da851e068ab",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0822ec-8ede-4f5d-bb79-ed747f8cb45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7564d7-649c-4e94-97a4-2c16e2548366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8087f7-a801-4e3d-9bb7-eba59a50a63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0b9047-a6b1-4b5c-81d6-0354d810cd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5033af77-281d-4213-8bfc-d40aaa9daea9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742778c5-e503-4c5e-9446-f20fc6574ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d99e24-53c1-491a-8dc7-d10b0b83c7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456dfee7-47b6-4faf-9d7a-f1b32c5214f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecd4ec0-7423-4bc9-a6f9-f07313b2e3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99eca9f0-a19a-41d7-aa52-8defa202c68f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42dc1b4-f1e9-4522-8470-38de8bad3056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba6232b-1fd7-4fd0-99b5-9d187bc6cbc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfcf6fe-03cd-4419-8280-b718124090b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c28fd1-bd5b-476b-8073-988e8065d2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339a45b9-5680-4083-b011-af67c09c07b5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a93149-fb11-4f35-bcc9-76e71b01d996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57fd8fc-da0c-49c7-a8f4-e73551d2906a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95645153-0b5d-4319-a19a-f18a225863c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf547b4-9b98-4ce6-bc6c-05c0a0a07a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8941dff7-a394-457d-9568-840a660bcd97",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a64456a-d4f5-45b3-bacd-11de198f055d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc346b1-5d18-4cd6-972f-794adb486f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87b1e69-3096-4d3e-a94b-d3299dd25333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb04339-b99a-4221-bfb7-74d646945412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513ed1cb-3c4a-4ed0-9d7a-7242a3be3e52",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fcbde8-7685-44a3-90dd-030c650d15e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0d9a46-afb8-451e-a98f-291c55bc0cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43c85ed-d0b6-41c7-9751-aab36d2f616a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79c90d8c-5e2e-434c-83e1-cc60d7aef06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a5713a-6719-47eb-8354-b665fa29acfc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8703113e-e093-4412-b461-7aa07b22b83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f1d7f6-9e29-4232-b0f7-77a2c9d8e58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93edb9f0-ca25-4868-a751-65d59eea7669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cef824ba-2682-4964-b5a9-c9c5c4984782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adc68a1-26ce-4980-96e1-3166f3e9aaff",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ce72c2-863f-4137-b502-0d1d14c156d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2595c866-d47f-4db2-a872-c5b49dea9efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6f089c-172e-4680-aa25-055faf29d746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8fd545-9a32-462e-8030-68d538c86fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f82baf0-dc63-44ea-9502-72359e97b8eb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8568a844-2542-45a4-957c-2a8eabf99ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3364bd10-c25b-41eb-9d0e-0aeb15271190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3d1bf0-c8d8-4de7-b963-9048479cda50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35169686-bd6c-40d8-8c7b-0b574290009f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5982e97f-2a95-40ed-89ef-9879c4a90bff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "508ba472-fb4b-4e96-8701-aa8356d727fd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e82b782-b412-4510-b0ed-0e83840feaa3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "99b79e51-f6f2-4048-8ff9-618d5b5ccc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c036411-b4a1-4d9d-b313-a4b800501630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a453bc8d-2be2-42c3-a73f-10666a18e238"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfe07de2-ee54-4c95-b723-5d1d6a13fc1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "535ec74d-70b3-4b63-b860-30713fc3905a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6519b0e7-bd54-4cb6-a974-5594813e5801",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08698835-93d0-4506-b6fb-8cdb591991e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80106d1f-07c0-4dfb-92e2-38da07e689f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "238aaff7-7d46-4479-8da7-ccb37904706d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cffbe53-648c-4edf-94ec-d38f884cf1a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c48d736f-806e-4e48-a57a-6c7598390ac2"
            }
          }
        ]
      },
      {
        "id": "25d9167e-d974-4883-b1c0-625395094a5f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f99ddc1c-127b-48a3-ad35-7b8e6650965b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "771f0548-5b5c-42e0-b50a-60ba1e6f183e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dcc90005-29c9-4da3-b6c5-4646e7a59fd8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d13e6f-0588-4b5d-950b-24a05161ae56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932861fd-dc8a-4a64-b1fd-323426d2cfee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e110b69d-2f14-4731-b602-990961229352",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363f65b6-67c7-49f4-9ea4-873f40fab9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b05355a-0226-40ea-a6dd-3b712b31d22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef569e6-38c5-47ee-9679-dc2b4a5d7f56",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f116225d-6c11-4a64-b868-f170475dcb70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a86610-bcbe-485b-a46c-4b0324ccf27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f6a225-c458-453c-a59d-74610357f307",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1370dd66-27ac-48e2-9d72-f21b3a8c776d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3643ebcb-0b6f-46ce-8474-9f6582999160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5359e820-97bf-46dc-8e7d-837164ecc78d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230c5c01-0bdd-4c43-b321-64efdad948cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05832f55-29f0-4113-a28e-a0f204af1cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63202e4e-8779-4322-b58c-d493caebd168",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62bfc2f-0f0a-4620-bef5-11adf7754f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a61aa95-b11e-4fbf-a047-a0fe62b43e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccea867-6125-43b8-90d3-2867bb09ead8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657a0578-a554-4d13-bc47-4f1f7f30aa86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c64554-c2ee-425f-b1d3-aa971d8476e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a94814b-ebf1-4b79-934d-42f247a0a9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53ca4ea-2e51-4e43-b707-cde6753ae9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb97b27-9c58-41b2-9d72-7566a1e2b64a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d556920f-285c-4601-98a7-cf6bd1b37844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e7fa205-4af5-4ec1-95a5-fcc8a1454061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682c2018-3da3-46df-9591-a1ea7fdbee3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8918d43a-b3ae-428c-9962-5b158b920feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28d88b8-ae53-4b97-9926-ec07fd9a0d8a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d7081f-9fde-4a5f-b3ac-4bc18c45e925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0ead8ea-afb2-42bf-a978-89cc8354f56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a461af5b-f406-489a-ae0f-b5c9d826f46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e36c60-9139-4121-9fcd-7d41a4e5cd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f8ba10-9b9a-47c3-b962-0f81a0ab2f6f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269863d7-d8cb-4153-831d-28ffb1f5a5ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43dcc14d-15ee-4750-aef1-810cb9a9c2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15523595-c360-4dfe-9526-e2168d88e34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5603b057-0c9a-4e15-976b-e0026a87e06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0dcf770-3d86-4154-9390-8d0b24fc175c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13afce21-79fe-48dd-9e73-6a21439dc762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af97a189-4115-4ab6-9d62-ae3f2d142ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6002cb-b3d4-489a-9015-3e19ffaf5762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecf8356-da56-4fd8-af00-bc9c5a3df632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbed5122-6ce7-4d4b-b542-9fe06c2c46ea",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec35eff-3aed-44dc-abbb-a6a57d543953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e32e12-ea8d-4e20-ad4d-0f572b2e84f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c446275-cd5d-4d4a-a62f-dabbd2c348dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2809736b-8f02-4b3f-91c0-9c75982ba0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ab9694-e044-4de0-ad8e-3e9004dce2e3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d4b429-ad80-4f47-b8fe-06158c41c5cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c930087-c832-418c-a1cd-d8cd933673a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7a3e9e-87cb-46c1-af8e-72acfc61a681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2520bc95-fc63-4c0b-9822-1157c6a5b71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d5a452-590d-4c7d-82bf-a34072df44ad",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36acb8b8-e658-402e-be47-e050ac378cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc3e9d4-af73-4774-b41b-f0443f5762f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cd99ee-e0f0-4cb9-be90-f1c413f2289e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67332388-598b-4237-b710-efdceadad0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20eb7adb-a144-4ef6-81bd-e08ae0d7050b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7739c6-0a31-495d-a93c-2f51457b618b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac268fd-4fad-4ae2-aacc-b1f2ce5e2e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c485a50-04da-4d54-ae73-f330116678ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af9630c-0ae3-489d-853f-265c7d906344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e7d249-0346-4929-9035-b0d300fec2a4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c137704-006e-4654-a4e9-a71c18182118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37b9621-93b1-42bf-b4dc-79c0c11978d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8184d155-58b4-4d3a-aba5-22549c5ebf7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93281e5b-779f-4b8d-802a-57a006718634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055eb9c7-6efb-4389-bb66-94744af5899c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020fb382-5863-4ad2-bdf2-68d788a5b872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85eeb0ef-2d20-47a8-aa9d-0d9f876ba9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707dff64-4db1-440d-ba07-90769253df43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d631042-2ff3-4b7b-a480-2eab329ba457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99510bc1-614d-4acf-b814-c3ba10e993f6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad57a45-c388-4314-8804-2829480e512d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa4afb9-1ddd-4135-8077-eecbadd0811d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09eaffc-4ee0-4e18-ab98-d79ae04684c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285a6e3e-a973-4c28-bb89-43a7689a0efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606c9f88-3de9-49d3-a791-eea03bb2ec28",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d44a9c-6dd4-48d5-ba1e-e8fe638827e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0654745c-c6bd-4533-af6f-ffa2d56adbd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e0a320-817a-4747-b589-d803dde709f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d04f0f-0e6c-40ef-a224-b08bc3c237fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae8f68b-9030-4507-8cd1-871888d9e467",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f56a0e0-2297-4583-b4fb-318a1e9a10b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbeb150-f2d3-4553-b8bd-667eb45e883f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce14035-9faa-4bb5-801d-a0c6e4926ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088e8514-6ab9-4f3c-a0ed-7c4d39a382b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6399f1e-fb69-4597-bd3a-7f84eb4234d1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d3cc49-7f96-44c7-ad31-2abd0aac555f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e11354-530e-4c3a-86b0-2486fc7e9c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82bc31f-f8e6-4be6-ae2d-576f4e21c52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc5c4cd-8592-47f1-aa45-bb68b28357f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a50bf6c-2824-4084-ad4a-e6476495ac41",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6456525c-b4fd-4bb5-b547-9344631fa941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0941b8c6-1ad3-4802-b0bd-63e7eaee8da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dd9db0-fcfe-40b4-a4b1-fc75ebccf989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26c7455-f122-4c39-a3c6-3820600fc815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaea2b8-2c1f-4849-990d-3420e0e9ef2c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3a1755-127a-47cc-b06a-05e10b1de4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c0e403-f9f6-4567-86f6-1b49de3e91ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a24629-b9bb-440a-b2eb-fd4d400bd0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef56e555-72f8-4698-b0d2-636cb9cb91b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fa74d7-e26a-4226-a3a2-ac23c93da1ca",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088e7da8-ce8a-45f4-8fa1-d793a9a6a0e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6087c28d-ab27-4e05-8480-4a3333eba84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3f687e-f5cb-4802-9264-9e64df1f011a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315896b7-92c2-4810-82e8-24219a141b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6c1244-6444-49cc-99d6-470c870a0bf6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511c8470-ae94-4e93-9f53-534c12e154b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67dd4823-e323-4389-9319-423684097a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910345df-b428-4668-918b-0ba20815e6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe1eaee-3f08-4030-a8e1-3072a5f865ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0825b71-5e78-4248-9059-71f3fb25b528",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ff7988-63bd-4b83-a134-cc3d051eb1de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06c3cb5a-309c-4330-94ca-e197f15bbe2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b37765-83b9-433c-8896-c2a439a6823b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0ee998-6fa7-4c42-afb2-acc3ded1a211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ed1d2b-d627-486d-81e8-9819e97e6417",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea0630f-444a-4731-b870-e45d0488b444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beb5e577-2113-4e20-af41-5ee930d28da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83de205-0bcc-484d-8558-40ff0fc3590d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0ee526-03f6-47ce-bd18-2973494a594c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ac342d-8df0-4cfa-a214-b3f9dd35ce58",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b535b51-ab54-4715-b779-3e5ba530bf55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b88801e-db5c-4e32-8e90-1095d17d3e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69a4a6a-639b-4e5d-b8e2-7abbf651144f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cde750e-8d3d-4aa2-a8fe-1c2446e977d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcb1c08-d27a-4962-a532-aa5b4e937c1f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33593837-5b1d-44cc-9afc-6ced800d2773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e61dd2af-8e1c-4c22-9946-ec5e5de46619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a3dfce-f7bc-457e-8c23-4f5f7e90dacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5d480f-ee23-4402-8a11-f702c85ce31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570e695d-0c6a-4974-953b-481580f9b84d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335b068a-c0ae-463e-b7d1-01f240a9d5ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce405d28-6453-4734-a760-51501e1b923e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62cfc6c-716b-478c-82eb-13c86567f55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad35d34-231e-4b7b-baba-73c7ce8714f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2b24cc-d11a-4e43-8c6f-dda3fe50d7e8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50383b06-3073-4332-990b-d05d1695c06e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8feebbb4-b896-4a41-8f2f-59b996de831a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fad4a9b-a046-47f3-b28e-7c4e812f4788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75bbab35-5d03-45db-ae40-dd702ff713b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27105a9-d484-48dc-b61a-14f2aada7aa8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bad82c-792f-427b-a8fd-8a924cea8c8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac2ce079-ec89-43f8-80f1-0d717bababf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a307e07b-cc95-493c-b793-1762324ba2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a370334f-5d50-449f-a089-43cb9f67c2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a88ba96-a1f6-42c0-a377-6e013a873d0e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779c9804-85ea-45f6-945a-83e4b2f63063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c97666cf-5809-4798-b842-28741a6695d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c487a86-042d-4c9e-9ce0-6980b45bdcc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a77a80-3bfe-412e-b009-d3845b037fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d00ad7-27ed-45d2-bc2d-92a2adea91f8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028061c8-ef1a-4225-9174-c6f0b10debb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df780693-7e79-4206-abb0-cc06595e9fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b39cc90-7591-4702-b7ff-30157111af9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4692d11-2d33-4167-82e0-56403012842b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98da61e9-ee8b-40b8-85ea-d28411a11a83",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0315a38-cb9f-49c1-8738-4b3f9911dfba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7717aa4f-c181-4d03-90fb-573a7f066e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940452e5-6a1f-45f9-af6a-39eb2b9a8611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f586a4be-3323-4563-aa3c-ab98c4da44d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6a2209-a440-48e3-be1d-a949df0bc425",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717c0bfe-a83f-4d68-af77-7b8e21cca4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3a507a-262b-4769-8bd4-660b7bc74359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546af87d-a99f-4209-bfe6-903fc4887e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c19dc7-7a00-42c2-ab41-9a44d7cf617a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68ff7e3-dcdb-4353-a1fa-e216e84800bf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e768f5-c9ec-4be6-b4f2-af46677fba8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33dee8da-3e21-4bc8-a4c8-84eb1842790c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9864f1af-90d1-4c48-8ead-a32eafb76830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3491a4-3b17-457e-a986-36db1292e91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baf6e3a-9613-4810-b002-3147c1fbb9de",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9234843c-fe95-4b6d-84aa-ffe6fcbc1e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83ed568-3f21-493e-bba5-58e772b48b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e635306e-6a3d-49c5-acf9-3f941128382d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b791601c-f78b-4a0a-a189-ec0d19f5df41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb9f88e-4ecb-4e4b-9143-ad28f197f18f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcab2f7-df29-4a7b-abae-352dc9f5b22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c6ff5d-4052-4d64-863d-209ab06e1e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c6d7ff-3427-4874-a2ce-530a90e8a825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4572d6-e5d6-4f31-8900-07a9e1bc813a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d798c4-bd51-498b-af0c-d3e98daefb02",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8e710f-dc72-4499-b5e0-69f11bff1d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cfc913-d0f9-450b-b37b-81ed0783b391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55596f5b-f940-44c1-aec9-21a46c32d88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f69dd4-8928-4319-99a4-4a5109463982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f963e1c-f6fd-47a7-979f-c302bf18fac7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a36902-8416-458b-9805-c268950ef38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3b7ec1-208c-4f07-bf9b-8c3df21790bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ad870a-be0e-4e48-a97a-2ee814edf5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e619cbd8-009b-4059-a3ce-495b45143c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0550c72c-fee4-45fa-afe9-5542ef3559c3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58150eac-0a98-4f13-8c43-f9000c656b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0821f283-b8e1-4935-a15b-8e75c2139175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b0603f-5379-4203-b57b-5c8d5d06a52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdcb11f9-123e-4fee-9d37-42159fe13b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd7a4e1-f639-4ce1-ae95-bf678fea1225",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fa6be9-4ba3-4dec-b520-93ef0ec04024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29012a86-430d-4b9c-8023-ba57bbf2b0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64181527-7de8-4104-8335-69c9f19c7789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11aadd1d-d674-43d0-bfe6-8ca90bf21d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7586a6e-9fe5-4a3a-8ee2-67ca617313c4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f89df73-3b7c-4f69-a92c-0ccbc610742f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7cf617-333c-4bb1-a3f6-c3d1586643c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e117b8-d758-4546-a2a7-8f8c0a0e05db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3d777b-2bcf-4248-a10b-67c078b7f48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197d3e8b-18c6-46c9-a594-3c470c34b8c5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdf88cf-cf7e-4140-b7fb-0b70333393ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7edb90d1-a71b-4521-a92c-9f452e699fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6de1f27-06c2-445f-9e45-ceb034a8ac49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23134dfc-82b0-462f-9595-b2167b3ea7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65f0865-1158-4ec6-a1fd-afb7f56470c7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1090f215-d0b7-48dc-9d87-d429f5bbb65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a458df59-a6e3-4322-9303-1996753ef205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7364b2-1473-49a2-ab70-f101334d4100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1475218-2cfb-4c1e-9679-10eb8884e505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05997d2a-5e00-4ecc-b74d-791e9f8c1090",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f00170-1c93-49ce-8899-1c64c97a47a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195fa957-b910-449c-b4df-c3ed6bec22f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db459290-e5b8-42d6-912e-d01f610c25d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335ef75b-e42e-4e56-89cb-a136b47abdff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0967f6-9e72-43c0-a8c1-5589fe1dc28d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606aeab7-9e7a-4ba2-b05a-ebd4abde763d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f820a52-a1c4-4e66-b80d-12e9bcbf16c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a7a624-3892-40e6-9456-79445f23923f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28070de-b1e4-4584-b457-99c3d530701e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c70cab-0efa-4040-9e0e-0c1fa138c198",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dc3303-dcdd-4dc0-876c-290fe6066dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e75ce7-63cf-4b3e-9a43-6d077c5f4e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56684186-d767-42cf-9de9-b443f188bb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561f7c7b-60a8-4f36-a333-e3117ab5d25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84c16d8-2a00-4c7a-98c5-f189c0efa225",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982b8105-814d-4c84-8fab-705372f92f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b67a9fa-8b01-4f77-8c0c-0eaf8dd6fb5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "097ef515-4ab1-4de0-91dc-d7ce87a3a3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432a910a-926b-4e34-b839-375d054d1b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f3c172-d072-4731-a2e7-7ed2ff89b9ef",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258707bf-9432-4016-b26c-617ae6e4637d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b5ddd0-0a02-4f93-9aea-688611805672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47956cea-05ee-43e7-9f83-5302fa9834e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c751f52a-d94a-4199-80ef-3b041f2d8703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4d7b1a-bac0-4ad9-9984-55f14c1cfcb8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9fb492-5abf-4d0a-8576-39dcdb3f901e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efd765f-ac57-4ece-8723-1e995253474a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e0baa9-2241-4dee-af91-11c870fccec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f239227b-9cd9-42b8-ad1c-2da9e2a6e39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7a7ac4-0036-4da0-a8f0-40ae69c728fd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958c1c95-a5e6-4642-8b14-9179f39ebfb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a49076-3a70-473d-b216-0377ef1e5bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f45c8e3-ddc9-440a-bb24-6082e5f5e6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4a336d-dfa0-4ead-9ff0-ed77fe6dc22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a16564e-87ec-4bae-945c-b4f433e02251",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb832f9-63c5-4969-a2b5-a4b455027f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af305dd7-642d-414c-8dba-6c42ce2820e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4d9b00-0dd2-48d7-b244-ab2499ac92af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d186192b-7571-49d5-97ae-01493b9ed565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe5a398-a9c3-40f7-a6ba-5b5049253eb0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9383193-e43b-490d-bd72-cdae0e0c471f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0d9d41-0ddb-49ba-99e6-470c178b6df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21bfc42-1784-4dd6-802c-8cb98468477c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15dd1d03-9bbc-4277-bd92-5d350dc0f11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21d594b-a5f5-4a29-bc0c-f4694ce8f160",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1b544c-1ef2-4d33-92ec-d83a6aa8896d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240ec998-52e8-4a43-846a-b365a21de04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf70de6-5b19-45f7-be32-6db22c5b68cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ea57a6-4dd1-4445-879e-c54c24d7cc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c06fbc7-9cb1-4ab0-ae3d-1a2d257c53ca",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be97f244-bc50-4758-89f7-ce6a35b1de17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1fde45-b907-4bf1-a1ba-fb404e6c7e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9f27ee-4aed-4b2c-9500-734d1c7b3266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfc83c7-ca7a-4b75-acbf-3c0e5e6326c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb257aa-7dd0-43f2-b9f3-b5f736fa24d5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7453c8f5-0d5e-4667-8282-43ba102fe2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911d9ede-3684-4c99-ab93-ffe1d52b144a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c8a16f-fd11-4487-aff9-2589a1f34062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42d9f3b-4383-4c01-aa49-5a3abdb550c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdddac99-6a03-4ada-8221-f699e8cc0390",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910d59cb-9be5-460c-a800-fc54d1172703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0e2344-baed-464b-b5cb-90243ccec9fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94149454-3a46-4c2f-8160-4707c63baa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1da49f4-6aa8-42e6-a34c-4673923307a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5d74c9-792b-4dc5-9f49-6d84dad02c03",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c889c48-fb24-4df3-b00e-fde463711491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3053ec84-1749-44a9-bcb9-2283007778a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7a4f8c-f2c5-4713-ae14-4607bb93f444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0dfa3bc-6121-44bd-b00c-be71cb926c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd09cbf-5238-4801-ab97-e18b351c8232",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb91f55-5bd4-460f-904d-3864ad49f585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7a046f-2a68-4b06-9380-432abfbcdec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da3c147-be02-4a9c-ab16-380207985a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd501c21-e79b-4514-8075-0954f153f924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1c3a62-9741-4e09-b935-47295ab3ef6f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64955372-63e1-40e3-9d1b-2a36483285f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c092d18-1010-45f3-9d53-3b3caf56fbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517ec4fb-528a-4bd9-a21a-111428cc1a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1862766-588e-45eb-aba7-da9813ba0b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c80975-a71e-4892-b7f1-b13a64dddc6e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1becaf-a429-4dc0-90f1-b5529a7b72b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dd694d-bdfa-4f85-892b-1148631e0df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79978e4a-dac2-475e-bf2b-a8ebb6b591b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3945f3-3667-4137-86e8-74d9124e45b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238b2c5c-447f-4d79-8c14-9075e23fd4ca",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608fc0b9-56b7-4323-ac6a-1d09453027bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "461bdf7d-f196-440c-8dcc-34f3bbc14a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2989f4-1256-4a58-a901-7069bbf7180b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2bd4f0a-c1a2-4e73-a54d-737e7b2f724a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eebac01-48e2-4385-9b2a-bb5b703ebb8b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7195fb-506e-42be-8bb7-5cc25c056c34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d81cdcf-cbbc-427f-8099-39cce518931d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da38cc23-6c4f-4228-b77a-cdd5f6b658b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903fdbdd-3713-4268-916f-7822801ff51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbe2cab-b2e1-402a-b2e6-170c119eb81f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4af625f-22f3-4ef3-9020-afff648de4c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "365d059a-2ddf-46fb-9411-e725799536af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92a7505-fb69-4f83-b220-9c25ca45052c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e80781c-b764-4ec5-ac84-067c1c5f7423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d77e2a-2677-4b5e-a4af-41ab0f5f5647",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219abb03-94e0-4f6b-bc4d-abb7cc1c0855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d03f47b-6e6c-449b-91e5-0d0f09aa4acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437c82fa-e82d-4535-80da-27709cbaf012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672207e0-4c9c-4cd3-85eb-57ce16640223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1d697c-70fd-4c18-8663-d60dd7cce052",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b823c9-9103-4fa0-95b2-af6b915f4c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "801a0ab2-bba0-48a5-84a2-3ee1b3786428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917422e5-5cd7-4408-b2ec-887943df1126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb30c13-4a35-49b9-a560-2cb13815557b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018bad6c-f249-4ed4-845a-156b39032a31",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab51f76-05e8-4795-b1dd-21e5b5bacfcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce18213d-6306-4731-90ae-a0ed384028a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d04da43-4078-469a-b039-a03e1458ff1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68f6b4c-da56-4d9d-aa85-82c02aedf6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2505278-ec38-4194-87bf-bcdd4b805b52",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9ef925-2429-4da8-9884-28a5af8c8218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c46854c-0b44-4c4a-9c9e-8f8d7fbc5ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbdba96-f06e-4214-8937-2b74ce3dfeaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86096b27-17b7-41eb-94d4-38b1a8574a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3658ec-3e32-409e-9dab-850071e85a43",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3378795-d410-4ff5-8e49-bcca275da211",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d88e57e-9c66-44df-b67e-427c43ce7687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4856b2b-fc2c-4372-a153-515f3af764e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d89a89-a6f4-4da4-8e63-d0977ab70a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1b7a7f-f76f-48ad-9916-e36a715b9e83",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e9b845-9af5-4183-8bbc-87de14112d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9141bc3c-842b-4694-9f2d-5988a387e432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb4b1d3-5581-47fa-b29e-d6e66576e2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428f06a8-ae2b-4f4c-8529-7c22037df20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1489284-698c-492a-9d7b-c984be4486d0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a321afb4-3da4-4bbc-a979-fb26c33f7a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42e9616-f8af-4d9b-b646-e64370caabd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a826362-d9ab-4c6e-8aca-513245a362d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2a6642-0353-480a-b3af-d57aff26734a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ceafae1-7615-4a07-9c64-c9a1dc84758e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a451332a-b1b0-4fc6-8685-110e8a509eab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a6ad82-1e5e-4305-9de3-f8bced2e4cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d77cb3-46e0-4578-b254-1a609beacc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3023ce-856f-4707-8cef-c7bb73c7465c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20872e93-9c51-41a3-a6ee-1aaf5b27c7b5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68ffdfc-8271-499d-9c0a-3bd75f6884c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af29fc1a-6e6f-4f63-9bbf-41ef2b9b2980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f12dd3-9fc4-43d6-86ea-3edc7e05b263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86693eab-e3f4-47df-8897-b3482406a411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268e2cad-ddf2-4ec5-939b-55a86bf6f742",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff646bee-359c-410b-a8fe-66f234d0c86c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17694ace-38a5-4245-9c4b-94a206884aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f34c75f-f15c-4db6-bd9e-60f7fc465e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b455d9c4-e9b1-48d4-929b-fc6a514b061f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac62ad8-291e-4bef-bcca-4c11d0128ac4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d70c125-927b-424a-bceb-dbe8b67f94d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a99eab-02e3-4054-a469-8e4bbb289344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba069972-ef22-4952-90ac-55d30aa1035c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8f3171-48a3-46b9-865d-898dca90e6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2ace17-bd40-424a-ae01-b2f0751c5f74",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7174753b-d62f-4757-8902-4b97a8b04253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1191e7fd-7c3c-4ec2-b370-963ace2a815a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cefbaf-640c-4a25-aa5c-1c6af34a0e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6e63ec-3273-4035-93b2-dfb41b36e42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b2646f-a28f-4a8c-9fa2-bef32902ccf6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e3cbdb-e06e-479d-9d23-873fdb5de5b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c80c2ea8-e93b-4671-bb0e-8cb11cd83244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d4d94a-c488-43e1-a5aa-d6574d6d76af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c8ac9c-dda6-4f38-ae6b-87071f489cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f25dab-0c8c-4f96-9af2-06a22056bb00",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9d1b43-18db-4ad8-83c4-b95f0637282c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98bdf237-737d-4004-991c-604b7552a0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a9d051-1b2e-42c1-9f54-12cc9f42367c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec22433e-e9b2-4aed-bf03-a15f26457775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90466fa-eae6-431d-96b5-b9d92e1205de",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2757c21-9130-4b6f-aca5-a0087789b559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9be92a4-d74a-429a-92ce-93c99f9773b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0626c2-da88-4a27-9aa3-a503c23b11f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c568bcc9-99a5-4ded-9151-e699a07c7a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd94264-9165-43c3-a5e3-412ee613a43e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f5d983-e91f-4971-8c92-dbd534d80012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b5908c-5319-4fcb-ad87-82d2775f3cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e379f38c-57b9-4b84-9cff-8c62f1aabda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ff1d18-5b5f-46f0-932e-79f75328b7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd77637-19b2-4a1e-9138-0a4a411dcaa3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab62db07-14b8-4c0a-b2f2-fc9113c23177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f0302d5-ce27-41c8-9d33-23f9630ed1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ca990a-91e2-4da1-aaa8-86d1c8c7e7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103509d9-514d-42f1-9e71-9a304d72617f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be575036-c1cc-4d92-b094-d512f5ae3053",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15426918-8812-4239-aa35-4ec0a2520511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b056c45-c371-4538-a869-526d4b3a2745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56f2e6f-552c-47ea-ac4b-e6a169e59266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce62029e-f5fd-4f23-b6fa-381f3a6e43f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75104d96-46d8-4414-b89e-d1ca11723bdb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7878826f-0d04-4247-a44a-99e32b7d8b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f1eefc0-f74f-4d97-9d91-a3727098492f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0c847d-8792-464b-9ff4-65de996aacdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796dc61b-3308-460e-b289-a5083635a39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3b63ef-2e35-4aad-807c-747cf360d66e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e11981-ffce-48f1-a1c6-c06fe66715db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db7b948-be2e-4148-a4f1-3e552cb1e219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc17f16-30b0-4ebc-9909-21a38c1b43c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423d3e07-4360-4bd3-ac2b-1991e55c83c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dee3c0-714c-460a-a4d0-51967ba14069",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b0e4f9-f240-418e-81ef-51c6cc7c97f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cccb3a9f-31c7-4ec5-a06c-1d6a2412a289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93e24a7-d200-49ef-b2e7-6a61d0cf56fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0718636-3c10-4f48-b739-8741cd2838e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a474a7ee-7ccc-4f0c-93a6-dbb50f101ae2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61580357-c36b-454e-9808-1306bf212c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73abab7a-548c-4a29-971f-9f4663f33939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be741195-578a-41a1-baa4-5833cd7fee3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a0bf22-2253-4e1d-bceb-dbcd0e97dc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a438180-b825-4c42-a37c-2c63afd95ca6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0176661b-a0ca-4874-881e-e29b5a4cae43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6065b14d-e305-4985-be87-852db94ab19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c94db3-f7be-4a8f-9243-b5f670effcbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c8678f-5913-4649-a232-71fa3e479fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a429b0f-42da-44b2-aedc-e78990c295a0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c534c5f-6505-40dd-90f2-19108c37fe31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599b81e2-2052-4ac9-b1e3-09610ab0a13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5141c13-0b72-4645-b579-15783afec8ca",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5790318e-1742-4537-bf7c-1dead3428be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78dcf447-771a-4d02-b30e-572e350a0a1f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f78f4a-9ded-442d-8141-f8185cb9201c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76d93535-45fa-4995-8a51-a24b4d23c734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd816c51-6b18-461f-a01c-b0fa1376bb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee520cde-77b7-4b66-bb24-753a344978d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4dd8e5-dd96-443e-b529-ea8ba4b3a329",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836fa776-4ee3-4c84-9a52-d6178418f6c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edaf5856-c17e-4da3-8326-57c2dbfc0b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1930962-e51c-4b59-9124-345c65552b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a07070-a0c4-4b05-b5e1-472ba9b39c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425c6d78-fe89-4485-8932-ff91df4c2c2b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644039cf-77ff-4c46-95e5-f1344de81afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98cb203f-1d2c-4ab7-8046-2ad775e04f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7c8f85-9cf7-4e74-bd6a-53a536b01c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58aec3e-1d31-4164-910f-b946db786085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15821778-f091-4051-a777-d36cb942e0af",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5b3ca2-042f-405b-85ef-3af591a3f854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea977707-5170-4e7c-a71b-59190cd71b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37641a9-0fdf-4567-8ee2-843efa67abc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea801a29-6d20-4c54-954d-ca5c7a23b3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daeab2bd-0573-497d-9cbc-56fad5181170",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418c545b-fb1f-4df7-9eaa-b69539746c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1a8b681-a0fe-4ad2-921c-f2367a72bf2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6722de2-9faa-4790-89d6-8e45d73c5443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8a446b-3586-4838-877d-922422788441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa3df9a-3db2-4f66-ba29-6af45f282bb7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd66a3ef-df0b-4ef0-bf9e-8349883081ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c11ca22-ffda-46e8-bcf4-852fab4e5ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb721ab-72ca-4d40-8a6c-f6818646f4ac",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62dea5c-f48a-4650-b383-35e24c8fbf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d84f63-9f44-44a8-bdea-57055c8304ad",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1dc621-ccb0-4665-9886-2e2b9dbc66df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db4a0aba-c184-4ec0-ad7b-40884afe34a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04c68bc-65f2-4788-9cf3-adebef60c360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d717e3-aa06-4cf0-851f-166e35df12fe"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "966b88c1-e452-4180-a9f8-8530c7b8db6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24f5fdda-6025-4e94-8761-247b180da679"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96f437dc-0b85-4353-ad7b-d7e22d78088b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "468f1a7c-c0b7-4f25-893c-0cc96edf6351"
                    }
                  }
                ]
              },
              {
                "id": "245dde0c-c4c3-4a3c-959d-802b946d3874",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f5a2e72-fbb2-47b5-b41a-2ce7ad40bfe5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebca7ea-6e38-43ef-b811-8e9dd6834fcb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "17824b87-a790-4aa6-bc52-b41531274d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e083b7a-ab54-46e3-b3e9-aba25044c168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1080bd6-d968-40f3-a010-52beb200549b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "faeb12d0-6f9d-4dba-8c4e-7e24adeb8757",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c297ae7c-fce4-45d3-88ff-f9ba41387f52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ab548dc-f8e0-46e5-bf15-4dd56c076361",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "633b48da-b37b-4283-b86b-08eeb4a8777c"
                    }
                  }
                ]
              },
              {
                "id": "8e2c890b-7047-4648-be22-fa6909c8ee79",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a17e8bb9-7b4a-49e0-8c0d-fe693f939db9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb61ded-855b-49df-a0c7-6e2a7cdcc6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "808b9594-5f61-42e9-9099-f04a0bd11dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11ae541-e3ec-4982-bccf-451576c79c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb6bedc-b169-4a01-9e08-927461445bd7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "14ed49c4-e72d-42d4-9e69-2384a1a63904",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4ea52636-f6fc-4244-a665-a75c21e9f23f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de4690f6-e56b-4230-bea5-5d908aa7c015",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a5eabb6b-30b7-4978-a417-a7cd3d820bf5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82f1941a-001b-4259-936b-9df2f50e4992",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23f51098-8d53-4ec7-88c0-4361163e3e16"
                    }
                  }
                ]
              },
              {
                "id": "9b5ffd32-1316-424f-adb5-88eaab7d7730",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1386c097-bb1c-4cfb-a2b5-78dc0d0bc05b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "08d3bb18-3c7f-448e-832c-449c01232183"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28818789-e595-4267-8d4b-c94124a131aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "520c7bbd-c58d-41fa-adfb-5fc99a71187b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61ce056b-b6d4-4558-8182-9e27ed1d336e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e3194d7c-eaf1-47e1-b19f-393467694572"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b2dff1f-2fa3-4bd2-bb6e-83a3812d33fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f0c7220-150c-4fee-ac47-ae358ae9dde7"
            }
          }
        ]
      },
      {
        "id": "d4af55f8-6252-4a76-9445-e5ff18a770f1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3397fe43-4536-4c4f-a0bb-014a8e43939b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "216a6b69-48ee-4f6c-ba9e-b7b987e5f42c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "775fb9e4-a51c-45b9-9484-6a749160ca30",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aaa1df-c013-42ca-aaec-058582674dc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "467bc1bd-cab3-4af1-8d39-37d586b79cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb90284-c0d9-430d-993e-19d8ca935e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29f895b2-938e-4200-907f-529ead71c5f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe724f29-439d-4ed5-8667-5e9e42b807f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa40753f-4089-4501-af12-4d5486e1a9b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "deab782f-5b12-4840-9cc5-ca02a9487454",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3eca1d0-0c4a-49c2-a813-847542f941ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22b8315f-eb8d-4aa3-96aa-a4a22e7d5e80",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "365627b8-d5c1-4242-858e-edcc3fb2c024"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46e4c45e-3f20-4171-b0d8-f8056b59601e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56071d57-ca9c-4aef-92ef-595bf567678d"
            }
          }
        ]
      },
      {
        "id": "7725353c-4ed7-4457-94a6-3f8fe0daa8e0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3dd16c60-ba6a-4b12-a044-133f58434ae8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aad0eb85-ab8f-41f7-80cb-ff946fe3b7dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27e55357-b80b-4fa1-a5ee-25a79dde1aca",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee077906-0a35-4146-a91e-0eb76925d44a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a758553e-0398-4302-a615-ced0eff453ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0045c17e-8dea-45b8-87e1-c8f977136bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dae674c6-efc6-40ef-bba6-d360b2dd0d3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4cbd25e-29ad-46b9-91b5-7f25e7b122f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b5d58f8-16b0-48d1-b251-fece5e60adfc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5131dbd7-d142-4ec6-9619-8640e70fa219",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e8226ed-58be-4819-be2e-d30e466bedcf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac1f7b47-0f4e-4671-846b-0b38405e0c91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dcb4ba42-42b3-4a18-910b-80bacce688d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab7f4e7a-3a90-4626-9681-4daab3024656",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0b64042-ad8e-4344-8e7e-586cc153db2e"
            }
          }
        ]
      },
      {
        "id": "4d56b624-b348-4d42-864b-0cde0ce1cd22",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fab11232-728c-4870-b90b-b3816201fc46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "482f7045-564f-4e4e-a6c0-bfbeb1f8ee69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad16c579-3930-4cca-b723-a0d5080e7c3e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402a06e4-5575-4a28-a17c-a7e508214a86",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40e84c75-bb00-4b7b-96ac-5d42be1d5255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f0741d-849c-4284-ac40-09f1b5b5a29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6afbe28a-875c-4422-b2a3-fb26bf0bd66e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5021becf-5fbc-4efb-ad4e-8e2b224e62b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3587612e-5d0c-4d4c-af73-7f9627f3e21d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "500a2604-6355-43e5-bcd3-69f5ed5d360d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1075b2e1-b1d7-4691-8d9e-82e0b7c19000"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82992e63-e395-4845-9d3c-79d62f9ed764",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27e87011-52ec-4bcf-bf2b-e870c5343023"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98e35dc1-4a93-4410-a282-de29db468d18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a008a507-b394-4f92-9357-8393983d2407"
            }
          }
        ]
      },
      {
        "id": "1d041869-bc8f-4f66-aa88-f9013e624ce7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13f2a737-6d6b-473a-9cd5-46efb71e4e78",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e7458f8-4a47-4139-80f7-23f1a4b23370",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "05bb3be2-e06d-4912-8493-b685b41eb0d1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcd0325d-cb63-43fc-a6b1-527174ccbb14",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07b1f278-2c7f-473a-b9ea-2b12a2a9a488",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 36.87323943661971,
      "responseMin": 19,
      "responseMax": 458,
      "responseSd": 32.389869559314825,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694306102805,
      "completed": 1694306128769
    },
    "executions": [
      {
        "id": "bda96b23-8c2c-4e1f-ab69-8c9f190664d4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "aa72479b-8afe-4e31-a656-6f0a5ad96c65",
          "httpRequestId": "94dcf1dc-51ee-4feb-8ce1-9752d06cccb6"
        },
        "item": {
          "id": "bda96b23-8c2c-4e1f-ab69-8c9f190664d4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cf5718a1-3551-4804-8f18-69e6318675dc",
          "status": "OK",
          "code": 200,
          "responseTime": 123,
          "responseSize": 0
        }
      },
      {
        "id": "5e83d349-edbf-4598-ac6a-cb04c7c447db",
        "cursor": {
          "ref": "58711329-5ff3-4959-9152-8dad4a91507f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bd57c054-3a5e-4434-85dc-019440475a46"
        },
        "item": {
          "id": "5e83d349-edbf-4598-ac6a-cb04c7c447db",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d2f2d0ef-4dc2-4309-b04f-fde61f0f6cfe",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "02a310c1-2338-44f8-98a6-d8a7983d6bdd",
        "cursor": {
          "ref": "cbb1da26-5af7-46cc-896b-029f53ed7682",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e344c9d3-fc2d-435c-a603-960b01bc2fbf"
        },
        "item": {
          "id": "02a310c1-2338-44f8-98a6-d8a7983d6bdd",
          "name": "did_json"
        },
        "response": {
          "id": "908401b5-c8da-4d45-9c15-63a7a9dc75bc",
          "status": "OK",
          "code": 200,
          "responseTime": 152,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c30745-6033-4059-96f1-4e7d23d689ec",
        "cursor": {
          "ref": "998539ac-b973-4ed0-9b68-79f308a8ebd2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e78f4717-56e4-40cd-a122-0371bc36116c"
        },
        "item": {
          "id": "f4c30745-6033-4059-96f1-4e7d23d689ec",
          "name": "did:invalid"
        },
        "response": {
          "id": "c9279b0d-1e25-4fc1-8df1-641f1c94980a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c30745-6033-4059-96f1-4e7d23d689ec",
        "cursor": {
          "ref": "998539ac-b973-4ed0-9b68-79f308a8ebd2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e78f4717-56e4-40cd-a122-0371bc36116c"
        },
        "item": {
          "id": "f4c30745-6033-4059-96f1-4e7d23d689ec",
          "name": "did:invalid"
        },
        "response": {
          "id": "c9279b0d-1e25-4fc1-8df1-641f1c94980a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f573ea03-6f4a-470d-87ec-4f55ecf701a9",
        "cursor": {
          "ref": "2389f841-061a-4cb1-8bd4-93ff2e2a37d8",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "14f6e2dc-0de4-4982-ac87-7d5718f2b0ec"
        },
        "item": {
          "id": "f573ea03-6f4a-470d-87ec-4f55ecf701a9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0b5abc53-3bf7-4f6f-b0f2-62a7234f78a3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 77,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4670271-5f34-4f78-b5e3-2b638920195e",
        "cursor": {
          "ref": "b86f65ce-0dad-427a-b51e-1748a8bcbc54",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0a175aa1-e92d-484c-856e-410f149b007d"
        },
        "item": {
          "id": "b4670271-5f34-4f78-b5e3-2b638920195e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e62c3048-99ca-4b53-a6b0-05d1585bcf04",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8a5cef-4a5c-4574-9e5d-61dc65ed3256",
        "cursor": {
          "ref": "b90c13d2-69ff-4701-adff-b493ecc6faad",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "632ddbac-2466-4aea-bf83-e3da4ab24c95"
        },
        "item": {
          "id": "fc8a5cef-4a5c-4574-9e5d-61dc65ed3256",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0ec595fb-aefc-40cc-bd92-19ac6659c0a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deccc590-e291-497b-a9ed-e0f971522bb6",
        "cursor": {
          "ref": "ff933da6-d99b-459f-8330-b7cfef4161cb",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6ca35768-bc5a-4b08-b0a1-614f598fd0c2"
        },
        "item": {
          "id": "deccc590-e291-497b-a9ed-e0f971522bb6",
          "name": "identifiers"
        },
        "response": {
          "id": "291e7e41-fb24-49df-b991-3b2a18639017",
          "status": "OK",
          "code": 200,
          "responseTime": 270,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1508e3c6-200d-45a2-8c68-cfac40cfc691",
        "cursor": {
          "ref": "bac38507-a252-4494-9aff-d1a5288ab717",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b538e41a-7d21-498c-8cf0-85bf6eefaa9c"
        },
        "item": {
          "id": "1508e3c6-200d-45a2-8c68-cfac40cfc691",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fd52826f-28af-48f1-9a68-32a7618ec145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9d5974-c8c0-4558-83a8-a4d65fcf5f21",
        "cursor": {
          "ref": "9671ae2e-58d5-4c4d-a4cf-ab99c7cb1948",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "524d1842-a6da-4d02-a321-b39fb48a381e"
        },
        "item": {
          "id": "8e9d5974-c8c0-4558-83a8-a4d65fcf5f21",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c559beaf-2796-4a3d-a027-f8d1fc21f4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf539cc-77d4-45f5-a734-73af7e42277b",
        "cursor": {
          "ref": "3f644aae-bbe1-4c4f-9a8e-a7bb4ce7f696",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9e86ae14-bd51-4260-b29a-633ac2d4ef64"
        },
        "item": {
          "id": "edf539cc-77d4-45f5-a734-73af7e42277b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bb17133e-dcec-4f64-81c0-bc57aca93e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a067e3-8a19-45c3-8987-049100ca7ba4",
        "cursor": {
          "ref": "47c4b8d8-f601-4781-b3ae-33be268af29c",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b9c80e1c-a7c1-4356-9038-9ea37d595523"
        },
        "item": {
          "id": "65a067e3-8a19-45c3-8987-049100ca7ba4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "51d79a4b-42db-47a8-81e0-2b77d38ac3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de79f313-19c4-49c5-b82b-99ec546e0ad0",
        "cursor": {
          "ref": "0aa3e6d0-8f97-49b5-90a4-b3fd0816b8cc",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f8f27b80-9cac-4f17-a58d-8221caf1c28c"
        },
        "item": {
          "id": "de79f313-19c4-49c5-b82b-99ec546e0ad0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "63547fdd-994c-4eac-83fa-e00c7bda7e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5336664f-bc57-422b-a3c0-bd4e16491c21",
        "cursor": {
          "ref": "6fa2e5b9-62b6-4c3d-85e9-029ef5571089",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "15167af2-7d3d-48e3-a09e-49fbe1947ae6"
        },
        "item": {
          "id": "5336664f-bc57-422b-a3c0-bd4e16491c21",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "57088222-1064-41c6-a673-7bb22e9ac364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f7f79f-03a9-41f0-ae9e-1afd68e128ee",
        "cursor": {
          "ref": "57fbbfda-060d-449d-aa82-5a9d826765b4",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3f5559bd-33ee-4dda-9215-372908e16af7"
        },
        "item": {
          "id": "82f7f79f-03a9-41f0-ae9e-1afd68e128ee",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "400a8630-04c0-42f9-8862-57893933a1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ddf8ce-bc51-49e5-981e-359fc9794188",
        "cursor": {
          "ref": "8f84beae-7ce9-482d-b9b9-3e8d2fe2bd3f",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e5d1ea6a-0d2c-4dac-ae8a-bac404a7d963"
        },
        "item": {
          "id": "a7ddf8ce-bc51-49e5-981e-359fc9794188",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "66f07b7f-a674-4431-b758-0d7ebf7de3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a681c103-71f1-487b-b5eb-067a941cee27",
        "cursor": {
          "ref": "6ab252f6-9fdb-431b-9e39-6213d39b5e8a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b9c40640-b70b-4c7e-a47b-edf4f91c21b8"
        },
        "item": {
          "id": "a681c103-71f1-487b-b5eb-067a941cee27",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "16f6e8f7-4487-40e5-9906-6b8eb53f98de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2108c866-829a-4fa7-a648-182d564d49f8",
        "cursor": {
          "ref": "278665e8-fe90-4e32-9522-cab310fb95c0",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "aceb743f-e240-4f85-aa89-ece645e56ebe"
        },
        "item": {
          "id": "2108c866-829a-4fa7-a648-182d564d49f8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1a202410-cb12-4bb0-889c-cde66d111d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8882b1-a904-43e8-b728-8c0b06258c77",
        "cursor": {
          "ref": "631f49ba-6fec-41bb-bf08-f520eb5b2c2c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c3677418-0fc6-4287-8cce-6f852887e63d"
        },
        "item": {
          "id": "5d8882b1-a904-43e8-b728-8c0b06258c77",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "36807b05-e235-4f0d-98d7-c24b03ad05f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e5a4ce-1e40-48d4-9cb6-138b873850b2",
        "cursor": {
          "ref": "ee666bc3-ec75-4a93-95d1-1f6a63c0cc60",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1c3f3bd5-f3d8-43e7-9ecd-0440b600c82b"
        },
        "item": {
          "id": "25e5a4ce-1e40-48d4-9cb6-138b873850b2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d91dd5dd-82c6-43fe-ba67-1e9f38d5cbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6220f7-afcd-4fb5-9c3d-b35e46184d8a",
        "cursor": {
          "ref": "175660e1-484f-471c-b646-0e5604d553ad",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4c216815-d97d-4bd9-90ea-bf0c9da2aa00"
        },
        "item": {
          "id": "cc6220f7-afcd-4fb5-9c3d-b35e46184d8a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ae7f6835-e22e-4c4f-b00b-9fa232402352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ffb09d-1129-4d0e-87b1-54cfaa20a18c",
        "cursor": {
          "ref": "739231b3-588a-4c85-9019-3f82933e6818",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "65e26fbd-1b84-48c6-877a-93e945152970"
        },
        "item": {
          "id": "80ffb09d-1129-4d0e-87b1-54cfaa20a18c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a5c9c612-0de0-43ac-aa31-4cf771a2238f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d457f0-f8c8-4015-b900-079af0424f9b",
        "cursor": {
          "ref": "0619830e-fa55-47b1-abd2-35da8f0df786",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7e99ad0c-8b9e-483e-b36e-92e5b9830ad1"
        },
        "item": {
          "id": "e1d457f0-f8c8-4015-b900-079af0424f9b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "94790b19-d435-48a1-bafc-1062254f8ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b331842f-d427-4bd4-a887-10655867b499",
        "cursor": {
          "ref": "6d86e420-9b9b-406c-b8f8-4e8291d58dc2",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "05c3b843-d086-4996-afaf-29a2fe45da2f"
        },
        "item": {
          "id": "b331842f-d427-4bd4-a887-10655867b499",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "990c01ec-e73a-4c4a-8325-e2e838e79313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13358522-312a-4f7a-b67e-41497555aaca",
        "cursor": {
          "ref": "b1b52636-fcf5-4d24-aba1-855359779af1",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c806254b-f3f7-4b4b-b711-63b238506b67"
        },
        "item": {
          "id": "13358522-312a-4f7a-b67e-41497555aaca",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "954fc00b-f3fa-49e5-a4ee-a0700d850365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3558ff0e-523a-4548-bdba-5c6c6f7b49ae",
        "cursor": {
          "ref": "d8258c74-f602-4b93-b15a-d001095ebf97",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bbf94a99-4424-4a65-8037-4b0b11a62f94"
        },
        "item": {
          "id": "3558ff0e-523a-4548-bdba-5c6c6f7b49ae",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5b2cc6f4-93b4-4582-aa50-f5adb783508a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3424b29a-6d1b-4c44-8e41-ba28d2fc452f",
        "cursor": {
          "ref": "97aa743c-d624-4550-930c-9401a5436a66",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3fe5c5ac-3968-4d42-ba29-6f1d3ca6c0ab"
        },
        "item": {
          "id": "3424b29a-6d1b-4c44-8e41-ba28d2fc452f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7ceebd39-c2f8-42d6-b6d7-927634aa8118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aea071-4473-458a-9645-5f48d33c7e21",
        "cursor": {
          "ref": "399ca9a9-b154-4ecc-a2d1-1235aac61229",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b031bd61-ee18-4c5b-b85f-4c01c9cec1f2"
        },
        "item": {
          "id": "a9aea071-4473-458a-9645-5f48d33c7e21",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "811e26b6-3752-45aa-a2ac-9da79047cba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a036b8f-941d-4fd1-a036-960f91271e93",
        "cursor": {
          "ref": "fb36fc9c-766c-4602-bf90-9750d60df9db",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a3dcb759-837c-4e2f-a0bc-868387660ece"
        },
        "item": {
          "id": "2a036b8f-941d-4fd1-a036-960f91271e93",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "abbfc9ed-bcbc-4bd0-aecb-1706b935007e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e09560-f3e6-4ba5-97cd-748563b5d92d",
        "cursor": {
          "ref": "67f34e0a-8823-47f7-adf1-1e60c1a45354",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9f796833-faf7-49ec-aa31-6b33222dc00e"
        },
        "item": {
          "id": "58e09560-f3e6-4ba5-97cd-748563b5d92d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ca906c63-0402-455a-9280-1e3eeca79e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4731fe5b-a717-4f89-ac8b-981d839d1391",
        "cursor": {
          "ref": "948c93c1-29db-4a4c-9b57-6f54b097e059",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5be7b735-4c1a-4fd1-87d3-7ba1c6749403"
        },
        "item": {
          "id": "4731fe5b-a717-4f89-ac8b-981d839d1391",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9bc6f23b-dcc0-478d-b403-1fa76c17cf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2f82a9-3bff-4594-92df-4e1c9e99ca05",
        "cursor": {
          "ref": "6ac6c7ba-b5bf-4004-8f6e-513d6b74f8d7",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f3856bd3-c7b0-42ff-94ea-cee5ad9d5e82"
        },
        "item": {
          "id": "8a2f82a9-3bff-4594-92df-4e1c9e99ca05",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "46fb9d55-a6b8-4cce-a4af-a62ec5c8b297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81191c5f-7964-4e52-9f8d-a9ab76e89b36",
        "cursor": {
          "ref": "c0298154-7c0c-4ea8-8717-0e3b0404644b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4e9374fc-1a34-43be-9f72-79bf2e7fe7e9"
        },
        "item": {
          "id": "81191c5f-7964-4e52-9f8d-a9ab76e89b36",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "65458f31-443d-4861-a37e-181d4445b6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea1f833-6e10-4026-a77c-7455238c7edf",
        "cursor": {
          "ref": "46383a9d-5dd4-4ac7-a575-848519f4e180",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "22a79f66-56a3-43c6-81e0-4e70212844cf"
        },
        "item": {
          "id": "7ea1f833-6e10-4026-a77c-7455238c7edf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "07533267-4701-4b03-af5b-15f33d493841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d333178a-1e93-418d-aebd-f4a46cde6340",
        "cursor": {
          "ref": "a9b72910-c7b0-45ad-a3e5-c67cf9287be9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "10f53ed8-3486-4cc5-b639-e5a7ef475d62"
        },
        "item": {
          "id": "d333178a-1e93-418d-aebd-f4a46cde6340",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3816b4cb-9898-4d24-bfc1-2fc7f47c0837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a3c20c-1dbd-46a1-b4ad-3460ae709085",
        "cursor": {
          "ref": "ced370ef-ef8e-4300-8dbc-96efa52d894a",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "eabfa0f7-6768-44d1-b34d-31056208973f"
        },
        "item": {
          "id": "d9a3c20c-1dbd-46a1-b4ad-3460ae709085",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "29b985a0-cdf0-4aad-bbe5-ba34b9b90f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12857a49-210e-408e-b715-96f2f9c6bab2",
        "cursor": {
          "ref": "d0b3b8e8-d001-4b76-8f4e-bfa21acdd6e7",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e7c1c593-3fe9-42a1-abf2-2ec9d66483ac"
        },
        "item": {
          "id": "12857a49-210e-408e-b715-96f2f9c6bab2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7e120537-05de-4fe3-9b7c-29e611baabe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955a64ec-445b-4fd2-add1-e61f409b6c20",
        "cursor": {
          "ref": "1d1882a8-c018-4898-91c3-9d2d6cfb3615",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a8a43c4f-6275-4eac-9acb-431162b66c22"
        },
        "item": {
          "id": "955a64ec-445b-4fd2-add1-e61f409b6c20",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "478d3def-c1cb-4a21-8507-321c0374815f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4ca402-f1a5-47c0-a819-dfa99fd36e95",
        "cursor": {
          "ref": "79347cc0-f95b-457b-8947-40f0f0a05b32",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3a1774eb-2312-4836-a72a-d39134803cc2"
        },
        "item": {
          "id": "8f4ca402-f1a5-47c0-a819-dfa99fd36e95",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3f92739d-e9ca-4eea-8104-e08d9a0ec9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773903a5-4e32-417e-80dc-5134b06f7ea7",
        "cursor": {
          "ref": "dbfa478b-a3d9-4ad8-8d8a-06110f535350",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1a047177-0d6b-45fa-b027-e3f125fe4d6b"
        },
        "item": {
          "id": "773903a5-4e32-417e-80dc-5134b06f7ea7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a54b4fd8-4f85-4fb2-8978-e07622e54fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d475410-39a5-44f5-ac17-211ad1edc5ce",
        "cursor": {
          "ref": "f91f33ca-7b04-4d4d-a811-6f55234bcf6b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "af0ece9b-ff98-43e1-9a1e-f558946a07b7"
        },
        "item": {
          "id": "0d475410-39a5-44f5-ac17-211ad1edc5ce",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f453e437-6036-485c-8770-5f783a26ab20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29118481-ce01-4adf-8b7e-ab7b7074ceef",
        "cursor": {
          "ref": "b9be4082-55df-4aca-a16a-26dabf8c795b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f49f0c5f-4f32-4dd7-9954-00f1c34637df"
        },
        "item": {
          "id": "29118481-ce01-4adf-8b7e-ab7b7074ceef",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "98ce98c4-ee57-4a9b-89e3-88ebe59b7441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1595dfff-56b2-4abe-b610-db50aef6df2b",
        "cursor": {
          "ref": "d06c438a-d787-4d87-9bcc-ea9a261a21af",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "54f736e8-d52c-4eb8-a06b-ccd795a7861b"
        },
        "item": {
          "id": "1595dfff-56b2-4abe-b610-db50aef6df2b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "385a778f-de0e-4170-8afc-286aad38cbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4467f74-ea74-4ac5-a2a9-6571699a67b2",
        "cursor": {
          "ref": "638c6e75-bd95-4e60-a8fc-eeb9179b00d5",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d752e277-0be4-4244-918a-9b659a8ca8d4"
        },
        "item": {
          "id": "c4467f74-ea74-4ac5-a2a9-6571699a67b2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fe232f21-04e0-429b-891f-2ec20debee90",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 58,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a21e90-d5d2-4386-a837-1adbe2fe10d4",
        "cursor": {
          "ref": "e4ac36d8-0bc5-4231-8faa-d4f8595d28df",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0383986d-5754-455f-9aa3-1a13515b5df9"
        },
        "item": {
          "id": "65a21e90-d5d2-4386-a837-1adbe2fe10d4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b764033a-9f01-47da-8c83-9798a3766126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3efc92dd-ddee-4a1c-8f29-ded750fa1b34",
        "cursor": {
          "ref": "97c5d030-7c39-48a1-9964-205ffdfa96fb",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "71a07cf7-19e3-45ae-bdf4-66b346c56b11"
        },
        "item": {
          "id": "3efc92dd-ddee-4a1c-8f29-ded750fa1b34",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "498c413e-7f9a-4ce0-8e52-1b97fcf4f7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68e085b-59b2-4dc7-88d7-b719dab49ad2",
        "cursor": {
          "ref": "432af0cc-03a0-481b-bd12-7769e3633d15",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ce42f03b-89c3-4b46-846e-fd5caed4cd3e"
        },
        "item": {
          "id": "a68e085b-59b2-4dc7-88d7-b719dab49ad2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bd080800-bd7e-4f7b-9385-64e9f778b61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3731ad39-05ca-4b77-bbd2-67a871d1cdd0",
        "cursor": {
          "ref": "8142bc22-e79c-4c51-8deb-3304b6e13f6d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "42ce7280-1103-4aba-9e68-fe030dbc8709"
        },
        "item": {
          "id": "3731ad39-05ca-4b77-bbd2-67a871d1cdd0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "defb6d44-1957-4ada-b4e2-2f6ccc146d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5708d03f-ebf4-47b5-9223-7e8551d9e84f",
        "cursor": {
          "ref": "3fddb505-660b-4aa0-a311-308f167c49aa",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "628220ff-d6c2-47ff-84ad-d9b4b55ea0ca"
        },
        "item": {
          "id": "5708d03f-ebf4-47b5-9223-7e8551d9e84f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6901b75f-aa21-4857-b684-d1b8eaff953a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e004b6a1-a2ca-4e47-bbb7-a614e1328d4b",
        "cursor": {
          "ref": "ac00b318-8da0-464f-976d-a24ee5f5b910",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3011a365-3042-42ba-bfa6-8746abf8822d"
        },
        "item": {
          "id": "e004b6a1-a2ca-4e47-bbb7-a614e1328d4b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "98f236e5-9974-49d9-aa6b-152748a6f1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9eca2d-557e-4e00-ac21-9a695935b15e",
        "cursor": {
          "ref": "c7656518-ae67-4aaa-a5ec-6fb7f1033a2f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d69d1c79-3f82-4b43-8c77-ba4af20bc840"
        },
        "item": {
          "id": "6b9eca2d-557e-4e00-ac21-9a695935b15e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3a1203d0-056f-4f02-91bc-8e58d195f1a4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5072e4ac-362b-49bd-9f26-691016cb12f4",
        "cursor": {
          "ref": "b9f48b89-af4a-4cf8-96ce-a21653a07c7f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d3427d87-2ed7-4cd4-82c2-8171d303ca0d"
        },
        "item": {
          "id": "5072e4ac-362b-49bd-9f26-691016cb12f4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d5c97de6-0823-4d47-a0fe-db6cd2b20a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1fd6d7-0687-440b-b16f-d7db495e0116",
        "cursor": {
          "ref": "6f9faa8c-b6b3-4c02-a85a-85b8fc9dbb7f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dd5c4c51-f190-4317-ab8c-79aa3fd99e23"
        },
        "item": {
          "id": "5e1fd6d7-0687-440b-b16f-d7db495e0116",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "36a8e378-373e-4313-8eb0-ee1a414d3db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b43f473-cd49-4cc8-8643-003a1c381e81",
        "cursor": {
          "ref": "40b9f8ce-dd1e-4c56-acf0-2d50622a9597",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c031e689-84f8-4d08-87ac-bfac50e9a096"
        },
        "item": {
          "id": "6b43f473-cd49-4cc8-8643-003a1c381e81",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2b4e0436-4664-47dc-840c-918ba6815048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10e2120-bd3b-4d10-883d-5a825382e68b",
        "cursor": {
          "ref": "42cb7b8d-0185-463d-bfae-942ceae92815",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c3393462-1dc5-4c93-922b-432a7b42a8b4"
        },
        "item": {
          "id": "b10e2120-bd3b-4d10-883d-5a825382e68b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1849ee85-2e40-4d1e-acae-4527f30f5359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e0e16b-8501-49e7-b1e3-7df0ba25154e",
        "cursor": {
          "ref": "21ff8bdc-4fa5-4cfc-a8af-4845cc4f0281",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8aad5623-7ea4-4768-8f23-b85b97f422ed"
        },
        "item": {
          "id": "a1e0e16b-8501-49e7-b1e3-7df0ba25154e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "429e2e54-8d2e-4ac6-89f3-f8c3881bd16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcf0b38-cc8c-472f-934e-f5306ef5d1e7",
        "cursor": {
          "ref": "e4829eb6-9640-4b3e-8d7a-bdc77830eb9f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4daac905-4c95-4a23-b737-77e5198903a3"
        },
        "item": {
          "id": "2fcf0b38-cc8c-472f-934e-f5306ef5d1e7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "91b08911-0139-4259-8e2e-83fed78583d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0392e21b-4ae9-4794-b671-1b299f23db22",
        "cursor": {
          "ref": "1f93b27c-3f66-4648-9674-907eca47da5b",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ac40120b-e97b-4be6-9526-57ab34a78d4b"
        },
        "item": {
          "id": "0392e21b-4ae9-4794-b671-1b299f23db22",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a952ceae-308d-4f50-a0cf-07eace1edbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c3b69c-ad0b-40f6-b60a-3736bee4688c",
        "cursor": {
          "ref": "4dc05f22-ae1d-42d2-9a82-4f6e4b016d30",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "905d3492-f873-47d2-a8b7-a1d26a48f7b4"
        },
        "item": {
          "id": "01c3b69c-ad0b-40f6-b60a-3736bee4688c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6b20c92b-317a-4468-a62b-679a2badd741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4060cd5-a80e-4a02-a9b3-8fa84763c8c1",
        "cursor": {
          "ref": "c5fc1906-ab12-4295-a38a-d311ee941d84",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8ee7d1a7-411d-46bd-b63e-77350c1b3122"
        },
        "item": {
          "id": "a4060cd5-a80e-4a02-a9b3-8fa84763c8c1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "167e0ba5-22b0-442c-8859-60551160cd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4808901-21cc-4e32-b1f6-cb02ee9106ca",
        "cursor": {
          "ref": "3d2b0bcd-2bf2-4e4e-b5cb-51e99e3ca37f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "56a2db58-41e7-4670-ab96-fd1addab2742"
        },
        "item": {
          "id": "f4808901-21cc-4e32-b1f6-cb02ee9106ca",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "07e84b00-4781-4f82-a97e-30b44223bc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d55c601-5ba4-4963-a551-b5c204c5c52f",
        "cursor": {
          "ref": "c2b58215-06cb-4a0f-893d-08a047457e24",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "54db88e5-f22b-42c4-8715-91e8f56f8f1b"
        },
        "item": {
          "id": "0d55c601-5ba4-4963-a551-b5c204c5c52f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "aaf8badb-18b3-49b2-88dd-c084820494c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537842c8-5de0-4746-a6cb-043b0d0f2aa1",
        "cursor": {
          "ref": "42c605ea-e8bd-4554-9872-c611fbea8d4a",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "deb8fcb5-3aa1-428e-8cee-9e1ff8230790"
        },
        "item": {
          "id": "537842c8-5de0-4746-a6cb-043b0d0f2aa1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2af25e0f-ad76-4234-a851-2e2514a07a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e4f6e0-5b60-4fb7-b140-2dd7a094f4e3",
        "cursor": {
          "ref": "c97b53db-ca50-4ef6-931c-30a5f84d124e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0b5fb1f3-d7c1-4070-8a7b-f7e179788889"
        },
        "item": {
          "id": "c0e4f6e0-5b60-4fb7-b140-2dd7a094f4e3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e07a5410-5c58-4346-ba3c-252359996557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f6cc1a-e49b-4991-954d-d18fb7381065",
        "cursor": {
          "ref": "132b0783-9c06-450f-a046-388090317a5e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "833a3ad8-b3f2-4dc0-af12-89c523e616e1"
        },
        "item": {
          "id": "f2f6cc1a-e49b-4991-954d-d18fb7381065",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "54f05e65-ffec-4ac4-81aa-72a4cbca099e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617e6f5f-6b04-46c8-a621-0635cb4705d1",
        "cursor": {
          "ref": "83490048-4151-4365-9981-829b21a511d2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f849f85c-35a1-443d-99f6-5b489def551b"
        },
        "item": {
          "id": "617e6f5f-6b04-46c8-a621-0635cb4705d1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ecf4a28e-474e-4713-a554-16c04054e083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27d49c3-15f1-4404-88a2-10a1bc7fc9d5",
        "cursor": {
          "ref": "502d59be-9ca3-407c-aca6-3bd1272acc83",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "da907396-4612-4bb3-a840-d2ceb154ca11"
        },
        "item": {
          "id": "c27d49c3-15f1-4404-88a2-10a1bc7fc9d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5fa064e5-1038-4e0a-8203-63170fa75046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34228f2-69da-424d-a9f4-9799e22594ac",
        "cursor": {
          "ref": "086634ee-bbc6-4d54-897e-6afac5dd3b02",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c912bb12-80e5-416a-81a8-e7e9c3b9d8a1"
        },
        "item": {
          "id": "e34228f2-69da-424d-a9f4-9799e22594ac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2fdbd223-b593-410a-9ab5-194f9b846ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7d910c-ddba-4ee2-89d4-e7e95b516be2",
        "cursor": {
          "ref": "2718e821-00f5-48ae-9f67-5d185bb49e53",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0798de25-0ce1-4a1c-b265-d5a0e619af2c"
        },
        "item": {
          "id": "0a7d910c-ddba-4ee2-89d4-e7e95b516be2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8af7d489-9ca4-4110-b2df-950997f76872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416c3496-ddbb-479d-83df-7ddcff8580ad",
        "cursor": {
          "ref": "bbea86e6-1d25-4678-821e-faf2a7e53e53",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8145112b-6401-447c-ae95-ab9ee766f071"
        },
        "item": {
          "id": "416c3496-ddbb-479d-83df-7ddcff8580ad",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2210f8ae-8eae-4623-a070-d0f4a200eedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b6b581-34d1-43f8-8b6f-8c6aead3c24c",
        "cursor": {
          "ref": "2ceea842-4ea9-48a1-a5aa-1176e04c17ab",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7a427633-d996-484a-a272-bc86651486ed"
        },
        "item": {
          "id": "18b6b581-34d1-43f8-8b6f-8c6aead3c24c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5b8463fe-467e-422a-b645-d406fc1adc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a2ad52-1c25-4f49-a975-e5702db2eabb",
        "cursor": {
          "ref": "8154d1ff-fadd-43ed-96f1-d395068adca6",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "184df780-2c4e-4c6c-ac13-280f70dc10d3"
        },
        "item": {
          "id": "95a2ad52-1c25-4f49-a975-e5702db2eabb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9b10db45-24fa-4565-afd2-8b14ca09c1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f754fd-278c-4942-afbd-29b6192b589d",
        "cursor": {
          "ref": "98f89a88-3160-4f95-9676-1558f2f8920a",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2d789c39-852c-4a8a-8c41-345f41782eea"
        },
        "item": {
          "id": "90f754fd-278c-4942-afbd-29b6192b589d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "42bb4353-3643-4378-b608-23d42e802227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebfe756-fa45-40cc-9ef9-1e8bf393a6c0",
        "cursor": {
          "ref": "b65ffd26-4262-41b9-9836-5a6208d962c9",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "304d14be-9c8c-4958-b44a-6ed987b00819"
        },
        "item": {
          "id": "4ebfe756-fa45-40cc-9ef9-1e8bf393a6c0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "36e50453-f498-4325-a6a7-482e3e6eb2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673ba5eb-dfc2-42ca-96e1-5b0d5efc104d",
        "cursor": {
          "ref": "bd900dc6-1690-48b4-b67e-4e93142484b2",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "631d3edd-9fd3-4cfd-8ee2-2d9af05a25c5"
        },
        "item": {
          "id": "673ba5eb-dfc2-42ca-96e1-5b0d5efc104d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "757769a8-9871-4467-b588-5a5d5a94276f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525a6884-2098-4dcf-bd88-2b5b92f66ea5",
        "cursor": {
          "ref": "d3566260-4892-4625-b1b4-5174ad35603d",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "675dbb18-6853-4c3f-bc33-b575046e1de2"
        },
        "item": {
          "id": "525a6884-2098-4dcf-bd88-2b5b92f66ea5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a3bc80d4-59cb-4f60-9b08-8eb3c760c06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45c967b-127d-4695-ad3f-babefc7619a3",
        "cursor": {
          "ref": "3801cc63-d367-4a69-b53d-e6e10461a678",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ce687d5a-76a0-4d94-a6bd-dca41bdb31e2"
        },
        "item": {
          "id": "c45c967b-127d-4695-ad3f-babefc7619a3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e61cfbf5-7c87-4df9-841b-2f83f6f10aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df5047a-e4a2-4f10-bb67-46dddef1f61a",
        "cursor": {
          "ref": "8cc33067-9e57-4a6a-bcec-b8f822693c4b",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "728924a3-0e88-453d-801f-3fab48a44fce"
        },
        "item": {
          "id": "6df5047a-e4a2-4f10-bb67-46dddef1f61a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2e7b007f-6cb1-4304-93ec-cbb3b7409b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259b7c95-2667-4b97-869c-bf14d2e284c6",
        "cursor": {
          "ref": "2b19b85c-77a3-4c4e-8634-95dfcd557aca",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ebfa46db-3a11-41d7-b5b7-4d342614f7ae"
        },
        "item": {
          "id": "259b7c95-2667-4b97-869c-bf14d2e284c6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4419e5df-7279-44cf-a615-e6b4368f49ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1ccf17-8768-4e77-9838-7b74894a3e8f",
        "cursor": {
          "ref": "0bdc6afd-8a58-4e81-89ca-19ffc78800f0",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0898b024-8a8f-4fe7-a76f-9eb26e7169a7"
        },
        "item": {
          "id": "ae1ccf17-8768-4e77-9838-7b74894a3e8f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "162832b0-80dd-49d2-81c8-ef44c15313b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b87fe0-af2c-4d99-b905-2b84b2e0dd9d",
        "cursor": {
          "ref": "d211f627-f038-4485-b365-4708a64f4b47",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "000b647e-802c-431d-a962-c7e4760beedc"
        },
        "item": {
          "id": "71b87fe0-af2c-4d99-b905-2b84b2e0dd9d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bc923f06-b694-4448-93cb-b9f50262cb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd7d51b-9679-45b5-83b8-907ee87e1b82",
        "cursor": {
          "ref": "5569b0c6-32f3-463d-aeeb-48eff557cd9f",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9e6be274-0438-4fb3-b594-51a91b8e5ed7"
        },
        "item": {
          "id": "afd7d51b-9679-45b5-83b8-907ee87e1b82",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a3ea3171-27ed-42d8-af87-386306a5b01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c91f85-5917-4513-85ee-5c6219ffba63",
        "cursor": {
          "ref": "7323c3bb-2da3-41c3-ac16-88ec130f2dfa",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6b73ee13-8ae4-4937-81a9-3d53a0fd8241"
        },
        "item": {
          "id": "56c91f85-5917-4513-85ee-5c6219ffba63",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7b88ea6d-62c5-4ae5-9350-088170dfa461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa334a1-cf7d-4350-be2f-14d58ef7a496",
        "cursor": {
          "ref": "6d267a3f-75d2-4ef4-98e3-b8ceb281a257",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a8368c9c-2c79-4fbb-a76a-7dfa6b3c0101"
        },
        "item": {
          "id": "1fa334a1-cf7d-4350-be2f-14d58ef7a496",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c44e2aad-9508-4d14-b963-58704cd5fb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0a6cda-3b47-412c-bb8a-372199ba83aa",
        "cursor": {
          "ref": "3c5ac101-1160-44ca-a0ac-a91d06794737",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7c51496c-b6bc-46ae-be17-81bab202252e"
        },
        "item": {
          "id": "df0a6cda-3b47-412c-bb8a-372199ba83aa",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3a9adfea-f732-4803-b078-bf58aab4b174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd30d52-d901-4cd4-b941-3805d7f56a82",
        "cursor": {
          "ref": "5feb6db5-c8a4-44c1-9185-009560a5559e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ed4eaa12-3566-4ae0-84ca-e50cfc6e11a1"
        },
        "item": {
          "id": "cfd30d52-d901-4cd4-b941-3805d7f56a82",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8269b2b6-aca7-4b9b-87b1-dc4731350d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62c0382-55fa-4da4-89d3-cd43877dfdcf",
        "cursor": {
          "ref": "6ef8e3e6-133d-430f-b8c8-bc9e49749b4d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7030290f-84b9-4112-923f-6bec3a7f133d"
        },
        "item": {
          "id": "d62c0382-55fa-4da4-89d3-cd43877dfdcf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "25ec073f-9cff-4c1b-a4a3-3dcea0ec0dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88159844-848d-4f1e-8546-8fb7b83affdf",
        "cursor": {
          "ref": "c11c69e4-eef7-4d7e-9c38-51abe5f65c33",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d3426ab0-dbb0-4e87-ad6c-4327360685d1"
        },
        "item": {
          "id": "88159844-848d-4f1e-8546-8fb7b83affdf",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7c186e6f-01e1-4a72-9721-f96fca97f2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fde3ff5-f7c2-496b-a87b-f2b59e5533ca",
        "cursor": {
          "ref": "496d8f06-b1aa-43d9-a97d-da227e91b5f3",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6a049e08-9676-43a6-94ae-76da79d6df01"
        },
        "item": {
          "id": "4fde3ff5-f7c2-496b-a87b-f2b59e5533ca",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b260dcb9-c9ef-44bb-803f-19c55c866bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8dc5ba-171f-4aa5-bc43-94fb0f366906",
        "cursor": {
          "ref": "658e11de-9c5b-475e-93d9-d5ac72a88a75",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "49003902-2f09-4206-b543-59cf7d7079d7"
        },
        "item": {
          "id": "9c8dc5ba-171f-4aa5-bc43-94fb0f366906",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0ee354fc-290b-4efd-99dd-f4fe6bd8bb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91df0083-b9c2-439e-b6d1-5dd6fc9cc27c",
        "cursor": {
          "ref": "70a3626c-639f-40e4-b03d-2aaccff35be5",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "501054cb-1f10-40c4-9dd9-af45073ed7f0"
        },
        "item": {
          "id": "91df0083-b9c2-439e-b6d1-5dd6fc9cc27c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e6964d9d-062a-46e7-ae0c-58e06d123cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591742c7-3c6d-4862-8e56-8498ca8d41a9",
        "cursor": {
          "ref": "0617d0e4-a4c4-4cec-acfc-359dd3fdf56b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "96a3487e-93cb-4baa-8e6c-17f59b8acdb6"
        },
        "item": {
          "id": "591742c7-3c6d-4862-8e56-8498ca8d41a9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "14deea8f-68f8-4e18-95c4-9ace504f33e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d49c58-e158-4ec3-b3cb-1555d917c5cf",
        "cursor": {
          "ref": "e069ee5a-2c86-43bb-b54e-3c46a009c244",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "04bd88c5-fd23-4a83-ae8e-ee09cfdb7668"
        },
        "item": {
          "id": "42d49c58-e158-4ec3-b3cb-1555d917c5cf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a433e0ec-41cf-40bc-9e55-15cfd0f82a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d90d3e-4e68-4fb1-917b-0c5f5477e823",
        "cursor": {
          "ref": "dd590d35-0639-495e-a08f-ad23c7c0d679",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ff22a915-5d46-490a-a1fc-131d6e0ee46d"
        },
        "item": {
          "id": "e7d90d3e-4e68-4fb1-917b-0c5f5477e823",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "563db619-f5af-4560-977f-3ef095fd9d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd666009-d9d4-47fe-9602-d56e2e892a95",
        "cursor": {
          "ref": "bb776b56-3ef9-4ecd-8e3e-129bdc80463b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f0a7f553-d831-4056-86ab-e366a6788837"
        },
        "item": {
          "id": "bd666009-d9d4-47fe-9602-d56e2e892a95",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "31d61913-82f4-4765-b521-345dcc4ba281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686fb418-0414-4657-b822-32030a5861ed",
        "cursor": {
          "ref": "3741900b-2525-4127-a0e3-8aa7da5aa49c",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bfcc73a1-da1e-4b7a-af4f-1a9d22dba704"
        },
        "item": {
          "id": "686fb418-0414-4657-b822-32030a5861ed",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e74683d3-3f12-44d8-a60a-b0820145e30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fdeb59-07c0-4c58-8123-51832455150d",
        "cursor": {
          "ref": "4137bd3c-8b40-48ad-b2ad-07b07caf7d6c",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "782aea09-5b61-432c-9fc9-3577b1ebae07"
        },
        "item": {
          "id": "a3fdeb59-07c0-4c58-8123-51832455150d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2dd91572-6340-43d4-8ce7-105b780d65ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad7fc4e-8c31-4dcf-977e-84fb2455338c",
        "cursor": {
          "ref": "a4ada4ac-82cd-48a2-aeab-750404bc6785",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0f04d5b6-6296-452e-b59a-88d4f81786b8"
        },
        "item": {
          "id": "dad7fc4e-8c31-4dcf-977e-84fb2455338c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d5e76b2e-3ce1-46e6-a05a-c5bdd1ff8c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65812380-aa0c-4d2d-a611-71a11d73826e",
        "cursor": {
          "ref": "16b8d4e4-200c-4567-92c1-c28cb7a8c5dd",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a121c980-1c0d-4498-acd4-f7c8b1788670"
        },
        "item": {
          "id": "65812380-aa0c-4d2d-a611-71a11d73826e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4330f65b-c6aa-4904-b52b-29894d4c6996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6819182-3f66-47ec-9886-21c625121759",
        "cursor": {
          "ref": "e8696cfb-851d-49f8-98c3-f86003ecfaec",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "730a0181-0a73-41fd-b8e5-97fda6e7b273"
        },
        "item": {
          "id": "c6819182-3f66-47ec-9886-21c625121759",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e8e9cf5a-37f2-496b-b86a-3235411894cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b870e27-1be9-4fe7-b2b7-462aed28f0a7",
        "cursor": {
          "ref": "c0952c16-af7f-4353-941f-c59776d7d504",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b531ffe5-8b81-4611-985d-df0ab76c2cf0"
        },
        "item": {
          "id": "8b870e27-1be9-4fe7-b2b7-462aed28f0a7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8187cedb-59b6-4382-bd2c-6c9c44fa0495",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa79cd5-69d7-48f9-8d55-709a21c44303",
        "cursor": {
          "ref": "4dccf3af-9586-470f-bd4f-c632fd57658f",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bd403eb5-6da0-4dfd-9eb5-005da1ffed0b"
        },
        "item": {
          "id": "7aa79cd5-69d7-48f9-8d55-709a21c44303",
          "name": "credentials_issue"
        },
        "response": {
          "id": "466e7ea4-c513-4e78-82a0-e50c88c2a6ca",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e410c3-d8b1-4f23-9ed3-261a5efdc295",
        "cursor": {
          "ref": "8590408a-dc74-42ca-a303-de6a95d0fdd3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "67492d06-c42e-4d37-850a-0c4bf3498a5a"
        },
        "item": {
          "id": "f2e410c3-d8b1-4f23-9ed3-261a5efdc295",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dbe2b44a-2a7d-4247-b643-07311661ad6c",
          "status": "Created",
          "code": 201,
          "responseTime": 174,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dd2671-bf2c-484e-9f2b-2e6a0d2d22c5",
        "cursor": {
          "ref": "ec957b61-f8e1-47ba-bf42-7401ccbdad42",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8612bd34-7bd1-4dd3-a698-18ed8f817d5e"
        },
        "item": {
          "id": "92dd2671-bf2c-484e-9f2b-2e6a0d2d22c5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "086ec670-b973-40db-8c38-1e1bfc3e7d28",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b27f4a0-eb29-4678-847b-a4e86c0978f1",
        "cursor": {
          "ref": "c29b743c-c716-4a1e-8cd4-9d168e66bcb5",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "72c5dc56-24dc-401b-85fc-a5df12ab343b"
        },
        "item": {
          "id": "2b27f4a0-eb29-4678-847b-a4e86c0978f1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b258f647-ccd8-4293-b1ed-bbd923a33c38",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "db74a88d-6109-404e-9525-9ed8f69630dc",
        "cursor": {
          "ref": "e28e6288-f955-4a01-82e5-a2ada0262321",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0454fa77-1049-4028-8b2f-cdaecf21dc57"
        },
        "item": {
          "id": "db74a88d-6109-404e-9525-9ed8f69630dc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4cd5bd06-0cab-4e08-9e5a-497d36796313",
          "status": "Created",
          "code": 201,
          "responseTime": 64,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9556d98-0ae1-4909-b972-7ba809cfdf2f",
        "cursor": {
          "ref": "b12be9d6-4cd7-4977-920e-17bcf47320a0",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "06587c88-c797-42a3-b6fc-2118d925f0e5"
        },
        "item": {
          "id": "a9556d98-0ae1-4909-b972-7ba809cfdf2f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d3db1a89-4d6b-44b0-99ed-f2805f44bd41",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd3f16c-1e71-4744-9e4e-fc2124f504fb",
        "cursor": {
          "ref": "55ff1555-356d-4e78-825f-bd1775b4b6cb",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0c56852b-e241-4733-b23d-ef341da82b42"
        },
        "item": {
          "id": "6fd3f16c-1e71-4744-9e4e-fc2124f504fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f3d14b40-ae2f-436f-af07-45b62174a5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c2f56f-930e-49e3-bdf7-5d572527f761",
        "cursor": {
          "ref": "6e37bcc4-67fc-4c15-b1bf-e075edc2ca37",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dd1b8160-4067-4697-97bc-671e409e4deb"
        },
        "item": {
          "id": "a4c2f56f-930e-49e3-bdf7-5d572527f761",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "56387a61-a10c-49f0-9997-5e6bdc1bffe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8be299-d4ac-427a-8107-ed874d37146b",
        "cursor": {
          "ref": "b59e184e-dd52-4a07-8078-d500fbd3bbee",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f0c6c58c-e680-4361-9b6d-89cdf9921e7d"
        },
        "item": {
          "id": "5e8be299-d4ac-427a-8107-ed874d37146b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f94c223e-a77d-4d28-8a3e-36be0a2b680a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fb3538-608c-4713-ba44-8a6325f470b3",
        "cursor": {
          "ref": "05c1624b-72ad-460d-99ac-7fe3606f9997",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5a7fc8f2-693e-4337-98fa-e72461050330"
        },
        "item": {
          "id": "51fb3538-608c-4713-ba44-8a6325f470b3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "16036980-b700-4c6b-a6b6-313393bcf8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9214e575-7e9d-41eb-9ad2-b3296d99a829",
        "cursor": {
          "ref": "1e853adb-6eb7-4f22-a865-93d0592dd235",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e917288c-27db-4291-ba1c-be806c04ea9b"
        },
        "item": {
          "id": "9214e575-7e9d-41eb-9ad2-b3296d99a829",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c96249ee-7fb6-4465-b65d-4ec371f716fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dd0cf4-7525-4cfc-946c-783c1691b60e",
        "cursor": {
          "ref": "01cf2cc2-c476-40db-b3b7-f17ea510eaf8",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e2570a50-52f6-4bd6-9162-43a8da3f3cda"
        },
        "item": {
          "id": "98dd0cf4-7525-4cfc-946c-783c1691b60e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4cfbb2b2-569d-40db-a761-8459b7ed849d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee61f6a-0f51-44a7-b46e-4c0c5b65e56f",
        "cursor": {
          "ref": "8f7b2340-3ce5-434b-8aaa-47047e28bce6",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "27881810-be17-4439-bdd9-0dd61a78cb67"
        },
        "item": {
          "id": "0ee61f6a-0f51-44a7-b46e-4c0c5b65e56f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f60522ad-a23e-4982-aee7-da0cc51e3a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5ce420-1aa1-44f3-b0cf-4d241d1883cb",
        "cursor": {
          "ref": "4a8b7c76-f0c9-412b-8301-eb02e9a9b2c4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3e90db88-2798-4261-9955-ba05094ec5b0"
        },
        "item": {
          "id": "2c5ce420-1aa1-44f3-b0cf-4d241d1883cb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "98581026-dfc2-4448-8b9f-ccc072e35c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1aaf3a-02e5-4bfd-adf1-7e488c40a862",
        "cursor": {
          "ref": "959f47bc-bcba-4c01-8926-cf0cd3541c92",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "74849f7b-c91e-44d9-8f87-f46b788f5351"
        },
        "item": {
          "id": "6a1aaf3a-02e5-4bfd-adf1-7e488c40a862",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "de9d2abc-ce81-48be-a0aa-f28f11ad7932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e283bc72-b485-4ded-85f6-b012e090eee7",
        "cursor": {
          "ref": "78b13b57-1974-4f1e-a7fc-a3458068cf9f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "719127e1-2041-4aeb-a488-0d88b75b47af"
        },
        "item": {
          "id": "e283bc72-b485-4ded-85f6-b012e090eee7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8a17eab9-3ff4-4af6-be2e-bf3d5afbf9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d875788c-20a3-4ee1-8b61-4aea3fea935f",
        "cursor": {
          "ref": "15d6693a-2c80-49cc-b02a-e303c94f0e0b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f948ded5-df9f-4a40-9f2b-c64ed0f09d8a"
        },
        "item": {
          "id": "d875788c-20a3-4ee1-8b61-4aea3fea935f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9590fcce-be85-4e6a-9e9a-30da036c52db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def2e30a-e4e0-4064-a4c3-880af5357ade",
        "cursor": {
          "ref": "035fa2f8-eb6b-49e3-9711-f956354eba2b",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "86b0961f-2438-4dce-bf08-4f24de62ff31"
        },
        "item": {
          "id": "def2e30a-e4e0-4064-a4c3-880af5357ade",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "71dc4132-45bc-419d-8bc5-064466a6f131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c3ca12-d686-4fa7-abf2-0500b9ef3dc6",
        "cursor": {
          "ref": "a313fabc-ce96-41b3-9c1e-701ecdec1284",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a831712b-52de-4328-a6ed-ae4f984bb3d3"
        },
        "item": {
          "id": "f8c3ca12-d686-4fa7-abf2-0500b9ef3dc6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2fabf5a6-b8fb-4f66-88c4-bb78a61fac9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc7dc19-547b-4f56-b930-b13e0a12d8ba",
        "cursor": {
          "ref": "d3f21fff-7af3-4826-869d-15218e090c52",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4ad83439-59f4-4369-bdef-af35c69f16f5"
        },
        "item": {
          "id": "ddc7dc19-547b-4f56-b930-b13e0a12d8ba",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9f36ac78-c19e-4c5c-bb78-ac318cc96074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cb4fd2-d0e8-4453-8225-60c44b3bca84",
        "cursor": {
          "ref": "a111052d-d052-4ba6-9bbc-1565c81d5f57",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "acef0131-b7f3-4189-8a3f-91ab6aeee50e"
        },
        "item": {
          "id": "15cb4fd2-d0e8-4453-8225-60c44b3bca84",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1be96296-6a3e-45e6-ba0c-6a656132c9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdc3db6-f5f9-4950-b6e4-52418a2c8652",
        "cursor": {
          "ref": "c83246c5-d91c-482b-8e79-788d9d79fcd2",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ac782bee-e888-49ca-8010-a0a35bca6ebc"
        },
        "item": {
          "id": "9cdc3db6-f5f9-4950-b6e4-52418a2c8652",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3061add3-000c-465a-bf94-8ddb947671e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06f2c67-1f97-4a87-8cc1-86906ffa84f2",
        "cursor": {
          "ref": "9dc56d34-a595-4902-be62-2f855af330f0",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e76e3691-d0cf-4140-bc69-d87aef019185"
        },
        "item": {
          "id": "c06f2c67-1f97-4a87-8cc1-86906ffa84f2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1fb18393-de88-4f3d-8c0b-3e28455d5e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b3407c-8383-481c-a1ee-b9e00f903766",
        "cursor": {
          "ref": "ee543e41-3fea-4e02-bc1d-95add59100c8",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8ad71037-354f-4be1-999b-26e3b47928b3"
        },
        "item": {
          "id": "d4b3407c-8383-481c-a1ee-b9e00f903766",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "50dfb626-74c1-4da1-88f6-a7118de1c65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4291b4-4d2f-4f6c-850d-9659aaedd70a",
        "cursor": {
          "ref": "d604aead-3e82-419e-af5b-4210a41ff021",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "51753428-a951-4719-bad3-557241bf0541"
        },
        "item": {
          "id": "ef4291b4-4d2f-4f6c-850d-9659aaedd70a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ecc1176c-edb9-46ca-aa84-88f919182fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d944ad75-b041-437b-b849-9440aa178a5a",
        "cursor": {
          "ref": "56b00996-5638-4f3d-8b97-fa6473e28fca",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "21cdfa1b-7fa9-47ce-9690-b8f72255221c"
        },
        "item": {
          "id": "d944ad75-b041-437b-b849-9440aa178a5a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dddbcce8-15f0-40aa-82cc-4fba9e16a480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ede36d-575e-4953-96f1-8f3be87e9aa7",
        "cursor": {
          "ref": "06736755-32e3-46f0-a500-8cbda31feba4",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e7ac66b2-a67a-44e0-ad1e-0ba536b2008c"
        },
        "item": {
          "id": "07ede36d-575e-4953-96f1-8f3be87e9aa7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2839cfd6-5054-433d-a1ab-da78936b73cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1ed850-7313-4625-8f0d-6e393e10f252",
        "cursor": {
          "ref": "27fcb60c-0ba5-470f-8da5-6d720b078cb7",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "888fe31c-19c8-46ed-95b9-acac2e22c7e6"
        },
        "item": {
          "id": "af1ed850-7313-4625-8f0d-6e393e10f252",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "771a68c1-ec73-48e5-83fa-29bfc4cb577b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddc69bc-b04d-41d5-9ef9-f621c018e2c1",
        "cursor": {
          "ref": "908ea60e-b130-4cc6-b70d-ee42511236dd",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "97638c64-590f-40ad-93a0-5d75986c4c8c"
        },
        "item": {
          "id": "dddc69bc-b04d-41d5-9ef9-f621c018e2c1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "34b45d71-f6ee-45e6-803a-2242ef5cca6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57acdf4-a25e-4c49-bb75-06205af5b981",
        "cursor": {
          "ref": "7a6038a6-5d53-46ae-a2ee-624a1db6c5fe",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "da8d99f1-91f7-45ca-ba03-77e304e50ec1"
        },
        "item": {
          "id": "a57acdf4-a25e-4c49-bb75-06205af5b981",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "51002153-7048-4a32-b456-752239cb393c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d893bc1-1d12-46b3-ae6f-4ffd684220f8",
        "cursor": {
          "ref": "14fea341-83cb-4b5e-b13f-f875a7102000",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "233459bd-daf6-4252-80cb-133da0af364f"
        },
        "item": {
          "id": "6d893bc1-1d12-46b3-ae6f-4ffd684220f8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "00c50fe1-d6f6-426e-b5ca-1087aee1f84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06280c4-3978-4388-894f-f3b76b0813d9",
        "cursor": {
          "ref": "9f05ce5a-aa14-456d-ab29-971b1e77b0e0",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f8967a4e-c48c-478b-82fa-4915b1ac0a14"
        },
        "item": {
          "id": "e06280c4-3978-4388-894f-f3b76b0813d9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d288751b-d190-4f0b-a0c8-306268004d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21cdaa0-7127-4b43-8e21-9c480e59c27c",
        "cursor": {
          "ref": "650b9d15-4d16-43ca-889a-e7a3fe38fb59",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "12a1e059-35fb-42fe-b9cc-9e110c5dcd2d"
        },
        "item": {
          "id": "f21cdaa0-7127-4b43-8e21-9c480e59c27c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d36502fe-5f98-4dc0-8e3b-cf665a429f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9f89bb-9914-4269-9b59-d13506e7ac06",
        "cursor": {
          "ref": "0dadb996-a016-44b0-8c32-f84dec26d25b",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1c5594dc-e733-437b-b3cd-dca7a8824da7"
        },
        "item": {
          "id": "ae9f89bb-9914-4269-9b59-d13506e7ac06",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "79911dd1-20b5-4306-a33b-2d416344b548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce35d17e-a973-4ec0-bbf3-69a5516224e4",
        "cursor": {
          "ref": "6204a04a-9da2-437b-857f-97921e65f8e1",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ed1b9993-8d07-4237-b4db-ce26e44489d1"
        },
        "item": {
          "id": "ce35d17e-a973-4ec0-bbf3-69a5516224e4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "503d8534-f54e-4f88-90d7-025aa7ad1627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea3b119-8223-440b-8bba-4864fad358d8",
        "cursor": {
          "ref": "e3acc71e-9827-4f84-b6d8-e355d1934207",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f63c00a7-3a6f-40bb-804d-7a4d1a23f760"
        },
        "item": {
          "id": "8ea3b119-8223-440b-8bba-4864fad358d8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3eff027e-0efa-4027-90cf-698e72c7f6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66433f65-f799-4642-bc99-233baeec4089",
        "cursor": {
          "ref": "a6cac863-0e3d-413f-8926-3c172d346ab9",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "71fb648f-4fd7-4bfe-9ed8-05033f3fc383"
        },
        "item": {
          "id": "66433f65-f799-4642-bc99-233baeec4089",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8180e79f-d117-41e2-abff-42438ed8de45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb35ff4-b5bb-4890-870f-8d7fb4266c1b",
        "cursor": {
          "ref": "456bcf74-5484-432b-921b-fe838f744394",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cbc39fb7-ae8c-401e-9cf6-ebad11d79471"
        },
        "item": {
          "id": "1fb35ff4-b5bb-4890-870f-8d7fb4266c1b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6de6c7cb-5427-4fe5-8283-f1babe24d32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d400c78-f278-4f91-9b00-e90b8360e895",
        "cursor": {
          "ref": "a0913951-e690-47bd-8bd7-7539c81b36de",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d9103d85-1fe2-4fb3-bf92-9d6398cebb2f"
        },
        "item": {
          "id": "4d400c78-f278-4f91-9b00-e90b8360e895",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "98ad15a6-7310-4937-ae50-c74f72b38660",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fbdb6e-2933-42aa-a13d-915908dc9334",
        "cursor": {
          "ref": "7da442a3-81d6-4261-b3af-31b09a618d73",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1912d16f-600e-4bd4-937e-7fe44f050698"
        },
        "item": {
          "id": "31fbdb6e-2933-42aa-a13d-915908dc9334",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bb0a11ed-4680-40f6-9b3b-8ea24b5dc199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8755921e-95f9-4d3e-803a-1d7bb2fea8db",
        "cursor": {
          "ref": "ed4c5785-d738-4510-bd72-f1e728de2af0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "363ff350-c150-48c0-b7b9-a31afeb9c4e9"
        },
        "item": {
          "id": "8755921e-95f9-4d3e-803a-1d7bb2fea8db",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "09232996-f21d-41b9-9889-b23c1b47a291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8124292d-f924-4285-8587-f1a9a9ccccb3",
        "cursor": {
          "ref": "5406927f-8225-4269-8010-ca5071294d8a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "91b74d62-5440-4d48-b04d-13d7e789d712"
        },
        "item": {
          "id": "8124292d-f924-4285-8587-f1a9a9ccccb3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "64b45318-fb87-4b5a-a794-cd393f3b8378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d816857b-1cd0-4ab6-b245-93817d1fca59",
        "cursor": {
          "ref": "f56e26cb-1169-4ebb-a8d7-07aa912a3359",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e6895b02-3636-47e1-a020-695231b8cfa5"
        },
        "item": {
          "id": "d816857b-1cd0-4ab6-b245-93817d1fca59",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "75771be0-8e37-47cb-8b12-9d16b9598a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329de7c0-707e-40a2-9dd0-7621f1915713",
        "cursor": {
          "ref": "b7efa761-82f2-4e24-9e7f-8ed9f01183ab",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "66fbc887-23a8-41c3-88e1-564c7e8c2865"
        },
        "item": {
          "id": "329de7c0-707e-40a2-9dd0-7621f1915713",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8607ca7e-195e-4dc3-a616-b44de6d898b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9386e4-2a86-4a67-b8e0-55477352b669",
        "cursor": {
          "ref": "1be2471f-21ee-4fd5-8a8c-63d66841ca6c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0db550b4-71ce-407b-b8ac-e53304c33104"
        },
        "item": {
          "id": "dc9386e4-2a86-4a67-b8e0-55477352b669",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1b8fb8f8-f9d1-49a3-aa40-729dcaa88b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89348f6-c5b6-43b5-a977-dd55aa23016d",
        "cursor": {
          "ref": "571f9ed2-24b5-4122-9ff6-5f1d1c9825f4",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1b601e1d-621a-4236-9411-4472c9554596"
        },
        "item": {
          "id": "e89348f6-c5b6-43b5-a977-dd55aa23016d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "387c37ff-a803-4351-9541-e45c5528b76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a874229-035d-4953-8988-b86533ba0bb6",
        "cursor": {
          "ref": "8dab6342-9390-4edf-a5ff-a421ce52e907",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "fddb9a08-f121-4614-a524-3f5bf7784b27"
        },
        "item": {
          "id": "0a874229-035d-4953-8988-b86533ba0bb6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d7283544-2716-46f7-945d-7c12114203f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e2e380-74e4-40e7-89d9-b0210b3a837b",
        "cursor": {
          "ref": "f90dcafd-7293-4a80-8ac0-049c2ddba304",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "69b437ef-3447-4295-899c-2b12b0aa9137"
        },
        "item": {
          "id": "e2e2e380-74e4-40e7-89d9-b0210b3a837b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "081a6f3b-b4d7-47cc-bbce-b51fc4863c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da67ad7e-7bf8-430d-8d07-77c4bd9f8be3",
        "cursor": {
          "ref": "bf6ca399-ee61-476c-bbaa-228c84337adf",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "319db4e6-d78a-44c8-aa6b-0030c4017f2f"
        },
        "item": {
          "id": "da67ad7e-7bf8-430d-8d07-77c4bd9f8be3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "333089d4-77c8-4d31-bbd2-0f412407eeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30016a34-dd56-4d31-9270-bfb3a7fa778a",
        "cursor": {
          "ref": "0143b773-41b3-4dba-bedc-d079a5ddd3d2",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a475bf84-a147-43d4-b0c8-cf9a8c23b0b7"
        },
        "item": {
          "id": "30016a34-dd56-4d31-9270-bfb3a7fa778a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e23d1b92-8505-4aad-a525-f9c35fa1242a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea6d41d-123e-40d6-87b2-80c7658f2509",
        "cursor": {
          "ref": "3d20577d-6ea7-43ae-9e47-ecc2b9bc4038",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "04a51935-bb1f-4ab9-996c-bb46fd485b0d"
        },
        "item": {
          "id": "bea6d41d-123e-40d6-87b2-80c7658f2509",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "47d4a43f-0987-4dac-8fe5-d38a3106b9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9020b47-0be3-4a3d-9189-eb837bff5cb4",
        "cursor": {
          "ref": "1d3a416b-e1a5-4fff-8b63-b5113b2d2ec4",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6b4589e2-0128-4be6-9e1a-0a97a401c454"
        },
        "item": {
          "id": "b9020b47-0be3-4a3d-9189-eb837bff5cb4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aa2dd8ec-c732-4b69-beda-b761b68e520e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611f6983-eef4-4119-9453-79ca8c688102",
        "cursor": {
          "ref": "777a2d3e-37bb-4ab1-917d-95cacc2c409b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4fcbfeeb-55b3-4e4b-84ed-824fe67cdffa"
        },
        "item": {
          "id": "611f6983-eef4-4119-9453-79ca8c688102",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c0e80cec-8518-491d-92da-0d754c0b0504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd9d6dc-7043-4450-ad5a-9ffb2862b2e3",
        "cursor": {
          "ref": "22a48dfd-9326-436a-a5d3-860edaae4112",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "93e45645-f194-4659-9b1c-22f36bff4058"
        },
        "item": {
          "id": "5cd9d6dc-7043-4450-ad5a-9ffb2862b2e3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "01791028-572e-411d-9949-d85445a75245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7e89b2-29f4-4083-ae8a-98728bb18d43",
        "cursor": {
          "ref": "b24afccb-cefb-4f8e-b6cc-ed28e549ec75",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a7df4617-6368-404d-833b-1898696a91ee"
        },
        "item": {
          "id": "dc7e89b2-29f4-4083-ae8a-98728bb18d43",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "839489b0-8b85-4547-b292-c0d99c2044b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081f6f29-709b-4001-b967-1cc979348c46",
        "cursor": {
          "ref": "f39ac599-4f0f-413b-a01e-38a100db8b7c",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bae8eafe-1c16-45ac-bbad-6c307086fec0"
        },
        "item": {
          "id": "081f6f29-709b-4001-b967-1cc979348c46",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a7431de5-92f3-494a-9eb9-3225cbeabfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cef1db-4616-40f4-812f-b0e928270ea5",
        "cursor": {
          "ref": "7a6bdddf-1a8e-453b-9b5d-619999c8aa45",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "898d8e7b-8f89-4606-b071-668b53c6b09d"
        },
        "item": {
          "id": "b9cef1db-4616-40f4-812f-b0e928270ea5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "48b6d53e-1569-431e-af42-84d60fe46449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cfc65e-754a-47ba-acfc-f02562617681",
        "cursor": {
          "ref": "ba1fab32-f382-4a2b-892c-581df0705346",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "65f0dcb8-d772-4a25-99a4-66a65ba41ea2"
        },
        "item": {
          "id": "25cfc65e-754a-47ba-acfc-f02562617681",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "53a47e6a-0f6e-4993-a415-e4ff4ccb2562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafce33c-927c-4233-8728-1b60b5eebd69",
        "cursor": {
          "ref": "65ea8c5d-2c6d-4692-bd01-028af1122918",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9653ff76-a0b1-4606-8921-5181bcb769ea"
        },
        "item": {
          "id": "cafce33c-927c-4233-8728-1b60b5eebd69",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fd35bc9d-9afe-4265-a336-657036238134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cb243f-adcd-4000-a1f0-14b05781a7e5",
        "cursor": {
          "ref": "175abced-088d-4a61-a083-4d059bf2bfe5",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6951edfb-0862-4283-a3b2-92a1ec10d425"
        },
        "item": {
          "id": "03cb243f-adcd-4000-a1f0-14b05781a7e5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dcd7233d-1e86-4059-8dd3-22da2e0e5f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47fc923-5982-47a3-8cf8-3b30196eb220",
        "cursor": {
          "ref": "1be26b98-98a1-4b14-9c39-97a591165584",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ea976355-a9dd-42fb-ad3f-167c311ecc1b"
        },
        "item": {
          "id": "c47fc923-5982-47a3-8cf8-3b30196eb220",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "07626fd0-7f3c-4a77-99aa-3b8ca1e0e79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f928ad-e708-40ed-8c4e-d8716737dada",
        "cursor": {
          "ref": "6f0b36b7-f7b9-4ffc-bad3-29b5d0926513",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "055fbf73-e07f-4de1-93f4-37b6d24776af"
        },
        "item": {
          "id": "d5f928ad-e708-40ed-8c4e-d8716737dada",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "21167e4d-ec34-475d-b3d0-aa7d66c65531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa24782-a6e2-4783-adcc-e29ab9698cb6",
        "cursor": {
          "ref": "d7ada7db-083c-4ecc-9f12-58f58cd070c3",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a362f4d0-aa67-45e3-8618-fa4c0ba6f148"
        },
        "item": {
          "id": "ffa24782-a6e2-4783-adcc-e29ab9698cb6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b956ff1b-b41c-464f-8ccb-0aa78a27e5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68b8fc3-ec6b-4ffd-9ce3-fc9c6addc994",
        "cursor": {
          "ref": "4fd84334-946f-4fec-9a4c-7142935e3c3e",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "12c19be9-9154-42a3-9a6b-c8fde72e0342"
        },
        "item": {
          "id": "d68b8fc3-ec6b-4ffd-9ce3-fc9c6addc994",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d48fa688-4f0f-46be-b047-f832a0ac9de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcb2baf-9fc4-496c-a07c-82d7a79682e6",
        "cursor": {
          "ref": "aa03047b-62ad-4fbf-ad67-d1445fbd32db",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d9ace188-f3f3-4c24-be03-5c0575597a3d"
        },
        "item": {
          "id": "1bcb2baf-9fc4-496c-a07c-82d7a79682e6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a3e52535-3c67-493e-a59e-e784e59839b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b426e78-5300-4d4c-acfe-b60a6d41f5e8",
        "cursor": {
          "ref": "13f725f4-23a1-4048-86c1-bad894b51254",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fa3a394b-e582-471d-8e0a-f91a6abbc54b"
        },
        "item": {
          "id": "0b426e78-5300-4d4c-acfe-b60a6d41f5e8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cab5864d-215f-4c61-a039-a3110879bb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4251175-0f00-4af7-9a9c-f2d65a37c2b9",
        "cursor": {
          "ref": "684f110c-ba59-4792-abce-23c9030d4516",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3363bf9f-0d40-40d2-9fb5-fd540e90504d"
        },
        "item": {
          "id": "a4251175-0f00-4af7-9a9c-f2d65a37c2b9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e0bb0ae1-d324-4df8-ba21-332564d63970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ff2182-47fb-45bc-b61f-8da851e068ab",
        "cursor": {
          "ref": "d96b1d89-0a78-4615-8fb7-4cafa0b4cbd8",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6e06f711-dec6-4e89-9785-b48ab1d3e773"
        },
        "item": {
          "id": "28ff2182-47fb-45bc-b61f-8da851e068ab",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3e32f30c-458c-4a0d-9c48-902ebda2e3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5033af77-281d-4213-8bfc-d40aaa9daea9",
        "cursor": {
          "ref": "87710fc5-2b2b-4092-b35b-442aa477864f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "376d0431-000e-4ecc-ada7-44d576e6a3b4"
        },
        "item": {
          "id": "5033af77-281d-4213-8bfc-d40aaa9daea9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1933dd3e-ff29-4fb1-bcae-49ca6f0bd893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eca9f0-a19a-41d7-aa52-8defa202c68f",
        "cursor": {
          "ref": "fc418e4b-fceb-4037-8e8f-14d3b3b3cf5b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b513695d-3ecf-4e42-a492-ac2ea60f1964"
        },
        "item": {
          "id": "99eca9f0-a19a-41d7-aa52-8defa202c68f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "917b3356-4c0c-466f-b172-3c3b93622a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339a45b9-5680-4083-b011-af67c09c07b5",
        "cursor": {
          "ref": "ead2b1ba-b432-47c2-b52b-066f53d72baf",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "aa19fb83-a1e5-430f-952f-1fa5399b9437"
        },
        "item": {
          "id": "339a45b9-5680-4083-b011-af67c09c07b5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "74fc99eb-29c4-4d0a-ae71-ff33f022f236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8941dff7-a394-457d-9568-840a660bcd97",
        "cursor": {
          "ref": "7feb2e69-2a01-4a8f-8572-e438b41e7dd9",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "841e50e0-4344-40e6-a005-73e7c9ad4ec8"
        },
        "item": {
          "id": "8941dff7-a394-457d-9568-840a660bcd97",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d8c98c94-6d7d-40ce-8931-bc51bdbc9a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513ed1cb-3c4a-4ed0-9d7a-7242a3be3e52",
        "cursor": {
          "ref": "414ce996-e463-474b-acf5-a05e0736a27a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ec472eb3-2239-49c5-9f87-2864c760bb11"
        },
        "item": {
          "id": "513ed1cb-3c4a-4ed0-9d7a-7242a3be3e52",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e3a101c1-5ac1-49b1-84bd-f8388138dcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a5713a-6719-47eb-8354-b665fa29acfc",
        "cursor": {
          "ref": "bd9290d8-d0a2-41bb-ab7e-61f8b9cb917f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2a84113e-1357-4663-9b84-b0bc8182f1eb"
        },
        "item": {
          "id": "a2a5713a-6719-47eb-8354-b665fa29acfc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "07c22590-dc6d-454d-9b5a-c06e9723e1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adc68a1-26ce-4980-96e1-3166f3e9aaff",
        "cursor": {
          "ref": "0fc22465-5259-4f0d-85dd-7a024f9a74ed",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0a88ef28-c206-4494-8871-cf1aaa6227d9"
        },
        "item": {
          "id": "8adc68a1-26ce-4980-96e1-3166f3e9aaff",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2263d089-2669-4ce2-a7f1-0bd5d4222da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f82baf0-dc63-44ea-9502-72359e97b8eb",
        "cursor": {
          "ref": "fbe75dce-de62-42cf-93a1-4bf7a10bff45",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "02323690-dfe8-4d74-b61e-be1dad34a3cc"
        },
        "item": {
          "id": "8f82baf0-dc63-44ea-9502-72359e97b8eb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5081db0d-dae2-43e8-bb1e-a17b8c5702da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508ba472-fb4b-4e96-8701-aa8356d727fd",
        "cursor": {
          "ref": "cfef7116-3cfb-4f51-b7bb-2441ab11c839",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7f1c8ca8-cecc-4bf4-8ed9-79468268db16"
        },
        "item": {
          "id": "508ba472-fb4b-4e96-8701-aa8356d727fd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dcd2b4d6-b8dc-4499-9f9a-78711da164c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc90005-29c9-4da3-b6c5-4646e7a59fd8",
        "cursor": {
          "ref": "f655cbd3-83ca-4e7b-b795-b20c34377c71",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "153e9a0a-f5c5-49df-b833-38ae40f71fca"
        },
        "item": {
          "id": "dcc90005-29c9-4da3-b6c5-4646e7a59fd8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "43fe03b7-5536-4035-85d9-42074787c333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e110b69d-2f14-4731-b602-990961229352",
        "cursor": {
          "ref": "214db706-f1e7-4ea6-beb2-00769796a0e1",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "29f0f77b-8695-4c38-8c6a-f66141331f13"
        },
        "item": {
          "id": "e110b69d-2f14-4731-b602-990961229352",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1a5975a4-8feb-427c-a9c9-7b415b1a452f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef569e6-38c5-47ee-9679-dc2b4a5d7f56",
        "cursor": {
          "ref": "6d4a07e5-cfb7-41c8-8910-c30e18799b31",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ea54f5f5-e7a5-499b-8778-754975a4c52d"
        },
        "item": {
          "id": "9ef569e6-38c5-47ee-9679-dc2b4a5d7f56",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9ae60447-0a0a-407b-a24d-b953891046e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f6a225-c458-453c-a59d-74610357f307",
        "cursor": {
          "ref": "f5080274-d316-4908-82a8-4b058b466173",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "129230a8-8819-4eeb-9c52-24f0b37f0d22"
        },
        "item": {
          "id": "c2f6a225-c458-453c-a59d-74610357f307",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "10869eed-09cd-4810-a0d5-111949e639a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5359e820-97bf-46dc-8e7d-837164ecc78d",
        "cursor": {
          "ref": "2607dbf9-243b-4976-b825-37536fe1b8c9",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0883ec78-2524-4fbc-9738-f26ff0925059"
        },
        "item": {
          "id": "5359e820-97bf-46dc-8e7d-837164ecc78d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "80923fdb-a3cd-47c3-94a6-428559edc1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63202e4e-8779-4322-b58c-d493caebd168",
        "cursor": {
          "ref": "e2279a9a-b37f-4ed8-ad3b-112580319811",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "85d9365b-acfa-4b0c-8f8d-bfe401103a2d"
        },
        "item": {
          "id": "63202e4e-8779-4322-b58c-d493caebd168",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f6e60df9-8451-472f-bb7e-f07c611b2be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccea867-6125-43b8-90d3-2867bb09ead8",
        "cursor": {
          "ref": "82e62aaa-a01e-4103-ae38-354a3a5937d9",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5732e999-6a3e-42a2-b1d4-aabc3c3b6fd2"
        },
        "item": {
          "id": "eccea867-6125-43b8-90d3-2867bb09ead8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8640974e-ae88-4884-88cf-745433af4a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb97b27-9c58-41b2-9d72-7566a1e2b64a",
        "cursor": {
          "ref": "e2b4a5d5-3dc9-4181-add0-b35d0950df56",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "713ee09f-e667-4a63-9adf-978f14212b8f"
        },
        "item": {
          "id": "acb97b27-9c58-41b2-9d72-7566a1e2b64a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0c40afbc-710b-4a54-a218-181aefe5eada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28d88b8-ae53-4b97-9926-ec07fd9a0d8a",
        "cursor": {
          "ref": "b16d33e6-360f-464f-a813-1704451f4052",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8d597d57-ab2d-4959-92c5-ea9e7f6713fe"
        },
        "item": {
          "id": "c28d88b8-ae53-4b97-9926-ec07fd9a0d8a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5f2d3a74-17df-4ad9-b97c-1b303c379b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f8ba10-9b9a-47c3-b962-0f81a0ab2f6f",
        "cursor": {
          "ref": "ef5a12f9-d03a-4694-895f-e2e4df12c124",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c0087d2c-60b0-4799-a14b-7ecb2eb8e70c"
        },
        "item": {
          "id": "73f8ba10-9b9a-47c3-b962-0f81a0ab2f6f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3d23a580-16d7-4f28-82b2-bd95bffe1dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dcf770-3d86-4154-9390-8d0b24fc175c",
        "cursor": {
          "ref": "28d736cb-ea8f-4615-8b98-5ea3f2ee5796",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a257f064-a779-4096-bfe0-2b9b88c8bc24"
        },
        "item": {
          "id": "b0dcf770-3d86-4154-9390-8d0b24fc175c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "656103c8-66ce-4424-93d2-286c4e2e9d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbed5122-6ce7-4d4b-b542-9fe06c2c46ea",
        "cursor": {
          "ref": "f1b847ad-2022-4f5e-8804-17276b426016",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "95cf1d35-d318-41b4-bb71-4f123184e3c7"
        },
        "item": {
          "id": "fbed5122-6ce7-4d4b-b542-9fe06c2c46ea",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9330ee55-db70-4d8b-96f0-4d584551c318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ab9694-e044-4de0-ad8e-3e9004dce2e3",
        "cursor": {
          "ref": "734686b4-1e0d-435a-80f3-c70ce871fb7c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9d33db39-ca0f-4491-94d1-2556a85ed9cb"
        },
        "item": {
          "id": "08ab9694-e044-4de0-ad8e-3e9004dce2e3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bfeefc76-a920-4ea8-88e1-7bc1ad84452b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d5a452-590d-4c7d-82bf-a34072df44ad",
        "cursor": {
          "ref": "7c21307a-9b34-4f31-965a-be24b8979adc",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ffa16607-2dbc-456b-8142-40c1afeae932"
        },
        "item": {
          "id": "f5d5a452-590d-4c7d-82bf-a34072df44ad",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8001b088-02ca-41ea-916e-b4268818384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20eb7adb-a144-4ef6-81bd-e08ae0d7050b",
        "cursor": {
          "ref": "13077a34-bdb8-40f6-b293-554e7869c18b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "831a5158-4ef5-43f0-8254-2fa5fb27612f"
        },
        "item": {
          "id": "20eb7adb-a144-4ef6-81bd-e08ae0d7050b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "99216414-4bcb-4416-9ff8-b927fca3014b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e7d249-0346-4929-9035-b0d300fec2a4",
        "cursor": {
          "ref": "001aa00f-c325-46e5-bc86-49a62f9399ef",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f0f865e2-3b6f-4b1d-8818-02ebd271edf6"
        },
        "item": {
          "id": "71e7d249-0346-4929-9035-b0d300fec2a4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6f8e9819-6d01-4138-93cf-f67c3b929d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055eb9c7-6efb-4389-bb66-94744af5899c",
        "cursor": {
          "ref": "56ef274d-352c-4e29-9d57-a2d7ed4404be",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a61b763a-9379-4d59-97b4-4f8859d6eec7"
        },
        "item": {
          "id": "055eb9c7-6efb-4389-bb66-94744af5899c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "59695327-e66d-408f-904c-2c85341130e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99510bc1-614d-4acf-b814-c3ba10e993f6",
        "cursor": {
          "ref": "2e51b661-2ccf-4f59-9083-1d5f92eb558d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0de122fa-1186-4a44-ab8b-3f3f749f6302"
        },
        "item": {
          "id": "99510bc1-614d-4acf-b814-c3ba10e993f6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9270dbd5-0096-43c7-8575-368adf54f3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606c9f88-3de9-49d3-a791-eea03bb2ec28",
        "cursor": {
          "ref": "bd7d72bc-50a8-466b-8b88-f4e6074a0d89",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4139d768-1812-44cc-b551-179f2e6cde1a"
        },
        "item": {
          "id": "606c9f88-3de9-49d3-a791-eea03bb2ec28",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "90de8332-569b-4179-85d6-5676a81e9492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae8f68b-9030-4507-8cd1-871888d9e467",
        "cursor": {
          "ref": "28b54035-9f95-40d7-9fb8-3a8a27d45a12",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "356a9b90-b69c-4626-a90f-0899f5379708"
        },
        "item": {
          "id": "fae8f68b-9030-4507-8cd1-871888d9e467",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "af94c695-4f2d-4aac-bed1-5fd572fc5d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6399f1e-fb69-4597-bd3a-7f84eb4234d1",
        "cursor": {
          "ref": "43549a81-2a13-48e9-86d7-9058da896ca9",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1a3791b1-d1da-4dcf-bd32-525a9aed273b"
        },
        "item": {
          "id": "a6399f1e-fb69-4597-bd3a-7f84eb4234d1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "363bdbc9-4973-4b5d-89f0-6a5ec7920289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a50bf6c-2824-4084-ad4a-e6476495ac41",
        "cursor": {
          "ref": "975d938a-bd47-4c2a-b7ca-c391d395c875",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "52f5d476-b871-4bd8-bbec-7c1fc3ea4752"
        },
        "item": {
          "id": "9a50bf6c-2824-4084-ad4a-e6476495ac41",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "73c55b44-4db1-4c47-b20d-3278a8510cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaea2b8-2c1f-4849-990d-3420e0e9ef2c",
        "cursor": {
          "ref": "01c8f5b1-b33d-413b-a1f3-a8189bff64ad",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "24fdebf0-fe0f-48d0-a649-0526196bc78f"
        },
        "item": {
          "id": "7eaea2b8-2c1f-4849-990d-3420e0e9ef2c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0a0bb39e-8885-4f29-abfc-a9e7988e2434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fa74d7-e26a-4226-a3a2-ac23c93da1ca",
        "cursor": {
          "ref": "f35d7afc-893f-408d-bb9c-0e228419b11f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "51a1136c-24f0-4c9c-af72-d0b141a7c910"
        },
        "item": {
          "id": "57fa74d7-e26a-4226-a3a2-ac23c93da1ca",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "25061dd8-1362-4be2-b6df-d4874be7950d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6c1244-6444-49cc-99d6-470c870a0bf6",
        "cursor": {
          "ref": "0aca1a53-f38e-4ba4-be88-362a188b8553",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0e07f36a-df76-4e9b-9c15-cad915eda937"
        },
        "item": {
          "id": "db6c1244-6444-49cc-99d6-470c870a0bf6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3d921862-2c74-4c48-a4c7-cc19ef108e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0825b71-5e78-4248-9059-71f3fb25b528",
        "cursor": {
          "ref": "03d8369c-103f-4e5a-9c18-1c4a13348798",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cf35cb13-8f16-4359-8ff0-8b436cc15375"
        },
        "item": {
          "id": "d0825b71-5e78-4248-9059-71f3fb25b528",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "676d8210-da45-420a-8b4d-80802776d2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ed1d2b-d627-486d-81e8-9819e97e6417",
        "cursor": {
          "ref": "bc1c5e99-8dcc-4ffa-87a0-fca4f035ffc0",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "646730fb-3869-431c-bb39-f963818afe92"
        },
        "item": {
          "id": "10ed1d2b-d627-486d-81e8-9819e97e6417",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "33c74413-e560-423c-a085-34f9b7fa5a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ac342d-8df0-4cfa-a214-b3f9dd35ce58",
        "cursor": {
          "ref": "7e5dfe6c-ac54-48fa-a982-4497ee60cdd1",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ae918094-7363-4852-b425-efea6c8379a1"
        },
        "item": {
          "id": "54ac342d-8df0-4cfa-a214-b3f9dd35ce58",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "75fa1255-bead-4462-b774-df01aa97af1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcb1c08-d27a-4962-a532-aa5b4e937c1f",
        "cursor": {
          "ref": "ec2ad3f3-77b7-4943-8b8a-0a39c66cc2b9",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8969574a-fdf0-4692-b8b2-3b822137ac68"
        },
        "item": {
          "id": "0dcb1c08-d27a-4962-a532-aa5b4e937c1f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5955bf21-5a6c-4742-a256-07fad695b10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570e695d-0c6a-4974-953b-481580f9b84d",
        "cursor": {
          "ref": "24401958-bc6f-4aa0-856e-bbad159c2718",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "eaa81637-f0a1-48a7-818f-9302eb6db892"
        },
        "item": {
          "id": "570e695d-0c6a-4974-953b-481580f9b84d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0c9ee0f6-426b-416e-bd53-6dcca9ece043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2b24cc-d11a-4e43-8c6f-dda3fe50d7e8",
        "cursor": {
          "ref": "ac63a3e1-a5d3-44c2-a4cf-fcf75745696f",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "47bd057f-2b83-4f5c-9795-be522825f049"
        },
        "item": {
          "id": "1b2b24cc-d11a-4e43-8c6f-dda3fe50d7e8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c60e451f-eb65-4a0d-b69c-d7fd902e9e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27105a9-d484-48dc-b61a-14f2aada7aa8",
        "cursor": {
          "ref": "d463c104-90ee-4a3f-9fb2-df48adbed43b",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "840802e1-275b-41d6-865a-3ae01dc4f4ef"
        },
        "item": {
          "id": "e27105a9-d484-48dc-b61a-14f2aada7aa8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "63c3128b-b584-4ce6-b002-ebab84cd1d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a88ba96-a1f6-42c0-a377-6e013a873d0e",
        "cursor": {
          "ref": "9bd672ea-07ed-482b-a6e6-474ba0e44315",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a2417c7d-5ee9-4fa7-980a-6f30cdf53a1c"
        },
        "item": {
          "id": "4a88ba96-a1f6-42c0-a377-6e013a873d0e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d59c29be-2619-409f-a849-5d5c5ebcd419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d00ad7-27ed-45d2-bc2d-92a2adea91f8",
        "cursor": {
          "ref": "6f6e439c-2ac6-4296-866e-7af7527e01e3",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8539629a-1453-4aa5-a904-1eb6f98f6340"
        },
        "item": {
          "id": "14d00ad7-27ed-45d2-bc2d-92a2adea91f8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c29b5b14-c9d0-4360-8d31-5f9c14e435e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98da61e9-ee8b-40b8-85ea-d28411a11a83",
        "cursor": {
          "ref": "1cae4258-455e-4723-92d2-d0e54935a528",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "156f7846-e408-493b-b031-091bf8cae1e6"
        },
        "item": {
          "id": "98da61e9-ee8b-40b8-85ea-d28411a11a83",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "05fa7a95-fb15-491e-8684-f6f31573f8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6a2209-a440-48e3-be1d-a949df0bc425",
        "cursor": {
          "ref": "940ebcd2-b6b9-4937-b2f4-e06964f18540",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f55fbf03-6226-47e6-bedd-978157a8d473"
        },
        "item": {
          "id": "4b6a2209-a440-48e3-be1d-a949df0bc425",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cd4c72b2-94c0-4d5c-948f-6c77e2cd0a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68ff7e3-dcdb-4353-a1fa-e216e84800bf",
        "cursor": {
          "ref": "3f7f3385-a44b-4e4d-94c3-e833f170da03",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cf8b37f3-e254-4284-84ad-6a3dfdd637ba"
        },
        "item": {
          "id": "d68ff7e3-dcdb-4353-a1fa-e216e84800bf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "75292fb1-7c06-4350-b2ff-0d44279b8263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baf6e3a-9613-4810-b002-3147c1fbb9de",
        "cursor": {
          "ref": "abf6749a-595a-4d6e-b179-40acdd63c926",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "753d1989-43ff-42f8-a20b-9cdaf7e8d470"
        },
        "item": {
          "id": "6baf6e3a-9613-4810-b002-3147c1fbb9de",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b9a56122-23d3-4bd6-90e1-5cd00c9c0fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb9f88e-4ecb-4e4b-9143-ad28f197f18f",
        "cursor": {
          "ref": "1607cae6-a4c7-4efa-bd1f-2e5da36a3258",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9978d17c-da9c-4cc1-b50f-d879ca15ea59"
        },
        "item": {
          "id": "2bb9f88e-4ecb-4e4b-9143-ad28f197f18f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b6dd48f7-d3f3-462a-bdb6-1fe838b13ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d798c4-bd51-498b-af0c-d3e98daefb02",
        "cursor": {
          "ref": "21e2f621-fe6e-4354-989e-6b7b6a2db390",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e6fd520c-4eb1-4127-8d43-ac7ba3da8f93"
        },
        "item": {
          "id": "14d798c4-bd51-498b-af0c-d3e98daefb02",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "de6304bd-9c60-4a16-b946-48fbce22283e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f963e1c-f6fd-47a7-979f-c302bf18fac7",
        "cursor": {
          "ref": "596553e5-235c-4d98-860c-8b3d5f70e481",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ba88bc07-b9c6-49ae-a40b-9f66cbdd2fca"
        },
        "item": {
          "id": "1f963e1c-f6fd-47a7-979f-c302bf18fac7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e0cb3728-a179-4cf8-a336-505960a11696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0550c72c-fee4-45fa-afe9-5542ef3559c3",
        "cursor": {
          "ref": "3ad5d26b-de3b-47ca-b439-061eee98543c",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dd6c1b4a-8911-4caf-8390-9d116f7ea747"
        },
        "item": {
          "id": "0550c72c-fee4-45fa-afe9-5542ef3559c3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ae126dad-3f1b-4441-8377-518876e1e37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd7a4e1-f639-4ce1-ae95-bf678fea1225",
        "cursor": {
          "ref": "6bdc5125-625e-42b1-ab7a-aafb1f284c4e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a5234f1e-2355-49ea-b828-991ef8ab7320"
        },
        "item": {
          "id": "6dd7a4e1-f639-4ce1-ae95-bf678fea1225",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c390dc55-b06a-4e90-b4fa-073760e386b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7586a6e-9fe5-4a3a-8ee2-67ca617313c4",
        "cursor": {
          "ref": "329a42f8-2f22-40c2-841b-f838c4607062",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "634d335b-2c18-43e1-a6af-5a933d45f451"
        },
        "item": {
          "id": "f7586a6e-9fe5-4a3a-8ee2-67ca617313c4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2e23b221-a00d-4b02-aa1a-69922536dfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197d3e8b-18c6-46c9-a594-3c470c34b8c5",
        "cursor": {
          "ref": "d0bab34a-429e-4e2c-9926-e3490cf10652",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0040101c-680b-4c22-8496-13296f649da8"
        },
        "item": {
          "id": "197d3e8b-18c6-46c9-a594-3c470c34b8c5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1e84a321-f9f8-459a-84d4-36b3d256ca0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65f0865-1158-4ec6-a1fd-afb7f56470c7",
        "cursor": {
          "ref": "aa536441-794f-4291-9f6c-f00384fc681d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ff50d8ee-a630-4319-97a7-3820153bc1dc"
        },
        "item": {
          "id": "b65f0865-1158-4ec6-a1fd-afb7f56470c7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3bf164ad-fb22-49d2-9e64-920aa5b00088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05997d2a-5e00-4ecc-b74d-791e9f8c1090",
        "cursor": {
          "ref": "da1a75d8-ebe1-4a0e-851c-aed7d05bc5ba",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b18e650f-56bc-4d71-99c3-b530e574ee1b"
        },
        "item": {
          "id": "05997d2a-5e00-4ecc-b74d-791e9f8c1090",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c5660693-9e0f-4861-bbd1-a8a940074dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0967f6-9e72-43c0-a8c1-5589fe1dc28d",
        "cursor": {
          "ref": "8f89904d-85ad-48a2-86f4-76029ba9e3fb",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6a02cc5c-cb3f-417b-a2b1-98d3b1a623e6"
        },
        "item": {
          "id": "ef0967f6-9e72-43c0-a8c1-5589fe1dc28d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d3220179-9cb6-449f-8436-da0c1057521c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c70cab-0efa-4040-9e0e-0c1fa138c198",
        "cursor": {
          "ref": "a0146ab1-09b8-4c9b-babe-ee4e4dd21718",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "02500376-92af-49ba-8578-95d24b2c86b9"
        },
        "item": {
          "id": "72c70cab-0efa-4040-9e0e-0c1fa138c198",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1de60078-7042-42f4-949b-13c499226e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84c16d8-2a00-4c7a-98c5-f189c0efa225",
        "cursor": {
          "ref": "3817aaa7-7ef6-4831-9e72-67ebf20556ff",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3ae58cbb-354a-4c33-bfd1-781a1f03659e"
        },
        "item": {
          "id": "f84c16d8-2a00-4c7a-98c5-f189c0efa225",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "14413f20-1148-425b-bb95-4a7bf43fc86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f3c172-d072-4731-a2e7-7ed2ff89b9ef",
        "cursor": {
          "ref": "350885a0-3b7a-4020-a4ce-1f71786b5ccf",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2b22d372-cc7e-4e03-9887-89a68375e736"
        },
        "item": {
          "id": "42f3c172-d072-4731-a2e7-7ed2ff89b9ef",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7dc38097-99a3-4410-a656-ad8652992e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4d7b1a-bac0-4ad9-9984-55f14c1cfcb8",
        "cursor": {
          "ref": "41af8664-f9a6-4296-8312-1d0b0c9c7b54",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b54eb2f0-a96d-430d-a7e9-baf8629388c7"
        },
        "item": {
          "id": "9f4d7b1a-bac0-4ad9-9984-55f14c1cfcb8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b48bec57-ebae-45f6-baf4-8c7172eee4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7a7ac4-0036-4da0-a8f0-40ae69c728fd",
        "cursor": {
          "ref": "932afbff-53cb-43bd-bfc2-f0abdc2ed395",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "55269bd8-cf17-4be5-8e08-22b5fb46308d"
        },
        "item": {
          "id": "8b7a7ac4-0036-4da0-a8f0-40ae69c728fd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4d2d0b1a-d806-4b6e-999a-58bc418ab96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a16564e-87ec-4bae-945c-b4f433e02251",
        "cursor": {
          "ref": "fb2da83c-d6f6-4fc3-a202-f81c9da714ec",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1e893bef-1453-49c2-856e-f8e43ee42cd0"
        },
        "item": {
          "id": "8a16564e-87ec-4bae-945c-b4f433e02251",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5f0ee811-4ef9-4af6-b444-4dc217642a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe5a398-a9c3-40f7-a6ba-5b5049253eb0",
        "cursor": {
          "ref": "e0157059-9081-4494-ab4e-3829c752f2c3",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1e36a2da-34d1-46fa-8570-61d1e54a5d97"
        },
        "item": {
          "id": "abe5a398-a9c3-40f7-a6ba-5b5049253eb0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7d068a10-67d4-4fe0-a1fe-d9e5bb0819d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21d594b-a5f5-4a29-bc0c-f4694ce8f160",
        "cursor": {
          "ref": "258f1dbd-1160-4405-acab-31b56365eb33",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "22db92c4-3f7d-4ed7-bde9-240bc3000053"
        },
        "item": {
          "id": "c21d594b-a5f5-4a29-bc0c-f4694ce8f160",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b341162b-ccd1-4db0-aef6-532d9bc0bbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c06fbc7-9cb1-4ab0-ae3d-1a2d257c53ca",
        "cursor": {
          "ref": "dcc0dea5-e4f0-4924-84ae-22ba947c73cb",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "896dd094-251b-44b0-b716-21ac06114230"
        },
        "item": {
          "id": "4c06fbc7-9cb1-4ab0-ae3d-1a2d257c53ca",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5e635f09-5d9d-47c7-8be6-a684ef2f5f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb257aa-7dd0-43f2-b9f3-b5f736fa24d5",
        "cursor": {
          "ref": "45b8ac51-1d48-4820-ad9c-c6eca454f27b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "97d10c9d-9caf-4831-bb14-9d10631f733c"
        },
        "item": {
          "id": "efb257aa-7dd0-43f2-b9f3-b5f736fa24d5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c798994e-d4d4-4e52-8dfc-80a84be60cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdddac99-6a03-4ada-8221-f699e8cc0390",
        "cursor": {
          "ref": "60c3759e-e2a9-4deb-bf1b-b5e16c553b68",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d688575f-56aa-409a-a24b-054228a1527b"
        },
        "item": {
          "id": "bdddac99-6a03-4ada-8221-f699e8cc0390",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d4226828-763a-4f8d-b537-14b908e6ce25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5d74c9-792b-4dc5-9f49-6d84dad02c03",
        "cursor": {
          "ref": "dfb39046-ac25-44a3-9db5-2042f25ed002",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fdbc2b85-7e1f-4e32-8594-1f7dcde9e3df"
        },
        "item": {
          "id": "1c5d74c9-792b-4dc5-9f49-6d84dad02c03",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "79506fa0-678e-42e1-ab32-734017823fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd09cbf-5238-4801-ab97-e18b351c8232",
        "cursor": {
          "ref": "285a7086-5428-481f-bec2-e98a25594ddf",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e09869d4-3262-4a10-a0eb-e92082ed2ab1"
        },
        "item": {
          "id": "dbd09cbf-5238-4801-ab97-e18b351c8232",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "02795705-cfe3-4933-91e3-beb13e75dca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1c3a62-9741-4e09-b935-47295ab3ef6f",
        "cursor": {
          "ref": "48816fda-109f-4470-a4b3-b2077c7b5ec1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7e2db46f-a48f-4e42-a18b-048dc10ce40d"
        },
        "item": {
          "id": "4a1c3a62-9741-4e09-b935-47295ab3ef6f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a056e878-6225-4708-9f77-9e402db34a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c80975-a71e-4892-b7f1-b13a64dddc6e",
        "cursor": {
          "ref": "84222685-fd22-4bfa-839f-1aa3fdb19f06",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "682bfcdc-aa5e-4185-8e47-3fe3674e6b6b"
        },
        "item": {
          "id": "83c80975-a71e-4892-b7f1-b13a64dddc6e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "738d1e74-61fc-4480-b258-20a43a9c7b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238b2c5c-447f-4d79-8c14-9075e23fd4ca",
        "cursor": {
          "ref": "74b17887-fce1-4712-b6ca-aa286fa38afc",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3bf02b6a-ef02-4d90-90fe-56afbf13f5b2"
        },
        "item": {
          "id": "238b2c5c-447f-4d79-8c14-9075e23fd4ca",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5c836a96-bc1a-4d26-ae7c-09765169c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eebac01-48e2-4385-9b2a-bb5b703ebb8b",
        "cursor": {
          "ref": "6e90d154-3bdf-42a5-b181-975a607e26d6",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c33ee591-8bce-459f-a372-9a92ffe2d22a"
        },
        "item": {
          "id": "7eebac01-48e2-4385-9b2a-bb5b703ebb8b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "77dba197-a38e-4edd-af34-f5ace3ff0849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbe2cab-b2e1-402a-b2e6-170c119eb81f",
        "cursor": {
          "ref": "90c2bf59-a83b-4a98-9b02-db2624c2f3a7",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c5d24785-aa3f-43a5-8d48-74f1db50df88"
        },
        "item": {
          "id": "6dbe2cab-b2e1-402a-b2e6-170c119eb81f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "49e10fb4-5bd1-4bd2-8ed8-0f18ccf8253d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d77e2a-2677-4b5e-a4af-41ab0f5f5647",
        "cursor": {
          "ref": "7bba6272-68e0-4f0a-ae8e-b347f5720ee7",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "118dcbf7-c31a-4cc8-8d78-724b80e6ad63"
        },
        "item": {
          "id": "b2d77e2a-2677-4b5e-a4af-41ab0f5f5647",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e0d7f83d-578d-41aa-8993-781cdbc7db47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1d697c-70fd-4c18-8663-d60dd7cce052",
        "cursor": {
          "ref": "b725fadd-4376-4792-8404-8135cc369620",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6fef6281-afa1-4bf8-9da2-ec73b8f9ccba"
        },
        "item": {
          "id": "fa1d697c-70fd-4c18-8663-d60dd7cce052",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8c83983f-73c7-4739-813d-600a54f7f6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018bad6c-f249-4ed4-845a-156b39032a31",
        "cursor": {
          "ref": "64a6f25e-af4e-4dbe-bcd4-b1b2363e1f8b",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2968c056-4961-4278-bc6d-b3ecd31104ff"
        },
        "item": {
          "id": "018bad6c-f249-4ed4-845a-156b39032a31",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6202a669-e006-453d-bb60-6b660c5f26a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2505278-ec38-4194-87bf-bcdd4b805b52",
        "cursor": {
          "ref": "d8bcdaff-faf2-4670-aa99-a975cd4d2c68",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e70dccac-9047-41df-882d-5d4d2f9e4e51"
        },
        "item": {
          "id": "a2505278-ec38-4194-87bf-bcdd4b805b52",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6b92d719-dd0d-416c-ac6e-2e97adb42199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3658ec-3e32-409e-9dab-850071e85a43",
        "cursor": {
          "ref": "71b56638-5be8-4e24-8c24-c17c93de1f47",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "91647b26-e7ee-4027-b995-142e0b8068a4"
        },
        "item": {
          "id": "be3658ec-3e32-409e-9dab-850071e85a43",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9c6a34bb-161f-454f-984a-b2fcba44e544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1b7a7f-f76f-48ad-9916-e36a715b9e83",
        "cursor": {
          "ref": "d042cafd-4715-48fc-844e-11670013d679",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c2904841-7275-4039-9a7d-c74db22095a9"
        },
        "item": {
          "id": "fa1b7a7f-f76f-48ad-9916-e36a715b9e83",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "81f38eac-7438-4c5c-b082-85866e1adbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1489284-698c-492a-9d7b-c984be4486d0",
        "cursor": {
          "ref": "9ffbc91a-88bb-4f97-9617-fd0354c18be2",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5ad8fc43-4458-477e-95fd-5ffdceca0060"
        },
        "item": {
          "id": "d1489284-698c-492a-9d7b-c984be4486d0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b1fb1196-b90d-4982-91c8-3d29ce2b0549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ceafae1-7615-4a07-9c64-c9a1dc84758e",
        "cursor": {
          "ref": "757f2dde-5f75-48dd-9d64-03b54322aff6",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bea28332-8ab1-40d8-ab73-348a126e2591"
        },
        "item": {
          "id": "0ceafae1-7615-4a07-9c64-c9a1dc84758e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b5b747e9-6b69-42e6-8759-be7277f02ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20872e93-9c51-41a3-a6ee-1aaf5b27c7b5",
        "cursor": {
          "ref": "5998107b-7f1c-408a-b52c-d4f253050b93",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "519a2885-9b1f-48b5-9738-418c82b82241"
        },
        "item": {
          "id": "20872e93-9c51-41a3-a6ee-1aaf5b27c7b5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fe7cd7d3-2713-4c38-b6d0-15929c8dd47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268e2cad-ddf2-4ec5-939b-55a86bf6f742",
        "cursor": {
          "ref": "a3568d1a-8bc7-4ff5-9f2d-32cbb63d9931",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "81c79448-d7b6-45ac-8b63-86de25d716c4"
        },
        "item": {
          "id": "268e2cad-ddf2-4ec5-939b-55a86bf6f742",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5e3af22d-685f-4a11-b93a-bbd835008856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac62ad8-291e-4bef-bcca-4c11d0128ac4",
        "cursor": {
          "ref": "78669f89-4e12-45ff-ae99-12a1696aa7fb",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "80e44314-9c74-47fb-bd15-d494511e4428"
        },
        "item": {
          "id": "fac62ad8-291e-4bef-bcca-4c11d0128ac4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8f10cb20-67d5-494d-af5b-9e353ebfa4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2ace17-bd40-424a-ae01-b2f0751c5f74",
        "cursor": {
          "ref": "8863514c-6adf-4605-aa00-9a759cd3eba2",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "089b2d03-484e-4bfa-883c-88a6ec914f7d"
        },
        "item": {
          "id": "1c2ace17-bd40-424a-ae01-b2f0751c5f74",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1dd4e2a2-3167-44de-85a7-c5186ddc5632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b2646f-a28f-4a8c-9fa2-bef32902ccf6",
        "cursor": {
          "ref": "54a03308-a374-41bf-bd55-54aa621bf86c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c349a519-245a-4067-9bde-552ae5d8543b"
        },
        "item": {
          "id": "48b2646f-a28f-4a8c-9fa2-bef32902ccf6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "61e5e138-d7af-43a5-b8b9-e3ebaa63865e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f25dab-0c8c-4f96-9af2-06a22056bb00",
        "cursor": {
          "ref": "63a0406a-bb3e-4b0a-b121-2f72e7401b90",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fa94f04f-416d-4fbe-a13e-4ceb2cf4709d"
        },
        "item": {
          "id": "59f25dab-0c8c-4f96-9af2-06a22056bb00",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "94837860-4c09-49eb-96d6-7bf76b4e8ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90466fa-eae6-431d-96b5-b9d92e1205de",
        "cursor": {
          "ref": "642cc53d-57b1-4373-82a9-624dac5d75b7",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "783b9879-d1ee-4e76-b8b6-08477e00e331"
        },
        "item": {
          "id": "b90466fa-eae6-431d-96b5-b9d92e1205de",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f5c56ffc-3453-4686-83fb-768b55bc0c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd94264-9165-43c3-a5e3-412ee613a43e",
        "cursor": {
          "ref": "fb835425-0bd0-496b-a2eb-08791b281930",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c7d10616-37eb-4e3e-b421-ee7be84c8f25"
        },
        "item": {
          "id": "fbd94264-9165-43c3-a5e3-412ee613a43e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ea96da7e-5b31-4339-b2db-efa6cda958a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd77637-19b2-4a1e-9138-0a4a411dcaa3",
        "cursor": {
          "ref": "4944682a-e784-4a20-96c1-c676f2218be4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7ed237c0-9dc7-41ed-9289-7b52c8c59c80"
        },
        "item": {
          "id": "4fd77637-19b2-4a1e-9138-0a4a411dcaa3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7752a21b-c3d8-4bc9-b5c3-488cae0f5f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be575036-c1cc-4d92-b094-d512f5ae3053",
        "cursor": {
          "ref": "1cafc7aa-543b-41ea-8e7d-4c7ebf3b206a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "20f82b83-7008-4776-8bcd-6ebf2fca50f2"
        },
        "item": {
          "id": "be575036-c1cc-4d92-b094-d512f5ae3053",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e33ae4d2-976a-4b5a-bfa5-036482166672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75104d96-46d8-4414-b89e-d1ca11723bdb",
        "cursor": {
          "ref": "b638f3bd-f9c6-4f40-a793-015f03b86555",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0fcaebb8-12b6-4823-b4d3-0cf22be22f57"
        },
        "item": {
          "id": "75104d96-46d8-4414-b89e-d1ca11723bdb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6e6b5280-8616-472e-b77c-bbd96db3fb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3b63ef-2e35-4aad-807c-747cf360d66e",
        "cursor": {
          "ref": "6fb7e246-6ef0-4e87-8f00-cab698e40fa4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "17c5f930-f559-4343-a86f-a34d5e7092b7"
        },
        "item": {
          "id": "0e3b63ef-2e35-4aad-807c-747cf360d66e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d6d85d37-5487-4d66-8bf4-595fe1209750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dee3c0-714c-460a-a4d0-51967ba14069",
        "cursor": {
          "ref": "b0de0e9a-65d7-4689-b53f-00c077ce67b3",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "253215b6-7a1a-435a-8bcb-d48e9dbcfcc1"
        },
        "item": {
          "id": "46dee3c0-714c-460a-a4d0-51967ba14069",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "daa52c0c-9d20-4fa6-a106-4c3e5dae5a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a474a7ee-7ccc-4f0c-93a6-dbb50f101ae2",
        "cursor": {
          "ref": "096e2fb5-d736-4425-a01e-be31632eddf4",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d5b3ae1b-f341-4762-90bf-ce7a27780732"
        },
        "item": {
          "id": "a474a7ee-7ccc-4f0c-93a6-dbb50f101ae2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "02d56378-9f9b-47d4-a3dd-76cf3f6f9f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a438180-b825-4c42-a37c-2c63afd95ca6",
        "cursor": {
          "ref": "29d85611-ba43-4726-a2d3-59b44911030f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "79783fe2-a9d0-4ebf-95ed-5ea5e2f8bc46"
        },
        "item": {
          "id": "1a438180-b825-4c42-a37c-2c63afd95ca6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ef42b62e-0561-4488-adc0-fefc0783201d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a429b0f-42da-44b2-aedc-e78990c295a0",
        "cursor": {
          "ref": "fd215777-1f97-49cd-aad1-9be6150ff1d0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "277eb06a-34f2-4326-a31b-15728b079b60"
        },
        "item": {
          "id": "1a429b0f-42da-44b2-aedc-e78990c295a0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c2a18030-65d8-4a23-a34a-7abf0a76f4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78dcf447-771a-4d02-b30e-572e350a0a1f",
        "cursor": {
          "ref": "79b6c47f-20a8-4d8e-b946-5d247227623d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "31312dcf-2ca8-4bca-a07e-29e07beb3933"
        },
        "item": {
          "id": "78dcf447-771a-4d02-b30e-572e350a0a1f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c23d8122-c4a7-41ba-8a34-b3548f89de09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4dd8e5-dd96-443e-b529-ea8ba4b3a329",
        "cursor": {
          "ref": "ff98915d-f09f-4e2f-b9d4-1c28339b5ada",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "641544cc-af58-4b32-b431-a5fba40ea6b2"
        },
        "item": {
          "id": "3b4dd8e5-dd96-443e-b529-ea8ba4b3a329",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1f988a52-6e37-44cf-a2a4-b849951495d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425c6d78-fe89-4485-8932-ff91df4c2c2b",
        "cursor": {
          "ref": "b5ddf14a-6f43-4acb-a9d9-6fc2af542d69",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "41671172-c8b4-4fb9-bd3c-20bf7f9abe19"
        },
        "item": {
          "id": "425c6d78-fe89-4485-8932-ff91df4c2c2b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3d2b3b0b-ea91-41ab-a9af-97c59e48fa29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15821778-f091-4051-a777-d36cb942e0af",
        "cursor": {
          "ref": "d12e139c-fa46-44e4-8b5c-bc8df3504df1",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "69b729c4-6fdf-4a78-91ad-6cb2ebf38a31"
        },
        "item": {
          "id": "15821778-f091-4051-a777-d36cb942e0af",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "faf5a015-1db0-4c63-95c4-6b30d58a3ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daeab2bd-0573-497d-9cbc-56fad5181170",
        "cursor": {
          "ref": "1912b9bf-8bae-4c27-9c12-4efff73c8b46",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2a2a9816-a74f-42de-b309-a5617308fc35"
        },
        "item": {
          "id": "daeab2bd-0573-497d-9cbc-56fad5181170",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e480f677-8584-4acf-883f-3ae268a06d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa3df9a-3db2-4f66-ba29-6af45f282bb7",
        "cursor": {
          "ref": "330fc487-b597-4c6c-868d-399b28155354",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "16eb78e1-1bed-4b2d-9572-d7c2a3c1c2f2"
        },
        "item": {
          "id": "afa3df9a-3db2-4f66-ba29-6af45f282bb7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7e0dc280-b414-4f6b-9f39-61bc580d9fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d84f63-9f44-44a8-bdea-57055c8304ad",
        "cursor": {
          "ref": "1be23dcb-3821-47f9-888b-28ed05465079",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6f7c2272-7b95-4b48-9cdc-9c1f3929ce38"
        },
        "item": {
          "id": "07d84f63-9f44-44a8-bdea-57055c8304ad",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "96388907-5b1a-4479-8d97-a1be7aac4c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5a2e72-fbb2-47b5-b41a-2ce7ad40bfe5",
        "cursor": {
          "ref": "5d621222-7365-445f-b3a8-7204253a73c1",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f9ddabd9-134e-46f6-8f84-eacf10e71808"
        },
        "item": {
          "id": "1f5a2e72-fbb2-47b5-b41a-2ce7ad40bfe5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ccbf438a-bf2e-4949-bab2-b8f62c1526bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17e8bb9-7b4a-49e0-8c0d-fe693f939db9",
        "cursor": {
          "ref": "dc71b119-1fa1-4776-8f04-103eb1f49060",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "97786285-f4cf-43ce-a211-453f3a6e73c8"
        },
        "item": {
          "id": "a17e8bb9-7b4a-49e0-8c0d-fe693f939db9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c33866b0-00b8-47a8-aae3-d653cae53809",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea52636-f6fc-4244-a665-a75c21e9f23f",
        "cursor": {
          "ref": "9088ac15-cbc5-4a7b-96d9-1ffbf243bc49",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d2500e5e-2385-4d18-854d-654d331a1101"
        },
        "item": {
          "id": "4ea52636-f6fc-4244-a665-a75c21e9f23f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bc8b272b-f426-4895-b209-ed80c5b8a81d",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5ffd32-1316-424f-adb5-88eaab7d7730",
        "cursor": {
          "ref": "a12cd51c-8dfc-4dcc-83e6-353a81b64cde",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "18de5bcc-6eda-4c1e-a298-5d55e56d1671"
        },
        "item": {
          "id": "9b5ffd32-1316-424f-adb5-88eaab7d7730",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "21e76342-0e70-42fa-9031-99004af80bb0",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "775fb9e4-a51c-45b9-9484-6a749160ca30",
        "cursor": {
          "ref": "ef343749-50db-44f7-8f7b-8d91e0febe68",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1b77889d-d71b-4c94-b924-a80b4504c80a"
        },
        "item": {
          "id": "775fb9e4-a51c-45b9-9484-6a749160ca30",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9655985d-5f93-485e-b9f6-3715adae9e3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775fb9e4-a51c-45b9-9484-6a749160ca30",
        "cursor": {
          "ref": "ef343749-50db-44f7-8f7b-8d91e0febe68",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1b77889d-d71b-4c94-b924-a80b4504c80a"
        },
        "item": {
          "id": "775fb9e4-a51c-45b9-9484-6a749160ca30",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9655985d-5f93-485e-b9f6-3715adae9e3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e55357-b80b-4fa1-a5ee-25a79dde1aca",
        "cursor": {
          "ref": "0605e4c4-d2d5-4503-83ad-dd66da4d7041",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "478ed992-474f-4949-a0ca-4b793f681e63"
        },
        "item": {
          "id": "27e55357-b80b-4fa1-a5ee-25a79dde1aca",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "35ab754e-c339-47db-87ec-6e13176ab658",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad16c579-3930-4cca-b723-a0d5080e7c3e",
        "cursor": {
          "ref": "e3dda888-bd98-468a-a835-5c8dd8733f2e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "467ada42-3368-4501-83c1-89f274b85dab"
        },
        "item": {
          "id": "ad16c579-3930-4cca-b723-a0d5080e7c3e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "91948fd5-9c6a-48b0-8ab9-8c9c9456e9bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}