{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ed47bc1a-8ebc-4804-ab73-d515e3c17caf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "67e026de-a5bf-421c-83eb-ca3528314437",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e41076b-a47a-4a2f-98bc-a2badafe1686",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "85d8addb-2945-44ef-9bc5-a08ca8859627"
                }
              }
            ]
          },
          {
            "id": "9ef18525-05e9-486f-81d7-3d305f3c1688",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2878eaf0-92d0-4522-8e83-8a9e68b7efac",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "146d68f1-9022-4b6d-b611-7721c3b3226f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7e57a66f-d346-43b0-947d-366a1e3437e0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c53b8c3b-2b4d-4071-a313-497794df546b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c84ec33-7d74-4ab9-a226-18e1c4d4f102",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc86682a-5247-4a17-9f4c-22b27f669957",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "306d5a6d-429e-4d29-a38d-0c633eafa037"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae1c3ba1-699c-4d54-a8a5-d4e0e2324d77",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e0dc7bc-c30e-4014-9ef7-c80ad84d15d3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "73d0e068-25b3-48da-9636-15d950ac9d43",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71877df7-8760-4848-8846-91b4d198ec57"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8153c391-2b7f-42b0-95e0-20abb417bef2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1f009aa7-358c-489d-bce1-f619a06f4b42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a129d51f-c238-48b9-ba3f-9955bdfd4317",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c6c808f-9b96-49c6-9cb4-f72c3cbcac6c"
            }
          }
        ]
      },
      {
        "id": "5af5d446-97f9-4014-b362-17b79270dc13",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1772a245-d174-49e0-8d87-49c4d2cdb76d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00ad7b7c-7568-4060-8812-ca2f7c7cabb1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b0bfbe32-8d21-4d03-9d0a-edb38c39f727",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49031da-e8bf-4a2f-a183-1596196179ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd967840-35cf-48b5-ab22-babffa6ca7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fadfb7-2f54-4cb2-b945-f276a425c08f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8c4728-f8a2-4ec8-9206-0588c8c6a0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "050651cb-a3a6-49da-bd08-fb5365ffcc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e8bfac-5392-4e9c-b29a-2a11afbc9cc0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac3ca86-0af9-4a08-960a-820fcaa4fb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3e506db-8cdf-4745-9617-9f6f6687c68d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a86f124b-0262-4d7b-95ac-a6d5dee7a4af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5da5b8b0-0e76-45c5-b279-f829e05d2308",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10835e81-660e-4109-a0b7-040d2374c902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7af336b-550c-45ca-b9cf-77c711e7c7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f891e20-2ae2-49d4-a8b9-0807028fcead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655718f9-4aa3-40d5-82b5-fddd74d7c38f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9c28c35f-f793-430d-8aaa-eb18295fb2ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d57b3395-9498-44d2-afb2-9f0b317ca73b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e128ebd-becd-41e1-8219-96004abf8f0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b5d0d567-1287-44bb-9296-7c2a99ae6b99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "300f0f85-00da-4cff-9b7a-739bea7b174a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5bfb0a4e-ef05-4f04-86a7-d26bf52e6b4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d403a195-4b2e-4713-ab5f-456714b46dae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a45ffae-e659-4cf2-abc5-45a9255a4931"
            }
          }
        ]
      },
      {
        "id": "3be00e51-1896-44e7-a17f-0cce3828e3c9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "41a98ee4-e6ff-4f0e-b874-390aa4ea2d03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2501f9c-a743-4c7f-853f-3878cbb4e796",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6f205254-e3bc-4228-8468-ed58f2abe8e1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b66303-1dce-427b-b55d-69ee343b3315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87039424-d1b8-40f6-a594-5fdbbce6c582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b075b3ed-909f-4f38-ab64-98aacc10cb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d59bbdae-4616-4e32-a8f3-9e6626f15946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4486307-868c-44ae-aa5b-910a8e169f6b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac07e95-3ada-4efa-99ec-41e45e326836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b2598a-fbc4-46e2-b78c-d603d6a0876a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f156e78c-6f54-41d3-bd14-9d50fd7769d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34f40ca1-1419-4e6f-8809-17f018836c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff543b3e-5d29-4414-a489-9b662a9fd560",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a885d63a-26ae-49b6-9f71-c9006760b074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74eee25-b686-4d35-bdd6-bf89f916c037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bff6b2-3c49-4f60-bd20-bd8698faa77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df4e3885-d27e-4339-b64c-b03f7ce1e2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf085791-69ec-4e86-97e0-ab622dee67be",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af41d101-5e04-4d41-946f-9b3438f40919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df0ce69-8c51-43c1-ba4a-8219d3a1f459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bc573b-f73d-456d-8cee-2447f8a22b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeac29b3-9f81-41a4-b8f0-788e9b19c617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81876de0-7fec-4104-92dd-dbc46ab8d8b3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c04b364-7536-48ce-aeb3-b2354b8ba462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db4633e-ff6e-41a7-8873-874085fb4e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a34e5be-6e8e-4902-846f-480d36a83823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32f5fbd7-3cf2-4646-995b-dd87d64525d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b27904-49f1-4090-87be-1af949477dff",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3607f69f-00e8-4e53-9fe9-18c0b388f710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0cd716-8829-4490-bca2-4200bd302817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d622c817-8486-4ec6-a592-6c8fb7998556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84c017d5-8521-462f-b0e9-e0b53b2de359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c70de2-e5df-4da0-9c1d-7cea90242ccd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca7e17a-c511-49c3-8878-c8b2fbf8d3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3e506a-170d-4a81-9acb-e74eebcb8216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a87bc7f-e2e1-4689-a95b-829ab77988d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c915e8c-6dfa-4e66-a771-021d81d52a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53476363-3635-4163-b429-a3d094f2f854",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d02c00-cfa3-4dac-b9c6-a60851b41f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5dc853-40fc-48fa-9aa6-84ff71a15809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e80a7e-dd50-4916-a7ca-8bc44847d86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a8efb8d-ecb8-4f06-b640-9f722756ca82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de70c0b-e585-4d63-a3d0-99abffa233aa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e90abf-e541-4eb4-8304-bc80019cd16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e827bfe1-7de8-4317-9ee3-46b4660967a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f931c973-00f3-4564-bb4d-b218f6178314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ded1f68e-5a40-41a0-8173-86569e51dd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a1df8f-fc6d-46b0-843c-7632ecc25241",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccc91a9-8ab4-49c7-9080-6f1c1d2b7612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aad854e-dd0b-44e4-871a-196296371758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ac70e5-53d8-4dfd-b763-119eadcca7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1d2c8f7-8e92-4560-ab3d-88c22908bba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60e3915-e7ae-4857-bc1d-ea28dd81733e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b7d502-1828-47f8-b5d0-02803c0b5369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e64e07-53ac-4a64-a57a-f17c2cbfa036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5c9dd2-e2a7-422d-870d-b756343d4f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "185fc145-d61d-402f-8aa2-2afc59151e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb714c2b-5eff-4265-a0a2-143ac3420d75",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056d5c48-7d91-41ae-ad8e-6f03fc17d12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28235b00-36ba-4a3e-96b1-fcd3986cce6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331df71f-1e0a-4712-8ee0-bcabc562050f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25dabdb6-0f5d-42d2-829e-5eeb8a197516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65424b6-a54a-4af0-9165-9bc8eb0c5191",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a35120f-39fa-4796-b673-1e59ae3ccbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22b0176-8eff-41df-888d-c7aff60ed506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d336c2-bd28-47b1-a5e6-db8b5e0cec01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "801e484e-507b-488a-9a60-a28d4ad67459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376c8dee-d5b0-404c-8071-aca05031ba28",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453d758a-7397-4d53-bd9f-f1481731d2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0268155a-43b6-44a7-a9da-03da51637c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe7e942-6eae-4633-bf53-7ff622eac922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abee0c61-94af-4b55-a2d6-0a64b447e73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e753dcdc-2c93-4e7f-bf95-f194fe59da92",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bd10e2-413d-463d-92cd-4a21bf76677a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233a65a6-ba2f-4a82-a9bf-b2b980902a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5110272-7705-4e65-920f-41196eb086ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbdb2671-a115-4c42-90a7-2c4d9fc6bc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024b5dbc-a3ce-4e09-847b-4405a80316b9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdcdb6d-65ef-4e14-a85a-5b8e19b7e4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56704942-adc4-419b-896d-ed1e6049c62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e65866f-349a-43c1-8619-e489528f105b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cdb83a3-1acc-411d-aa98-22388fc878f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db098d8d-a54e-42d8-9f0a-94a6c7536bc7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c776bc0-4de3-4d71-87e0-b0ac6a420f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2475c3-e585-4dd4-9d0e-4f4fac6644b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71086cd5-d8c3-4c75-a75e-00c5c48000f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7190314-80a4-4ff0-bb5e-004a3b2040b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb36d7c8-8e67-42a0-8315-7f718821ac27",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce7f1bd-44e4-448d-a1c3-885b9f17ab8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3fa7d21-e07c-44b4-b3e1-3a05040d3fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68db9e6-2c50-4f34-af32-ad9106fbc0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2244753-5027-4632-a489-15cd10a48055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4822fa-395e-43c9-8668-ac00eca37eae",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744c9081-45fb-415b-b1ef-b5d431a4fa52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5091622-575e-4641-98c4-149fae0051df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d9f9b6-c023-46d5-8d2f-6c9cc1c076f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eabd0b7c-f8aa-477d-a0f2-7005c5002200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a72afc-aeeb-4e48-ad9e-53ee972f1133",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67b4d07-c295-4dc6-b7d6-d7f1b5dd85ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a42e68b-c92a-4c34-9743-c2578fedcd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baec4ed-e704-49cf-9d5b-13f851647792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c3e8ab-7bcc-4216-b347-990efa1a599e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef3160c-fa2e-4664-b377-e10b55c779ac",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb9afbc-5e7b-43d8-8385-dc58048f2296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d14781d-47cc-4d27-a303-9f3f43ce7d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de31719-297d-4167-9aee-c498d2229488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "074038cd-a82e-4a8a-8bca-a1ea31778846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdddf2e-29dd-4e4f-9278-34a6f2d9d84c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8013182-3739-449f-8f58-ce427d0b105d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61010d45-245d-4e5a-97fd-7d858f64e77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959baa97-a07e-4759-b0dd-c66dc1c45ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2890b7d0-1c99-4812-b73a-af138cd5fdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7a4734-9dc9-4060-bcf8-b7673ffcf39a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef830bd-9926-424e-ae32-b2221dcce6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34faf386-3444-423c-b0b2-b7c07387b175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f77dc0b-9cda-4049-9b2f-3cf5f939da22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7664a6f8-88e1-4b85-8ecc-c5fb1ab71297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c794653d-ea41-447c-ba38-4fe2cab4fd48",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0e01ec-5380-49cf-b784-dc80b4db6d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cf6d15-9822-42af-94df-ba718b56cf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5e1041-11df-4738-8778-f190a3864ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7213c04a-c9b4-47d0-963f-d13df15b1930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09cfb8d-dfab-45a7-b55c-b179df179592",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6bea1b-4cdc-4d60-a550-5dd4cae91826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb31725-1b1e-471f-95e4-e334242d21cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2a0517-8333-46cf-b844-4151bf20a844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8408eb60-9590-40c8-bb65-5e7632351f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964a4f45-de9e-4d99-b432-5c2656586640",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bc42fd-69cc-415d-98b2-24ec23009161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bf1d47-e2ce-45dc-8240-3c3652b740a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0dfb65-a8a4-4412-beb2-af251671737b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb9d164-e107-46b0-968a-ff98aad86620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949e2b37-4f70-4531-aeb8-b3f20380dd26",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5484fbe0-53e1-4dd6-abc9-ce0cf784baa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c34695-bc54-47a9-9f01-d2db7e8c4001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193437fd-42ec-4266-8e40-f04a09be6e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5243ad57-691a-44d7-aff7-9f303a4d4819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa24164d-5700-4f6f-9102-820e86b69eea",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0773f0-9d53-4def-8157-b2215d12581b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d465e4ab-774c-4ae1-ba98-8752a7473b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c9efb-d64e-405f-9a43-36a8b0ee70c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e91759bb-ed03-47a6-8395-0954c9df22d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b632f5f-723c-4b01-a7c6-5b6d58034f33",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f3ba6a-ee06-463d-b780-c7f43635ce07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f579e9-e545-4f1f-9811-85c536ba9faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ac528b-41dc-4917-9675-fe4fff4269e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d30d43f6-d60d-4880-a0db-5087e5f8f612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bfad34-e79d-47b2-96b4-2a7e062b221d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18da57ab-61d8-4534-8b5c-f89f8757cb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81769364-9b9a-4871-96d3-732aa9b78acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace93876-4b68-4b84-ad74-fe3cba3c4bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "08492905-d508-4ece-8767-56f73bd4306c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d4df8d-95e1-4f6d-b4d9-f96371af53ca",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696dd218-83c2-4b7d-87f5-a36709433707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08dc2a47-6c7d-49b2-9a49-5a7645f76329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4a1a0d-65f1-4659-9174-6c5f8e0f3920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dad5e2e-d12f-4327-847a-3ba089d9bfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deefad2c-2591-46d8-98c0-0f64ba4bbba0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b27486-342e-4bc9-94c1-82ee4a59a654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ba2161-7a27-4921-87c6-84936f8227fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216c32ec-d10a-4348-8099-1b2ad5fcb71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a10bd9a-f96d-48e0-ad2d-e64516663824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39192162-a24e-496a-b69d-71bda15a4f43",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb998b57-b62e-4e22-9f9e-d4ed420ddd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971a247e-e5d8-4e42-bbda-76445c62ce35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ca6d7e-5ec9-49a7-9b55-10dcd581af48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e127c486-4240-43c4-a4ce-0f4fbd2aefa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0d3221-27ec-49df-a255-9ecfa2d35182",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fab03e-a471-4369-96fc-6ae678f7a35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abbe59d-7a7f-4f03-a08a-784d60304997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c943ac8-2ee2-4755-83e9-76c1be1d5548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0878c5d-3763-4dd4-bc64-9119167ca387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f161711f-7309-47bb-a1a5-2e979c3f0fdc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15013f25-2b05-4a3a-a51f-3c479d9c2ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4988b1dd-47f2-4cc5-97df-75cf6ad9e5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8002959-edfe-404d-94e2-4c096b648fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ce097eda-da33-4655-90e8-dbd6c54e6271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ea1fdf-c02f-4fc5-9b8d-a3317b72e026",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403b41a0-8b46-4f5a-bb71-7fe57ae13a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11103812-9110-44c9-8d03-33c7492e0f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7493030-9291-46f4-80a2-3cb665bbe934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "015d612c-2d25-42e6-ab8e-0349b49c9859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640846f6-6a95-45df-a501-72e362cacea2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fb7cd8-d3a2-4f21-b4bc-19bcc3cce2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7aa6a40-27c7-4fe2-94a1-8c2086c79259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53d7739-5127-4411-96b6-51525bf316cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b55d50b6-83a5-4b6e-90e4-1fc486757ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15eb012-aed1-4ea6-83c9-c80b85a3444b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3553ccbd-263e-4049-aff7-419fab090011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e9ee21-5201-438a-89b1-6fd78bc502ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403a1c28-d167-4776-a165-a31477381403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2627eb-ff65-4ee2-9ca7-fb5234da24dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc75d014-d6b1-42a9-922a-f1448b6909ea",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14544a97-e15e-4807-a879-fa37167e8009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abdd6b68-7e22-457d-a4e3-44432d084aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbd51a6-4e0b-488e-8eec-84a2d42d0f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4346f8ac-c69e-4cca-bef3-09180bb23bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b86326e-f105-44ba-9cfb-c1b536fe5a2e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b7c245-5a5b-4ebd-b254-6d7adb3a4acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26084096-c95d-4eb7-85ab-ecad9f28db4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef8e06d-d7fa-409f-991f-561659f84734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2bb420-1291-4058-a073-a0b983c5d5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9404e5-f379-459f-9bf7-da695fa08bf9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fcc388-4c49-4b78-97b1-dcd543a42ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f2ed03-8a95-4e10-8eeb-76d6cea42fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b2a576-95b3-469f-a21d-abf30ac5ef29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d82d7796-467b-4b84-ac3d-e8c4fa9f7ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c34bd9-6545-4e2b-a386-f340f9aaae1a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c23c3b8-01e3-49e5-9a82-37d31fe183bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612c01a4-94a2-4882-8195-1eb3ebba2c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fd242b-451d-4959-bfcf-000ebf39a986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7efb05e1-fa39-4cd5-85e2-59f12522f757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41da46d8-a5bc-46b7-aba3-0afe68c5d812",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1684e5b0-8c01-49ad-8317-e9159e7ff659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ba22e3-1065-47d4-9537-0f6edc4a455c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663e2609-90ce-4eeb-b9c2-3f55f0b65621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae2bef2-0d59-4092-a251-b85d59204882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f7d893-366e-44f4-b413-de45ad1ff8bb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614c47ef-3799-406c-8ecd-bba848faeeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b3e5c2-3a42-4ece-8fda-e16bc87de65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b2757a-f93e-4a34-aa29-411402cf8480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9e5067-d7d2-4541-82e1-38ad0f818478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33826c53-2689-487a-a064-bd4a918be7da",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4192705-a397-47b7-bbd2-b678ef4a85e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb35eecc-d005-46a9-91b6-695dd2287c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25738195-7922-4921-930e-4e61345336e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5187463-d501-4ffb-af97-693bcea44a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d234908-c39d-4b05-814f-109b58e9edea",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c37cce3-4eda-4d3b-89d6-4b5f2475d513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9d8853-0b97-4b83-ba0e-e1a2c4c39450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d4c469-9068-4284-8642-fd9732f04db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1267765a-33f5-4449-8d30-31dbced24654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab365fb-4b5e-4f53-bfe9-eff833685547",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3742722d-1700-482b-90c7-23a566fc9701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef94f238-07ef-41ef-b536-805bd25f534d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe75f34-3055-4bf4-a984-db08c08f5ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3be370-1102-4ce8-b641-840632b62e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16fce86-79af-4f24-872b-08f541d16321",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0973f249-1de2-45c7-848d-134b3c7fa744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c74d3d0-15e4-4e76-8048-55784840fb55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d53064-6c08-4ab4-8f61-cc95add822c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66676c89-36c3-4245-b916-2a7e91a93e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9302a9c5-29b8-4587-859f-664e8afe1c00",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7d049f-a781-4323-a7bc-ffbe08f992af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9435a4d0-eaa1-4956-809f-018dbb848de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823c0973-7247-4174-a38e-dbc51e6a1f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da3468f8-d518-405b-b394-3f8c78304f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db193ec1-47f4-4f88-8ca2-0fe3dadd57bd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a711306a-bde6-4397-bdd5-25b8ac11c591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e42ac5d-1e0d-4053-b08d-117bc22d3206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f5cdc7-ce73-49f4-b317-d68c4c773c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94b49236-b70d-4830-9c26-4153ebf8fbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a066e7-6f4a-4284-9807-4686ac013eec",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2781abe0-512a-4d6a-ac5a-a96f017c6b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87386959-ef8b-45ea-ab4f-5b23cb12b449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d44c5bb-184c-40a6-b7d4-54fc72b642b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "aacf6b33-08df-407c-945c-b443e08b9acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e8ef95-bfae-42b3-af69-bfe239fca519",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51172822-1afb-4c40-bcbb-402e4205e953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a52217-3093-410e-a1c1-6cb1de12efc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a955010-a56c-4b7f-8473-c108bd0f30ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2010dea-3163-4ef2-b3ad-8eaf3bd42438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca705cc3-a4eb-494f-bbef-110a9602252b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e7f70c-887e-4786-a738-4eec375f577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a89cd7-2522-497c-97cc-cf930432942d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52031531-f829-44f1-8b42-d63cfd8f9259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e120c4a4-ea4b-42f0-81fb-e6c40bcadc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173807ee-f3e0-450a-8836-71cc79813704",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b174a073-05f2-4c9b-b4c0-ee91130eab0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f91786-50cc-4897-b5eb-e5b565affefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6e9da4-ab55-49f3-bfa6-f726d6576805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9aaf51-ba4c-447f-a0c0-fd2f170aa52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0fbf8f-d615-48cb-9927-a58084d2dd1d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fb375e-44e0-488c-b90f-187a3b401af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863b476e-360a-4c74-adf3-d965b1da9db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5c3e78-f350-4906-882b-890a1a8c0562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03adfa2f-7d78-41ee-a36a-ae6d6a9bb0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740c74b6-3521-4665-acce-b2ffbdf11fb1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d192f4-45a1-42df-b3b4-461e65224841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71976877-76c7-41ba-8460-1cc12aa8d2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65081c3a-573b-48ef-84ee-58d911d34971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "14c7475b-fb48-4812-85cb-98cbaa084ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7c0791-e7ce-4dbd-a0f8-eae13aab2899",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e41ff1-096b-46d7-9760-68d0820ebe53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15698ac6-c904-446f-869f-46786424910c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d85227f-3ff4-43ec-a0c8-8ffd76779378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf120f2c-1f51-4211-8175-a3bed1c55de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea89a8d-b54e-4647-826e-83ca145ac87a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3b14b7-43fc-4b58-adbb-bf4fe5ff9dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb8d11b-ef36-4d4b-a6e9-5b1fd0547fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff1f2dc-86b4-4abe-b3b4-d29b9e18da68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ab7f29-37f2-4e46-bf42-471f2eb5b804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca26c0e7-b369-4d5d-abd0-8e3580504ae7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15349231-310a-4a16-bdaf-0747739a7a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5153aa-dc38-4f82-9cec-920586f014d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92652e0f-25cb-45d5-a04c-c7bdee64813b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "149c057b-bf87-4519-9244-6b72b0fa91b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5d7414-7cf6-442a-9990-c5e3a68301f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9821aac-40f6-4f0c-9aac-42d037a3085e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175d53a6-2d0a-4bc6-a99d-60a97fca53f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b014b511-6317-4d19-a179-9bf1edeb7158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eac7c02-0c7f-40eb-b4dc-498db98515a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da23109-064b-4944-98dc-097b123a0c60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a6b0bc-4753-40f0-9a71-1692f7fe4432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96fce3c4-675f-4c15-8e7f-529abed0a016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a37d9a5-4a7c-4028-9d26-004a8497498f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad64870-92b7-439b-951e-c21358acada4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b80d055-5b5f-4947-923b-05f9354a022f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c562a0-403b-416b-8c52-430e40ecb3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fc0ab7-5bb5-4b8b-befe-fea96b054ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ae9191-974d-4a8f-ba99-87c81fa9fbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e010e4b2-71ff-4e9a-8389-e6bb18497194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76611d33-a634-475c-9329-0484825158bc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1094ff23-2c82-45b1-8d0a-acd771cf4d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7553256a-519f-45e7-ab78-456c06d87caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ca29a4-a07f-432a-a658-531c2efc42a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "15a37e42-f0be-4928-b1c2-e591d5666177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7559a24b-82f3-4dae-adfb-5961c7e2b7e9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6eafb6-8a47-4606-9c51-c21d83f5565f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f9ea1d-5447-440b-81b1-73a8c35711f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d705a4-28d6-4cbc-8fab-2f2e788eb06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b491cf-7ce0-4172-b9d5-406fa24db9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77622dc4-ea19-42d8-a58e-51c0fa47b243",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce78f689-eb94-49f2-b67b-ded5a84d0c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f9c380-2e9e-4987-8470-d48f9b45ed50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5479dc8b-febf-46b6-8389-ddc26d4bdc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3cb01f-56ff-4cd7-aa50-90a7b3133c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15c7588-1454-4585-babc-b0f836d12080",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63650908-c7f3-43a3-936b-0d048a0a81ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5a94db-d691-4a47-9975-a1de528b78e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0334836-4b8b-4ea3-ae50-fc4900735dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4be0c0ea-6905-4841-bd3b-a1cb9d0259c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ac0c88-ba20-4dea-97b9-c2b0fd0f4417",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d271198b-bbe3-4785-9907-68e96f2094bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108d7ec5-2610-4b32-99f6-afa30169877c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff79a43-f4ff-4ff0-9aae-4aac28217c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a93cf054-de6b-4358-b6cf-a66b3fdb2b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603984b7-3b43-4249-adfa-2f505a31f3e5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36ce128-723b-46ab-a534-fd8bb424032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b661e9-1736-49df-a198-7009a0a7b7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1264a76-9aff-4579-ae44-5e3dd20f641d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd20c280-a5d4-4bb8-8b18-c8ee1d3dae8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48066b08-fe1e-47a1-adb4-ba0da9d47a28",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bc41e7-e30c-4374-b773-58641790bb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af16832d-2222-44e4-81b5-13c3e2466f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b7012f-7af1-44c6-9e3c-e1ea676234f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb755e65-2f5b-4324-a152-844257b11694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1982b31-ca59-4833-b526-b2193c0b4ffc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f08af5b-70f1-43af-a7c9-9657dcc7ff70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d91090-4ffd-499e-bb33-5691ae8df073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ee5856-ddda-4a4a-9297-a1502be2f752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8744ad-be24-4f95-8ba3-16b868381eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a99b66a-5448-4f49-8ae4-02bdbba33796",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9c09b8-7bef-4fb7-9e03-4f19966043f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f70d60-efcc-4f8e-9713-a67e2d2ea60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acc4a97-8e2b-483f-a310-bb9c30e804b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2946a811-c6d2-4265-8f6b-5f820a0068a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac9b3b4-fee8-47bb-82d3-8e655dd32961",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa3d8a4-57fa-496e-bcf7-bd62d8b23c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc62de84-809f-49aa-ad5f-3aa128e953de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dc1952-bc2f-4a25-9e79-5ed732e74fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6f9fd0-46e5-480c-b2bd-cfcc5cbc926e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f6d15a-0d4d-4bb8-bb1d-f54a58e4401c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3d21e0-6a54-4c0d-89f6-fa417cc952be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ecf00b7-d276-406d-9324-5e43721907dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7834d584-2ad3-4d81-af99-8bfadf672c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1816e5-eda9-4cb8-b15d-1e0eaefe4e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c58e453-eaa2-4452-ad3a-346a5901e01b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fece10ae-af80-43d2-a042-8e638d0e3081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f9ce72-c0b9-48d8-b92e-eecfda01a27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c284182-1fc4-45e9-8f6b-5cb28372122b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f367f8-5a1a-4c50-afdc-b4fcfba32119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc42ddf-2166-4dec-80f2-f4e824cd7dfd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb11611-1766-4a94-9725-2fc3dc4546a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c198c61c-fdf9-45c1-999d-4f10bcac276f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97d7c4f-a9e7-4225-948d-3398bbc3841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aaf3a1d-97cf-4cf1-98d4-c0a136e47054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e674ef2-66eb-4351-b435-7a9ac5b0b5a5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6ebf61-e47b-474d-8b1b-1cf7a661fffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cda60e3-6dfa-4070-b615-9f501033f404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1931f95-650f-465a-9ef5-631fb5bdb2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9bbc9c1-591f-4eeb-8d55-2b4e29e9c7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea6d096-83af-4e93-9397-07c60fee1a61",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44740445-d2c2-46a8-94ae-d16fa6bbcd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17aafbc2-65d7-41aa-8ac5-78e2aa3806f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1813d69a-0f4d-462f-95b7-fd9d0946cede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdae943-f80c-4ad6-a0bc-2da4878613b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60b684e-e8ba-412b-b929-bb01376a0b71",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f83544-0147-4d96-addd-8a2f1dace84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa03f8fb-4217-4470-ab02-0804e644684b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec55fee-4569-4b52-97cc-809f4d15ed6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02115f82-20ff-451f-af12-9c27786a3ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d5bb7a-954d-4494-bb71-cf235d048591",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d46bb21-b49d-4e2c-bae6-5091f16a4522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c1840b-cccf-4540-b9d8-463ee5a66be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b72fba-e7ab-4658-b766-b4d7ca2f956b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e434f518-4aca-484f-ac7a-74482f07f3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dfe4f5-4276-4543-8657-b54b52c750fa",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecdf228-ab7c-46f5-a540-e4dc201046f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba09168a-407f-4af2-80c7-e00796153888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bdfcf2-d44f-4817-9573-5963829ba27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3dab0fc0-c0c8-49c0-97cb-fd4bf5057f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adad98e-866c-4c53-83fe-4066c23d0a9a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008118eb-2cf1-46fe-85d2-fa293cd4d4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5c0060-2065-4a2a-9518-2a032387180c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74267066-4760-46ad-923a-c54d1984fc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1d9abf-a296-48de-a0ae-9bbf833e1b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528e0b96-e55b-4cc2-ac1e-95edc180fc89",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e357cf-a79f-4bb8-8310-35781d348e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62d105a-4a98-4641-b903-7ecd117be58c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4991abab-ffad-45d2-875e-209716fa5660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29ef9efc-5da5-4ace-a2fd-149ccbc181f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fb8d50-9e90-46ad-94d3-8f3eae5062c5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b5be70-3e03-4852-95e0-2b5a5ce1eb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b501d4af-dbdc-4b74-97a6-b473034d9cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365c63e6-1529-4826-8cfd-986c2563896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2df711fc-5c96-4234-bb9a-2414ba0b1dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d62de93-bb6d-4c9f-8d3c-cc0e28af9537",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8a3ea7-6d4d-44f2-bfd2-3013dd753055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d66f2c-393a-41b5-a66a-906ef12cfdfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db26ec6a-aee0-478d-ac3f-545a9be39123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aae14fd4-d6fb-4de8-8c09-bec321dad517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d532fb-27fe-4961-8d02-c52462fff3b5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d315da-fc93-4dea-a131-af56eab26cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268fe164-503f-49a7-acdc-72029619f203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3600f4a-10b8-4bba-a639-d336f5d9a46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d428473-9e2f-4f81-9599-ad6de66e1373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599ed247-2642-42ff-9b80-644c3788a9c5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0060d96b-e7b9-4afb-a461-132744d0bbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116f5184-2821-4387-8c3a-4912fd84b9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7b8a9a-430a-4afd-a822-f3bae846e6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aeecbff6-583e-4fda-b0f4-34b7ca294a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76efd43-98c3-4223-9624-c61a27c17ec5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b269c80b-1ccc-4fa6-b96d-dc8ca13a5fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5849117-a714-4bae-a9a0-ffc16063826a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcaed506-b2b8-4424-8abb-94b5e97e6ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5b8079-96f2-489d-877a-267aeb3d9cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a31bc5-0950-4916-ab85-a810f6731d4e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e76675-1d5b-410b-93ef-540d08da7365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344cb9d0-a2d0-4312-a2d1-e5b093ae6ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c1c747-e542-450b-8c0c-b9ab7180b92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f53799cb-753f-4186-bbba-863fff555c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fda1c08-cb74-4940-b8cf-b69805135be7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22505a7-1773-4ccf-b749-d452a3f0569d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218bc559-e702-4aeb-b97f-83c6cd7c89a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3c990a-15fe-4f16-975c-97f6db26742a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a34d2cf0-1d2e-44ce-be6f-407c036df5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d07f57-0c91-451a-823a-83dce05f7cac",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef770f6-a3f6-4674-8ff7-56ccb1cfc8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c61d0d-41aa-4767-bad8-229f6d139ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06aee7c9-3c75-4b3a-bdab-08ac298cfac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4c6926-f048-4f92-83d6-4d7d3717e282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f63a27a-cee9-43a2-a2c7-794a4ff0b6d7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1346ae6d-f7f6-4131-bd90-643074e33e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3b6628-885a-48ad-884c-9b505816ccaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4e0014-bee3-4aa6-ba90-50dee881f994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd05cc2-db29-4f59-8b41-f1101bec1511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ede196-f599-4b98-88d9-560d7c1049ca",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61459cd4-de21-4046-8c2c-9a04d83d6e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5dc52efb-77c1-4f13-bb15-544a94f1d63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa5e91d-f4b2-49b2-9b25-868313e5bf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a66abe3-8c36-4d95-8cd8-c457c242e25c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dab00120-979f-462d-b466-70cd190fd8cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d73440db-a9bb-4144-a3ab-a8fb0d70790a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a1a611-4d41-4293-bfdd-d019e2b20ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc10cca9-17ad-4074-b43c-46103657d72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238dc70c-6669-4249-b9ee-e94d16dae87e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6e48ac2-e644-4b69-a2e2-dce81dc8aa88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99324f5d-799d-4a47-9b0d-aa8b3cbce1aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "660f5ac2-f74f-466e-9a68-351df5eb685c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f595d98-9224-472a-8890-74c732e1524d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edb7d278-5e9b-494e-bb1e-1090be54065d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d8ffe14c-f188-4894-8a61-7671b9d4022b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2474806-f8d3-4343-b587-6fdcac572c47"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b3c5c969-b3ea-4965-ab92-a37a5783c783",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ac9349a-2715-4f86-a7a3-9b87cea62ee2"
                }
              }
            ]
          },
          {
            "id": "a5e5507b-298f-45db-92e3-372ad0e5a382",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2a528b21-7705-4015-9e91-b1501d967457",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10309486-c004-4288-b08d-7c8648fc64aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "574048b5-e06c-4d86-ba25-d88e5506c430"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98eea56a-ad09-4d8a-948a-ec7a42ed75a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca834bf3-b178-4d09-aeb4-8d6ff7099810"
                    }
                  }
                ]
              },
              {
                "id": "18b6e8a4-7484-4c5c-bbc6-2632332c3594",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75d301fe-991a-42e9-b3ed-6bfd2eb517d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a83311ef-7268-4f57-8b0b-dc97cb9dc45d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bce91d76-e61a-45b1-a603-9e383b0f73f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7c6d1d0b-3a2a-4a9d-af2f-0ee295cd7a66"
                    }
                  }
                ]
              },
              {
                "id": "97383f20-eaae-4c4c-84f0-b54405bf78de",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fac0a04-e61e-479f-a9e8-4ef07ebc1ac9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7025e023-bcdd-495b-8b14-0161d5886e1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4daa662-12f8-4446-8322-c1aede063f5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68f7fae1-8b1a-4d6f-a075-eefa1fb15e54"
                    }
                  }
                ]
              },
              {
                "id": "58e51e01-b0db-4b5f-9960-7ab833fd2390",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ecc5722-e5ba-4f19-b1f3-f3eae8cd3018",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "754099d9-38e9-4f7e-85d9-9268f0571f9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4369ab0f-0603-45b0-bead-e2d3a2069440",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cce30e41-d5e6-46a3-a5c1-98a5f0ff8610"
                    }
                  }
                ]
              },
              {
                "id": "ab2ec69c-9f3a-4e06-a2bb-09c4fde6d724",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b722e44-a525-4fdf-8621-d5a096e967c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d6d6991-6027-4a9f-8b8c-4dd079870407"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4a341d3-0bca-4fcd-8e21-d1c223224933",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "acf48aa9-d2a4-4e5e-b22e-ee8a1f71459e"
                    }
                  }
                ]
              },
              {
                "id": "4bfd1316-2cf3-4901-b563-c8f77b815e24",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "082eda6d-5eca-4038-a8d2-944b65e5cfde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58c23142-43c9-473b-ab11-68fab11380b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf977742-ed7f-4b17-813d-06ee0e5d0059",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b70f449f-bfc0-45c7-8e78-1997eeff767d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "626739f7-d1fe-4769-a559-140676d6779b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a5f1496-4512-4153-a2b6-6c5094b5fbe2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15b51517-7dd4-4460-9457-2583b6414612",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e874f25-d307-4f35-8eb9-4be5200c1266"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebb0f5d1-bd14-4eba-b502-33b9f94e4fc4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d97c37a1-86f0-4859-9263-ce85e94a84a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b4b1ada-b0f5-4808-b2ea-2a7f87eeaad8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c48f315-8cc3-41fd-98e2-2b15ab5ff1f8"
            }
          }
        ]
      },
      {
        "id": "d365b6c6-6d27-41e7-a2b4-9a458cd388f8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1389a070-5c66-4428-a771-6681da030ce6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f5299da-12bd-4fc9-9f59-98fa6d7d30b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44a4545f-0960-45b9-b681-eb70a5e494df",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f34835-ed61-4811-ab45-2ef95a1e9c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c117407e-526a-413d-b87d-693ca16d74e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f0a2f3-5c9b-471d-a20b-6a757d45a828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a73cd0c-3660-49d3-bffe-42c0308fb1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05258dab-c678-463e-bc90-eb7553dfb61b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f702be-1b8d-446b-b511-75a146c6760b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e50c7f-e617-4384-aecf-2ffd5b4fcac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28c5faa-1f9d-4360-92f8-bcfd95954de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7785e2-c6b7-4758-829b-acd25f122352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85f266e-e79f-4052-a562-69937fc84a6a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b311f1e8-d855-4870-852d-ea0cf757e2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10115465-8edf-476c-9346-27eb9c3880ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92364517-07af-4ea0-842e-f8d07786f6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df4bb028-34ce-48c3-93af-3aecd76338fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1067d539-058b-4e41-aab2-f7a5c06a998f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab744002-5274-478e-8f4b-7a1badc7289e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8542101-0105-47a0-8570-068a25a9dbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c7fbb9-7761-49bf-92dd-0a4154bb74f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03bd3421-4b9c-45ac-948e-5679f104e870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb27ec05-0aed-4d1d-97fb-f8aeceb1ebfe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1670dbe-ca3e-424a-8f28-0f793f3af89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced8e81f-f288-4f73-8bde-f4176a188b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9498bf-0306-4c3c-8c7b-9ccd6c786d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ccd281-ead6-4f17-9572-13a63573005d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d8037b-a16f-42bb-a432-d41b3e1639ba",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7381da9a-cf4c-43ca-bd37-a2f85a86ff5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2d25e9-1528-426d-9c1b-7560e77c6061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7438f75-a0c9-42f4-9a83-12dfffdc2eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3a5f61-a985-470b-9af3-86b106c21de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21402c37-4338-4693-ab69-4703868b8a24",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53043b86-d365-44fa-a716-160e4a0b1179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac006f5-2b76-42b9-97b0-5841048f143d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d97b16-3cf6-424b-8aa4-dc09f1e82847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "edb9abec-5d4a-45ae-bc10-bdb6acfe78f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0a5be4-9734-4929-9ecd-d7585daba9ec",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388abf69-c51a-4087-9e4d-ae5d19a68e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d09e4b2-13da-479b-8d70-715f047d0f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d2dee3-1d99-444e-ac57-4857c15045c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c36b0667-a76d-4e4f-be25-732fd6aaf738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd38dc4-4ca1-4ba4-a2c3-239126dcfc47",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ce7029-7921-4bed-ad0b-26d5f0f33035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d0ed25-92eb-483d-8d15-be32becedc9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad83704b-98a5-4fb0-9f8d-504390d72aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b58d7873-e9d1-45de-a0fc-3694a1f7f1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8730af-9429-4a1f-a825-108c695c31d0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c1a2bd-9c1c-4928-8023-8449ed601cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4959ad7e-28b2-4f17-bd95-39c1255ab883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d155d0bf-6274-406a-abd9-bd5e6210df8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6193c0aa-a37f-4743-b002-0a36ede8cd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c818222-270c-4518-989b-d4ecb6841f94",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f685e8f-d86c-4155-8900-291ac03ea6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446418b4-7775-44d8-9cfd-7d23ef617112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc9e165-e222-4df0-bc1e-3b4c5a946895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a00c84b8-16c0-45fe-b9a9-b930c39fffe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887e6fb0-1ec9-4ffa-bd71-735d5c921600",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed669a3b-2974-4b4c-b987-179d0041625e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39ad2bb-9f90-4584-bd58-0488218ba25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33d7fd6-408b-4056-8d19-cb160cd0b296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d52364ff-27b6-464e-bbb6-2edda0578fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe0d083-b583-4b13-9512-14eb582325ad",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ff0258-0c6a-4f8a-a942-fbafc9a084d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45ed7b6-7e25-496d-b694-f611a577c7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5da653b-505b-4c0a-a33e-42675bd8caca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "edfd1b24-f485-437f-9e3f-91d84c10f91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdc8d19-380d-4718-99c8-13bf7c6bdb86",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0685e07-07d9-41e6-8824-d8db28927914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc87206-1cdb-40b7-8e9a-cb06a3f58195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc444ba-a4c5-4e2d-9e0a-6429ce31e4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "21f335c3-1e24-4ef7-8887-9bec3057085a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18d656c-78ba-49a9-b055-aa39056f954b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9cbd5a-fe7a-4519-a602-00b51ffefd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297ddb96-1148-4beb-afd1-d1c4efd86d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ed7b55-1606-4cab-bad0-6a4e436b0be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3772fafb-9359-4452-91e9-cb4910cc608c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f88760d-7d32-47d3-a70c-2b6d47d2a799",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f891b4-bc21-455b-b61a-bfbea1b691f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadcd54b-e40e-48e9-847f-f7cccfd2c73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbebda1-eeb5-432f-9995-f6bcfefb030f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7623c336-487f-423a-bd2a-ae9eb876be81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48c7668-c268-4abe-81e5-8e2a7a21529a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a142b55-eebd-4f23-b8e6-43003082ea72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13be146b-c0b2-4b7b-8bc7-a21921fe0309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8ffcd7-a408-4d95-8b4b-522634834b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d3e5c8-6871-4187-8e67-5c955bd152ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b168a0-9900-4163-8758-60bdfbbd76a4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3fd776-9914-40f7-9af2-f9f130600571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cba971-f3a9-440e-b392-e97fd2fe22b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d106e413-7e8b-417e-99fd-a194a862d4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "05601816-bdfc-423f-9767-17a60e2363fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4442a9-9ff2-4e25-b610-9d96bd0b4103",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcf8857-db23-4ccc-8aa1-1a9eec501027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efaff7b1-1e09-4c46-af47-98483eac875c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a004b7d-a067-470a-8adf-5f11b51ab410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5d9ee8-c49c-464a-85d5-275b3f18d43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970bc7f2-dd6a-4fcf-8461-f346542183cc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77bff90-0cc6-439a-998d-67da9caf5524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ba7ebf-8c3f-49b1-bc09-c84952e14b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d787f208-44cb-4ee0-ad05-60baf3e888cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbc4d32-d009-452b-bbdb-9dc567c7bc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddd7ee4-41ff-4b8c-9b9a-585a243d5d4e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf7baf4-5da6-47c6-aefb-5f22956f9db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729d7a35-dcbb-48b5-b0c4-fdf24001b9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3d86c9-348c-4908-9e0c-949cdce3ed2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58b5ebf7-3cf3-4f73-b4ff-9efbca23a9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a853ff33-9ac3-48eb-bc51-a3f200b86e80",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad22049-d547-46f3-a40b-e4e55023f372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680930a2-cf5a-4e8e-afa4-a75aff3cb77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84dbb410-5395-437c-88e7-9ae9a8a6f002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "229208ff-274b-4992-a796-9158f2bd19aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39c2348-2cc6-47e9-ad3c-58cdf51db770",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb948f0e-de24-484a-bb22-bd54bac296e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a3ada1-9bdb-43a8-b46a-9f7023f0498a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f582b5-9925-4f80-8cea-44391661db6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd755074-05a9-4c05-b470-3b6cbc8da907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1efc7ec-7df5-4dd1-880f-f72e2b381958",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419b7b0f-7f66-4369-8d0d-241df68d4373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c0c1ef-9fbc-41f5-998d-a3129b3ae482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46842a7e-abb0-49d8-afb9-f199e5a98990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1a271c-c100-4a45-8b7d-83a0e12e4dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41f0aed-0d1a-4b6b-b993-38427b58bcab",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a595506-48b5-4ae5-8d9e-72c1776234a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bcab0d-4ff0-4a17-a7fd-0b5a66644518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c343a14-7502-43f3-9e8d-39d505d97a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddab3e0f-0ce9-4a7d-8fb9-905fe5ef1128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b771b3-1e71-494c-8bd1-42ed99abc683",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb8266d-2384-4694-87b1-ada0b649e210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdc184d-58e9-4fdc-b424-b5f7b09b264d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007dbae0-cda2-4409-aff4-5237a85f0def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05a0e80-1ca3-45b6-ab41-d8ada9131c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642f4771-d9a5-4b2c-ac7c-851c298fb6e8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634f5cbd-9937-4e35-a0f7-2cb93e7b196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a5e20f-5ce1-4de3-a705-d8a5b16cbbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e716cd81-6f60-42d2-b13e-a99d62cf92ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdbf309-ba9f-4047-8f37-9a8416a4cf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60eead1-eac7-48bb-9be6-6a1baf243a56",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4a53d2-465e-4669-a123-ed43a69ef719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc063b45-8a44-4136-9ba7-3290cf6c1d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cc4f10-4cb0-435b-babe-40f25a234189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bb17cd-822e-4f77-9c51-dc395c5eda1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4989b6b1-f17f-48c8-8884-36acc2a64f40",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcaf2da-cd26-4a02-8c93-aef0456096ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492b8e1c-0ee5-4b77-bc2d-ac9344b52a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7d2bdf-d3ce-426d-8de3-1eb819564975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc71c79-179e-460f-b978-2149f7d0a10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ead7d6f-74ca-4193-926a-cf2183fa1691",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcdce64-d945-40d9-a840-aed88757701b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6aac9d-6087-437f-b13c-c4a7bbf3acbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032b0560-13f3-4314-aac2-82f124ce4fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27c0565c-6f6a-4c38-a767-826ba473d8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986b7812-365a-450f-b350-008e3caaa3d0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734f2e31-d122-452b-8da0-b4c64a065777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657e8982-6f1e-48ff-8de3-c9b806f1a355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6227638d-43a5-476c-abb3-1b9c0cf476b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdffa419-012a-4d4c-a619-1863d034ba3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c290b888-187c-46e1-8e03-d4456d8de8a4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5992951-ff46-48ba-a21b-86df32ba56c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814c89c4-e1db-480f-9a54-403d7b51f7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b1defb-00d9-4626-80a6-05db7c54176e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8214a2-3065-417c-8128-aad586af29d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "869cd167-4cf3-4cfd-8af8-747abdd6e43a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a36e732-f827-4319-81d0-1edffcdeda5a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6643d3f9-ed60-4bf6-a8f6-955a4167aa42",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "261b9ac4-3b59-4d25-865e-3e845b7d56d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934d7a31-49ac-4c55-9be9-834cc064b8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "344fc1b6-153d-49aa-800b-85e7ad960e65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b73ae030-625f-4fb5-bf9c-19ab0c680ae8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9692c938-ad23-4117-b738-663dea0ab48c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9929ceaf-7f6d-494b-ae92-f06140ed6d83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "099c1065-8839-44f9-9fa3-c31139689a3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "689b0043-bc13-4dc0-93d8-f9fabb5ba712",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c2228ab3-d268-4eff-a1bf-f537d4654847"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db7d6f51-1707-4b7d-949f-1a33b1d33abe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7276820-ebaf-4932-ad11-a8305c515876"
            }
          }
        ]
      },
      {
        "id": "446f6bf5-037c-422b-b06c-240cff442d48",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "544bfccf-573a-4d7c-9b79-5af12b36043a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "145c460f-aba5-4b61-8d3b-44605acd99a0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7816d758-30ba-4d5a-a274-0e0d3cbbbcf9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd76e228-2417-46b1-b40e-eba2057dd509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9ecfd1-fc53-4012-af08-7e00438e369d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85842377-2343-420a-9c3a-c76057c38881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c399f2ad-6e64-4be7-a3e2-c284cba1687a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a88f27-59ab-408a-a0b8-45b8a4372add",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d60f49-ce58-496f-94bc-f6b9e534cf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0bc178-7f87-4b72-ae31-9280e8fc8201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0a5677-c641-4ade-98bf-65ed405e79d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12f4365-d2f8-462f-aa89-00668dfc112d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6bd5c7-9a8e-41d9-a536-0c261ef97c20",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0000994f-d84a-4444-864e-3be470585516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ffa8880-fbbb-412f-9b54-3cffb5c2703f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b149c6-c53b-46f9-97fe-bd0711832306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ef9172-36bc-454e-8c6a-741f384f4be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737be00e-1c6b-4e40-9194-8120d4806ac3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f91726-c70c-4276-81e2-cd02dfc67253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8171c5c-aeec-4cb9-aa66-543ee6811c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4e3c24-cefc-41e5-b00a-211142527d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c538bf7-c2d3-4049-b60d-d78b2b597e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0b77be-b188-4274-b3ce-4a7579b5a106",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d80de25-bc1a-4cd0-82c5-906f523778e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9913ee2-ee0e-497e-aa4b-b1303202c80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa95908-3942-47d5-80c0-9ad0fdb81ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fe3a21-7fea-4f35-95f3-b3b2b5c0e65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b2c2a4-545d-4d76-97cd-a548fe2dd457",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3459a6-4a73-4465-96ee-709560f24af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d4d35d-b4e4-4d25-9c95-b4d52e33e78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63931b3-bacb-41c2-8c82-5c720282f65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e987df-8dc7-4de1-bb56-d015a2d195b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfae195e-b144-4d79-b3b8-87099f3615d2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e968631a-b6f1-429b-9aab-f6a2f1a55d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b07ff01-b630-47c8-9188-e648f63dd6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58e9f80-ff31-4dd9-9091-d89f582a3f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "40528b91-928e-49a0-96b5-4f2900fb07a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cc7dbd-a06f-4108-8638-339d12d8ec1d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75eb871-10aa-4035-b438-9c7d6a3e5765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e73879-e8b9-4780-90cb-9a7e5501a5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fafbbc-c828-429d-916b-2e82859ed76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb71538-0156-40a8-8ca5-fdcfc2c56a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b274eb8-f6dc-4f1a-b673-1252173a8442",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8fd62b-55e9-4aad-afa8-d23eaedd8903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c849ed-e12b-4216-bc0e-3db10000d00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a42234-d7ab-492b-b8df-9535eaf3ef84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2d9123-7ee3-425c-b798-3f51222bb19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983291ad-d8b1-4b26-9867-cdded3c1659c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c9a9af-25bc-469e-b681-9fb720022b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b44ed5-69d6-43ab-8f42-03ff0e7bbfb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72fe6c6-2f6c-46e3-99d6-ee4a857e4941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2310810b-6a31-46f9-a661-374e9bea915c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575212b2-22b4-44d0-9076-0f3965aceadf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497aa947-8a94-4f8e-9e50-e9df269a729d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f29a90-2990-43a0-bd51-67e08f050d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1771307b-260e-4298-864f-5f584b395b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fa522a39-2265-4f94-aa09-9ec80048d34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7c2ff5-11be-424e-abc0-5135b15a5534",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf0ccb3-8866-4022-a772-b47e70a4fb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e56ca0a-6b2d-4319-8361-c8116ed918c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08bee17-d37f-441f-a1fc-79bcd2cd67ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63073303-5dbf-4571-900b-4fcb1bf8d306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8c29e6-c0eb-4e30-8356-5a9adb8aa08d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebc0b0b-3b3f-4ff1-a350-e6e6d9023b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fdeec0-3464-43e8-acc0-cc3158ffca52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed27ea42-ffcc-4eb5-b702-7c44fbfcda45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f88bc67-4f13-428b-bf8b-71b71ca04ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d043b1f7-eb27-4d31-8494-261f22425d56",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd59ac5-48b4-463d-bb90-75ed574094ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2771dd-e0eb-4757-957d-04bcb96102aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a1f967-c103-4491-ada0-08f0f79565f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87c08ae-092f-46cd-90cb-cd88638aaca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04256ddc-ad29-446e-adf3-209fd194e237",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7053aa57-c317-4c3e-b74b-b6ba55074153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14029223-0733-40fd-9e08-7d2c38afbb9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc0dc95-ce73-4fbe-88c8-4dabe69aa9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a440de-d651-47a1-8b97-3ba6d6f65aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc258871-1981-4dbb-85d6-bb96ec6c6004",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62424475-633c-4235-bacc-fd2cd77f0428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf14142-1f91-4fb3-a5b0-bad5e7bc56cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6c9ac7-318a-4173-aa8d-0638505e4590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f15c7985-546a-4c13-b9b6-027f2a61b6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a3c020-eac6-4d1a-a4ae-5992601bf1a4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7797e33f-7e24-4402-aac0-523710ffc6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202270e0-a8e4-4bce-9902-8f3b3dfbf401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c460c163-f604-4ae1-ae1d-4c553491a9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "02470b21-b15f-4851-a019-d921976a9f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f8caf3-ee55-4ae1-b573-3d46cab7a9c3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea40fc9-aa5d-41b7-93ed-78b1ad5dc965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f7149a-377b-47b1-8d6c-22ca8b1d6526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ce01f7-7063-4318-9821-ade75e912304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc017b87-fc57-4342-a505-ee8ad26febcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a883e74f-f0e7-4601-8f7a-47ad70c904e3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1469300-6da1-42c6-ba42-2fa71e05e313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce9c41a-a7ee-4ca2-8e05-9b77f1553299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8588c1-d508-438a-952d-884586e27c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d51e4505-2595-4460-b93e-a2a25aee4958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c78baf-9e61-4334-9bcf-ac2ab2d8f018",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8f61b6-dec2-4377-8762-e0e92f33e6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e191e2bd-6a6d-413f-ba07-f092397bd1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfcfe36d-e201-47c4-bb01-6d0d79f940fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99f1a032-49d9-480f-b161-47d70343488a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fae37d-c8b3-4067-b284-8d79d91b855e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329b0734-8550-4fd4-907e-60021c895119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46178195-865b-4254-ab20-1c17663c6548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d8125e-9d9e-4b7b-83a1-c95905ddeb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "134fdc59-c11a-493a-8312-47bc8c11bfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884c1693-7234-4bb4-894a-981139e3c557",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca8fbad-9415-4243-a087-a92ee8530114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb10a46-a38f-4396-89f5-6eb9c3b8d4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5db992-30b9-46a8-be24-4275b6ce1113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ab4caf-57ab-443a-83a8-e7e32e801eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcaa5896-8c8b-43c9-b02d-522e072c29b0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8dc3d7-b516-4a51-a83d-825d54da80ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83beacdc-dfd0-46c3-82a2-4e2cda00a275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da714de8-3e5a-4bbe-9943-65549faa45fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49dc2f1e-8f64-44c5-87ef-32eff199d55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5ef13c-1661-4042-8f75-512ba5185938",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27fb8a6-074f-4b0f-8357-53c067109b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965a74bd-4ebe-471f-92ad-cc6e67b6c582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaeb0a90-c134-4e58-b236-11ece2f878a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "907d7daf-da7d-4bbf-9a8a-a296a587b128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617bddff-aee2-44c8-991d-a11d5c6496c4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f8eabb-fd88-4bab-9845-3d0454dc5bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62deaa69-a73d-4f6a-9b22-e4ec02928a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510fa7d1-f67d-4d42-a5db-184606f67399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ec5671-7329-4c10-886d-565a977eb7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bee23ec-5e10-4831-83e4-7e800adc88b0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833db649-06cd-4147-be5d-55632dee1251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676460d6-fb11-4cc8-b8ad-d23eb87ed606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd926937-200e-4ed4-b6d4-07f180ec5086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "228e78a9-4390-45ea-b759-5237c534a1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a697fb09-04f6-4aec-9086-96821f7d3a2b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87dc71f-401d-44a0-aa18-40cee7e27aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6cb4557-1b87-4393-b5d6-a3892348c30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbafb58-712f-4b0b-b086-25beef95f138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed333e0a-6cb4-4cd1-b99c-fe206f634d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abababc-5dc3-457f-b043-0384a0e3df56",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17a566e-89e9-484c-a036-ce018b1b0868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ded68be-d31c-4aeb-992b-64f080cc9043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6887cb25-4687-41c7-aa14-99656f04a71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bafa0457-76f4-4cce-b7f7-12e91e9f4cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15755a8-dacc-4f52-aea4-ca6688cd8d68",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39384cdd-cbad-45a5-bc5d-736410ca1ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87671b69-3c64-4d23-8f0b-34467dce6216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20011b01-7137-4a97-94f6-c10c68325b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1886f13f-343c-44e3-b211-7d253c744a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5cc493-16dd-40fb-b3fc-4f20414f23d8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1dbdbb-c716-4414-afb4-c5c57b74163c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5184ce57-44b6-48fe-b9c2-5d267590bdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b3bb3f-998a-4362-baf4-66876412aafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbd54c7-869e-41ee-ac51-b43f32b47285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781c70bc-b810-437c-9de1-9409e112ef7f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f952de82-3036-4347-8fcf-370629e3f631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c2e295-6373-4cf0-9de7-833b8c68c66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c419dc66-21a6-4419-a8b5-2eac71113adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b14ad654-e4b5-49b8-a383-21aab59fd63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80675697-8b7e-47bd-82e4-657305337490",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6eead77-9a3b-48d1-9326-2c99b6983ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a2144d-4911-43ed-9de4-65ff12b18775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f85ddee-26bc-414e-b24a-8bc9909550ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef2165d-5c89-4f4e-bd52-3a76608b01ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6934e6f1-f6a7-4b72-a95a-2c348264ee87",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e859c4-e487-4a4c-85f7-53eb40583c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249644d9-9622-4f35-8b6a-e31eb74d99b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ac5788-1d6b-4ba0-9978-6fe88768ae02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05dcb193-04fe-4fa0-af6b-572058458a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f5c318-34b3-46a6-aecc-5a9028b9f74d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17464662-7046-4389-85a6-835ff84ed448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d29e13e-96b0-40aa-861f-268a452c35b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15e9d82-2ccb-4fa4-8505-7cf4a139c07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2081bb95-5fb4-42ce-b036-5e4cf23b252e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94395560-7515-415d-ab3a-6de2413b579d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28aa407-ced0-4ff4-8a2e-d574124d0d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b954cca9-bfc4-4ae4-8bcf-3eea0350e06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6826f207-aeaa-4cd3-bcc9-698b55adae99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9b455e-dcfa-4a16-81ba-6dc4695e3637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a74d25-494f-404c-ad97-fbdd970eeb1b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e057f34-45f3-41f3-9cfa-501e35a82294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9ec5f9-aa75-4c4e-9ada-f69e5ca5a48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cf9c51-51e7-4cfd-a6bc-dce45f013909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16580559-7f26-4315-a682-cf05c959e16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419a9258-8974-4971-93ff-704dbb0977b7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359601b5-2be5-48cb-9e7b-1538cdac41e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c252361-d081-4ff9-bd4b-11e6a4482874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba35dca8-40fa-4ad3-acce-7a076b30af18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba20e4be-bf2c-4d15-879f-7192cc7d35a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e1ac65b8-eeda-4171-8ffb-7c8d53991a05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07067953-b5fb-4c34-948f-00a18edf1c62",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36eb178c-6f26-4928-98c7-c16438c66283",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2b9f94-2341-4b44-a238-69f20b6ed3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e274da-2581-4951-b8cc-4a75f6823ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4af40ea-f3e6-48e0-8e64-cf4a8c1df6b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a4018d9-04b2-4610-8d2f-6c3ba40c4018",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f020747a-ccf9-4420-9a3a-825aee5bd610"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9144b797-05ef-4880-97f5-6e7acd776613",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12f7a560-a0a3-4d56-be30-d20f16dbb8fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d54eb1e1-555d-47b2-abe2-31c5e45d68ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "672d7f2e-4424-4ed8-aca2-087d77bef4af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2dc5a04-1f1d-42eb-8508-219bd8782500",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ace0e035-16d1-456e-84df-b1fb597a831c"
            }
          }
        ]
      },
      {
        "id": "0f1f9739-f1c1-4ce6-ba82-2fb325f6ac5f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a6c23d70-3d2f-4a20-acc5-ab8829557dab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "662e4bac-c2d9-461d-984e-c7f438562272",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "30839997-9f0b-48f0-b6b2-0fb5a9f7107c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb7c908-798b-4123-9d04-0a32148635b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72fa337-3580-44d0-8d8a-9f434c9e21c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fd8fba-8913-4760-86c7-5524ba9a19e8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a8eeff-7a1d-4e20-9849-9e5ec407a8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e06f5f2-a9e1-4a92-be30-da242cb6b8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782318a0-1589-4a2e-bfd1-14f2723d381e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fc42e7-8c8f-4f84-b63c-e1d80daf2b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0d6259-9963-4351-9890-f1445eca3996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9dc8eb-4697-47b3-b8cc-332e1d1e0c23",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24571e4-3a30-4054-9819-c468da999b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56df867-730d-48c2-84fb-62a2f6b57821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120a7f0d-b7d8-4f53-8271-6e207f2d2387",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc2bc98-7ba8-4f95-a136-bde375adbc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfa9aca-ce9a-4493-b77c-da716df0c28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10d8776-cda3-4a59-bea9-8f78117fc869",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f0ca1c-f46d-4bcf-8edd-1769f8aefdda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba9b331-1d62-4473-9289-abcfce192569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ab24c5-4cf0-4fa5-995f-1a35d34fd688",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84de7a09-518a-4648-9e58-2bd7e4282e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c8ba0c-0c48-422d-9970-1ec86f271984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4106067a-d3f4-4952-a62b-025e676801c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fd330b-29a2-4fcf-ab0e-907b450dfa6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d5cb67-5509-494c-af07-675811da136c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736c6d06-c6ae-48a2-98e5-ba9837c4f6f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bdd437d-de5c-46d7-a220-93613787cba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0dd440-5c05-4147-990a-75ef64a4cf31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5062e3-3901-4793-ad44-7c7edb6d0b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ae778b-755c-4e2a-a41a-6a8fc2e00b34",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2932d522-c201-4c40-9120-1344a0dc5184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "624fd9ce-55c0-4d81-8aac-10e14d57762b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57702b19-27bf-4fe8-9c8f-4710e522cfb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa08a7b-629b-4586-8d68-76ba5d6509c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2063465-1883-4897-a9f8-537d6a58a9bf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e546dc23-2350-4ca7-a0f0-17fc44745f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "792fa13c-6e60-4dc9-a335-e775aca54068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c269aa5f-a485-464c-b46f-c861b8759a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed623ec-97a8-4764-a2f8-6a5828708ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e838584d-1a52-4698-8aff-86dfcee8b4d9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f878da0-5a3a-4de4-8f0b-dd645d461703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278598dd-0505-479a-8145-69b77a5b1830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe6060c-3d43-4614-8ea9-92ea073e6f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd683d4-0006-4b8d-972e-8b7b885eaf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379c829d-9a5f-4f3d-b5fe-d6fb90e0a047",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3226863b-8b9c-44de-b398-599e14b9586b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8715b80-9c59-46ab-8799-29221d4d4d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e71736-4adf-412f-9cfe-8a70ea627e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3dbb2a-7f17-45ff-9848-ae9eb669330f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa58c66-c111-474e-83ce-cbf5ec767a47",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc7488c-c843-4abc-b712-32bb900a458a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "363138b8-dcc6-4406-93b0-c60c46fc821e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0173b9c-13ed-4657-9c79-31d25100ea8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1059baf5-cbcc-495e-9cf5-a429dc0c6c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cb69a6-430f-4de4-a5ab-73adbd503930",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6311bf-fff4-4a27-89bf-54090221d8ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ed7e6a-8186-4dd6-ae81-4bfe28dc6f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb4128a-30f6-413f-828d-0ab132ed986e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8bbfea-eb0b-4d77-8942-b511c014611c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cc41ac-c83e-44df-bf61-904c8751b8ce",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87083cec-1ee0-43e8-acca-9a5a2b9372f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd699e92-583b-4992-bb08-38c26846a729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d111181a-9787-48a9-af2b-475a9a66faf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3143f90e-744e-418e-af37-edf815ae0492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0741aa1-b8f4-433b-9dcf-730e538b773a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1901e1cd-0e61-4569-a48a-4c8f713028b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cccb2ec8-9379-4814-af2d-726da4326d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41b2933-dfe8-4f8a-8760-c8cee09c4718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963fa479-900a-47bc-a62d-60168d5e4e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402e5744-cf3c-459b-b880-46fa2b1c5dd3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b0bf0f-7fe7-4cca-969f-56454577d9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35588b19-7e36-48d4-90a5-2b6f01fcef2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1659a163-56f0-4fc6-997e-6d496588313b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18abd2a3-a94f-4697-a13f-d67c53bd0410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76b5b7d-c4fd-4587-bb65-64c0eb116644",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f74dbf5-3722-4d8d-8782-d1d933b9914e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473aff61-12d6-472c-abc0-bb118f2997be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47839f5d-abd6-4148-8a19-af3e38dfc812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a59931-a674-4335-b174-b8391c7154d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0462d9dd-bec5-4fe0-bf92-096692e22242",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46180609-5442-4ceb-bb9d-9645ef578172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6025cb7-65ab-4291-89ce-9fe597d44a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "863585b5-0f0e-409e-9f60-55de6d86d769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089c2963-bd6c-4350-83e9-377e75937dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae5b488-c05d-46a7-b6a3-04f3605ab6c6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c515c61-68ac-4951-88d1-6be9478e946e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce31d70-bc3c-4fd2-93d9-429b532382cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7016331b-1f60-4cc3-85dd-240c86eca027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a4df32-2fb0-44ff-98a9-39fc55f3e9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711c584c-abfd-4662-a9d2-fc35ae41a6d5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cc2d5f-129c-44c4-88ca-fbdab4f2759a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff29edc5-420b-4718-bb24-aef872cd7538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "641c83d9-0c13-4ef0-9876-9ea0500c6a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a26721-f3c0-4266-99db-6fd7dce8960b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc60493-d343-4ca5-9dc9-a9c829109304",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5863df5-aa30-4017-bf7f-c6b38b0cf405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be16bd63-2d48-4c2e-8c66-24491b6aca3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a464976a-b616-491a-b9d4-f0c60f8f5ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f617daa-5907-4519-b66a-ac616a806881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f305ee46-f395-49f5-8f16-34548fb99491",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54704328-a538-4cb5-bc57-22d7c6d290ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399902dd-edd5-4563-ad7f-881ea5b09f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9b8473-5160-4d5e-a686-25798e02cc3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438118d3-3736-4b53-99f9-34da96ce5d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4292fefc-a297-47d9-a60e-73531fdc53a0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e38539c-800d-4c37-be43-9f1a5af1ed5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6d3e1e8-06fa-4116-9a6d-ddf422fa5742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbf41fb-d07d-4e8d-aa31-6afa15476a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4387f7-6d4c-49cf-843f-043534129aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8489a84-7c98-4799-a63f-e4899afd42d3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdf8144-e919-4028-82cf-e0c6f2af5966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a3928a9-4e55-4a44-9d52-9a6d20f37658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262a6fcd-5b10-4466-9195-d628000bcc99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7929776e-5e8d-469d-b9b1-baa801a899d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19702d8a-2bfa-4b59-8b43-1c756229f412",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870552aa-6846-4b36-ad47-c35e98dce560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b50caf57-76eb-461f-9286-fad19f976c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9584c94f-f9ee-426c-9bc2-57f8c6380559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e14496a-d37e-4869-ae22-7c37da44e0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981a66d5-0fd1-4e44-aed0-99b0aa034fe7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8fa93d-afb8-4732-a303-6110575b6a32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d04c8fe3-5794-42d5-b94d-bec3bfde03fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3411d0e-d79b-4ade-868f-c8bfd81a4adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1e2e53-4cbd-4d68-80a6-d31765894d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37338d94-7aab-48a9-abb1-dd19d47daf98",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec7286a-3416-4736-a3ea-d23661fd149f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc6768c-935f-4b17-bb8d-9e3faa4e0156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddacb6e-5f25-4f29-ac68-79192d7859b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a291808-2853-4cfa-8e3d-2face0eeaa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10410e16-aec6-43c4-a1e2-5278a1770b34",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b14b1c-a049-4a33-a480-42604f866edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "548a6239-0162-4aab-8fd6-341ed18de18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e4acdd-01b6-433c-a390-6db1c089b57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d192c3e6-d90e-4a07-b95c-61d9f795bfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e155dcd-34aa-4d70-b4e2-110b5e64e9ca",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c663a31-7c81-493e-b4e7-e82405142ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999296e7-039f-4e82-b998-cf915c4e9105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faf81af-c77e-4b22-be4f-473c01cf16db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5baedb0-c7c1-4d93-9a55-1155f50e0496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7279bdc9-bc5b-462f-b109-9be5321c696c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d012f77-b5e8-479a-b576-69d68b7d9d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f193b025-60cf-418b-b065-3457e0b08207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a486b2-85f4-4414-a84d-390005fc646a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04eadca6-5cb8-469a-8fda-735fffb1c705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2959bc1-4482-4c31-bc90-237a8e0233f1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7642a8c-ca85-4951-b0b8-d6e1af148e64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e0ca84b-0c22-4b4b-bcf4-620bd5241030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa010854-c7bb-4440-ae9c-1608b1341fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583dcb99-1973-4f94-81f9-18bdb410b0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89458afa-3f63-437f-8dfa-b482215cae84",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47fa596-d2ac-4ce3-9270-29092a3a62bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b4aef71-cf5a-412c-a07b-0f2cd7352a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a0ccaf-6c25-438f-ab07-01e945924d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ba39e7-a29e-4759-bc91-3bc1fad7fce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b89346e-9781-4b3e-995e-4b1575c9ea3f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869444fb-c0d9-422f-8c76-ca524c0dda0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "616a740f-100e-4d35-a4e4-6896f87bec6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659b36f0-ec41-48e7-9dae-2252eb450b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5810acdc-4e72-4c20-bee9-a5f421388133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c896f55a-377a-4a2a-be5e-3cae19cafa46",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a96af2-1e38-428e-b1c4-cfbc216c0fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac3d205-48b1-4a21-85c4-59b7fee05efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db410d7f-0ead-4c32-9014-ecbbb2b96bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1251f86a-d2b6-493d-b844-2f499267e566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dda77e7-532c-428d-b25c-4358632cd701",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4e0a70-0276-4b62-aa17-3c95557ba4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abfab6b-3232-466a-afea-c2da37130d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb4fc2c-fea0-42cf-b9ef-f3286c179a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a59392e-d8af-40b8-b030-0c210eb93005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba43561-b27a-4063-8b9a-a9c048c72e68",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68803b0-667b-4975-bf8b-fa8f842d7238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c13295-b503-4e29-9db4-cca303d08854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d198d4a3-80fc-4af0-8446-1efbbc5e9fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806e992c-e087-4d4e-b829-830de5227a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61455838-60e6-4d64-b220-6414241065ff",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2646c430-c3cd-4b7b-80d8-99bac01b3646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c8fd78-3c85-4f0b-9a4b-4b2de8bfe15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6551e3-31fd-42ed-8742-fbd0b99f068b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb58bdd-3c0e-4148-a5a7-7929e9702249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0eff367-9a0a-417c-abc0-933513f69ce9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cc4eab-5624-4e23-9490-302b2e151778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ce9121-889f-4bc4-9762-fbaa9a8b7b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b4ad99-52f5-436d-a505-0bf8e89a8c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b63776a-88e1-42aa-b997-1a6a71ba07f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff63a2ac-0864-4ab5-887e-c40ceb5b9e3f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a49e61-4a90-4f78-b577-e11e6996b666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24df13f9-572f-466a-b935-821fd0d18864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0940c694-25e0-43fc-9c5a-9d30d56274f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a525e079-666e-4160-8e5d-17eb207e796b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dae5ad-147f-4c9a-8f4c-5a6bf517d34c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7d55bb-24cc-447e-a4ea-53d6b5f2c3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629ef78b-2203-44bf-a692-29647e2c828f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "475f47cf-1760-4370-b472-594663bc0b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9fc34f-e905-4f02-b5a3-97dcf65fbfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b808846-090b-4d70-9534-3798f302a380",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9213a6f8-6cdf-4a37-878d-0ff2ac593cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f985ec12-df33-4f3c-8d91-7f00aac73bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5c4f9c-cc5a-4daf-a721-406fd33739ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e082dbd-cf35-4ed8-a551-7aaeccc6138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b468f830-3cb5-4a12-9869-caddf62de5de",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2f1984-f1fd-4e45-91a9-aef8414fea48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884c4146-d7e7-44ec-88fd-cbf082f99697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5741b6-6b61-4d7c-9cfb-4932f9b0e4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e00f7a-a99a-4d00-9ef4-d134ed6c40c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f4ebb4-c321-4973-93c0-45831aaede0d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36b3aea-dc32-47fa-8e6f-69a59ea154b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcf0da6-f2d9-49fa-8d2c-b9d94c650ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7722e53e-b726-42b4-b089-03daf9ef9c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4626df-d4c6-4ee4-97cc-bd41c314e40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e383237c-e5ed-4d43-8735-acd6124c726e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86456b9-338c-4ddf-bd0c-00e4c2240ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2523f4-1096-4428-8458-b272f436c468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7721e189-aac6-4584-83b6-8c2eb7403b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892ad8d0-7a09-4b25-9a63-a6fb550ec990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663bccad-0266-4825-9dfc-8303e2245570",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f349a5e3-e738-414e-9dbe-51120b8369a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a627ee-bbd1-4f1d-9ed2-5fe84b1ae41f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cc154b-d22b-486d-8eb0-451db31a9291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db20fd0-ac16-4bfe-80a2-fd366d31c7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34483706-0630-4124-bbbf-cb35dbb16905",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea7208a-7117-42b9-a944-5511c06399c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87f73e1-38bf-46c2-9e50-c550b97a7034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb65ebc5-1afc-4892-a11d-77baa1a304e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e99852-7667-4d77-9a32-43b79f13b879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea76bb1-3503-449f-9826-4ee0932a20cf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a838d4-a4e3-4f89-85fd-b8e4d648fc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41af067-ebb6-4999-8754-e4f8b46b2cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9290b67e-3238-4dc4-8075-36397fdb336e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd20c532-2731-41a7-ad08-310dce585a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ebef32-1ef1-4391-9c1c-d5f9f2c5d3eb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb5a75b-d802-4b2b-a428-f36fd0b3fe8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70e93d6-beb2-447e-94c4-fb6ce0b02510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf1fa0d-5367-4c05-a88d-34347fe660f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a13ff7-84cd-4c8e-bee4-fc34866991bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef33916e-1a23-40b0-8b9a-9aa250a42a33",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0dfdb0-a422-4026-a645-db2922f37d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8795d6e-777b-4f5d-acd9-d11b23933113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250efcb0-917a-4e26-9ffc-f8fff4269ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6155184a-030d-4a96-bbb3-22adfa419bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d715f793-8e35-489d-aeb8-f034c3d6721a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27476d4-12de-43e6-9de3-db047153a813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e55380-182a-4457-a79c-676b26ad108f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392912eb-98ed-4574-a87c-9da9d4222729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3675b706-9654-43ed-bdc3-01a9b519c841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a84d75d-721b-43d4-9ab2-ff78685398cd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc19812-dca5-4a71-9d58-0e18e57422ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bcace9-f220-4a91-8945-fd54d83899e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6f517d-fcfb-42e4-9f69-e9564cc15193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1ab975-0bd8-4c4d-b99e-733abed573b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a409073-6db9-4c08-b89f-570d2fc35aa3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb9c9b3-4b33-4361-b1a2-4702d65d472e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c155f389-32a0-431b-88f4-62bc639d05d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba2e95e-e009-456b-a265-f861b1ced4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cca9e4a-1b6d-40cb-9a8e-358b1868dd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6e2ea8-d0b3-46b9-8686-21b85a5f43c7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a92627-3330-4c2c-ab49-d0814d61ae55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc21977-8332-4bf0-afcb-ef8c3092893f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e2f6a5-1852-4bb6-93d8-d4bd30863b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb8b492-603b-4152-907c-33880763442e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd85ee54-6518-458c-91e8-322fb4681fe8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022595fb-7b35-4be5-9ef3-91954660b7f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b876ddf0-5469-4017-8e5d-6143416f9711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e998938-0a17-44ea-8b5e-c667c8bafc04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ef8f77-84e8-45c1-a91e-65de96f6c0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c1376f-ca74-4c02-8874-67e9714a3d3d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf105695-0eda-45d5-8447-e813ffbea446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75629ff6-8aa0-4309-abf0-a36f1af316c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef958fb8-b172-4252-8926-6523ddf16f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01064d5-b05b-42b2-a8c7-5e481060faca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063ce443-ba99-49b7-81f6-f681447561fd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d47aaa0-697d-4e28-acd3-179708f29bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ae2858-e434-4eec-a66a-07530ab4587f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d3ba64-569c-4ed1-b99e-a0d3d436c2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9fe258-4f31-4734-be7e-bed0aaf3bdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86d5d84-c95c-4990-9e39-366518227d58",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f775edc-9d4e-4bd7-8673-ca904cfb3dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d085afac-92fe-40aa-9210-f6ce38603908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f32bc59-2cae-43c0-b85a-64434351041f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc4212f-02f8-4e23-8c6a-5082769b7035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b629f07d-5409-47f7-9ed6-8a40a1cf2bad",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfab7427-9338-4375-acbb-39be64d17103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a284cd-fcdc-4f8f-9dc7-40fe45777152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9e2f18-856b-4bb7-96c7-80fe1e56b36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5acce59e-cece-4dde-953f-20f71ea7bfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d029bbf-ee50-41b7-87d3-111a3f3858de",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e98ee6a-b3a5-42da-a9db-6a307958b5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59872318-0a93-432a-8b44-f48c390b9c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2f844c-7f53-4f28-85c6-35db9801cbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59dff4e-8edd-4790-9105-9a2fa83bff02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adaa786f-0cfd-4582-b5b1-008b3955dc93",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ebea38-6b2e-44c8-b578-7ff5d2b80d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bbe6b7-9962-4c8e-bcef-30713d42d5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce47ecf-d5bd-4e86-a8cb-7a488d2c96ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242e503e-6111-44b1-8037-d7a9e52f6393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789068bc-5cd7-4439-8783-745a9cf1ac8a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c19e72-9806-4820-881b-cac7a866a5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7658595b-ea61-4707-9aff-6f85a4fdc442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe13b4d-0625-433a-b4cc-e45945f3c0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac41db1-00e5-41d6-8a98-e008217f8444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74a3c99-c1a4-45b0-8359-2e06395d9bad",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8669d0c8-1e06-4012-af38-9643513a73b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29ba57f-d8fc-4e05-8b97-8f7e21c06bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8551615a-f209-4da4-8917-6763a0d49f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb4a7b7-dbf3-453a-853f-f7cf4bfdb5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6918b31-82e5-47a5-90a1-8b95e799f2a5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5450f7-11a5-40e8-be89-5f8240cf6d9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "917b558e-97c1-496d-875e-b3160da33cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2970ea-11c4-430d-85e7-5755e9877565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86805d1b-2d7d-471f-a75c-679ab487d47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dc6804-6567-4f23-a299-5486cd25a0cc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf40619-5b6b-46d7-9e92-aa4640f2bff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53c0896f-e982-4a89-ad21-360eb5c7af37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e36a34-9ca0-4481-9342-8ab0bda7b799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158625c2-3c59-42cb-bb56-fb0f7b96f590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73956791-e7d5-42e3-b483-951dc9903ccc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac9205d-bab9-438b-ab59-1824a4cdfb1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65edbe6c-2b05-49b0-a7b2-da5b13b3e5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229a8c59-5e7e-4126-9195-e72e81960fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3648d642-97e2-4c45-91ce-246810a42415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca33b13-ec14-4346-95e4-cc6d48f7f697",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e994da7-38cd-4b46-af38-80bcc5754af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ce6d02-1cad-4a9b-bc07-19a98dadec54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7c02c1-8175-4c86-99b2-2940644f3e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ad6750-f36e-483e-b83b-c051ba387e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583df2cf-f255-4c4e-9637-65aef3229796",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6ff525-09a6-4458-a833-9cde11788777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4550f5c2-b0f9-43bf-bd0d-4bb7a13be123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16baf6b-1d79-4fa6-8053-a90eb539333c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e585d3-1025-461b-8cdc-606ed02147cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04974027-3919-4618-9598-6ca1b1eed70c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91daf703-ac8c-4558-9780-531abbf828a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea42ec58-7155-416c-96d1-dab7a3b19362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e1fc83-86a2-4986-bdad-7c908fac46ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36eef489-f257-42ad-b863-d4d565b84280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f72d75-002e-49b9-81b4-853250aec40b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959af3f0-4a88-4d3e-a05e-f1572efd969b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf69893-9dd1-4327-bc08-747cb4b470e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cabadd2-d428-4fea-8936-959b341bc330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4e8d2f-b746-42fe-bea8-51614d977f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a036759b-fef2-41cb-8868-52e51eb73bcc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd1a5fd-d547-4ff1-9ee5-cde638f96c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ee859b9-a254-44f8-960a-5738f7dc4861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8457e29e-5d07-4bb2-93a9-197bc070bd86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4703feee-a953-41e9-893c-3566657bf801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b100a9af-32ee-4750-a883-bbf655aa00cd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f869625d-d481-4ea0-9f32-17f6b91c0f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e26c27ce-d7cc-4353-9ffb-e6c1575a1d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5eb87ce-b495-4131-8ea9-9c9c91172c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec62089a-d6c7-4efb-9607-ad3373e196e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593fc9a8-9910-4c3b-ad2a-c94ee23df3a5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84913a43-2beb-4d02-90dd-bfc02ef14f8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce23e101-6392-4418-aba3-a6edbbe3c952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa6734b-24ba-45d3-9689-69e4432a8c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d4c753-69da-4ff0-a8fb-f630c0614f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8a844e-2e87-49c5-adbd-63e90522b2e3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d7fb84-76da-49b6-a265-72f2ebf4aef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "021c4044-7623-4479-95a9-a7d4b1f8672a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a66d724-6447-40ad-a9d2-c6029cbeeb4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5c9df5-e9d1-49a4-8b6a-6f9c8a7ce721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e52dc6a-4573-4c5b-815a-348d12919bd3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5f957a-9d48-466e-a2ce-56740d25217c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "323533a6-7613-4145-aef1-92a3e2be64ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3403ba4-97da-431e-9d9f-a64304a16140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1d9a9f-80b6-4fab-8348-abe0140063d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff0da1c-4b4a-4b14-88bd-32dd05621bf2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e708d4-e6cb-46d9-9907-81a8f3ce830d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63901601-9e3f-41fc-9aaa-c5271d02f55b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b97cb3-f5e2-4046-a71a-11fe29717152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc8d704-1cc2-4b0c-8592-df00ba3c672a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e92454-5d8e-4d6e-a6b1-c79c5c9d9539",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539305d1-f5ae-430a-b090-577c59cb1278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e620babd-c24d-4da7-8cf3-a6577b1204dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeab0be7-b922-484b-9421-7bb48289356c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944de40c-5a2d-4541-9a5c-ca58ddc5cc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bc069b-6511-4327-a63b-24ed1f711ea0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe696b0a-9a52-4846-bf67-37e07f77a2ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c8ecb8e-0a0d-402b-8ae9-8e7b008cb51a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30db12e5-551d-4be8-8b38-b60ecfa6a66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7f4c19-b311-45de-a958-e4a00e9788a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a67999-1718-4888-b1cf-2e3c371959c4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41fc3da-28db-4edc-9fda-dfe1c709f016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f6b706d-8933-49ed-a532-904aa263d315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c91a2b-995b-45c8-98f5-f5ef32f67de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e6f63c-601b-4065-9e97-37646e33a384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e979f9-7f17-4fe3-a93e-12ef1fa428bc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abe739c-671f-4492-8f40-c04c43c392a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d76d23-8f92-4826-b401-db4fc87c91bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227d96cc-09aa-41e3-a992-6e44fed96899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1102ad18-6457-421d-aa44-93c7fd3fb6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848223c2-45d0-484d-bbe5-1899ea4560bd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb23faf-44eb-43f7-bf12-e177ea55829e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f8e397-90d8-40c9-8037-273f84af918d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ccd602-d2ff-4a3b-8015-af23b584c35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967f2ca7-e659-42ce-a9e6-5fd7c4bfec8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa93e5e5-fa9e-4cbc-84ef-e0e0e33f3677",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae553b28-98ba-496f-bfe1-68552680300e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fcf46ca-0d28-4674-8857-a3e15f63f5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db961f7-7b88-43b7-9a5d-dbfe8c619151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad088b93-b2a5-417c-8290-50d463eeabd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f40b00f-7025-4c60-b259-47b611ab0bd3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bed184-344b-493c-a3f1-12bfe308f56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f25d4843-4618-4b17-959c-b70088d2e51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56ff678-c788-40bb-be44-5e1c7270be07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3e8aa5-32ef-4484-a85a-7d4fcf4f356d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf8e62f-becc-402e-a657-2ea4a44f386e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c604cd-fcd2-4d5e-81f2-934debca4bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef5163c5-ad89-4654-b279-f6e024eadb67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8ce227-1311-4551-92df-fc5d8ccf6130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef9ccb5-7b37-4077-bb45-2b7d0d82e915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38b42fb-d8da-47ac-87bd-1a40cba9900d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14160946-3727-48ad-b79e-31e524f95a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa0e8ef-60a0-4b06-a326-0dd9177d1edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69827abd-9885-4fc9-b00e-2053d9703f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8562c687-6d8b-4613-a5cd-129b688768bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5555ec-d340-4608-a67d-89691fe6497d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cae770-3f30-4515-b073-865fe6598ead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1d32cf0-5c57-409c-94f2-dba3973403d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacd46ad-4663-402a-a92b-409d14b4c00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da56ec1-1141-4fe9-9b15-df5597f90cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163446cd-8973-42dd-8ede-145f00167c86",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cc16f9-1895-4745-86b3-6182df924b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11cca6b3-0732-4848-b680-4cc47d0a27bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a57925-0112-4f04-a9fa-c282357a7a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152af222-4a3d-4d94-8079-ce4d33202cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64233194-4d14-4a13-ac51-dea43c64301e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ae1598-c121-4149-9f0e-185fa575064d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cd0763a-249b-4cdf-bef6-2d4503935f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ea235e-34b6-441f-b465-843c4e39c394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8efc43-ac10-41aa-b3c3-e81e35581929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46352d3-f549-46db-95cd-5e1cb9cc61d0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9dfce1-b0e9-4c22-9921-f6f6280c16ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2007b838-0922-4e29-95a9-df2186e386b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e4d1af-a458-41dc-9a99-7d8756e7ba00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9ac878-70e4-448c-82fa-7314a5988d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6502124f-1841-4ff8-86ff-3342b3fc11cc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3d2fcf-3ae8-4d34-bb56-5a74655a40ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c5ebfc-3b21-47b3-a106-5f26b9bf1590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd362880-9d5d-4e7d-bc53-c8ff32127adf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7aa2e1-c81e-4e58-a493-a0915967ae77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c63317a-294c-4e9e-a5b0-b1faead54153",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe72394-132d-458f-a097-d76bc031e261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3e4d87-4c23-4dbb-b0ea-e38664c07f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae052af-fc7b-4a63-8a36-4fbdbbe25b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd26313f-eec8-468f-89b0-d4e37c781b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4601421a-7722-47a4-9afd-eb1cbc2f62ea",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573940aa-342b-43ae-9ba7-19388bfcf7cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23df4092-ade4-4de8-aae0-2997ceba7de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56aaa7eb-2046-469a-a479-602a80915801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85dd9818-acf2-41f3-9cb6-144bf4c7cdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee1bf23-731b-4edd-b986-b286c5a0d36c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fe27a5-1a7f-4e34-88d3-fa28b46fe89e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba7853e-23df-4e85-82dc-3c1ff1ba486c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3c4e14-b842-4c27-8d09-06f9e3a5e3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5795524-c21a-4280-bc47-9557ced87834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae0727c-388e-4a06-91e3-65d6069ac9e2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737c1a19-39c7-438a-8752-b44bf582f01b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b62b9dcd-7270-4595-aedc-100ad75bedf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1079afb-c13b-4ec8-ab00-bdd0730aa0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc15dc1-94d8-4905-8863-da1ef4439443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d850fe07-d0d5-4d97-9335-2ea457f04492",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b054c9-a261-49c8-8ce1-e2a025c4626e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66259fb7-d913-44ce-9bf7-0dbc0436d145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08967308-794e-4bb7-97fb-87634b3bf787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3d5ee5-48a4-4427-be50-89a4da98d396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea69328b-eb3c-4a44-93ee-7f295398ffa0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50472876-6675-4cbd-bae8-e880dc3847ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13099348-a709-41fa-9fc4-0606c88e8acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02700fd0-d774-491a-bfa8-09702e818be1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25e8b4c-f0a6-4f74-a4e7-7d328ec5f17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a2a47-e40d-454a-88b0-47e16a302159",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570d6b6e-c8ab-4ef5-9287-b31e62f5ea7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7b67a14-eb07-47b5-b77a-175f21ce76a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3bd494-e2f1-47b5-bab3-a802c5d4ee1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753fb95a-a7b9-45d6-b527-1ab06e0ce7eb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "857da624-0a0c-49c7-ba3c-92991b55fba4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f28dca0f-487a-4c58-81d3-8216beb7dee2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3d28cc6-0287-47de-8eaf-1942fde60a29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3785daf-652f-4cd5-8109-d71c1c691529"
                    }
                  }
                ]
              },
              {
                "id": "e1e211b6-0cea-4dc0-9ed2-ae2cb538c186",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53667264-2464-4fe5-bcda-5592fe0e8c00",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f8d3c8-43c9-4d8e-b56c-4f391afdfe53",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4b5e57a2-1a8f-41a9-b7c9-fb9da30b7c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4702ccbe-09ea-4461-bdd1-21cfa53bb50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de8a439d-8ae1-4fe1-9fe6-5f9ebe4d8b19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c57658c1-ff07-4fb3-bedc-55021af96d2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9dfa50b-ff00-45d6-a626-dfcc917f9484"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0a6befd-f7bc-4118-a4fa-3f5859cb7a79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8881541a-8bbf-4525-840a-484f4594de0b"
                    }
                  }
                ]
              },
              {
                "id": "dc74f1ae-1927-4fb5-8318-2eea126de21a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6de30b90-b24d-4a61-b48b-88f86f25f2cb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0b917d-b213-4af2-a8d6-0a86760d843f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "255b2228-f590-458f-a1dc-e6e643cb25c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc2f0cd-d93c-4e41-a894-670d3a64de4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c149f4fa-7a3a-48d9-9de0-e4016b39a3bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "64fbf1d8-c03d-4bdc-8de0-e1184907fb80",
            "name": "Positive Testing",
            "item": [
              {
                "id": "93ff1d02-03bd-4a33-9673-32608095f1cd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f05e7cf-f8b4-46d4-b9a4-731e5a71da2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "38fc593f-233c-4001-86c8-03d2fd47dd03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b9dab3d-e2ef-4e8e-9be9-42563f245f36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4265325b-86e7-42e4-8552-e2728e6d3276"
                    }
                  }
                ]
              },
              {
                "id": "27d5a747-26a7-49db-b4a4-15ad53547051",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "375e6c1c-7a72-4840-8fdd-b5b988a90f79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "76d9b7e8-3eea-407e-924c-722ee245c23d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1afbdcac-4856-4145-a492-2450c42f0d54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a657387b-8c27-4002-92a1-0d8b2e5aede1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "047d2f17-a91f-4857-9d72-471e9b3cc559",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a8d9811e-ad90-4ea3-ac71-c69c31f482b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53c12ec4-c5fd-49a1-a2db-7330a5811eae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93da7d86-0fb8-41d9-86dd-56027e5e21c8"
            }
          }
        ]
      },
      {
        "id": "eabad9ec-a4af-4be5-a586-f3fba91582ab",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c2a03aaf-c0cc-41af-ba12-62a028b43717",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a20a271-a644-4ec9-849f-29e10cf73668",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6aeec944-aa47-43ae-b08a-69114682632c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fe5e2f-47c7-4711-8112-2dabf25110c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "81c4f2b6-56ec-44b2-ba90-cc71b73b4a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b82717d-cd59-4cf9-90a8-d0ae1db783f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e979332d-4098-4935-ac37-fd2ed2c88112"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f143c7e-8ecf-499e-87d4-42f413b008aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85f04310-fc78-4a1e-89e3-cfd9e9689c4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d986fd1-1836-44e8-88a4-28e830f7895e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "717e303e-8d77-4082-b687-2ff1820c6392"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8704a4c1-73f9-41cd-81e6-3d5a14260584",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6bdd21cb-add4-4954-b4d9-770d7a22653d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99e72305-7b4e-4b73-b0b9-2f267f77662b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4899ccad-1384-4887-bdb2-8fd5ee6485a8"
            }
          }
        ]
      },
      {
        "id": "7dc95791-ae37-4f0a-aee5-1aba36725b8d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e1a8d183-05bf-4c54-96d3-155c87bd0fba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e34f831e-e13b-4070-a604-ce5d79bc7792",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ac2b276-7091-4ca5-b9f9-b015f0e4579a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f4e291-bd12-4399-b722-77e422d8569e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "635bb960-83d2-419d-a884-8df66c559a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617d5017-2f1a-4a6f-a7f4-7a9908b2c9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "840eba9a-b7e8-4647-9776-92175269c51f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52fa1d75-2d9b-4ae2-8999-2e8cdf3b839b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8217e079-27d7-42f8-8e03-876d01ec013a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a629909-ceff-4a80-97e1-593fa74943d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21a475f9-7537-41c8-b3a7-cacc8a988a00"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "921a9d9c-45cc-4ed4-b808-9a8c740c1420",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e31b8505-122d-47d3-b0a2-02d231578e01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "031f00bb-6d63-4467-a045-a8be258a00c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56c88eb4-3377-468f-a3ba-1362e3e30693"
            }
          }
        ]
      },
      {
        "id": "aa3d7614-257d-4118-b623-d193a1c86b72",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "47da648e-7a9b-49f8-9cdd-c85af1840736",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21d781ca-076b-4bb6-9472-e974c6cd2c10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b56626f8-d620-4a4d-a6ac-093ae8743bbd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce461985-2108-4310-beef-726063f5b094",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c880ed3b-a67e-4606-a33b-7862b2af5eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e7896e-d953-4bdd-a9bf-de2a703f9a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0654ec1-dccd-47fb-81b7-34c04daf03b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00fb35b8-f63b-4fb2-91e4-7ee103320049",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63e50e0e-172a-4399-9352-3efb24638ad5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bb8f353-1dac-4290-9ca4-bb4c595e0cb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe57f6a0-44ef-4bbe-a411-3a75fb0d4904"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2806f9b-9402-4ee8-837b-7dcc3337a96b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f8e45b9c-e64a-4d3e-bab9-671a41364849"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b8cbc5f-09c6-4c9d-92fc-e186b4ffc528",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "999762bb-bac2-4e4d-abc8-b1cec302c571"
            }
          }
        ]
      },
      {
        "id": "2bd425f1-89ef-4065-be3b-f1e9c8a4b581",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27aa62b2-8a67-4aa6-8e89-33599e6117d5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "557f5e2a-0028-4c17-a7b4-0cb0051b3965",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d827ac74-b713-49e1-90b9-d0c7744bf2c2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a706c79f-829c-4bd9-882e-431e24a20c67",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52b9faf2-9561-47da-8b3b-185f6ebfcd30",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 68.50704225352113,
      "responseMin": 7,
      "responseMax": 368,
      "responseSd": 24.83360015957288,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689813709641,
      "completed": 1689813743891
    },
    "executions": [
      {
        "id": "67e026de-a5bf-421c-83eb-ca3528314437",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b26130e4-22db-4d08-b0a8-aa109a98d3b7",
          "httpRequestId": "be80f665-9e9f-473d-9a48-27310c914feb"
        },
        "item": {
          "id": "67e026de-a5bf-421c-83eb-ca3528314437",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eacbba12-b29e-4835-b51c-3de5a9501529",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "9ef18525-05e9-486f-81d7-3d305f3c1688",
        "cursor": {
          "ref": "0a386ee8-a832-4117-b06a-69bac859dc1c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cfac2a11-ab00-4c48-abb7-0df276e7344f"
        },
        "item": {
          "id": "9ef18525-05e9-486f-81d7-3d305f3c1688",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f46356d5-e5a4-4b4e-a0d9-a618f0b84568",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "7c84ec33-7d74-4ab9-a226-18e1c4d4f102",
        "cursor": {
          "ref": "8e750777-3a75-4a6d-9426-31c432462f3d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c52f4056-3255-476f-9bc2-991e9ddd99eb"
        },
        "item": {
          "id": "7c84ec33-7d74-4ab9-a226-18e1c4d4f102",
          "name": "did_json"
        },
        "response": {
          "id": "fea335e3-1b4c-49f9-9935-44385ae27dda",
          "status": "OK",
          "code": 200,
          "responseTime": 368,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bfbe32-8d21-4d03-9d0a-edb38c39f727",
        "cursor": {
          "ref": "7b8fa70b-ad73-44ea-b0e1-00985a851fe4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "620f0295-afe9-4704-a81d-1992fb15704e"
        },
        "item": {
          "id": "b0bfbe32-8d21-4d03-9d0a-edb38c39f727",
          "name": "did:invalid"
        },
        "response": {
          "id": "031d9740-452a-402c-9c8a-7c7533fb37a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bfbe32-8d21-4d03-9d0a-edb38c39f727",
        "cursor": {
          "ref": "7b8fa70b-ad73-44ea-b0e1-00985a851fe4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "620f0295-afe9-4704-a81d-1992fb15704e"
        },
        "item": {
          "id": "b0bfbe32-8d21-4d03-9d0a-edb38c39f727",
          "name": "did:invalid"
        },
        "response": {
          "id": "031d9740-452a-402c-9c8a-7c7533fb37a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fadfb7-2f54-4cb2-b945-f276a425c08f",
        "cursor": {
          "ref": "a0a7119c-dae4-47d5-8f9d-284bc1233d1f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "169ed0fe-2333-4125-834c-c42e8c875279"
        },
        "item": {
          "id": "e6fadfb7-2f54-4cb2-b945-f276a425c08f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4ebacfda-6aa6-46c7-9ef2-7d510776da48",
          "status": "Not Found",
          "code": 404,
          "responseTime": 113,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e8bfac-5392-4e9c-b29a-2a11afbc9cc0",
        "cursor": {
          "ref": "9b837850-deb0-4bb9-8ceb-ff4f1b8ec169",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f41506dc-3535-4b67-8e0e-da15fc9fb118"
        },
        "item": {
          "id": "28e8bfac-5392-4e9c-b29a-2a11afbc9cc0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "01207973-7b3a-48fe-beda-f002b0625ec2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da5b8b0-0e76-45c5-b279-f829e05d2308",
        "cursor": {
          "ref": "3effa50c-c542-49a1-950a-df952c75da4f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a0103530-e913-4e07-9697-53454467b6d6"
        },
        "item": {
          "id": "5da5b8b0-0e76-45c5-b279-f829e05d2308",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "38b411e1-afec-4b31-9850-533b8e0639c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57b3395-9498-44d2-afb2-9f0b317ca73b",
        "cursor": {
          "ref": "592f20eb-ef6b-4367-ba93-2e5a087abd83",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cbf8d07c-7032-49fb-be31-d5fcbe084b22"
        },
        "item": {
          "id": "d57b3395-9498-44d2-afb2-9f0b317ca73b",
          "name": "identifiers"
        },
        "response": {
          "id": "9be2878c-cb9d-44cd-9c44-8f6f20ed536a",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f205254-e3bc-4228-8468-ed58f2abe8e1",
        "cursor": {
          "ref": "9b39a4ae-2bcb-402a-ae52-c201f48807e8",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4ffe2d8c-eae7-4ba9-bb17-fecccee366fe"
        },
        "item": {
          "id": "6f205254-e3bc-4228-8468-ed58f2abe8e1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "34a5656b-0b06-4f8e-a946-b3187d163156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4486307-868c-44ae-aa5b-910a8e169f6b",
        "cursor": {
          "ref": "fec07fba-85bb-4655-a983-cb7876a6fa9d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "eba7a2fc-2ab9-4e19-b593-fe552fff07c4"
        },
        "item": {
          "id": "f4486307-868c-44ae-aa5b-910a8e169f6b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f0159e16-77ad-48f0-b5b1-9fa71e847ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff543b3e-5d29-4414-a489-9b662a9fd560",
        "cursor": {
          "ref": "6ee177da-9eb6-454d-a4d4-1fd3261fcf2e",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f9aab4bd-62eb-48a1-a771-79cc6eef2ce8"
        },
        "item": {
          "id": "ff543b3e-5d29-4414-a489-9b662a9fd560",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7282f21e-cd9a-4148-8ae6-40f21014043e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf085791-69ec-4e86-97e0-ab622dee67be",
        "cursor": {
          "ref": "9255df0e-9d25-4197-894e-5268b9b88a8b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "873aa84f-2b76-494a-931c-c542bca0335c"
        },
        "item": {
          "id": "cf085791-69ec-4e86-97e0-ab622dee67be",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1baec892-a86f-4a56-a6dd-dd71db181604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81876de0-7fec-4104-92dd-dbc46ab8d8b3",
        "cursor": {
          "ref": "b3f647bd-d885-4a66-b22e-f91ec168385e",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7ef83cda-9de8-469f-a1d1-6138078b9e2b"
        },
        "item": {
          "id": "81876de0-7fec-4104-92dd-dbc46ab8d8b3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "853438b9-ad4d-41b5-a71b-f5263ae8642c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b27904-49f1-4090-87be-1af949477dff",
        "cursor": {
          "ref": "f8a0a0eb-55a9-42f8-b6c2-6dc9fc65cd07",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1a0e65d3-a3a8-419e-b16d-e8b16ffdcb20"
        },
        "item": {
          "id": "c2b27904-49f1-4090-87be-1af949477dff",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "25f5e800-6b22-49e4-b036-97f1216f722f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c70de2-e5df-4da0-9c1d-7cea90242ccd",
        "cursor": {
          "ref": "ceaf1486-e413-4d76-9cf9-170785d02c0c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "78677a50-2da6-497c-ab12-4ee56b6036b0"
        },
        "item": {
          "id": "54c70de2-e5df-4da0-9c1d-7cea90242ccd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2517955b-234d-4057-ad88-52cce462d2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53476363-3635-4163-b429-a3d094f2f854",
        "cursor": {
          "ref": "2ef05a2a-a60e-4132-8a57-7a7c13a5a3ae",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "eecb8749-a09c-472e-b446-8ecdc2237ace"
        },
        "item": {
          "id": "53476363-3635-4163-b429-a3d094f2f854",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "879b9126-c3aa-4a9c-a3df-a7906e4b9134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de70c0b-e585-4d63-a3d0-99abffa233aa",
        "cursor": {
          "ref": "8e30f677-f022-43cb-b019-4d81051f8755",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1733d7e7-e934-456b-a5d4-53a4f9940b73"
        },
        "item": {
          "id": "6de70c0b-e585-4d63-a3d0-99abffa233aa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "54a1f85f-89c5-4f1e-aac9-de1004026692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a1df8f-fc6d-46b0-843c-7632ecc25241",
        "cursor": {
          "ref": "17f09b1e-2ca8-41af-ab37-8f8591413329",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6a36e3e7-f618-4ada-ae20-a4b972dc0a61"
        },
        "item": {
          "id": "a3a1df8f-fc6d-46b0-843c-7632ecc25241",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "54995e8e-961e-4779-a7c5-47582957d759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60e3915-e7ae-4857-bc1d-ea28dd81733e",
        "cursor": {
          "ref": "89856379-35f1-47e7-b543-2efb3aa2150a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b47a6e77-14a3-4b89-b30f-22ccba63ea86"
        },
        "item": {
          "id": "c60e3915-e7ae-4857-bc1d-ea28dd81733e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "924106d7-d046-4796-9f64-a487dec479a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb714c2b-5eff-4265-a0a2-143ac3420d75",
        "cursor": {
          "ref": "dc6d35a2-af33-437e-bc6d-44790430aaef",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "99048e6a-94c9-4ca9-b7c4-0fa2dd3396b8"
        },
        "item": {
          "id": "bb714c2b-5eff-4265-a0a2-143ac3420d75",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0887c1d6-350c-4823-b118-29ef0a414694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65424b6-a54a-4af0-9165-9bc8eb0c5191",
        "cursor": {
          "ref": "17db92ff-da62-4fa6-bd25-4b5d1b051476",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cb6f85dd-af40-4e05-92ce-6427507e3b55"
        },
        "item": {
          "id": "c65424b6-a54a-4af0-9165-9bc8eb0c5191",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ebf5751b-26da-40a4-9d6b-efd4d638d68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376c8dee-d5b0-404c-8071-aca05031ba28",
        "cursor": {
          "ref": "f8abe66f-9a6a-4c20-82bc-8503d5f8d7c4",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b1c91afe-1182-4876-a3fa-eabd4e205fa3"
        },
        "item": {
          "id": "376c8dee-d5b0-404c-8071-aca05031ba28",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "545a10b0-4ea2-413d-a7c5-84f669c74b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e753dcdc-2c93-4e7f-bf95-f194fe59da92",
        "cursor": {
          "ref": "5b1f8733-d828-4b6e-a12d-e16e431fb4e1",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "aeacce1e-b55d-4ade-8057-aaccb8f93eb6"
        },
        "item": {
          "id": "e753dcdc-2c93-4e7f-bf95-f194fe59da92",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "93140a58-906c-47f9-bd91-ef3858740b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024b5dbc-a3ce-4e09-847b-4405a80316b9",
        "cursor": {
          "ref": "6d0bec75-a813-4c5d-87df-de4ff80f3b28",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e6ab5671-21f9-49f2-87c2-9188f54db0af"
        },
        "item": {
          "id": "024b5dbc-a3ce-4e09-847b-4405a80316b9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f14484d5-da59-4927-a0e5-64842f0e20ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db098d8d-a54e-42d8-9f0a-94a6c7536bc7",
        "cursor": {
          "ref": "31d40c32-5e31-4a8b-b5c7-8e6b0f4cc0e5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1a1ffd0d-1472-4e7b-bdf5-d5d4a51523a0"
        },
        "item": {
          "id": "db098d8d-a54e-42d8-9f0a-94a6c7536bc7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4c26db7a-b84e-4d55-9747-f003a562ffe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb36d7c8-8e67-42a0-8315-7f718821ac27",
        "cursor": {
          "ref": "7dd232d7-bf53-4601-a81c-1fde75870d97",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a295284c-0bfd-4770-aceb-d730357bb12f"
        },
        "item": {
          "id": "bb36d7c8-8e67-42a0-8315-7f718821ac27",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "21a37600-2b53-42b2-b72a-2896ff1ee9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4822fa-395e-43c9-8668-ac00eca37eae",
        "cursor": {
          "ref": "f355d912-9932-4142-bb95-586a6fc2cb81",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "78d7e357-ec4e-4792-a959-e1b86f8bc3d0"
        },
        "item": {
          "id": "9b4822fa-395e-43c9-8668-ac00eca37eae",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "64c309a3-46fc-4981-955b-cdc84b511d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a72afc-aeeb-4e48-ad9e-53ee972f1133",
        "cursor": {
          "ref": "fa55c87c-3f24-496c-8707-072169f158af",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5d71e30b-ff25-42b7-b50e-e27cc399b904"
        },
        "item": {
          "id": "18a72afc-aeeb-4e48-ad9e-53ee972f1133",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "93bafca1-70c5-498f-b85c-54779db1c41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef3160c-fa2e-4664-b377-e10b55c779ac",
        "cursor": {
          "ref": "405ff826-7b85-4173-926e-cea161ed67ea",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "000e4d3f-c0f8-4781-8128-39edd9577364"
        },
        "item": {
          "id": "0ef3160c-fa2e-4664-b377-e10b55c779ac",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "88a15b8b-143e-4aef-bb35-a374e24ba74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdddf2e-29dd-4e4f-9278-34a6f2d9d84c",
        "cursor": {
          "ref": "4426df20-e899-4aa8-8a92-a5ec78333667",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "97db7d24-7303-46fb-9548-8d2ca5574406"
        },
        "item": {
          "id": "dcdddf2e-29dd-4e4f-9278-34a6f2d9d84c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ad81e171-09d3-4f00-856c-a264f285c441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7a4734-9dc9-4060-bcf8-b7673ffcf39a",
        "cursor": {
          "ref": "482cb45c-edf0-4fba-b291-bc181d3aa40b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d9db70e1-b94e-4f86-a8eb-525b079f1927"
        },
        "item": {
          "id": "1f7a4734-9dc9-4060-bcf8-b7673ffcf39a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8aba9ba7-7fa9-41c7-9ea1-b95d234e661f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c794653d-ea41-447c-ba38-4fe2cab4fd48",
        "cursor": {
          "ref": "df916800-a0d4-421b-8448-fadc930a634d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "329d429b-26a6-4806-a149-7834804e8b75"
        },
        "item": {
          "id": "c794653d-ea41-447c-ba38-4fe2cab4fd48",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a306a146-1bb2-4119-8148-26df46160c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09cfb8d-dfab-45a7-b55c-b179df179592",
        "cursor": {
          "ref": "65985234-5f24-476f-b1a6-213946c79f87",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b0ef41af-e550-47a5-92f0-8a633a2c722f"
        },
        "item": {
          "id": "c09cfb8d-dfab-45a7-b55c-b179df179592",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e8e5cc25-aac3-4c64-9125-0a3fa73637f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964a4f45-de9e-4d99-b432-5c2656586640",
        "cursor": {
          "ref": "519f6ec8-2658-4c21-bede-2589fe3ccc11",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c0fe6110-117d-41a5-af03-8ddf8465008c"
        },
        "item": {
          "id": "964a4f45-de9e-4d99-b432-5c2656586640",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "194abbf7-a014-46c1-bb33-08f03f3e2b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949e2b37-4f70-4531-aeb8-b3f20380dd26",
        "cursor": {
          "ref": "991dad3a-49d6-43cb-b464-7d3b92c1fcd9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8bc9b5b3-24ea-4e03-a1a1-dd6c40fcd379"
        },
        "item": {
          "id": "949e2b37-4f70-4531-aeb8-b3f20380dd26",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "77861695-99e3-4415-9ad3-c4bd5500bc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa24164d-5700-4f6f-9102-820e86b69eea",
        "cursor": {
          "ref": "dc6d71e5-1e7b-4c06-9e0d-9cb132397fc7",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2990d0d5-3d9e-4119-a238-8ac4cdf69e61"
        },
        "item": {
          "id": "aa24164d-5700-4f6f-9102-820e86b69eea",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "87e71648-a004-4d6c-8b41-d5836c78e32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b632f5f-723c-4b01-a7c6-5b6d58034f33",
        "cursor": {
          "ref": "20822d31-3235-497c-ab3e-6a7b1ad95e9e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "eeed3cf4-0ba9-4869-a556-883c259fad63"
        },
        "item": {
          "id": "5b632f5f-723c-4b01-a7c6-5b6d58034f33",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d0d77b4a-c26f-4017-955b-3db4b9b60893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bfad34-e79d-47b2-96b4-2a7e062b221d",
        "cursor": {
          "ref": "56e35ce8-4747-4e77-830d-6d2f459a9b10",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "23b0073f-6677-4717-b165-54cc111b0259"
        },
        "item": {
          "id": "48bfad34-e79d-47b2-96b4-2a7e062b221d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b9bd681d-3257-4f70-b4e1-fbc7769d5f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d4df8d-95e1-4f6d-b4d9-f96371af53ca",
        "cursor": {
          "ref": "0c675e3a-96ce-4a16-9ad1-d131c5af6d2b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b0ae5520-25ed-40c0-ad39-a755923e5dd2"
        },
        "item": {
          "id": "43d4df8d-95e1-4f6d-b4d9-f96371af53ca",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5d4a2d22-8925-439a-9eda-620aab49f679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deefad2c-2591-46d8-98c0-0f64ba4bbba0",
        "cursor": {
          "ref": "2e7a40aa-3cd0-4180-87b0-d5f1bf8f5a01",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a4cd6636-52f1-4a4f-a47d-4a2859d9dd8d"
        },
        "item": {
          "id": "deefad2c-2591-46d8-98c0-0f64ba4bbba0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9a997f02-5515-44bf-8042-167229ed3ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39192162-a24e-496a-b69d-71bda15a4f43",
        "cursor": {
          "ref": "b584d399-9279-46dd-8224-e4c0820dd25a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4946b666-0895-487c-ae99-f5121e376dee"
        },
        "item": {
          "id": "39192162-a24e-496a-b69d-71bda15a4f43",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "30ff0832-e646-4078-8b1b-ceedab8b5aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0d3221-27ec-49df-a255-9ecfa2d35182",
        "cursor": {
          "ref": "d5d15feb-9186-470a-ac51-e2d45fd1cdaf",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "66f05f6b-cdea-4eac-a76c-172519b45207"
        },
        "item": {
          "id": "5b0d3221-27ec-49df-a255-9ecfa2d35182",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "545218cf-65da-4410-a84a-76359838e369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f161711f-7309-47bb-a1a5-2e979c3f0fdc",
        "cursor": {
          "ref": "95db72af-9c49-4481-ad88-13fb4281a966",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "17bf3d36-45d4-4a4f-a4f8-f7644fe41007"
        },
        "item": {
          "id": "f161711f-7309-47bb-a1a5-2e979c3f0fdc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6c662269-cdd0-41ee-9e1a-8cbf7bf40b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ea1fdf-c02f-4fc5-9b8d-a3317b72e026",
        "cursor": {
          "ref": "8dbf9dd6-dd8a-496f-adb4-8dd09bc8ca0f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8024b713-7191-4141-9b48-80810fb9488a"
        },
        "item": {
          "id": "b0ea1fdf-c02f-4fc5-9b8d-a3317b72e026",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b4b15b31-a048-47ee-ac57-2ccd6fc807be",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640846f6-6a95-45df-a501-72e362cacea2",
        "cursor": {
          "ref": "66765ed8-f531-47a2-be88-ed4ef839f36d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "72c9d42b-4725-4ef0-a7a8-d7aa707b3814"
        },
        "item": {
          "id": "640846f6-6a95-45df-a501-72e362cacea2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fa192280-f91c-4c6d-9c6c-00d92ec81fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15eb012-aed1-4ea6-83c9-c80b85a3444b",
        "cursor": {
          "ref": "3ce11fb8-b78c-4704-9a88-dce078f51f0d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "03188d5b-f701-4851-9be3-60ec03ca70d4"
        },
        "item": {
          "id": "f15eb012-aed1-4ea6-83c9-c80b85a3444b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "33770ac9-fcca-4f02-81ce-3abb9c691782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc75d014-d6b1-42a9-922a-f1448b6909ea",
        "cursor": {
          "ref": "1aa6caa3-e36c-48c3-ae07-591a0b54f9ea",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a8bec60a-f304-43ae-b20f-2767c6dd3d78"
        },
        "item": {
          "id": "bc75d014-d6b1-42a9-922a-f1448b6909ea",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d9634823-0ded-475a-a170-71f04d844e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b86326e-f105-44ba-9cfb-c1b536fe5a2e",
        "cursor": {
          "ref": "7a685501-610a-4f6b-9566-60fd0fd31ba5",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "24c077b9-de4b-45db-af4a-422333abdac2"
        },
        "item": {
          "id": "2b86326e-f105-44ba-9cfb-c1b536fe5a2e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "699be164-d998-4828-8d6e-568d60baeaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9404e5-f379-459f-9bf7-da695fa08bf9",
        "cursor": {
          "ref": "0ba29cd0-2b14-4f5a-ac36-ef467c2a3dc9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "21166db4-8a9e-490c-ac80-9f76ce96591c"
        },
        "item": {
          "id": "ae9404e5-f379-459f-9bf7-da695fa08bf9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5a250c6f-0404-4eca-babe-4258ec1e6cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c34bd9-6545-4e2b-a386-f340f9aaae1a",
        "cursor": {
          "ref": "d06939fb-b5f5-4780-93cc-51ae7c048790",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8171e3d3-c972-4e1d-b1ad-f5df3c70844c"
        },
        "item": {
          "id": "39c34bd9-6545-4e2b-a386-f340f9aaae1a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "37459e6a-ee96-4ed1-aea4-b8891b7656ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41da46d8-a5bc-46b7-aba3-0afe68c5d812",
        "cursor": {
          "ref": "3a395827-2ff1-4e03-a2ae-25bf6ea0a64d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ddae6bff-c52f-4551-be02-2e469b75cbe9"
        },
        "item": {
          "id": "41da46d8-a5bc-46b7-aba3-0afe68c5d812",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8eac9d35-2a7d-499c-87e3-c1d65966f6ae",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f7d893-366e-44f4-b413-de45ad1ff8bb",
        "cursor": {
          "ref": "947086de-414b-42a7-a9c5-4e77e7087ea7",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "805684c8-5bec-4661-8ad6-cce1f6f98e88"
        },
        "item": {
          "id": "69f7d893-366e-44f4-b413-de45ad1ff8bb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2e819f63-5ed6-4b26-aff5-52194fa24594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33826c53-2689-487a-a064-bd4a918be7da",
        "cursor": {
          "ref": "c4606954-4704-42c5-a0be-c44f841bc6ba",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "75a518f3-8ee0-4c60-a494-fae0dcc0a6b2"
        },
        "item": {
          "id": "33826c53-2689-487a-a064-bd4a918be7da",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0b98af1f-b216-4edf-ae82-730ea263dde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d234908-c39d-4b05-814f-109b58e9edea",
        "cursor": {
          "ref": "2d79b481-328a-4650-a36b-bdaede7ed1bc",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6ce56217-2872-450f-bda9-33eb1bd12af0"
        },
        "item": {
          "id": "7d234908-c39d-4b05-814f-109b58e9edea",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d485c466-f710-47a4-a5dc-d333934fc386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab365fb-4b5e-4f53-bfe9-eff833685547",
        "cursor": {
          "ref": "c2d5a946-1f71-4a44-beed-7d94ea934fd7",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dcf62e05-a02b-400b-b7cf-efe0ae08a3f6"
        },
        "item": {
          "id": "0ab365fb-4b5e-4f53-bfe9-eff833685547",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9d63a2da-a3dc-44bf-b443-15355f705028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16fce86-79af-4f24-872b-08f541d16321",
        "cursor": {
          "ref": "1cd4c37b-d6d0-4bc9-b409-ecfcbdcd5eb7",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ca70e71d-b7c7-47df-ab09-2f74674118e6"
        },
        "item": {
          "id": "a16fce86-79af-4f24-872b-08f541d16321",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f3905456-acf5-44b6-9db1-62ca709a2c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9302a9c5-29b8-4587-859f-664e8afe1c00",
        "cursor": {
          "ref": "27eff5e2-c059-412d-b289-842940b5e5cd",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d36a50d0-bcf3-469c-b8c8-90d8e4974adf"
        },
        "item": {
          "id": "9302a9c5-29b8-4587-859f-664e8afe1c00",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e02827d0-320d-4625-8cba-b43a4775bd61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db193ec1-47f4-4f88-8ca2-0fe3dadd57bd",
        "cursor": {
          "ref": "0d26c07b-0b35-4457-b6c1-be58b5a8efbf",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c51791ab-2666-469d-829d-579c9c67dac4"
        },
        "item": {
          "id": "db193ec1-47f4-4f88-8ca2-0fe3dadd57bd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "839a9641-f945-4dde-a2d2-5a9f9ec4b97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a066e7-6f4a-4284-9807-4686ac013eec",
        "cursor": {
          "ref": "ccaa089e-dd5f-46da-ae5f-114da9cfd858",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cd82a020-cc34-49b1-b6fa-f8262dca2a79"
        },
        "item": {
          "id": "63a066e7-6f4a-4284-9807-4686ac013eec",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "55500ffd-f49c-49ab-ac41-d336e4a9bf08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e8ef95-bfae-42b3-af69-bfe239fca519",
        "cursor": {
          "ref": "2efe9a9d-3a6e-4423-9d5f-5f80ef0a0784",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "77db8b9b-b0fe-4429-b07b-1aad9356d323"
        },
        "item": {
          "id": "49e8ef95-bfae-42b3-af69-bfe239fca519",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0c17fed8-6687-4d48-b631-cff3952728dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca705cc3-a4eb-494f-bbef-110a9602252b",
        "cursor": {
          "ref": "67cc0111-93d3-4f09-9352-784db8fcfc48",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d1248f35-36b6-47ae-82d0-f5905882db10"
        },
        "item": {
          "id": "ca705cc3-a4eb-494f-bbef-110a9602252b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "db3cea51-69f1-462a-b152-79364dabb3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173807ee-f3e0-450a-8836-71cc79813704",
        "cursor": {
          "ref": "6b6d3c78-c965-4a89-ba78-7a49fb3d00d5",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4caa28d6-3cbe-400f-95e0-2010911fd80a"
        },
        "item": {
          "id": "173807ee-f3e0-450a-8836-71cc79813704",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0f7d2e24-0391-4cb4-8add-9a4d1f06df32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0fbf8f-d615-48cb-9927-a58084d2dd1d",
        "cursor": {
          "ref": "d756c609-d56f-4ccc-8007-7dd8b2ef8619",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0c79825a-4645-457e-8ed7-eb6a89b910ce"
        },
        "item": {
          "id": "fd0fbf8f-d615-48cb-9927-a58084d2dd1d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "85184fd1-5383-48a9-8f21-f9602b6c4ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740c74b6-3521-4665-acce-b2ffbdf11fb1",
        "cursor": {
          "ref": "2ee7eca6-ef4f-48c5-b9dd-812097c2d2d7",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d3af2de7-8099-45d0-a2fe-9d1fd4557fc3"
        },
        "item": {
          "id": "740c74b6-3521-4665-acce-b2ffbdf11fb1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0acf1d8f-2bb1-4c23-98b2-ca2fee448f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7c0791-e7ce-4dbd-a0f8-eae13aab2899",
        "cursor": {
          "ref": "c9db6cef-1448-400d-8d63-3374ba3707e1",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9f9e2486-71d2-4054-963f-ec3e8a935ef0"
        },
        "item": {
          "id": "8c7c0791-e7ce-4dbd-a0f8-eae13aab2899",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d065852c-72af-45be-832d-c2dda0933ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea89a8d-b54e-4647-826e-83ca145ac87a",
        "cursor": {
          "ref": "d85838d5-4950-475a-abe3-0b448ceb71fb",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "eb923ca5-1819-47ce-941a-2859a9f8e6e5"
        },
        "item": {
          "id": "dea89a8d-b54e-4647-826e-83ca145ac87a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8aaa2a6a-6727-4269-a982-15943c75944e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca26c0e7-b369-4d5d-abd0-8e3580504ae7",
        "cursor": {
          "ref": "ce8194c8-bcbf-4a90-8f56-2ccb57d10de9",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f4d88de8-c526-43c4-92d4-80a7db4fa505"
        },
        "item": {
          "id": "ca26c0e7-b369-4d5d-abd0-8e3580504ae7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1ec05717-a1cd-4cdc-8509-d8c11d5a1fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5d7414-7cf6-442a-9990-c5e3a68301f8",
        "cursor": {
          "ref": "856e569e-5596-4c2f-ba53-2cc9a0891216",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "80530f3c-c0e7-4f19-97d8-d7f97a29f195"
        },
        "item": {
          "id": "8b5d7414-7cf6-442a-9990-c5e3a68301f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "910005f4-e78a-4034-ac8c-d38a5be5ffd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da23109-064b-4944-98dc-097b123a0c60",
        "cursor": {
          "ref": "4f4102bc-5091-4d68-93e3-64ec41214e02",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e0decfcc-3169-4fc4-bd51-4ddc8b3dcc0c"
        },
        "item": {
          "id": "0da23109-064b-4944-98dc-097b123a0c60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ef81fae0-ae77-48db-a94d-ea384c7e8a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b80d055-5b5f-4947-923b-05f9354a022f",
        "cursor": {
          "ref": "9c6d7bb4-9f8e-4699-8962-ae0424ecdd9e",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9d49fa69-50b8-4bb9-b65d-c548814abd6f"
        },
        "item": {
          "id": "5b80d055-5b5f-4947-923b-05f9354a022f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "612f9b93-2015-4903-852e-8b9348a3bb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76611d33-a634-475c-9329-0484825158bc",
        "cursor": {
          "ref": "7f2e70de-09b8-47d5-8da8-b5debd932c7b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3287642f-11fb-479c-8271-6dab0afb8582"
        },
        "item": {
          "id": "76611d33-a634-475c-9329-0484825158bc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2101e109-3293-4c75-84d4-9a0a6f9b0959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7559a24b-82f3-4dae-adfb-5961c7e2b7e9",
        "cursor": {
          "ref": "7cbbe86e-1e9b-4c4b-9491-24a0c67fcda3",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "57d4c878-75cc-4f7d-9b33-363067cdf244"
        },
        "item": {
          "id": "7559a24b-82f3-4dae-adfb-5961c7e2b7e9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "44f4e159-2980-4219-8e7a-54398d9f3abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77622dc4-ea19-42d8-a58e-51c0fa47b243",
        "cursor": {
          "ref": "1a07f666-f090-42fe-a947-5c5428072755",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e77fe02c-bf30-43ba-8579-13bc3c7508b5"
        },
        "item": {
          "id": "77622dc4-ea19-42d8-a58e-51c0fa47b243",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c73493b9-94ba-4835-88b8-59d7b61690ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15c7588-1454-4585-babc-b0f836d12080",
        "cursor": {
          "ref": "ea374ca6-3382-47b4-9833-a4815ae0fbcb",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2c5e0b6f-0dd0-4160-b5bc-a196438ef0fc"
        },
        "item": {
          "id": "b15c7588-1454-4585-babc-b0f836d12080",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "876d0da2-e0a1-4bff-8e93-456551a19aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ac0c88-ba20-4dea-97b9-c2b0fd0f4417",
        "cursor": {
          "ref": "bfafbb05-fdb9-4f6e-8ea8-ccc1d1ea4b58",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3b630ef3-6446-4c46-acfd-e466a6b21106"
        },
        "item": {
          "id": "33ac0c88-ba20-4dea-97b9-c2b0fd0f4417",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1e4194ed-1985-4bad-aada-422ac644a9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603984b7-3b43-4249-adfa-2f505a31f3e5",
        "cursor": {
          "ref": "69ebeafc-e587-4cd8-b70a-aa1d5ea05416",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d6bffec3-5ced-4377-b638-38c11800c844"
        },
        "item": {
          "id": "603984b7-3b43-4249-adfa-2f505a31f3e5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2024e3f6-c41b-4ef5-9f0e-c4e8a662de20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48066b08-fe1e-47a1-adb4-ba0da9d47a28",
        "cursor": {
          "ref": "ed42bd2d-7748-4c29-8565-46277f85dbaf",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5904ca08-6d45-47b5-9462-c4206dc7b15c"
        },
        "item": {
          "id": "48066b08-fe1e-47a1-adb4-ba0da9d47a28",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1b157dc9-7386-428c-807d-04d90f9085ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1982b31-ca59-4833-b526-b2193c0b4ffc",
        "cursor": {
          "ref": "6c1e69a9-346d-4049-a5a5-2ae43adefc6b",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "68ae57c5-31ae-4f91-81ca-9fa93802e49b"
        },
        "item": {
          "id": "f1982b31-ca59-4833-b526-b2193c0b4ffc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c3630d95-9144-4364-ba88-5f2265eb3dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a99b66a-5448-4f49-8ae4-02bdbba33796",
        "cursor": {
          "ref": "39a61b4f-9565-40c9-8e39-44b98fa901dd",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "620aedf1-1f5a-42d5-b66b-b78a3498ed0c"
        },
        "item": {
          "id": "4a99b66a-5448-4f49-8ae4-02bdbba33796",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "087599d6-f42e-449a-b79b-251483773a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac9b3b4-fee8-47bb-82d3-8e655dd32961",
        "cursor": {
          "ref": "391f61ba-c01d-4999-ac31-7bc6397217f3",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8f74f410-68ee-486e-b832-9457c9669c86"
        },
        "item": {
          "id": "bac9b3b4-fee8-47bb-82d3-8e655dd32961",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "86f496d9-7da0-4690-a36f-f9177d29a7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f6d15a-0d4d-4bb8-bb1d-f54a58e4401c",
        "cursor": {
          "ref": "ad1ba51f-1026-487e-b0bf-a7690a7a15df",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "411e458a-13af-463a-8c48-1b8581ce3dae"
        },
        "item": {
          "id": "d5f6d15a-0d4d-4bb8-bb1d-f54a58e4401c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5b689b60-6948-4f08-9060-363b7042c934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c58e453-eaa2-4452-ad3a-346a5901e01b",
        "cursor": {
          "ref": "9261fdb5-5be9-4424-ac6e-5027dacd14ca",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8947f690-43ca-4c3f-9950-810462ed8bba"
        },
        "item": {
          "id": "6c58e453-eaa2-4452-ad3a-346a5901e01b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bfd717b9-5b51-4fbf-98b5-66a0788e6ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc42ddf-2166-4dec-80f2-f4e824cd7dfd",
        "cursor": {
          "ref": "b7bd7d91-651f-43a0-9204-e8a94ebd7c80",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "664819a0-7dde-4dfe-8885-7a094ed4140e"
        },
        "item": {
          "id": "2fc42ddf-2166-4dec-80f2-f4e824cd7dfd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f02a4008-e6d2-401d-9819-3c61067516ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e674ef2-66eb-4351-b435-7a9ac5b0b5a5",
        "cursor": {
          "ref": "2edc0974-c373-4b06-8705-7c609ef2ef9c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "781795b9-98a7-4f7b-9c6d-592c5dd324d0"
        },
        "item": {
          "id": "6e674ef2-66eb-4351-b435-7a9ac5b0b5a5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4089f867-4a6f-4632-8884-382f2b5a9ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea6d096-83af-4e93-9397-07c60fee1a61",
        "cursor": {
          "ref": "60c5dea2-2b1f-4c7d-bdb3-606eb0a2fda8",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1656733d-169b-4463-aa4b-e34127f32cb6"
        },
        "item": {
          "id": "7ea6d096-83af-4e93-9397-07c60fee1a61",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9bc3564c-3ca7-4d71-b6c5-fbb490062c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60b684e-e8ba-412b-b929-bb01376a0b71",
        "cursor": {
          "ref": "86e23735-f466-47e5-965c-b8d81fa7e5b3",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a0c5daba-df4d-46ef-86e4-1e9a552a97b7"
        },
        "item": {
          "id": "c60b684e-e8ba-412b-b929-bb01376a0b71",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3dce897b-4438-432d-a3ba-d3698780a7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d5bb7a-954d-4494-bb71-cf235d048591",
        "cursor": {
          "ref": "864cd752-21b0-4337-8ff8-6e9fb75b9b27",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b5f67f06-44b5-4374-bbc8-473336321bfd"
        },
        "item": {
          "id": "f1d5bb7a-954d-4494-bb71-cf235d048591",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "939c9b3b-3f02-4048-8c8b-34dbacd109e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dfe4f5-4276-4543-8657-b54b52c750fa",
        "cursor": {
          "ref": "0b354825-7de3-4cb8-8b68-72207585ea45",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "556c180e-63c4-40c6-b6ec-29d6c890ccd6"
        },
        "item": {
          "id": "14dfe4f5-4276-4543-8657-b54b52c750fa",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4bfb7b49-18a2-4686-b2f3-0705ab40847b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adad98e-866c-4c53-83fe-4066c23d0a9a",
        "cursor": {
          "ref": "536e8841-f21b-4d9e-b9e6-ca20c46009ed",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "91e06ee0-cb08-473b-b575-09f30ee2913c"
        },
        "item": {
          "id": "3adad98e-866c-4c53-83fe-4066c23d0a9a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fee9022a-3e11-4413-96ce-2c02f566a35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528e0b96-e55b-4cc2-ac1e-95edc180fc89",
        "cursor": {
          "ref": "bc3128c5-4835-467c-b76b-c70d55f063a1",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f0f7ec76-7653-4da3-99fc-ac454e309c1f"
        },
        "item": {
          "id": "528e0b96-e55b-4cc2-ac1e-95edc180fc89",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "011b6a56-5292-487b-9a97-dfc3ba85412d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fb8d50-9e90-46ad-94d3-8f3eae5062c5",
        "cursor": {
          "ref": "494f4fa8-ec34-452a-a569-839a7e8cabf1",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "edb6057e-f6c7-46fe-aa2e-fbb013d2563e"
        },
        "item": {
          "id": "32fb8d50-9e90-46ad-94d3-8f3eae5062c5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d4b45b21-84f2-404d-9f87-913b5176ed3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d62de93-bb6d-4c9f-8d3c-cc0e28af9537",
        "cursor": {
          "ref": "8081766f-364f-4e68-8f14-4e7c8fff54e3",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "468d7681-bb65-497a-ba7f-b67c64c97d3d"
        },
        "item": {
          "id": "1d62de93-bb6d-4c9f-8d3c-cc0e28af9537",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "445a782d-abb5-49b3-890a-4911afdb79b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d532fb-27fe-4961-8d02-c52462fff3b5",
        "cursor": {
          "ref": "d4c00e2f-1d39-4e14-b2cd-9abe04af096d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e688645c-ebe4-4956-b96b-52a5799ddb15"
        },
        "item": {
          "id": "00d532fb-27fe-4961-8d02-c52462fff3b5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d433a823-b4bf-4392-ba62-ed46af66d190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599ed247-2642-42ff-9b80-644c3788a9c5",
        "cursor": {
          "ref": "c5f66922-f029-48e9-b17c-67e6721e506f",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fade6f8c-3cfe-4b4d-a701-bcf62a11a129"
        },
        "item": {
          "id": "599ed247-2642-42ff-9b80-644c3788a9c5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8957a12f-e583-4714-858e-ab8ce0b5046b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76efd43-98c3-4223-9624-c61a27c17ec5",
        "cursor": {
          "ref": "828d12d0-5157-4bfb-bed4-4ed6ea7de128",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "933908c6-6ec3-4ded-98f0-74801b879bb6"
        },
        "item": {
          "id": "d76efd43-98c3-4223-9624-c61a27c17ec5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2e31b9c1-ac24-40f2-8f29-d50026560862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a31bc5-0950-4916-ab85-a810f6731d4e",
        "cursor": {
          "ref": "56b9f3da-8b65-46fd-8be1-ac45fa4921a8",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "48f3f8e4-3ea4-4b51-855b-c3a90f6ad8b8"
        },
        "item": {
          "id": "11a31bc5-0950-4916-ab85-a810f6731d4e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "776d7afa-fe13-4998-9e73-e0d681fab9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fda1c08-cb74-4940-b8cf-b69805135be7",
        "cursor": {
          "ref": "b3f63af6-a6c5-424f-bf85-917cbb87929d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e0244cfe-c598-456c-8df6-cd053bd8e31e"
        },
        "item": {
          "id": "1fda1c08-cb74-4940-b8cf-b69805135be7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c1a5c73b-5dc1-4da9-a1c1-f3ebcee42c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d07f57-0c91-451a-823a-83dce05f7cac",
        "cursor": {
          "ref": "9bc68d21-8ea1-4e89-8503-21608ebb6a64",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "db614ae7-cef6-4f7a-accc-9c42186bc345"
        },
        "item": {
          "id": "45d07f57-0c91-451a-823a-83dce05f7cac",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cae10f7d-9ea3-4c6b-8ac9-7d3a177dae7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f63a27a-cee9-43a2-a2c7-794a4ff0b6d7",
        "cursor": {
          "ref": "b512b8a9-0c8c-4490-83e1-1deef3997e18",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1dc6f035-5533-470d-b9e5-188b94cffe92"
        },
        "item": {
          "id": "7f63a27a-cee9-43a2-a2c7-794a4ff0b6d7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eea53d83-b7fe-463c-9b12-47335cd61677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ede196-f599-4b98-88d9-560d7c1049ca",
        "cursor": {
          "ref": "bf7557a2-f570-48e0-8e83-e941d9e8158d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9de01fea-ea09-465c-a56b-844a654018b4"
        },
        "item": {
          "id": "45ede196-f599-4b98-88d9-560d7c1049ca",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fba0d806-97ac-49ae-943a-bb8ac6134750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73440db-a9bb-4144-a3ab-a8fb0d70790a",
        "cursor": {
          "ref": "3376a874-5423-4e26-8e96-a4b78233054e",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a201d7e0-46b3-41da-a69d-62d32618a5c8"
        },
        "item": {
          "id": "d73440db-a9bb-4144-a3ab-a8fb0d70790a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6322b125-1bb5-418e-af19-dfbdd854fd82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a528b21-7705-4015-9e91-b1501d967457",
        "cursor": {
          "ref": "b66bc99e-3769-49fb-8a25-0fbd2d4fa4b8",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5e9fd8e6-2042-4a8e-8102-c52e5edaac5a"
        },
        "item": {
          "id": "2a528b21-7705-4015-9e91-b1501d967457",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a77638d2-5287-4374-9824-4c6498f8367c",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b6e8a4-7484-4c5c-bbc6-2632332c3594",
        "cursor": {
          "ref": "4d4ca4a4-0311-4022-9541-88cc0110521c",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9447dbd5-c8b8-49b4-9155-afe49f5d2d12"
        },
        "item": {
          "id": "18b6e8a4-7484-4c5c-bbc6-2632332c3594",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "00f5cbc5-aadd-448b-8329-141c2898e285",
          "status": "Created",
          "code": 201,
          "responseTime": 247,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "97383f20-eaae-4c4c-84f0-b54405bf78de",
        "cursor": {
          "ref": "838f7a68-7121-4e48-861c-b3ac68f28e3b",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f8898118-1a12-4c72-b594-9be4cae364c2"
        },
        "item": {
          "id": "97383f20-eaae-4c4c-84f0-b54405bf78de",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bd0b96c9-81f7-47ec-83d1-73ce006aeb47",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e51e01-b0db-4b5f-9960-7ab833fd2390",
        "cursor": {
          "ref": "1d682f67-c3ba-455b-b549-5655adc14060",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6ab27a51-5aaa-4e0c-a553-d5752ebb65b8"
        },
        "item": {
          "id": "58e51e01-b0db-4b5f-9960-7ab833fd2390",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4fa31f18-b0a1-4ba6-b3e0-6e4c9f0d894d",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2ec69c-9f3a-4e06-a2bb-09c4fde6d724",
        "cursor": {
          "ref": "6deab5db-4523-4a3a-8cba-8f74333f58ba",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fea3e5d0-f9a3-4978-bba5-eb5c00b836e9"
        },
        "item": {
          "id": "ab2ec69c-9f3a-4e06-a2bb-09c4fde6d724",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "764a95b5-fa44-484a-8ab9-02187caffbdb",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfd1316-2cf3-4901-b563-c8f77b815e24",
        "cursor": {
          "ref": "34befff1-e71e-4006-bdd6-69ac433c4fb7",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "63d5aafe-7bf2-4e0b-9eb3-922e5591c959"
        },
        "item": {
          "id": "4bfd1316-2cf3-4901-b563-c8f77b815e24",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "77302c77-5e2c-4947-9e7e-29979034d99b",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a4545f-0960-45b9-b681-eb70a5e494df",
        "cursor": {
          "ref": "957fdc0d-6eb4-470f-9257-7e15db678918",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "19c67b71-f20e-40f2-96cc-beab1b3149cd"
        },
        "item": {
          "id": "44a4545f-0960-45b9-b681-eb70a5e494df",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dce6d1ff-746e-4494-bef5-7b39b1c49af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05258dab-c678-463e-bc90-eb7553dfb61b",
        "cursor": {
          "ref": "79064428-01c1-48e0-b84c-569814357166",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "538afc92-69e2-4d42-85cb-7a310ece627a"
        },
        "item": {
          "id": "05258dab-c678-463e-bc90-eb7553dfb61b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "48b6b6a2-18c7-4ac1-a30b-79ffb6d02595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85f266e-e79f-4052-a562-69937fc84a6a",
        "cursor": {
          "ref": "7bea6082-c9c3-4abc-ba86-e97503e2505b",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a3d10481-02c5-443c-aa92-22d7adf33e9f"
        },
        "item": {
          "id": "e85f266e-e79f-4052-a562-69937fc84a6a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "80ab3066-a4d5-4114-a64e-4a05a173a763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1067d539-058b-4e41-aab2-f7a5c06a998f",
        "cursor": {
          "ref": "31f8731f-1082-4591-89c2-699c940f952a",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f1e3d776-d8e3-4282-9cb1-5b15c12f04ec"
        },
        "item": {
          "id": "1067d539-058b-4e41-aab2-f7a5c06a998f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "80f6c772-faf4-4ee7-a162-62daa8f505de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb27ec05-0aed-4d1d-97fb-f8aeceb1ebfe",
        "cursor": {
          "ref": "ccb6f604-3d11-4273-84cb-3c8ea25c0986",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a06e3332-f3d0-4c64-b524-b25570bc0650"
        },
        "item": {
          "id": "cb27ec05-0aed-4d1d-97fb-f8aeceb1ebfe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "441c942e-587f-4922-a5f5-44720ef91a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d8037b-a16f-42bb-a432-d41b3e1639ba",
        "cursor": {
          "ref": "44deee9f-3a92-4f43-b662-154100c8a6c0",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7f75708b-ad89-41d1-9bb1-154887833759"
        },
        "item": {
          "id": "13d8037b-a16f-42bb-a432-d41b3e1639ba",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a15cc895-6bd7-470c-ad44-b365b5242dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21402c37-4338-4693-ab69-4703868b8a24",
        "cursor": {
          "ref": "90b90f47-ae4f-48ea-b2fd-f497dc1f2058",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9368b8ce-bbdc-422b-9b09-b91b16364a60"
        },
        "item": {
          "id": "21402c37-4338-4693-ab69-4703868b8a24",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5424a5e0-18a2-4233-b337-b9c612134a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0a5be4-9734-4929-9ecd-d7585daba9ec",
        "cursor": {
          "ref": "0e2935ec-c61d-4d73-88b1-3a76ad8c1b07",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "234bd4df-574f-4b2a-8433-0e68aa917b99"
        },
        "item": {
          "id": "6e0a5be4-9734-4929-9ecd-d7585daba9ec",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "337edd15-8603-4421-bd5e-184f57c8644b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd38dc4-4ca1-4ba4-a2c3-239126dcfc47",
        "cursor": {
          "ref": "920f93fd-0d27-459e-8a2d-583ef05e501a",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f818c333-0b3e-4427-8412-5b5b52826183"
        },
        "item": {
          "id": "8cd38dc4-4ca1-4ba4-a2c3-239126dcfc47",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "119ff7b3-8247-4848-9aac-87cf90412df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8730af-9429-4a1f-a825-108c695c31d0",
        "cursor": {
          "ref": "2decef92-a971-4bff-ad00-8976e8e374da",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "33eb5bd0-9879-4d91-8ff3-23122c523664"
        },
        "item": {
          "id": "5e8730af-9429-4a1f-a825-108c695c31d0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "179497b5-3754-4928-bf79-8a0c3d09cffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c818222-270c-4518-989b-d4ecb6841f94",
        "cursor": {
          "ref": "74d105f7-fe95-426a-bf5f-4f3ffefbbe1c",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "534e6edf-d987-4286-bc94-0e18ffc70e30"
        },
        "item": {
          "id": "6c818222-270c-4518-989b-d4ecb6841f94",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "80a76069-1338-4407-b8c0-a9e9a3922534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887e6fb0-1ec9-4ffa-bd71-735d5c921600",
        "cursor": {
          "ref": "3d6d6bbf-510d-44ac-9150-47df7c491d70",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "402b7965-e7e3-49c4-ab9d-15964cd8de80"
        },
        "item": {
          "id": "887e6fb0-1ec9-4ffa-bd71-735d5c921600",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "de837949-5b6c-4384-9954-fe97efa65172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe0d083-b583-4b13-9512-14eb582325ad",
        "cursor": {
          "ref": "73e1f969-1f8a-402d-bea3-62dc3bc5afb9",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b5ae31ee-3b3b-44d2-8b82-204363901de8"
        },
        "item": {
          "id": "0fe0d083-b583-4b13-9512-14eb582325ad",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "94da8b9e-99f8-4467-9ac8-df3ee13792c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdc8d19-380d-4718-99c8-13bf7c6bdb86",
        "cursor": {
          "ref": "27dda142-9256-4302-9043-d0cc1d2cb7c4",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "79ad49ac-0d5d-4d5c-8fd4-79d161b5e8ca"
        },
        "item": {
          "id": "ffdc8d19-380d-4718-99c8-13bf7c6bdb86",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2529ae07-2087-4a07-a38a-df5c1cf92d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18d656c-78ba-49a9-b055-aa39056f954b",
        "cursor": {
          "ref": "b4b4dcb9-c675-460e-9b4b-32e996dd7989",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a0b211bb-4cc1-460b-be44-225cc9517e88"
        },
        "item": {
          "id": "e18d656c-78ba-49a9-b055-aa39056f954b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "30ed23cf-4ec1-471b-b2dc-63eac7884be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f88760d-7d32-47d3-a70c-2b6d47d2a799",
        "cursor": {
          "ref": "eb549139-2221-4254-9442-3f9ea9bac093",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "048901f2-ab49-4c30-bf10-0facb8897c75"
        },
        "item": {
          "id": "3f88760d-7d32-47d3-a70c-2b6d47d2a799",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "da4c2e3a-389f-4bf1-a7f9-a9bd2a683b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48c7668-c268-4abe-81e5-8e2a7a21529a",
        "cursor": {
          "ref": "c28e05aa-dc80-4919-8c2e-464fa72c116a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3c009a62-da57-443c-a8eb-464bf5579c86"
        },
        "item": {
          "id": "a48c7668-c268-4abe-81e5-8e2a7a21529a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4685c325-273e-478d-8c01-082684189cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b168a0-9900-4163-8758-60bdfbbd76a4",
        "cursor": {
          "ref": "1df4fa9a-25be-407c-9bdf-4fefc329a450",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8aabce74-3677-468e-9608-442c75a8ca54"
        },
        "item": {
          "id": "f5b168a0-9900-4163-8758-60bdfbbd76a4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "84652d0d-78ed-412d-8b4c-ff567df7aadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4442a9-9ff2-4e25-b610-9d96bd0b4103",
        "cursor": {
          "ref": "5c56144f-6e3c-478e-8966-18c8eaa98f6a",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "87ecbedc-65f7-4c23-baa6-6aaec02413a7"
        },
        "item": {
          "id": "5d4442a9-9ff2-4e25-b610-9d96bd0b4103",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "27050ea7-f7c9-4944-b47f-c77870ab9280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970bc7f2-dd6a-4fcf-8461-f346542183cc",
        "cursor": {
          "ref": "266289e6-1e50-4ea5-bfdb-d91738706d82",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4fe5dca4-6950-4f91-859f-d177f08fffa2"
        },
        "item": {
          "id": "970bc7f2-dd6a-4fcf-8461-f346542183cc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fe4d9b45-7c4c-4951-9c22-288437211d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddd7ee4-41ff-4b8c-9b9a-585a243d5d4e",
        "cursor": {
          "ref": "1d91493e-9235-454d-bb8d-cf11da01e6c1",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "541d32fa-e691-4e62-b303-61aa9c38b6b2"
        },
        "item": {
          "id": "3ddd7ee4-41ff-4b8c-9b9a-585a243d5d4e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9cf93354-85e3-4971-b509-58248d96fb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a853ff33-9ac3-48eb-bc51-a3f200b86e80",
        "cursor": {
          "ref": "9dbca810-5bf3-4080-a2b1-a74bdd780fc2",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ee103371-2333-4f27-b442-dc70e8b57ad8"
        },
        "item": {
          "id": "a853ff33-9ac3-48eb-bc51-a3f200b86e80",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a5d671aa-a40b-41ca-906e-9d3ef1db9cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39c2348-2cc6-47e9-ad3c-58cdf51db770",
        "cursor": {
          "ref": "8a4e1ded-b1f2-4f88-8d99-2c03e99a7640",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "37b50d26-c6db-4187-852f-e760075e6232"
        },
        "item": {
          "id": "d39c2348-2cc6-47e9-ad3c-58cdf51db770",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c4601ca5-5ebb-4b30-b3f0-1c9f8f856677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1efc7ec-7df5-4dd1-880f-f72e2b381958",
        "cursor": {
          "ref": "75288c0e-5895-4f7b-b5a8-47303850e5c5",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "85d84159-ca37-4e9f-b60c-d3171f081c0e"
        },
        "item": {
          "id": "a1efc7ec-7df5-4dd1-880f-f72e2b381958",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ce78ed1e-ac12-4721-a518-8b74031182c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41f0aed-0d1a-4b6b-b993-38427b58bcab",
        "cursor": {
          "ref": "fbd8a1d2-dc07-46f7-a1c7-4e08809d6202",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5d969f59-6a9e-4fdd-b4f5-bddf308c4b15"
        },
        "item": {
          "id": "a41f0aed-0d1a-4b6b-b993-38427b58bcab",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "03013ee2-d064-45c7-9667-30a279bf6598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b771b3-1e71-494c-8bd1-42ed99abc683",
        "cursor": {
          "ref": "01d419b9-a21f-4635-8a1e-cb9cdf51d07c",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1b17c96b-b249-4dce-8789-039280c67565"
        },
        "item": {
          "id": "38b771b3-1e71-494c-8bd1-42ed99abc683",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b6399c76-8f13-4797-899c-3bde99d51778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642f4771-d9a5-4b2c-ac7c-851c298fb6e8",
        "cursor": {
          "ref": "10f27579-8272-4e07-b12b-5d7a3b036a3f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bc655b0a-2227-46af-9ed3-67b81b6d0aaf"
        },
        "item": {
          "id": "642f4771-d9a5-4b2c-ac7c-851c298fb6e8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e4bfb3ac-dd52-49d3-8a73-f67d797e35a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60eead1-eac7-48bb-9be6-6a1baf243a56",
        "cursor": {
          "ref": "17cccdcd-1373-4156-ba8d-906e905ab53e",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bbe81558-46ae-4397-8f8c-6b2edcadf698"
        },
        "item": {
          "id": "b60eead1-eac7-48bb-9be6-6a1baf243a56",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cd3a06f3-56cb-4d99-be56-b51679710514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4989b6b1-f17f-48c8-8884-36acc2a64f40",
        "cursor": {
          "ref": "6d140185-9951-4c4b-b109-ce0a9e3dccff",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "14a1ecbb-a940-49b1-951a-6b6af6c46633"
        },
        "item": {
          "id": "4989b6b1-f17f-48c8-8884-36acc2a64f40",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0dd38045-1e13-494f-a7e8-f2fb48537d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ead7d6f-74ca-4193-926a-cf2183fa1691",
        "cursor": {
          "ref": "7163e395-49dd-4c83-ba9e-caedc7698c0e",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0e674699-85fc-4362-b66e-9e5cfd736ef4"
        },
        "item": {
          "id": "2ead7d6f-74ca-4193-926a-cf2183fa1691",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0d43370f-ed42-49fb-8f73-7803c01afe18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986b7812-365a-450f-b350-008e3caaa3d0",
        "cursor": {
          "ref": "0efe67ef-4214-4f03-8c3c-287a28a1ad40",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d5666672-def5-44b0-b91b-65945931fabf"
        },
        "item": {
          "id": "986b7812-365a-450f-b350-008e3caaa3d0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "948e038a-f015-4e5e-852d-2a834330e725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c290b888-187c-46e1-8e03-d4456d8de8a4",
        "cursor": {
          "ref": "83381bd7-cb08-4218-9d91-d6cd58bfa730",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ce60cc21-8f49-4276-b925-975ded36b4e2"
        },
        "item": {
          "id": "c290b888-187c-46e1-8e03-d4456d8de8a4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1fbc8a9a-d474-45d3-bece-e02aa73a4b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a36e732-f827-4319-81d0-1edffcdeda5a",
        "cursor": {
          "ref": "2661f306-d9b4-466e-9c60-a1b1a169ecf3",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e91e0211-65de-44e2-8b67-3fbf50a40860"
        },
        "item": {
          "id": "8a36e732-f827-4319-81d0-1edffcdeda5a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2f2a20b2-502a-41db-98f2-f22c9be6c171",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7816d758-30ba-4d5a-a274-0e0d3cbbbcf9",
        "cursor": {
          "ref": "62ad5f58-8c7e-483e-99a9-c65382b0eba9",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6621ff36-309a-4312-8795-60cd767670c3"
        },
        "item": {
          "id": "7816d758-30ba-4d5a-a274-0e0d3cbbbcf9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "550eafdf-e5f4-4e74-822d-b04facada795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a88f27-59ab-408a-a0b8-45b8a4372add",
        "cursor": {
          "ref": "bf3bf4b4-dced-40eb-a4a3-d689fd377c55",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7a904044-ed18-4b19-94e8-476e7f28a471"
        },
        "item": {
          "id": "d2a88f27-59ab-408a-a0b8-45b8a4372add",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ced8c236-456e-4a38-80b2-fc73020bb84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6bd5c7-9a8e-41d9-a536-0c261ef97c20",
        "cursor": {
          "ref": "9bec2057-4938-4a9b-b344-a3477f3f5797",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7e5cb350-6845-4aa1-bf5c-7fe64eb51385"
        },
        "item": {
          "id": "ca6bd5c7-9a8e-41d9-a536-0c261ef97c20",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1b34403f-0626-42af-8b16-4599f1d1f66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737be00e-1c6b-4e40-9194-8120d4806ac3",
        "cursor": {
          "ref": "49f1022c-b4a2-43e3-b17c-66c71f51f01c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "52433ef0-200a-4df9-a8ea-ea8cba3f309f"
        },
        "item": {
          "id": "737be00e-1c6b-4e40-9194-8120d4806ac3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f7fd589c-b0a6-4c1e-b22a-39da6f4fe3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0b77be-b188-4274-b3ce-4a7579b5a106",
        "cursor": {
          "ref": "72a9f9c5-a503-48b8-84b1-a202f68a7fac",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e2d6ee75-e51f-4fd8-bb51-ef869cc0900b"
        },
        "item": {
          "id": "7f0b77be-b188-4274-b3ce-4a7579b5a106",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1a38a69e-f131-494d-9675-aa4b07f9ab3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b2c2a4-545d-4d76-97cd-a548fe2dd457",
        "cursor": {
          "ref": "ba6e2a9a-3f78-49c4-b32e-2caa959c9d60",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1ee6253f-39a1-4c01-bd20-089f0420256d"
        },
        "item": {
          "id": "69b2c2a4-545d-4d76-97cd-a548fe2dd457",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f0f648e5-2b28-4c92-bba1-5237e2f416b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfae195e-b144-4d79-b3b8-87099f3615d2",
        "cursor": {
          "ref": "269d72dd-ef31-4cf2-9138-9a2e4702ebd3",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "697474be-8194-4e5f-baca-4f43d231c2dd"
        },
        "item": {
          "id": "cfae195e-b144-4d79-b3b8-87099f3615d2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "43516764-2c7c-4828-a1b4-8ab6f9f989b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cc7dbd-a06f-4108-8638-339d12d8ec1d",
        "cursor": {
          "ref": "baa7f7d4-44c1-4ebc-be17-569a095fbf65",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e1834742-1276-4e4c-bc7d-b4bd359b3c35"
        },
        "item": {
          "id": "45cc7dbd-a06f-4108-8638-339d12d8ec1d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a75cc818-960b-4e7b-9841-2debc0049c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b274eb8-f6dc-4f1a-b673-1252173a8442",
        "cursor": {
          "ref": "8935f6a8-8e32-46cb-a815-0d9ab977ee08",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d377b696-3dc7-4132-9530-cf5abb29ff10"
        },
        "item": {
          "id": "0b274eb8-f6dc-4f1a-b673-1252173a8442",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "66883a6f-367c-4623-867e-27deae0c26b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983291ad-d8b1-4b26-9867-cdded3c1659c",
        "cursor": {
          "ref": "a33abac3-526f-4910-8314-9b5d1ca439e9",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "74b213bc-8abd-440f-a9b4-f04db153972b"
        },
        "item": {
          "id": "983291ad-d8b1-4b26-9867-cdded3c1659c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "babe6a20-1216-4a4d-b464-d97d512637ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575212b2-22b4-44d0-9076-0f3965aceadf",
        "cursor": {
          "ref": "8dfeb3d5-0429-4faf-ac64-b352b5d18241",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "98b02cf8-c826-40bb-8d14-36d24f5d8672"
        },
        "item": {
          "id": "575212b2-22b4-44d0-9076-0f3965aceadf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "88ef9871-7227-477e-8b04-22065690f6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7c2ff5-11be-424e-abc0-5135b15a5534",
        "cursor": {
          "ref": "a1243bd3-37bc-46a5-9728-78948294da78",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6cd789e3-d914-4abb-997e-a43dcc5ff3e0"
        },
        "item": {
          "id": "1c7c2ff5-11be-424e-abc0-5135b15a5534",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "41e70d83-8429-4f55-8728-cb8e315bc899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8c29e6-c0eb-4e30-8356-5a9adb8aa08d",
        "cursor": {
          "ref": "201c95e5-a94b-4da2-aadb-b9709785f21e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b6bdf3a7-d21f-433c-a230-aaebb1c33eef"
        },
        "item": {
          "id": "9c8c29e6-c0eb-4e30-8356-5a9adb8aa08d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "95f8ed1b-8282-4913-b5cf-c6bc4b2c905c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d043b1f7-eb27-4d31-8494-261f22425d56",
        "cursor": {
          "ref": "8cfb4da4-1367-4eed-9380-4096c27f24bf",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "18e7aa77-69de-4473-b6db-cabcd44b741c"
        },
        "item": {
          "id": "d043b1f7-eb27-4d31-8494-261f22425d56",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e776394f-b0ab-4a34-b53c-43ca27fd62a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04256ddc-ad29-446e-adf3-209fd194e237",
        "cursor": {
          "ref": "9bb6fd77-3236-4267-bec2-22c1180a1975",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9760166d-978d-4714-bc2f-652df310f699"
        },
        "item": {
          "id": "04256ddc-ad29-446e-adf3-209fd194e237",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ac96ceef-581d-41f7-9cf5-2e084468f27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc258871-1981-4dbb-85d6-bb96ec6c6004",
        "cursor": {
          "ref": "a4b76274-c93d-451a-90e9-eaa7f3eb0741",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e0865d3f-a3d0-4f13-95a8-29183710b9fd"
        },
        "item": {
          "id": "bc258871-1981-4dbb-85d6-bb96ec6c6004",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "85d0f687-1936-4d44-b204-2636372adab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a3c020-eac6-4d1a-a4ae-5992601bf1a4",
        "cursor": {
          "ref": "3b15d6e8-fda3-44bd-ab68-94bc6633e9f5",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "553d7c62-23d2-4ce8-9117-4000b029c545"
        },
        "item": {
          "id": "84a3c020-eac6-4d1a-a4ae-5992601bf1a4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "741b9336-d83e-4fbc-8e52-ef706662a674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f8caf3-ee55-4ae1-b573-3d46cab7a9c3",
        "cursor": {
          "ref": "23682310-32b1-432b-b63b-b3907ea14e0d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e4c28431-bf4a-4906-bb9a-300bad4c142a"
        },
        "item": {
          "id": "16f8caf3-ee55-4ae1-b573-3d46cab7a9c3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0dc0f70e-de6e-4d92-b314-830b7be31634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a883e74f-f0e7-4601-8f7a-47ad70c904e3",
        "cursor": {
          "ref": "a79592df-5522-4376-acb7-4678619bb691",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3af835ad-268e-4a36-a4ce-f4b575ff29de"
        },
        "item": {
          "id": "a883e74f-f0e7-4601-8f7a-47ad70c904e3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f813b2ce-46bc-445e-93cf-8d715a51ee61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c78baf-9e61-4334-9bcf-ac2ab2d8f018",
        "cursor": {
          "ref": "d18895e6-71d6-4b92-a819-2ee30f1d6c0a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e96ff878-518b-4406-876b-dd2bcb53bba9"
        },
        "item": {
          "id": "33c78baf-9e61-4334-9bcf-ac2ab2d8f018",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7651dcc3-5ea0-4354-9dd1-897eacaf322f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fae37d-c8b3-4067-b284-8d79d91b855e",
        "cursor": {
          "ref": "45d57f3c-07b0-4d48-8dd3-4a7825fd1fd0",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "124de4eb-cc4b-4625-bb24-55b9d474b907"
        },
        "item": {
          "id": "67fae37d-c8b3-4067-b284-8d79d91b855e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "34ba33b0-33ab-47f7-bea1-42799ab3746c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884c1693-7234-4bb4-894a-981139e3c557",
        "cursor": {
          "ref": "420099c3-0948-4ea9-a844-06a3df894bcb",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9e768c4f-308d-40af-a120-ad2e3f861d52"
        },
        "item": {
          "id": "884c1693-7234-4bb4-894a-981139e3c557",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7e518cf0-a1e9-4925-8bad-5b4b38d7bc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcaa5896-8c8b-43c9-b02d-522e072c29b0",
        "cursor": {
          "ref": "a908343b-e823-44e5-9e0f-d0376a57c24c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bbf13ed7-6fa0-434a-a41f-6545eb725086"
        },
        "item": {
          "id": "dcaa5896-8c8b-43c9-b02d-522e072c29b0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a62967af-afad-4f76-bcae-dbef1ca8f56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5ef13c-1661-4042-8f75-512ba5185938",
        "cursor": {
          "ref": "b71ff2a3-686c-4aa7-8e52-a9fb5aa9110a",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ca56e5bd-58fc-4f46-95b9-89829261bc56"
        },
        "item": {
          "id": "4a5ef13c-1661-4042-8f75-512ba5185938",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fe13caf1-7391-4708-9734-66b5009163c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617bddff-aee2-44c8-991d-a11d5c6496c4",
        "cursor": {
          "ref": "d8aa04db-b7c3-48f5-ab16-4a5edd8c5077",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4fe9ca2c-55e2-4612-8f05-40d27f0189d2"
        },
        "item": {
          "id": "617bddff-aee2-44c8-991d-a11d5c6496c4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "47fcc164-4f1c-428d-bd4e-8ce6c2e8cbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bee23ec-5e10-4831-83e4-7e800adc88b0",
        "cursor": {
          "ref": "bc67a1a9-4298-4190-bb65-796c9030e6f4",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fbc2a302-dc26-4c8a-8a29-cf0f4874ea00"
        },
        "item": {
          "id": "4bee23ec-5e10-4831-83e4-7e800adc88b0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3846d634-e644-4c4a-b689-2d3394486d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a697fb09-04f6-4aec-9086-96821f7d3a2b",
        "cursor": {
          "ref": "70458dab-9900-4a47-a3d3-e5fc35d5260e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b88edceb-b599-4c95-9cab-4602dd9243de"
        },
        "item": {
          "id": "a697fb09-04f6-4aec-9086-96821f7d3a2b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "734ad352-545b-4542-a185-3890e7f5baea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abababc-5dc3-457f-b043-0384a0e3df56",
        "cursor": {
          "ref": "af582983-48c5-4568-b3a9-3fd448f96971",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ba6d155a-fde3-4570-b138-d32614cf9d2e"
        },
        "item": {
          "id": "1abababc-5dc3-457f-b043-0384a0e3df56",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7ed74d8f-baa7-4c0f-9425-87462d91c46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15755a8-dacc-4f52-aea4-ca6688cd8d68",
        "cursor": {
          "ref": "6e43097c-7fd6-409d-9391-388896136aea",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2d625586-1918-40b1-af8e-b90092bea400"
        },
        "item": {
          "id": "f15755a8-dacc-4f52-aea4-ca6688cd8d68",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c528b1fa-b999-4c0a-8d03-e767d53b263d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5cc493-16dd-40fb-b3fc-4f20414f23d8",
        "cursor": {
          "ref": "b7abca4a-bfa6-4fef-bfb4-9d94c6a335ec",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ab5ecff6-3763-4d30-86aa-9938b9584a90"
        },
        "item": {
          "id": "bf5cc493-16dd-40fb-b3fc-4f20414f23d8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8d8b1287-cb63-4870-8437-3100d4881896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781c70bc-b810-437c-9de1-9409e112ef7f",
        "cursor": {
          "ref": "5c9f5adc-e84a-4337-ad4f-09f2f11fc49e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "84f234ed-b88f-4657-9123-53091633767b"
        },
        "item": {
          "id": "781c70bc-b810-437c-9de1-9409e112ef7f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "41882962-fb09-4718-a1ae-bda0abf12054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80675697-8b7e-47bd-82e4-657305337490",
        "cursor": {
          "ref": "7533b8f6-aa84-4a4c-97f5-5b632ca07bd6",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a20df206-cfb1-477b-b3e6-5f9aab55433b"
        },
        "item": {
          "id": "80675697-8b7e-47bd-82e4-657305337490",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3c2e0201-1676-480c-9969-4dde3af74f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6934e6f1-f6a7-4b72-a95a-2c348264ee87",
        "cursor": {
          "ref": "a9bab46a-5ed2-433b-8be0-47f5f61f06b9",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "99ffe23c-ec66-4f01-95ab-3c2dc4cf7f03"
        },
        "item": {
          "id": "6934e6f1-f6a7-4b72-a95a-2c348264ee87",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6fc12e27-3e97-489b-9290-ce33094a6631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f5c318-34b3-46a6-aecc-5a9028b9f74d",
        "cursor": {
          "ref": "8a38afb1-2788-4f56-bba2-df713b2ffe53",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7018fe9e-350e-4ac4-835b-8630b1323237"
        },
        "item": {
          "id": "88f5c318-34b3-46a6-aecc-5a9028b9f74d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4889549f-d125-4136-a375-f60313740700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94395560-7515-415d-ab3a-6de2413b579d",
        "cursor": {
          "ref": "dbc4034c-d17a-4669-96c2-124b68d11fde",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ec00ef82-2b55-4e7f-ab31-d36b16aee261"
        },
        "item": {
          "id": "94395560-7515-415d-ab3a-6de2413b579d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "05600cf1-efba-44af-a05f-1d4105ba0e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a74d25-494f-404c-ad97-fbdd970eeb1b",
        "cursor": {
          "ref": "4424a074-83aa-4d58-9425-ae4df7b0ea0f",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "403f6a89-dac4-4f60-b80e-3f6593e57d37"
        },
        "item": {
          "id": "c8a74d25-494f-404c-ad97-fbdd970eeb1b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1b63dce7-ca44-48f9-8bc7-dc70d841c06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419a9258-8974-4971-93ff-704dbb0977b7",
        "cursor": {
          "ref": "5035b8a2-505b-418f-8f44-4a3c438e4dc5",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "14a0f6b1-5a1f-42e2-99a6-89c0f6332d8d"
        },
        "item": {
          "id": "419a9258-8974-4971-93ff-704dbb0977b7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2a210558-0a02-444e-b392-309e45d7647e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07067953-b5fb-4c34-948f-00a18edf1c62",
        "cursor": {
          "ref": "a83341da-a4aa-40ef-8e3b-431d3a53d28d",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5850a665-aa0f-4c7d-907a-007e96c3e999"
        },
        "item": {
          "id": "07067953-b5fb-4c34-948f-00a18edf1c62",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "393a8091-030f-44d4-bb1b-fc1fc2df281d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30839997-9f0b-48f0-b6b2-0fb5a9f7107c",
        "cursor": {
          "ref": "4c658232-3106-4436-b529-fbf924882924",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e432388e-e7d8-40d2-89a7-5b33e866d2d7"
        },
        "item": {
          "id": "30839997-9f0b-48f0-b6b2-0fb5a9f7107c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "695c25cc-b72f-47d2-b791-5393d895d696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fd8fba-8913-4760-86c7-5524ba9a19e8",
        "cursor": {
          "ref": "98a1e777-546d-425a-9713-9027656f1f6a",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "46870893-5454-4c02-a541-dbccd8ef4b54"
        },
        "item": {
          "id": "29fd8fba-8913-4760-86c7-5524ba9a19e8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4ad47db2-2179-41e8-8873-c4ee3c7c7c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782318a0-1589-4a2e-bfd1-14f2723d381e",
        "cursor": {
          "ref": "cadec911-0e96-4285-92bd-fb58532f4dea",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2505d9f5-c76e-48b7-acdc-70c435d242de"
        },
        "item": {
          "id": "782318a0-1589-4a2e-bfd1-14f2723d381e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2ddb6351-ae0c-4437-be0c-27af2d59f507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9dc8eb-4697-47b3-b8cc-332e1d1e0c23",
        "cursor": {
          "ref": "ae66fe29-8ed3-4bc9-88b5-86cb5495dd82",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "91420dd0-0fd6-4d74-9155-97c5dfa3a3ed"
        },
        "item": {
          "id": "8f9dc8eb-4697-47b3-b8cc-332e1d1e0c23",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5c9b6d90-e8f1-48a0-a625-a599f786d7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120a7f0d-b7d8-4f53-8271-6e207f2d2387",
        "cursor": {
          "ref": "f66f1dba-8391-4cd2-8e0d-c186d884f3a8",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8317e5b5-b230-4b9f-a00a-cbb52dd15a67"
        },
        "item": {
          "id": "120a7f0d-b7d8-4f53-8271-6e207f2d2387",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3ca36138-03f6-4f21-b636-f9601dc9a870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10d8776-cda3-4a59-bea9-8f78117fc869",
        "cursor": {
          "ref": "f121c50b-287f-4368-8aac-d47392a54c1b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c6c8d9e3-7443-43d3-aa1d-f80dbb113ff8"
        },
        "item": {
          "id": "e10d8776-cda3-4a59-bea9-8f78117fc869",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "51ddae90-af1f-45db-b4b5-a941654c9afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ab24c5-4cf0-4fa5-995f-1a35d34fd688",
        "cursor": {
          "ref": "e1532cec-c264-4ff6-bb27-34d5d141728b",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "42c3fde2-d53d-48e9-9ae6-51fbaae22967"
        },
        "item": {
          "id": "f2ab24c5-4cf0-4fa5-995f-1a35d34fd688",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "195dd4aa-2c92-41c9-82f6-15c10fc32bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d5cb67-5509-494c-af07-675811da136c",
        "cursor": {
          "ref": "b21f0a1f-4c9d-4ddf-b0c0-1f5197ce5e98",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "da22ea07-3468-4b88-85bc-74179fb072fa"
        },
        "item": {
          "id": "d8d5cb67-5509-494c-af07-675811da136c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "dbe868bf-cc3e-4ab6-b573-1de96a07092e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ae778b-755c-4e2a-a41a-6a8fc2e00b34",
        "cursor": {
          "ref": "9d553338-c7cf-443b-ba76-db281dbe1af9",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "df2a725c-91fb-448b-bb56-3cf340a63d9e"
        },
        "item": {
          "id": "f2ae778b-755c-4e2a-a41a-6a8fc2e00b34",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2ddac21d-1d53-46e2-ad2f-734a10a3c086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2063465-1883-4897-a9f8-537d6a58a9bf",
        "cursor": {
          "ref": "9d670b6c-a74e-4967-a263-0a42a02cc074",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ccdca2fc-0394-4c80-b106-0ccf46a552d4"
        },
        "item": {
          "id": "f2063465-1883-4897-a9f8-537d6a58a9bf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f5da67e1-e07f-4bd5-af95-a6ff7326aadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e838584d-1a52-4698-8aff-86dfcee8b4d9",
        "cursor": {
          "ref": "88c7985a-a0dd-48c5-a514-6e40114788b5",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "37fceef6-cfd5-471d-9e3a-aa9d8663b0ed"
        },
        "item": {
          "id": "e838584d-1a52-4698-8aff-86dfcee8b4d9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cb32907e-d7b0-4f07-8602-c00a36e8c6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379c829d-9a5f-4f3d-b5fe-d6fb90e0a047",
        "cursor": {
          "ref": "1aef931d-a2ef-4ba1-9940-5f2b14760d1b",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "46a78b81-40f8-482c-93d4-9cfb7aebc061"
        },
        "item": {
          "id": "379c829d-9a5f-4f3d-b5fe-d6fb90e0a047",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d5ca57c1-eeac-41a7-93d9-12cb87ef3e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa58c66-c111-474e-83ce-cbf5ec767a47",
        "cursor": {
          "ref": "25332932-531b-4288-a849-e546f6233762",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6d677bc7-c1ff-415c-847f-7c58ea371692"
        },
        "item": {
          "id": "3aa58c66-c111-474e-83ce-cbf5ec767a47",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "59dcb6f6-d2cc-4d53-9b49-154008a5e466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cb69a6-430f-4de4-a5ab-73adbd503930",
        "cursor": {
          "ref": "c2a25ec1-feb9-41a3-9e1a-dc9f38b1b983",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "132d8805-5a38-46ee-8a8c-3d66834a6a35"
        },
        "item": {
          "id": "99cb69a6-430f-4de4-a5ab-73adbd503930",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "04363d0f-6f95-4fc8-bb08-0f6c75545ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cc41ac-c83e-44df-bf61-904c8751b8ce",
        "cursor": {
          "ref": "bf3742d0-d66b-45ac-b9d1-abb3b274b7bc",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ca3af9e6-be12-4a9a-8b94-8cf5c9ecbf3f"
        },
        "item": {
          "id": "32cc41ac-c83e-44df-bf61-904c8751b8ce",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3093b8e4-acd0-42bf-bc01-e1d1cbb44f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0741aa1-b8f4-433b-9dcf-730e538b773a",
        "cursor": {
          "ref": "6a7e6c8a-f30f-4939-a601-d2d799d5b2ac",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c28f1407-a8cd-4bf2-bf2e-96a8225f6307"
        },
        "item": {
          "id": "d0741aa1-b8f4-433b-9dcf-730e538b773a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3694817c-32ee-4b2a-957d-df3261778b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402e5744-cf3c-459b-b880-46fa2b1c5dd3",
        "cursor": {
          "ref": "b8d0ed2e-af2a-4d8b-80b5-68367b0054f6",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a639328b-d421-432a-b179-a64b04acdff0"
        },
        "item": {
          "id": "402e5744-cf3c-459b-b880-46fa2b1c5dd3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4d3dad10-7d87-48d0-8d47-ef2ae2d1073b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76b5b7d-c4fd-4587-bb65-64c0eb116644",
        "cursor": {
          "ref": "6c453619-e518-4564-a469-cc6e9d811482",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "600a3272-ee23-4a9b-9844-21258d98e84b"
        },
        "item": {
          "id": "d76b5b7d-c4fd-4587-bb65-64c0eb116644",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "240b0d11-5f38-4d79-aa02-e21e5e8af8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0462d9dd-bec5-4fe0-bf92-096692e22242",
        "cursor": {
          "ref": "40a5782e-db89-4afa-ba4a-fed7063a35d7",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7be64314-12ca-4321-9953-bf2e1ef50c41"
        },
        "item": {
          "id": "0462d9dd-bec5-4fe0-bf92-096692e22242",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "97dd4230-d932-4702-be31-8e01f101a142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae5b488-c05d-46a7-b6a3-04f3605ab6c6",
        "cursor": {
          "ref": "1689165d-022c-4e83-b182-7e1bc3249c05",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9a3b1021-6fc7-46b9-98f4-24d6e653f059"
        },
        "item": {
          "id": "aae5b488-c05d-46a7-b6a3-04f3605ab6c6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fa4c3857-b8d0-4f1b-94b4-4355bf977ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711c584c-abfd-4662-a9d2-fc35ae41a6d5",
        "cursor": {
          "ref": "85f74b2b-f1d9-4af5-9b04-620290ff836a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0a02f11b-ff71-41ad-abdd-3d2f72a71e62"
        },
        "item": {
          "id": "711c584c-abfd-4662-a9d2-fc35ae41a6d5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c4a768aa-964a-4200-9c5c-78421b201f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc60493-d343-4ca5-9dc9-a9c829109304",
        "cursor": {
          "ref": "8c9bf0e5-eac0-44ff-8ad4-940c00a8ab90",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "73934e99-4f0d-49e0-a661-d7854b74c029"
        },
        "item": {
          "id": "4bc60493-d343-4ca5-9dc9-a9c829109304",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "11ee8792-69d6-4416-8f5a-c74e7b61d17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f305ee46-f395-49f5-8f16-34548fb99491",
        "cursor": {
          "ref": "caf7a3be-b515-4cc1-8e19-3ee915e17110",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "afe6aa0a-6fab-4a5f-a451-6e9209a76779"
        },
        "item": {
          "id": "f305ee46-f395-49f5-8f16-34548fb99491",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ba9af777-c1a6-4eb6-8bff-0e65d689b667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4292fefc-a297-47d9-a60e-73531fdc53a0",
        "cursor": {
          "ref": "56bc1171-c7d2-4643-b4e7-7f8fa0f33061",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "39f9c70e-01fb-4e56-994e-f62651eb8077"
        },
        "item": {
          "id": "4292fefc-a297-47d9-a60e-73531fdc53a0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2ed73e86-ff6a-44dd-af15-dc30d6e2d008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8489a84-7c98-4799-a63f-e4899afd42d3",
        "cursor": {
          "ref": "11c7ea84-4252-4659-a998-1c4bfb472536",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ca1aa078-88db-4c67-9299-042416a80f6f"
        },
        "item": {
          "id": "f8489a84-7c98-4799-a63f-e4899afd42d3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "26950077-a4aa-440e-baec-bd31b0e44918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19702d8a-2bfa-4b59-8b43-1c756229f412",
        "cursor": {
          "ref": "69d94468-886b-40ed-a1c6-884b24178afc",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8366f189-46fd-4d3b-8a0c-191891ba15f2"
        },
        "item": {
          "id": "19702d8a-2bfa-4b59-8b43-1c756229f412",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d1202f3f-5588-441d-aa91-759e6c6acfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981a66d5-0fd1-4e44-aed0-99b0aa034fe7",
        "cursor": {
          "ref": "5a35259e-3599-4e7d-a7b9-3206066da19d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8c1be068-4119-4e6d-917c-388282adad68"
        },
        "item": {
          "id": "981a66d5-0fd1-4e44-aed0-99b0aa034fe7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9499f51d-08cd-475a-81eb-ea133d199a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37338d94-7aab-48a9-abb1-dd19d47daf98",
        "cursor": {
          "ref": "b59b1351-6dc1-4bd6-a836-f4ec881254f0",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "acb0df4e-6652-4636-b9b8-d814331ccd1f"
        },
        "item": {
          "id": "37338d94-7aab-48a9-abb1-dd19d47daf98",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a8bb3e44-f367-4aac-bf53-77ef75d12e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10410e16-aec6-43c4-a1e2-5278a1770b34",
        "cursor": {
          "ref": "5b491428-e92d-469b-82bd-305f486b3f76",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5c9c827c-aeca-4c7f-8cb7-73a6a2338082"
        },
        "item": {
          "id": "10410e16-aec6-43c4-a1e2-5278a1770b34",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "728189e1-d902-4cf4-8d6a-0ae1440a0152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e155dcd-34aa-4d70-b4e2-110b5e64e9ca",
        "cursor": {
          "ref": "76282e74-b992-4dd8-a692-03fd698157b6",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a123770e-e5c1-475e-8ae9-af7c404910c9"
        },
        "item": {
          "id": "1e155dcd-34aa-4d70-b4e2-110b5e64e9ca",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "77d24bd4-9701-40fc-a683-2446f7b22e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7279bdc9-bc5b-462f-b109-9be5321c696c",
        "cursor": {
          "ref": "c335d50c-caf7-4a4e-bbe5-9f9fce8c60a6",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b992dbfe-7dee-4e6a-90ed-4de5baf2ed05"
        },
        "item": {
          "id": "7279bdc9-bc5b-462f-b109-9be5321c696c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "39b5fb93-76cf-4348-b499-bee6779d5f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2959bc1-4482-4c31-bc90-237a8e0233f1",
        "cursor": {
          "ref": "eb9a184a-6369-4e7d-aa44-7c357f4d4e6a",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f1f2751d-ed8f-4df4-a16b-12b12e38a46d"
        },
        "item": {
          "id": "d2959bc1-4482-4c31-bc90-237a8e0233f1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2cd1f642-6bd8-4b31-80b1-d91af99192a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89458afa-3f63-437f-8dfa-b482215cae84",
        "cursor": {
          "ref": "4171fea5-2abf-4569-bf04-b857531670de",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c9cea571-5b1c-44ce-92ee-41833ba9b029"
        },
        "item": {
          "id": "89458afa-3f63-437f-8dfa-b482215cae84",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1cbcfa37-a583-4d54-a0e2-e43945072ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b89346e-9781-4b3e-995e-4b1575c9ea3f",
        "cursor": {
          "ref": "9e243f5a-e420-426b-bf36-21d98c5523fa",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b70efee8-c74d-4017-9328-a9c5ed6a9e71"
        },
        "item": {
          "id": "9b89346e-9781-4b3e-995e-4b1575c9ea3f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "da067194-6205-48a7-9517-47bfe8366691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c896f55a-377a-4a2a-be5e-3cae19cafa46",
        "cursor": {
          "ref": "26c2d6e6-00b5-4424-9301-cdc08a288559",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ed64fc63-4a29-4813-aed1-83d6c2cdde47"
        },
        "item": {
          "id": "c896f55a-377a-4a2a-be5e-3cae19cafa46",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "905f50f2-6b8e-42e0-89e8-9d1d6fca8ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dda77e7-532c-428d-b25c-4358632cd701",
        "cursor": {
          "ref": "dab7e7dd-a688-40e7-b162-70e02f0c3ecc",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d8502a06-a991-49c9-a992-d99b06f6c385"
        },
        "item": {
          "id": "4dda77e7-532c-428d-b25c-4358632cd701",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a9e76abd-73eb-4d7b-97ea-b579f4e357d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba43561-b27a-4063-8b9a-a9c048c72e68",
        "cursor": {
          "ref": "584e229f-230c-44a5-9612-8364dcfda428",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3762bd69-4714-4b7f-90e7-ead32559b282"
        },
        "item": {
          "id": "cba43561-b27a-4063-8b9a-a9c048c72e68",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c7d769a1-45be-4476-997b-0061e110a224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61455838-60e6-4d64-b220-6414241065ff",
        "cursor": {
          "ref": "7ef950c3-7d88-4b9d-8c8b-8a0ea566edda",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "235d0372-b56a-4adf-a7dd-f7596f133163"
        },
        "item": {
          "id": "61455838-60e6-4d64-b220-6414241065ff",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "83a1bd31-4bf4-4446-a37f-47760114adca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0eff367-9a0a-417c-abc0-933513f69ce9",
        "cursor": {
          "ref": "37e5e69e-5484-460f-8724-1a1f4796a105",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "06c246a8-a768-42a8-8c94-422658653eab"
        },
        "item": {
          "id": "a0eff367-9a0a-417c-abc0-933513f69ce9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "09cc3682-41a2-4f8e-9c14-bcbfb6f6912b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff63a2ac-0864-4ab5-887e-c40ceb5b9e3f",
        "cursor": {
          "ref": "19779d7a-4368-498a-b44e-f113f3aa4778",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f78ad048-cfe3-488b-815f-e0f70034e81b"
        },
        "item": {
          "id": "ff63a2ac-0864-4ab5-887e-c40ceb5b9e3f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "59c57213-d885-498b-9c41-2d09f20e9891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dae5ad-147f-4c9a-8f4c-5a6bf517d34c",
        "cursor": {
          "ref": "5d41b5fc-687c-4723-ae49-c53a566e80cb",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d89be93e-2f19-4416-a0d9-a65f81e0409f"
        },
        "item": {
          "id": "f0dae5ad-147f-4c9a-8f4c-5a6bf517d34c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5ba1317d-1c6e-420f-bb61-a040f29bfaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b808846-090b-4d70-9534-3798f302a380",
        "cursor": {
          "ref": "d0c6db20-5588-42ba-adff-00afef5be4de",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4dc27ea6-b306-44ec-8ea4-5ee2feb0adff"
        },
        "item": {
          "id": "3b808846-090b-4d70-9534-3798f302a380",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "66d09c76-83fa-4be0-b6a2-793560e0c149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b468f830-3cb5-4a12-9869-caddf62de5de",
        "cursor": {
          "ref": "10987976-5d8c-40d7-9583-576bd3178b45",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0fe3aa66-baf9-42d2-ad21-9520937757b6"
        },
        "item": {
          "id": "b468f830-3cb5-4a12-9869-caddf62de5de",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "25e0fe55-86d9-446d-a886-10d3adeb9435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f4ebb4-c321-4973-93c0-45831aaede0d",
        "cursor": {
          "ref": "010943b1-7e2d-4a9a-b086-b0883537c998",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4647cabb-b111-4b7a-8b87-07e4347b4675"
        },
        "item": {
          "id": "62f4ebb4-c321-4973-93c0-45831aaede0d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a7245e23-e92e-41fd-ba04-6bffa30b709c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e383237c-e5ed-4d43-8735-acd6124c726e",
        "cursor": {
          "ref": "aa618ad6-f9fe-410e-a7c6-f34e1b0a2fa6",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0dcdbd0c-5aa4-4419-bf27-37116d0c1ace"
        },
        "item": {
          "id": "e383237c-e5ed-4d43-8735-acd6124c726e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8a2a7221-9665-4bd2-9e09-85d281bbde64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663bccad-0266-4825-9dfc-8303e2245570",
        "cursor": {
          "ref": "570e1921-9385-462e-9672-9d104fcdf624",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ffd0eb60-dc5d-4c23-a1c8-263f68f8cdf7"
        },
        "item": {
          "id": "663bccad-0266-4825-9dfc-8303e2245570",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0b413f0f-b0eb-4856-a511-11a904f2bef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34483706-0630-4124-bbbf-cb35dbb16905",
        "cursor": {
          "ref": "b8ac4c88-2d60-4565-a45e-5b697daf2566",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "53e26ef0-2f18-49ed-9647-74a7ec52012c"
        },
        "item": {
          "id": "34483706-0630-4124-bbbf-cb35dbb16905",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "47666c2b-3105-4085-8625-416309464af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea76bb1-3503-449f-9826-4ee0932a20cf",
        "cursor": {
          "ref": "f1754c69-5ed7-4b0c-9605-61afde967666",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "73a7922f-3a84-44a9-86ee-1be98e85777c"
        },
        "item": {
          "id": "8ea76bb1-3503-449f-9826-4ee0932a20cf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c96d5c6d-4777-43cd-81a5-9ada7de18990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ebef32-1ef1-4391-9c1c-d5f9f2c5d3eb",
        "cursor": {
          "ref": "f95572c6-30e0-49ab-93d3-5f4555e079fa",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d9f7db63-21e8-4bbc-a550-a6ef8406488c"
        },
        "item": {
          "id": "39ebef32-1ef1-4391-9c1c-d5f9f2c5d3eb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d06b8d78-ac7d-4383-ba9e-e4906743aeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef33916e-1a23-40b0-8b9a-9aa250a42a33",
        "cursor": {
          "ref": "e0164a2f-3d55-496b-b755-ab0d11ac02ed",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "784542ca-f1f2-437b-bf2c-8820af2cba42"
        },
        "item": {
          "id": "ef33916e-1a23-40b0-8b9a-9aa250a42a33",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "44649db5-2d9c-4ed6-b381-3310bba61d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d715f793-8e35-489d-aeb8-f034c3d6721a",
        "cursor": {
          "ref": "c8877a3e-8fb7-4413-abb9-602614f1bb8b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1faffc25-ae44-43f9-8539-34d3544e6b43"
        },
        "item": {
          "id": "d715f793-8e35-489d-aeb8-f034c3d6721a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c1bdafb7-0dc3-44b0-ac89-206e04977ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a84d75d-721b-43d4-9ab2-ff78685398cd",
        "cursor": {
          "ref": "e99b7145-1bf7-45fc-acf6-30eb7d372e20",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "88b8503d-3dcd-44c5-b096-4a934848961e"
        },
        "item": {
          "id": "4a84d75d-721b-43d4-9ab2-ff78685398cd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c767e0f5-c65b-4cca-aaa3-fd5608302b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a409073-6db9-4c08-b89f-570d2fc35aa3",
        "cursor": {
          "ref": "d98ed91c-ff3f-46a2-9c1e-2cef8d3821ae",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7209420e-e246-40e6-997b-3e94b57952d5"
        },
        "item": {
          "id": "2a409073-6db9-4c08-b89f-570d2fc35aa3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "53aa3de6-3111-4f1e-9f34-810075ce5bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6e2ea8-d0b3-46b9-8686-21b85a5f43c7",
        "cursor": {
          "ref": "ae5faaa6-ea6c-4182-9eba-9c2fef59916a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "13fe1525-d377-4483-9795-e77048a355ba"
        },
        "item": {
          "id": "fa6e2ea8-d0b3-46b9-8686-21b85a5f43c7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5e0ad91b-3ba7-4702-a16e-0f9cb9c575fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd85ee54-6518-458c-91e8-322fb4681fe8",
        "cursor": {
          "ref": "1e6eeb24-e67d-49a4-8a81-149653685b15",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "dd8c057b-fc44-4386-b135-f5589ec675ab"
        },
        "item": {
          "id": "fd85ee54-6518-458c-91e8-322fb4681fe8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cc80f53a-b181-4bbf-929f-d68a259ac958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c1376f-ca74-4c02-8874-67e9714a3d3d",
        "cursor": {
          "ref": "b74ba90b-577f-449b-bbce-bf3ac9edc6e1",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c55939d0-052e-4c7c-9918-fc7376b55bcb"
        },
        "item": {
          "id": "f2c1376f-ca74-4c02-8874-67e9714a3d3d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9531b9af-5936-4c9e-831e-d4e87e118e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063ce443-ba99-49b7-81f6-f681447561fd",
        "cursor": {
          "ref": "9057ec79-13af-46af-a002-8ca05564325f",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e51d7db9-4846-4baf-8e90-ad70d34dd3ef"
        },
        "item": {
          "id": "063ce443-ba99-49b7-81f6-f681447561fd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5e233967-9593-45a6-8db8-df86227d901b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86d5d84-c95c-4990-9e39-366518227d58",
        "cursor": {
          "ref": "2c0bd958-5509-4347-8382-f12549a2d004",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b46c6654-6db4-4767-8405-1706cf3715d4"
        },
        "item": {
          "id": "c86d5d84-c95c-4990-9e39-366518227d58",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2dca7cec-dc0e-4590-badc-e21c9c3c8c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b629f07d-5409-47f7-9ed6-8a40a1cf2bad",
        "cursor": {
          "ref": "567019dd-4079-485f-bc23-08702d1d833a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "790fd3c2-e64a-4592-af3b-1fe486a73271"
        },
        "item": {
          "id": "b629f07d-5409-47f7-9ed6-8a40a1cf2bad",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d148b7cf-13de-4757-b2cf-c8d29bf56964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d029bbf-ee50-41b7-87d3-111a3f3858de",
        "cursor": {
          "ref": "60737ef9-f1c5-4e22-9f52-57039024177b",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2175384c-9c1c-41eb-ab5a-5648af0e3d07"
        },
        "item": {
          "id": "9d029bbf-ee50-41b7-87d3-111a3f3858de",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e407eb4e-7de0-4f40-8736-b99742212977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adaa786f-0cfd-4582-b5b1-008b3955dc93",
        "cursor": {
          "ref": "55c5e584-0951-43bd-9df3-499c4a314f59",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c595f466-c43c-4e74-adb7-6e0309410392"
        },
        "item": {
          "id": "adaa786f-0cfd-4582-b5b1-008b3955dc93",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "46738965-99c1-453f-a84f-c95b1a77f58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789068bc-5cd7-4439-8783-745a9cf1ac8a",
        "cursor": {
          "ref": "efdb0f1d-514c-4fa9-b0c9-0724f98bcda7",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "376ae2e0-9eef-4543-b99e-b8b8d081c16d"
        },
        "item": {
          "id": "789068bc-5cd7-4439-8783-745a9cf1ac8a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "64b46dd7-248c-42a4-acaf-a1a2e5996abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74a3c99-c1a4-45b0-8359-2e06395d9bad",
        "cursor": {
          "ref": "50b1aa10-06f5-46b9-80cf-5ae1db551527",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3302407b-3a7e-4275-84cf-a21790f820ec"
        },
        "item": {
          "id": "a74a3c99-c1a4-45b0-8359-2e06395d9bad",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4eeefec4-6ac7-4316-b7d3-8ac0d6212cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6918b31-82e5-47a5-90a1-8b95e799f2a5",
        "cursor": {
          "ref": "c93ae923-0b86-4fb9-813d-9b9d6b552dc3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7dd5d285-9488-4c17-a1a6-672ebecd76da"
        },
        "item": {
          "id": "d6918b31-82e5-47a5-90a1-8b95e799f2a5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f25af993-f4f3-4874-93c2-2814de20b109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dc6804-6567-4f23-a299-5486cd25a0cc",
        "cursor": {
          "ref": "43e1057c-582b-4867-ab38-7d76f70f738f",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "66c5bc8c-9556-4d9f-a9e7-c7bbc7042021"
        },
        "item": {
          "id": "d1dc6804-6567-4f23-a299-5486cd25a0cc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a7f76b5a-f513-42ff-a0a2-cb6cd9c6973b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73956791-e7d5-42e3-b483-951dc9903ccc",
        "cursor": {
          "ref": "77f81d08-ba4b-44bf-bdf7-fdb3d019643d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c35fc1a3-e48d-478b-89a9-6b06e4258ed1"
        },
        "item": {
          "id": "73956791-e7d5-42e3-b483-951dc9903ccc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0328b809-21e4-4f96-887b-365d55628487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca33b13-ec14-4346-95e4-cc6d48f7f697",
        "cursor": {
          "ref": "84d23a78-ce7d-4e44-ba2b-2a7d7675f005",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7c81df56-6fbe-48a2-9398-15120f5f01ba"
        },
        "item": {
          "id": "1ca33b13-ec14-4346-95e4-cc6d48f7f697",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bb9c1e8b-9a09-4f00-8c0f-8a1ff8851927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583df2cf-f255-4c4e-9637-65aef3229796",
        "cursor": {
          "ref": "f941cceb-4044-45d4-9a98-2f6ff7152604",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "067aa5a8-cfbc-4f0a-adb8-4e961dfac32b"
        },
        "item": {
          "id": "583df2cf-f255-4c4e-9637-65aef3229796",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7cce2e3f-683b-4b33-9a07-75ae32eba622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04974027-3919-4618-9598-6ca1b1eed70c",
        "cursor": {
          "ref": "2a0306a7-52c7-4c5d-84c5-7cb0e92dd49e",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9648cd28-7d5c-4301-8ab1-b2b6018e5d24"
        },
        "item": {
          "id": "04974027-3919-4618-9598-6ca1b1eed70c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f20b7655-6218-4de8-9806-047ad33340ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f72d75-002e-49b9-81b4-853250aec40b",
        "cursor": {
          "ref": "df2e7eed-e141-4127-95eb-16cc8b3e13c0",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "80302fc2-148d-40ad-bb37-b85ddeb59018"
        },
        "item": {
          "id": "56f72d75-002e-49b9-81b4-853250aec40b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "47b35859-0806-4cd7-bfdf-9b1e0f697c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a036759b-fef2-41cb-8868-52e51eb73bcc",
        "cursor": {
          "ref": "39b99d55-835e-4a95-8def-a3b77295b655",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "56831e8e-ec52-4878-808a-795663c071d6"
        },
        "item": {
          "id": "a036759b-fef2-41cb-8868-52e51eb73bcc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "762b3c04-b535-49df-961d-b7c398e72e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b100a9af-32ee-4750-a883-bbf655aa00cd",
        "cursor": {
          "ref": "f464f4fb-5168-4360-9fce-41f86df61672",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "11fc0b92-a2fa-42a6-9f2f-fb0b436d1d98"
        },
        "item": {
          "id": "b100a9af-32ee-4750-a883-bbf655aa00cd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9f05fa35-704b-464c-9c67-fe7fddc36c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593fc9a8-9910-4c3b-ad2a-c94ee23df3a5",
        "cursor": {
          "ref": "8bb50fda-0171-47ba-ba4a-0c5a00b8c670",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e1e3f615-e464-47a6-90b9-7e3f4ad73486"
        },
        "item": {
          "id": "593fc9a8-9910-4c3b-ad2a-c94ee23df3a5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "491b5bb7-2cbb-466e-be99-2130b7aa0629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8a844e-2e87-49c5-adbd-63e90522b2e3",
        "cursor": {
          "ref": "88c6d54c-b222-48e0-aa7a-1069144bcf77",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "33aede7a-24db-4edf-9b3e-05f19b256c13"
        },
        "item": {
          "id": "4a8a844e-2e87-49c5-adbd-63e90522b2e3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0a3ec87e-d587-4d60-9748-db664bb56bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e52dc6a-4573-4c5b-815a-348d12919bd3",
        "cursor": {
          "ref": "d5b3380f-a716-4d63-a811-9a252dffcb60",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "cea5bc7d-080b-4b90-bd68-70efe6ccbeee"
        },
        "item": {
          "id": "4e52dc6a-4573-4c5b-815a-348d12919bd3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3fbfca8b-2fc2-4a33-87f5-cb07c96f12f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff0da1c-4b4a-4b14-88bd-32dd05621bf2",
        "cursor": {
          "ref": "d0c9bcf5-0ef5-4827-be6f-69ac103dd2ed",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "76d7adf3-d754-4589-8eab-07465a1b9945"
        },
        "item": {
          "id": "eff0da1c-4b4a-4b14-88bd-32dd05621bf2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "717337a7-9fa8-42f5-a6e2-961345648976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e92454-5d8e-4d6e-a6b1-c79c5c9d9539",
        "cursor": {
          "ref": "90c38189-5ef2-42d0-87bb-4ddac53c6ee8",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0022a587-4b9f-44da-9065-7ba999fba86c"
        },
        "item": {
          "id": "20e92454-5d8e-4d6e-a6b1-c79c5c9d9539",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d8da1874-68e7-44b8-a2c7-09b8a6afbf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bc069b-6511-4327-a63b-24ed1f711ea0",
        "cursor": {
          "ref": "5f6dcf1f-9a19-4d5c-b363-5ef7ffc0ca49",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b35f9a06-a201-46b1-8468-48c15fcdc4a8"
        },
        "item": {
          "id": "06bc069b-6511-4327-a63b-24ed1f711ea0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "72503a29-51cb-4d0b-b47f-4ae36045d005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a67999-1718-4888-b1cf-2e3c371959c4",
        "cursor": {
          "ref": "7dc2f189-eb88-42e6-81fc-3d816a198e85",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f3972b10-f5c0-4135-9b89-e7f6106b830d"
        },
        "item": {
          "id": "e1a67999-1718-4888-b1cf-2e3c371959c4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "33671e65-dbfd-470a-a24d-0a37d5f08561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e979f9-7f17-4fe3-a93e-12ef1fa428bc",
        "cursor": {
          "ref": "11f960a0-abf5-4a86-b49e-82a8349b8746",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "220d1099-246c-4c84-aed1-9afe54354767"
        },
        "item": {
          "id": "e7e979f9-7f17-4fe3-a93e-12ef1fa428bc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9f79d97f-8c56-4861-9844-f60ba245099a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848223c2-45d0-484d-bbe5-1899ea4560bd",
        "cursor": {
          "ref": "ffa62cbe-1f94-4b06-96f5-a2295905441c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "86d21007-0815-4eaf-916a-540202b3375b"
        },
        "item": {
          "id": "848223c2-45d0-484d-bbe5-1899ea4560bd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fcc4f6cb-8300-4121-a474-a131a8785bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa93e5e5-fa9e-4cbc-84ef-e0e0e33f3677",
        "cursor": {
          "ref": "7b495f72-3ccc-4bb1-b2ba-51b38caad207",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c4e47ecc-ad36-4b78-8cb4-6dc909935403"
        },
        "item": {
          "id": "aa93e5e5-fa9e-4cbc-84ef-e0e0e33f3677",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6f964545-c20a-48c4-abea-36d6b006461c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f40b00f-7025-4c60-b259-47b611ab0bd3",
        "cursor": {
          "ref": "07bccb33-6ecb-4a56-821a-efe2b5e79984",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5ca0c2c9-1adc-408f-9be1-0f9827b39115"
        },
        "item": {
          "id": "0f40b00f-7025-4c60-b259-47b611ab0bd3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "433d3c44-1b6f-45bf-98ad-48ef5bb3a2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf8e62f-becc-402e-a657-2ea4a44f386e",
        "cursor": {
          "ref": "9c00e683-f67d-4327-b793-34d21ec9282a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "85d61bb3-c086-4d24-afc4-e0362356d5e7"
        },
        "item": {
          "id": "3cf8e62f-becc-402e-a657-2ea4a44f386e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e71a96ad-037e-4ccd-891a-11b5f11d342e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38b42fb-d8da-47ac-87bd-1a40cba9900d",
        "cursor": {
          "ref": "a3f353be-bd9a-4da1-a7d0-2f31ccbcc22c",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "286a0fb0-d5cc-44af-aa3a-7a1fb9278733"
        },
        "item": {
          "id": "d38b42fb-d8da-47ac-87bd-1a40cba9900d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a2d45877-a139-4315-8cd2-a0b96c669bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5555ec-d340-4608-a67d-89691fe6497d",
        "cursor": {
          "ref": "e0977991-f564-4490-93a6-1272cb474fd6",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5c42de43-0cfd-4998-b366-df14a86900e7"
        },
        "item": {
          "id": "0d5555ec-d340-4608-a67d-89691fe6497d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8bb90884-2f5c-486a-9fbb-c205bebb160e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163446cd-8973-42dd-8ede-145f00167c86",
        "cursor": {
          "ref": "2e9e5104-492b-46a6-bb9d-965d54c3c329",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "46a025c7-5dd6-43d7-a254-0d3a24f18b2d"
        },
        "item": {
          "id": "163446cd-8973-42dd-8ede-145f00167c86",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "556e0e9f-f62a-46dc-ae02-f16be55bcd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64233194-4d14-4a13-ac51-dea43c64301e",
        "cursor": {
          "ref": "a49be09f-1ea3-43d3-80bc-4901e192142c",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "93468bc6-fc17-4c1d-b779-860b5b62625d"
        },
        "item": {
          "id": "64233194-4d14-4a13-ac51-dea43c64301e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4f456909-9d66-4e64-9cda-d5704517b67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46352d3-f549-46db-95cd-5e1cb9cc61d0",
        "cursor": {
          "ref": "25265f73-8c50-4df4-9335-dc2fb7f49713",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1ce40774-1717-42eb-b372-72d667b4b147"
        },
        "item": {
          "id": "a46352d3-f549-46db-95cd-5e1cb9cc61d0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "967b5717-c7d0-41c0-972d-4c881b1b6ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6502124f-1841-4ff8-86ff-3342b3fc11cc",
        "cursor": {
          "ref": "e652b9ee-4f85-4292-b680-6a91908fd8dc",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0d7aac73-9731-4d49-886b-c1e323c90a83"
        },
        "item": {
          "id": "6502124f-1841-4ff8-86ff-3342b3fc11cc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "69be9d63-b169-4c27-9696-825c41536700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c63317a-294c-4e9e-a5b0-b1faead54153",
        "cursor": {
          "ref": "056c4d1e-6be7-45a6-876b-74334deef7e1",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "37f6e29e-5fbd-4beb-ab7e-e30961289f6a"
        },
        "item": {
          "id": "8c63317a-294c-4e9e-a5b0-b1faead54153",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "14c72df6-6ed9-49f6-a917-952a3787cbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4601421a-7722-47a4-9afd-eb1cbc2f62ea",
        "cursor": {
          "ref": "3c48ce1e-f14c-4549-add8-d0e401e37ab0",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a2ad18b1-897b-416f-888f-0fb29288d593"
        },
        "item": {
          "id": "4601421a-7722-47a4-9afd-eb1cbc2f62ea",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "84191a6b-f61d-4b60-b3b8-095395dfbbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee1bf23-731b-4edd-b986-b286c5a0d36c",
        "cursor": {
          "ref": "ca48cfb7-3787-44fa-ad0c-40f5e93c4176",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0cf5e8a8-3dad-4af9-b51a-9021c891a602"
        },
        "item": {
          "id": "9ee1bf23-731b-4edd-b986-b286c5a0d36c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e5e10f5a-b10a-4f1a-b734-32cbfbb72d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae0727c-388e-4a06-91e3-65d6069ac9e2",
        "cursor": {
          "ref": "0f704a1a-f1a5-4db1-86bc-809302d860a3",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "435faeb4-bc80-48f9-9013-1b518be7a2f7"
        },
        "item": {
          "id": "9ae0727c-388e-4a06-91e3-65d6069ac9e2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "25b3a306-7633-4388-9c76-14bfe8151763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d850fe07-d0d5-4d97-9335-2ea457f04492",
        "cursor": {
          "ref": "35c0dd3a-7691-4afe-bf5c-6b149c28df43",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "65419edf-b985-4923-9ac0-192d89b36095"
        },
        "item": {
          "id": "d850fe07-d0d5-4d97-9335-2ea457f04492",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "949d7fac-2fdd-4319-8d43-2bb3636c8a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea69328b-eb3c-4a44-93ee-7f295398ffa0",
        "cursor": {
          "ref": "c914981c-349c-4760-97b0-f26960036bc4",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c14ecba8-e768-48b5-a2ad-f330dc1ea48c"
        },
        "item": {
          "id": "ea69328b-eb3c-4a44-93ee-7f295398ffa0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b7277e28-2c17-49b6-82a5-206d18dbda15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a2a47-e40d-454a-88b0-47e16a302159",
        "cursor": {
          "ref": "9a74f500-1a85-4d7f-98f7-c09b7d8303b3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5330d4cb-ef75-4f5d-b398-a590e0d83e39"
        },
        "item": {
          "id": "2e9a2a47-e40d-454a-88b0-47e16a302159",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a62f8a4f-6f16-4d9f-bb0a-f0d5ac6c3206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53667264-2464-4fe5-bcda-5592fe0e8c00",
        "cursor": {
          "ref": "c0c47180-8d88-4bdc-a7dc-433edff21bcb",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1233356c-52d1-494e-a485-5891e4d97bf2"
        },
        "item": {
          "id": "53667264-2464-4fe5-bcda-5592fe0e8c00",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2ed9efa9-3c60-4c69-830e-0a5180382b21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de30b90-b24d-4a61-b48b-88f86f25f2cb",
        "cursor": {
          "ref": "30503ea4-a4da-43d5-a582-28204503e1bd",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "94f662d3-b92f-4c33-8921-a033529bf033"
        },
        "item": {
          "id": "6de30b90-b24d-4a61-b48b-88f86f25f2cb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2e88bc7d-78ba-4a80-a944-640bf92ed9dc",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ff1d02-03bd-4a33-9673-32608095f1cd",
        "cursor": {
          "ref": "31720fd2-ed7b-43f5-a62d-d72d1bfc4437",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "086a4335-10a7-4321-890e-63f0d6c3d513"
        },
        "item": {
          "id": "93ff1d02-03bd-4a33-9673-32608095f1cd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "58e1ca6f-d362-4c25-87bf-5157cfb9297c",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d5a747-26a7-49db-b4a4-15ad53547051",
        "cursor": {
          "ref": "b8b41b7a-dc05-4fdb-ad63-eb9c86f6b6b3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "45b42324-44df-4913-a028-f8822a1720aa"
        },
        "item": {
          "id": "27d5a747-26a7-49db-b4a4-15ad53547051",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "90040474-4206-452c-be72-ea02bfb78aca",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeec944-aa47-43ae-b08a-69114682632c",
        "cursor": {
          "ref": "b4fd845a-3bb5-46db-b8fd-31108e6e113b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "eff6c518-03b1-4668-afeb-e5cb45999a02"
        },
        "item": {
          "id": "6aeec944-aa47-43ae-b08a-69114682632c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e27d3036-958f-432b-87e4-4a51ab1209b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aeec944-aa47-43ae-b08a-69114682632c",
        "cursor": {
          "ref": "b4fd845a-3bb5-46db-b8fd-31108e6e113b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "eff6c518-03b1-4668-afeb-e5cb45999a02"
        },
        "item": {
          "id": "6aeec944-aa47-43ae-b08a-69114682632c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e27d3036-958f-432b-87e4-4a51ab1209b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac2b276-7091-4ca5-b9f9-b015f0e4579a",
        "cursor": {
          "ref": "a1878ace-b311-452d-88c9-fe255540e5ad",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1df2e790-4efb-4c13-b75a-d2f599efca11"
        },
        "item": {
          "id": "4ac2b276-7091-4ca5-b9f9-b015f0e4579a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "751c3934-1bb6-4a79-8059-a25d1f876c0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56626f8-d620-4a4d-a6ac-093ae8743bbd",
        "cursor": {
          "ref": "761f5d9b-0a84-4ac6-a68a-24e6149d2fe5",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8c578e5e-6dd1-465e-bf27-5e5482859e79"
        },
        "item": {
          "id": "b56626f8-d620-4a4d-a6ac-093ae8743bbd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e6ca7e9c-2395-439c-aec1-7cf0a1e843ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}