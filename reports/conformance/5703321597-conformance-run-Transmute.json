{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ec34ac0f-61dd-4127-ae2c-2e6ecaf0bc81",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eab75fc3-62d1-47de-a023-c63b8bee3a01",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d1b89bd-fa57-4a2d-8603-dd3bce211bf5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4a88b503-b532-41ac-9d95-c65141a790ac"
                }
              }
            ]
          },
          {
            "id": "b4bca587-dd04-4195-81e6-5849a14a5cfb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb2448e0-7cf6-4c7d-9695-366bd2222ad9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "579083c5-c629-4f0e-bf4a-51a1c9da0375"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ddb1cf40-5093-4790-bb0b-4a931d0021e9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e360ff3c-1392-4682-8146-7e5c31608b7c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a481b5fc-3a9e-4f4b-81e9-a2eecbec5cdf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "459a17ed-b1aa-45b8-bd2c-cfb6642d4f5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "511fe993-869a-47e6-8dda-0fd48f962efa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1de6dad5-6531-4805-be58-037bcce2eb84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18543858-9701-43f8-a7f9-6ca08ec96a09"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "320bd44e-5514-45ce-8a7f-d8b00bad68fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "215d0066-4e40-4bff-a97b-5d43fb968e40"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "256b9f78-b633-4353-a57a-0bb47bfbcb39",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c0ae3486-a44a-4c3b-a128-085ca14cf6bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ba23d67-94c9-4b8c-ac6c-4af7e2d0e1aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31e0118b-8cb3-45c6-b576-2c8a318cc265"
            }
          }
        ]
      },
      {
        "id": "89e2d628-7999-497f-b7fd-23d44f82a5a1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "db3fd59b-a06c-464f-a253-98c9e28874f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ad529d7-3b86-4e16-a801-2c1b1c882842",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be9c3e0b-4196-4164-846b-6bfd0a8e76e5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d148b39-8097-42fc-8895-03dc498aea97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed15d549-ed77-44e8-9d8f-c58541710c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d5bbbf-c879-4860-9216-77f479bc61a5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7771c2-1e56-40e6-b773-abb079583a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ed0dde3-8b47-49dd-aa7e-62b553594b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062cd9fc-9a6f-44e3-b826-42e904c60132",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0948e8-31c0-4eca-85cb-d38beeb55bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "200d4f0e-02ba-4ada-953f-203645c78802"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb68bdbc-a444-4bc1-8c7c-9f020528d3d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e30c12e0-c73c-408e-b07f-b4325969e229",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61290a1a-755a-424c-b31e-78d5fb5de6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce0c55d8-d9c4-4ad8-b68d-c9dfadab8312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f99f42-938c-49ce-89ee-7e3d231f66a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37a4a94-f3ba-46ad-905d-de3795eacd92"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8b6ba3a2-44ed-4fc4-b975-7b16e29ad17e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25a1674f-e46e-4b1e-9770-5cd63470d95d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bd32a74-00ba-4183-923b-06def6dff063",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0ea0a898-2083-4dfd-a782-4f61c301869e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9ec102c-60a6-4a5b-a960-bd922a216633",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f0bb8120-7593-4724-a27f-3d404d0c1435"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb205637-3fcd-49cd-a7e4-c141e1201c9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee5800df-f1aa-406c-86a0-eef237c7ac29"
            }
          }
        ]
      },
      {
        "id": "84ef2651-068e-45cf-9e30-9e083c3c8a94",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6591f1ca-618f-4538-bf38-34c441517bba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eaeb7e2c-b7b4-4243-b744-2a0dc65e82d1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8337aec6-0171-4f6e-975f-673f6298951d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9900e6-140f-4bfb-b1d7-8eee1ab097dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8293fec1-c8fd-485d-af45-06e8cd9298db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01153c43-19ed-48ab-b623-f65a2457aec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a35795d9-725e-4ed3-814b-a4da471ba435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b458692-10be-43cc-b094-e9046cb450dd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e26ec3d-290a-442e-bb23-cd3f2c6850b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5d976c-3c65-4a58-b33d-b2e60635e451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02236195-34ef-4f7b-aab1-0d8f9938dafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f9321c1-77c2-4ebe-8148-691f079f25d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d7d6f6-68cd-46bd-a3e8-51217acbee27",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b302f0-954b-44ee-9641-603c37657bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50c6e39-e51b-470f-aab1-265a94a02fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2a8966-db43-48d3-af06-98aa4b9c88e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f618d01-88ff-4f99-a25f-410114bba9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4929e6a-f465-4143-b90f-4a7d1045b3c4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e4f165-e964-4cb4-964e-eb2643a282cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa56582b-9c06-4443-9886-200073db6d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d2f9d0-5d81-4d25-ace0-f7e084bb38ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e801679a-fb08-473a-8e78-d25117a8964f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8897c786-1189-4043-b3fe-59bab928bf0f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f454e3-0301-465f-9bea-f6198d4c0d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783a7793-a5a6-40ab-ab9a-f23f366dcd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3492b7f6-a9cc-4d86-b2db-41c56daa7ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ababc7ba-881f-4eeb-9b85-9dd1b20544ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0dade3-3b76-4a5c-9c2c-a9f28c69bbbb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8885dac-c961-4f0b-afd1-59be00ed3dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9257f995-875d-451c-ac32-43b396158a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a403528a-04dc-4573-afb6-f11b7e49b3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ff0ca44-053d-4861-876f-bf7bed203a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0550a5c8-b736-4ad4-a60d-d80c2567ca9e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6d16f2-ec0e-480f-82e4-8a24d215363c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e9a0af-68fa-4ba3-b6cd-7d7e19bfdc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f244ac-4f1c-40de-a4a0-7017beb2061d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b05087c6-d6a0-4770-9123-d52498b2b855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c3396e-6646-4bc9-8fb5-f640ee072ab9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f8e224-646b-49ec-affe-55d16301f9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f2fd2c-a5db-4b6d-a94a-fda4ca7bf4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba65c0e-8c0a-40a0-b4ca-6572cf4cba18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da84d886-d0ad-4d54-b312-5774ae5ff040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e18ee0d-1b24-445c-82da-11e5d6054086",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ea28e8-c005-4b9c-aeeb-068ac43fd12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd1aabe-c01c-4612-a01f-d3dc4b4b1678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430d8ebb-5941-418e-b16b-abd76636c89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b772c80-4eb6-444e-95e1-428fdbeb7a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ea0581-3232-4957-ab93-ddecabe04242",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63869568-69c6-44b2-b2cd-29b32a457149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79250fcb-e7c2-4329-b37b-551683d326aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fd0f0b-350d-45f8-a167-af6e4ca87ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "013206bc-a8d3-4132-ba6c-b209926796d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed89c01c-2b50-4d6b-bd56-cda24525fec1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75be8645-da4e-45d1-8040-a2dbdf05fd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15058238-fad7-494c-b956-8652bdde8ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8acaab-0810-452d-8255-b10237f65a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f5430f9-c03f-4f24-8d29-645f7cbb962f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6993c2ae-eb9a-4ef4-bb3f-0d4d2222ab5f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4046a469-67b1-40a8-8d8d-a91a22cc0fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a815a84e-2d37-456c-bba8-4db23ab41529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183b20a7-7033-42e4-8a7d-0a106698ecb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7789ab95-7c7d-487d-a76e-6b28af877512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7d667b-68eb-4272-bc32-2d09ed9ae62a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c848e55e-5f0b-4917-a594-3f86dd31ee2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b64599-5db2-4a02-adfe-9dc22f5962d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff6d971-fb50-48ed-adcd-77230a224ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc445d1d-a936-4616-87f0-312c9a2c0a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cd3d37-7cfb-478a-aeae-a7e66210f73f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d66ed7-b5e1-46d4-8e9a-926735b50905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1a8d66-b7f0-4574-b49a-452fcbc1a33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d863ca73-b080-41c5-9a09-d9bfefb16c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18e1746c-579d-41d2-948f-37d8d1f5988a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49840968-4082-4219-acc6-ac56de7402dc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c08bbd-d782-4077-b5ae-57f1b787fecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1ef1cd-9e8f-4043-981c-953e9abfccd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ebac8d-770f-4432-8bd8-281111812dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02eaf163-84f0-4655-a95c-ee849c8b39ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b481dd34-4254-4042-b4f3-226fbe9f92dd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd382113-6c10-42d2-a65d-9fa0bd780e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfce55e-a041-4829-b088-b6fd6e0ccdcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf34467-102c-482e-ae34-22e982a6b754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ecdd5a2-824c-4cc5-a567-e95a298efb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e6740d-756b-461a-a970-23550e685c4e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63ad369-9e81-463a-b557-74a84d8230dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6587112c-f17b-4e4d-b863-7348e1140ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37d9d71-53d4-4235-8ca4-df7da7515b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0fc0036-8004-4c71-bfc7-7953de0b742c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8938a47-646c-43aa-af82-a2fad7fc60b0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fbcba7-3198-45a3-aa47-81805ffa0ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337d1493-1409-42ff-b3a9-129557bd947c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d3b3bd-3c47-43a3-8815-5100a4c65593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "01ed02b4-a141-48a4-a454-58208e4795ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64816144-84cb-43ff-bcb0-87b18688712f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acd67b7-dc89-49a3-95bc-9e3acf2dd9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dfa4877-7535-47dd-8d86-45cdd40a163e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafa84a6-bfff-4bef-892f-2d61dbf84431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "112483b9-c839-4935-81ab-6f9154bd7680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67610a1-aaa6-424b-bed2-67c2b8ca269e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cefc49-7b53-492a-a580-06fa7b5ac439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0478214a-43d8-41d6-85ad-c7198667b590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d5a9bb-7a4d-4b74-b115-33b44277ad7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "035a189d-61a9-413c-a2d3-44d1fe45feca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923ae944-72d6-40a2-852b-df27bd1f55b3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0186e5e4-1c6b-4671-ab7f-09a949ac7775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66014c4-464c-4e8c-a540-870d5cab2cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cbf8ea-ec14-42eb-82cd-2a07da01f0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b84b7b62-9e74-4473-a4a8-248776ca746c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73912500-72b4-427b-b35f-047a2f00c4d7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd1d195-37d6-4de8-85cd-6f22a47d337d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6775f23a-e5d8-4b86-85e4-b8b0237119cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c517d5e0-a277-47f9-9bd1-1a802ffe35b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ae6404-b05e-42bb-9caf-a7cd4e3e6e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a60d613-a4be-4863-b4cd-5d3a02998f2a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22ec0e9-dbcf-4a6c-a1fa-311d2914c986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be288c4b-57f2-45d7-a91e-c5c4126a0dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3416491-304f-40de-85c3-ce2c5d1655e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e02debd6-5e2c-4548-883c-be93ab993869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b98dbb-47cb-452a-b6d6-6ddbb5af4602",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab6bfc7-5320-4126-a74e-db60b7dfd213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2f8cf8-c840-4635-b5be-a3516694876f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b813cd5-74e0-40e9-b557-4b0f84c474e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d283e860-fb68-4bcf-9889-9aec12ad1c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0f62fc-998c-4211-a243-8ab2075796b4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e81f4ed-d68e-49bf-ae9c-ce0bd9322208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce1501e-43b2-4e64-9714-74a626d9c54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3fa051-2256-4995-b8bb-72e8a89f94f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3572c5d-1b6d-47ea-aef7-a0d14ccbf90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667aef10-40c8-4a79-9f8d-05c0a101a681",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7751106a-c22d-43f9-b640-266b97c51de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37a2899-f33b-43cd-a1f6-796eb33cf5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e7487a-d52d-4e7c-97f7-4f5b9a45a3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc48f580-2a39-4480-afc5-3b45a70f7027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5510dfe7-956c-48ad-8884-c9204e04d1f7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99aaffc-214d-4dd3-83b7-4fca26c259bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df30c9d-d137-41d8-a75b-f16f795bb2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c357e3a6-9745-4ef6-9a9f-58503973ae0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4526dd-482a-47d3-a8ac-b83894d8da46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b212419-55b6-4278-9932-721a2180e058",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb20618a-f1aa-40e5-ba1e-f758f6b693fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb415f1-5d2c-476b-ad99-45974d5d83d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc10c69-a0dc-4004-a4ce-36b4dbdc6380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7410a5-8264-4d66-a8a0-b567cd5d4273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a693b0f2-87cf-4254-a311-0e5dbc065c93",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cb8768-7bde-460d-a1c6-cd9b86e03bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576b83fd-e1ef-4bcf-ad93-34e0e0d0c5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dc9754-9abd-4e5d-89bc-04cdc6f3eb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b5abbc-8107-4d5b-ac6c-5062262a2e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c42e18-1b99-480f-a6c1-c7927592c47c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9601a0fa-92d4-4da6-8781-95614e7640bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1ce813-abdd-4bcc-bf1b-6f5d29835747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3d67dc-3078-4e9b-b6ea-3f83c8f2e9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3164c909-5baa-4608-b58d-264b02783bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2b0d74-873f-4584-9083-a64b2e8382cb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fa6261-342d-4bfb-aec8-95bf929179c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0de88d9-cc5c-46fb-a6e9-5647244a3290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9eb37c-ef71-48fd-aeb0-228d0ccca89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "658f221a-7a62-4653-90eb-ad29d6f4e9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce93fa83-12ad-4e88-a140-19d0cbc024a7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6384b304-d458-4d8d-82e9-84f122ce7e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000f0383-c19d-4685-8431-c33eb0f371ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc48946-d5d9-486c-816f-f98ffdb31c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9938dec2-7ab5-42d3-8011-08f08aa6d504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fb3a42-a656-4b7f-8e75-db30a29e1659",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac5075b-3e1f-446c-90ba-656aa9fc5678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bc9fe7-cb2c-4028-9373-ce216734c2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033962a7-3dc1-4faa-ac7e-6a1f4881f951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d0fcd3-7e49-4fc8-a420-c88f5e110fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65599fe3-dc44-493b-81db-a26802a5e213",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad3f66e-468b-4860-b674-813654044c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e3b778-7255-4af2-a3a5-d40e9c1f8246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481bc9ee-b325-43ac-9f27-cee37c8ae116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8082ad-b3ed-41bc-925c-f7c0d79a2b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c049ed6-cc48-4a6e-a11f-110a93310099",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d176d60-972a-4ab8-9b86-6470aff0b6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729dd999-5dc8-47c4-9082-5f1a6781eb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38496806-3dba-44a4-a294-f724ae0df6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ba7542-a66e-42a0-bff1-9353f4b2fcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303c6d07-81be-41b8-abd4-2f8b69f59872",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b814830a-b7b6-4056-b7ae-a2b9dbb4eea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc213265-b5ab-4b5d-80fb-58d5ce63ff92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a4f821-c9fb-4fde-83d6-4e01e2715d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c259617a-fcc3-4e9a-ad51-70aaa1ea0fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b421ccb-d028-472d-88f9-df8e2c78d735",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24d64ce-8759-4926-8713-72af3f7325a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f2e104-b731-466d-8f32-a0cef41969d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd08850-3d8b-47cc-b95f-f691ecf48ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60490671-0ae7-40c2-8658-c442f9822236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99165214-ec3c-44ca-b30e-36311d1e5b1d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbef72e-a646-4bdc-9c30-bbf61a39ee77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85add740-678d-48aa-a6d6-24805dce0dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b93d26c-624f-417c-8a01-b88e34ee6a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d508d98-dc96-43ac-a4ee-6fe2fea28297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63e9e4a-cb8c-4a0e-8710-0aec4d615bc8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab3e10f-2f5c-4edd-991b-b3a8d1b66cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e46104-c5d1-45f7-83bc-0797bf485a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42149b97-426b-41a7-a6bb-6fb3f96185ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7140f198-5232-4ba6-b122-0cda416186bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1613b21e-74e3-49eb-ab64-4fc8df003f83",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9820111-34a4-4df4-9f34-f64be61e53e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467ca09c-c490-4c2a-985d-0d3e3110b6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ae787a-1020-4ef3-b78e-d9a98226e8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b69610-9d1f-4d00-9aed-6303021b163b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31610c96-e226-4dc3-896a-e06e34e09540",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20a4ab1-f9f8-4572-bd82-db48dacf90b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc78de0-b650-442c-ae48-2a2d836a19a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1903c7fc-720e-4021-b0ca-5ec5ffda586d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c277d898-c135-40eb-a9b7-82bb5095fd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe64639-591b-4504-9faf-458153e5323b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c8d67c-0abf-4895-857d-3398bd4a37ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973ff563-4cfd-414c-8460-d48fe6e2bbf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4365d13-2033-49f3-bb14-e11c4eb7d4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c662d90e-65a2-4731-af57-1d9a28d162b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b3283e-b4e2-4ffd-bf07-90891fd96044",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842bf108-3dd8-489c-8fc6-5bb16a82b1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5318a1b0-69f4-4898-811a-0a91085af316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280be377-62b1-4f94-9e8e-76851522f14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bddfe38-e484-4e45-901f-1e2507167967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d41406-b64d-488a-8659-e7f8fc96b6b5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd36f84-eca8-428a-8882-379a28aba6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3f7e56-2a79-44c6-9f43-afd68c7d12dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c47d28e-da0a-40c4-aa8d-c5ccd8ab53be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4401cfb-1b14-459a-aad3-bf7ea8e03d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b17adb2-ad71-4b0e-bcd5-64127ada29c8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f938b112-32bc-471d-a5d0-ba12ee901766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c0d62f-f94e-4580-a6da-202e348551ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44f1ec6-8b86-4f84-9188-c6625651b155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef5e03e-9b5b-4b54-a4f7-f7910e728b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c412b0df-8f01-46d3-90d6-cd06c2a10e43",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba461faa-8df1-4310-ac54-0c28f23dd370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2521edb-0d2e-4e21-89ed-f0ab5ffc2065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f4e4f4-0846-496a-8927-a8ed6d2fc1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0010ad89-538e-44eb-a389-da4fe92cdabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d55d34d-07f1-4095-82f2-030a91c06919",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce01c5f-1ed9-43e0-b6c7-ece71eaa9679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf043ee-3b09-4c41-8803-46147b3a63de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f93f26c-ff47-4457-9aff-50ec67c2d4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f866979a-6cc3-431a-b6c4-c41af8aad54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62609b23-331f-4e14-b059-0f9f53d2cd2f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940ced7a-c79e-413c-8eea-a58ea9d6bc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6f3674-319d-4807-b3e1-d4e2a493aed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395c3b6c-1138-49d7-a9ad-5f3b5e5a7229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0dfffcf-0bd8-4bb8-8acc-a8a390de2d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84274941-2286-4d45-a65b-67753c20fa68",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3223ad42-51b7-42eb-b128-4697cfeb929e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7049a771-65f3-492a-b4a0-8fc3ad4e63d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cb0b5f-f8e9-4bd9-bd8f-8083bde82d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7d5d4f-8282-4adc-b0b5-5a087aad9169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4365e707-e119-4e5e-9e5b-bb52b74c989a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d433a2a2-4e0e-426a-9327-a11e56e212d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc35b090-ddff-47ac-b600-cc4947dc0a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3404c4f-67af-4b8d-9cf1-bedca14c7dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8d2ff0-9acd-4994-ac40-e55fed5b9a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132d5a90-2c02-4ced-967c-65c330eec2f1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fbf484-9992-4ebc-ba1a-9f0c524766b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12053062-7498-487d-bcd9-92d2582e2639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877f5d2e-55c6-43aa-89c0-ce5644dd0f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1807219-d2e4-48ac-81e9-e9ce84350b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a803e49-fa34-41b3-b8c8-4735adcab8f3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027623e7-3030-4c9a-b75f-d44dac01c3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5b34f5-043f-4f64-83a9-f3a844fac9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e1d8ad-795a-4b9b-bb95-6e2903e702c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c83152-679c-4021-b2bb-b528371c865f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af782cd-b0ae-4b73-968d-460277c71f48",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbcba6c-7568-45bb-af6c-3c5235803f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a308ea5-33b5-4d8f-93ea-3ee9aa10731d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e557bb-563d-446f-9fe9-3be04a38200b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3af3ef6c-4765-4eee-a328-1347548298ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5aa42c-d9fe-46dc-a565-0484a55210e6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0d37a5-6326-4dde-8e9b-709bc6e3b01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ebce93-d795-4ec3-b88c-87ed32a29447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b332b26b-24a1-4338-87a4-9770b4435d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20b42429-5194-4215-88aa-2f23ecc5f56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd784a79-7e24-4428-89e1-a6193ef9c516",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe442f8-cd93-49f7-ad51-a9d6880fe341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03217042-3583-46aa-84d1-07384a57c87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe651b4f-6d7f-4d98-8f48-78309297583b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2111d8-1f76-4fcb-abfa-57ea86dadb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cfff4a-ee16-41fd-adbe-773671b263a5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499237d9-fb10-4328-a80b-6c1c6a2d9ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8ee071-0ada-4265-8246-7e4dde6eebfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d992804-1c3e-43e0-b4e6-4f01f6d84ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "788b9631-a371-4542-911b-0c3d0ba91838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81418cc7-3d67-4e47-aabe-6009d010c338",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3408e54-4162-4d5d-9871-babdad280905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a6cee3-e793-4b3c-b5a3-9d75f14938d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d96ebfb-1dcf-45a8-98a5-a06d9448d5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3f61e0-68b1-4acd-a3e6-6b7b0f697086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0aa879b-96c7-4f21-b24e-c1a30cb73866",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bf7768-8013-48df-ab5a-10f85bc289af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2ed848-0da4-4ebf-974a-a0928b292bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66980e32-e2cd-4315-88f0-2f924bd81088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83b7a415-7d80-4d3f-a106-1ee291aa1852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13302e30-52ec-484f-9b2a-b9805dc1f29a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95a879d-3f33-4a90-88b9-3c5c507c348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236ba87a-b490-44fa-980b-6040c2c318fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e257ff-1da9-49fb-8369-a957eda07e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0270468-f97d-4050-94e5-608ec13164e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2388923-321d-45e4-8e36-ceb921c5d29e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3826e094-7b25-4cec-b198-b19607f689b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f71b005-d7ff-44e1-aa0d-48a470f01aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962421e3-6678-4aae-a093-9a72d6d53103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "41206883-9f26-45f7-993b-0efa42b8f677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e869de41-90bb-4bca-b952-7d8ad4a5484b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd1a0e9-9bee-4cb5-8161-6a495029135a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1b9c29-5bc9-437f-96f0-e4a5d79c7b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8a44ae-9716-4723-9207-3edd7a8db546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "62e7d4cb-e6ae-49a1-b007-4dec27c3caa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1ea447-d9b3-43d0-bcd2-3f9a7fac4af4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2d89db-6e14-4c33-b320-0371b0b2c56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ac9e2e-c838-40d2-b81d-0e0a6772f710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8497f13e-a9cc-48d5-a889-93680b6cfe81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c921e6-da4f-4a60-9fe3-5e44a3799ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147fdcf8-6142-47e9-a00b-f3e0e1b16ee1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772d43e5-b131-46c1-8557-e94012ffb1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c8ddab-e0b3-4771-b9e1-ff00fa4375b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196349be-3ba7-4776-b838-bd72bc80a4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7261e8-c4d5-4b6e-90c3-1c5edb5d9f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58051c2f-fd56-4108-8c31-7f3f0166d93c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0697d2-5e6c-4566-9890-a9b6d5083946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebb017e-8bc0-41c1-96a2-aa1a2c8faf60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd54504b-b130-4269-a89e-6b5968f92340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3132834d-2ec7-4820-ae2c-e0003f40d38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efda7909-fc62-4d75-8ed3-315e57a0f8a9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7899349d-e27c-408d-93a8-5496c141f5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c686c413-ad5d-4da6-9400-e0dc014e470d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edc7dd5-097a-4443-a8bf-200c7f336acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "455e419f-b7e9-4200-af35-aefd4e932c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1222b52b-a433-420a-8ba8-8a943487af62",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f63eff-e558-4622-8f92-7edfdec88113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a964c84b-54ff-42a5-93c4-7dd673a89551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc7eb95-ec50-4c51-8b22-fa09e97e7303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72fbe2a8-e2fd-49d4-8efe-653e00439ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c55ab65-1ac5-450e-a807-dcfc4cdd7bba",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10bac73-4a3d-4469-9772-671f9746652a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d128dd-6f98-4a11-90bf-0192d2c8e2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4091853e-c944-402b-bbf7-c43428080ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc86ea5-2b2f-4121-a2d6-ceb3dc76654b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0152814f-4aba-446b-b9e7-5bdcce14836c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a14d7f-aa1a-40ee-bd9a-12ffde7720a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3f299f-4304-4e73-afd6-24826147fdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ad7f7a-1649-4cf8-9274-8d0ac0e580fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec4c7ed-75aa-4651-907c-19359a3c1ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb582280-7f50-496f-8741-c04910d146c5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ef4fab-c104-4af6-ba5b-d8b7b3e6adc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b027d24-a2f4-4751-b605-e63a5719e89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0074413b-6cb1-4fda-9f8d-abab553d7526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f519c4f6-d753-41d9-b8ea-54e206a9a3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb22bc4-2180-48a8-9821-38cf0a213568",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fd0e04-274c-422e-a491-218e408ab160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d79653-09c3-417c-b754-efc0dd69abeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42510e62-b0d6-4678-801b-e7e0c97bc8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda1e141-0a67-4938-9557-e8f55a93f787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e69836-48ab-4ab6-8e08-e8156e03bb87",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449a8d4b-887c-44ff-81cf-fe9b2b1cf38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc0c08b-412a-4007-a815-c0303a001272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45083f03-49ea-48da-9947-c13a9467314e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b093c7d-5140-4c9a-bdd4-55392c4588c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea45dad5-e806-4a31-8ee4-b5d18edc3e09",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c78092-04b8-4e8b-a5b9-af96b0c1e1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936762b9-8499-4686-9bc1-8066ebc95727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5f5af9-fe13-4845-8f55-5135635b7553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d02aff-2a92-44ee-b1e5-8657229d228b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e953b6-0567-44b1-8e16-2cee10be0b6b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7d60e9-5835-439c-8a49-9cdd1889a5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c0fb89-32f8-44d9-8747-0a1c8c4fd306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de70522-21b5-4cb4-8692-246c9a9ee65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6f1987-7c5c-4f5a-8ee8-7bd5f23e3b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbda664-4759-4dfb-bdc8-c6f2496158da",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a45781-bb50-4202-817e-44021ce63467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43ab3f9-c9fc-40e9-841b-3cfb6ea6f110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2433a749-d918-4bb8-a319-ca8f12551c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25332dac-b6d8-487a-b9d1-07b09614371c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2224f544-d0ff-46de-9815-f37d9544c02d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0f8e76-0cd9-47d1-befb-5b72e4f0d08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a41325-24ce-41d2-b8d3-c4f08404a66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c86397-c19f-4cdc-90a0-71e7d90194ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf9e282-bd95-4ab5-b24a-6783387f9519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e77a5e-b320-4ffb-89e1-272d8f7e7d3d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc9ad46-d0b8-4b98-a445-665858d087cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3581df0a-fc32-4ffe-9e73-d71199595fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ed8f6f-2097-4e21-b326-b0b3fb4df57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d51cfa-19dc-46e0-b6e7-5450abca050a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3032c34e-bf16-4baf-afdf-46e99c9bd0a9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daee48e4-539e-4955-91c7-4c6a46513309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f83c6d-71ca-47e9-bfe4-0c184a373d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e44def-fe0d-4b87-a3cf-7d7defe6a283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7960c005-f755-44fb-89c4-bbadf804e0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59672ac7-696c-4521-b498-0eaf2196c17c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6e04a0-32ad-4c8e-bc8b-d72fa17bb990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2badac6e-0f37-4733-8a88-217fef8272b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c4fd3e-8a5d-4a93-aa31-682e673927e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12352d66-335e-461a-8bd8-93e9634b7e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5929060-dfe9-4261-9797-7299b516dfd8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85af3442-8111-4d04-8655-978873527534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d96e72-62f7-480d-a9d6-ce484481eea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdbc9f7-043d-4f32-974f-732a5b160aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aed6af0f-ed3f-40df-aee8-b9597fd840d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cdb530-a660-4abf-b2c5-e95e9ca84e5e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf72a882-7a74-421c-bbc4-05ac072c5a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4693c0-57fb-4ab5-ab59-cbc26babb723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64068398-3050-4523-ab39-12761b878451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "065c7d28-82a4-44f8-8920-5e2056fe407f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40690e31-7c95-42b6-8a42-3290a48e8c1a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9f1e30-3705-4b96-b8cb-1a1269ae6f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8470df57-cbaf-48ea-ae1d-34307afbc4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da2088d-f657-4b82-a340-f49156133c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0fdf03-7258-4712-becf-0168d17218b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4c2041-5ffa-42fa-93ee-0b6741588ab5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772e7eb5-7795-481d-8a4e-a2697d3a3ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc178cc-9c48-4e9f-a3af-86fb84553be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e277a9d-cdd6-498c-9d47-5a5a94432508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dae3897-ce18-4925-b07a-255dd1d2cd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7c4a3b-19ff-45c5-8d19-aed0218d294f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665bd0cf-f9a5-48b9-abd7-3f1ad71b1fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17c9003-fdf8-4371-843d-70144184fcec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e34f74-c4f7-4cb2-81b4-9fd79785fc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3885cec-9c6e-4e2e-a8f8-0e8994ca379f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b739c364-bd2f-4ce6-ae88-cca47600f6f9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0e0485-5874-415c-9e3e-6c75e1a00f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15b82a8-82ac-4f9e-9bad-e81ec8669fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46296234-0256-41ed-b1f2-d80b38f40a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f459c06-edfe-447e-8488-384b61eb1345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d206915-0be5-4fc1-b726-1e4a183ff683",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5b339b-a816-43ca-ab68-4d99aa7b4e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9069f02-2b6d-486b-90a8-469cb99a8117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cf0f43-f7ad-4487-b184-5cf093547a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49c929de-c9be-40bb-af99-abd19039b5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9f5758-4e31-4d6a-afce-8b09927e5abf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c3f247-48ed-473d-a95d-f575f414a540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14dbf2c1-373c-46be-b16f-60ec3db146fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0214a983-e3ae-47b8-87a9-cc1550c965d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78bc3df1-14a7-492e-8b3f-62144ba1e579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c939d24-c324-4718-a804-f92b6539b7d2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daa8f09-cb48-4b51-9b91-816635720155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fbf143-9c41-4650-905b-b824f11c0845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039f8f5f-1154-484a-bfa5-201d7c5d3438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe261d67-ccd6-4170-b2ea-65f0ee7a4110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f739a9f0-ed41-413b-af1f-5e7073c1810b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423a32ee-4b18-4617-b341-9003e1191522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3394ce12-d6e9-4090-8df6-37a6b917f5c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6e5c71-7203-43c7-b1ae-874fb10e4816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2d1395-375e-4a5d-a435-450dbe4848a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c046c4-d551-4c43-82c1-9495c62ef810",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350105cf-3f22-4a2f-afbd-57259366edc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8842e7c8-33ec-4e0a-b966-a931a451f67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e96813-b869-4fbf-addb-b4c28e9a275a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ad7a28-ec4c-466c-aa5c-d2adcf5d6d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca64780-f7c7-4a88-8087-d541aa3d80a7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45db081a-1bae-435d-b618-62dc7ad74072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa7c7a0-f7d2-4df2-99b0-9d589130ac94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb98129-cbc3-4127-80c6-e9ef08c3aa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "640c101c-9539-4192-aaf8-7c596bf647e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a6c94e-7d46-40dd-8efd-cb5b2174dca8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e579873-4f05-4ac5-a795-9b933d159aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db7d6ab-0737-4d29-87ba-aefbf1c58f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c173d64-41c2-4939-9bf1-8fcb3acfe09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "88853018-95b0-4367-9872-c4b8c5ea97e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5206d40f-289c-43af-a403-1b473be93ba5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d352fe2-1945-4430-ac89-53a3fd36dc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "34143e85-93cd-4a5f-b6c2-acc6c1d3b155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec82b680-912d-42ae-a2f5-6a55430cc69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a829e0-8801-4ac5-bd7e-176216279996"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7134557a-7bb4-4715-af98-dddecc7edd9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82e24049-da3e-4943-bfa5-f32a21d9aeb6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998a668a-b87c-4f19-ba6d-a2381ad6cb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27e05fdc-067f-4369-8052-8f1a72cf915c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e18104-51d5-43d1-a21a-774bd0dc93e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d031ca4-d0bf-4efb-88eb-e214ce2f80d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b3c0ea8-0d0b-4910-b709-f15676d70178",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "402ae80c-ab32-41fe-b363-391d91c32013"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e16ac38-88a3-4a60-8b46-bd567438b992",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86af0bcd-a5a8-45cf-8ab9-d7ff86312d82"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da3c0c1b-3989-4813-a56b-24fdab8fa4af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "950cf2dc-cfd0-48c8-a832-bb4b7b0cf13c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bfb079b2-5aa5-4e16-a11a-e96841bf39b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8c13acf1-a7e3-4d1c-a04e-3b0334ebde14"
                }
              }
            ]
          },
          {
            "id": "56e9a4eb-50eb-40dd-b6f5-07b9cd660ffd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e29fe25e-1907-4a98-a5a7-10e1a5fbc15b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1032111b-5d86-410b-a637-6870b3b84b79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4594471c-215a-43a0-ac4e-562b16c5a14b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46d7b2c7-ff2f-453f-922d-02a24ffb08ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8e5be79-a425-43a9-b562-c047a8fa6f40"
                    }
                  }
                ]
              },
              {
                "id": "118bb6a6-3729-4187-952a-3f5f4b286b3b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a8d6652-ff4d-410b-95d5-730a52b6a68d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7bef079d-45d3-4948-8f89-4f4fcd248e43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce83c469-6aee-4934-b26a-e65754dfaab4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85c628df-89b7-4d27-8dfa-c83e0a32f593"
                    }
                  }
                ]
              },
              {
                "id": "12efd68d-ffd2-467c-9837-685517c471fb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45598a1e-5b24-436c-8333-bed1d750c5d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ee11ac6-34de-471d-8b86-7b9629459d1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e57b512c-5175-428d-b10e-e1b8429f52e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2ef70a4-67b4-4456-92b4-3f76bf7b90e8"
                    }
                  }
                ]
              },
              {
                "id": "55491a01-9967-4bb6-8d08-f9b7333e565f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e071bb50-e679-4b02-8b3f-d4371d7a3f9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c78bd633-a38b-44b9-a755-330cb74c4907"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66e16e11-7ddb-4da4-bc66-8c5817f1772f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d5e33a0b-33aa-43a3-940c-bfc796c65bc5"
                    }
                  }
                ]
              },
              {
                "id": "ffe25ad3-e941-40c2-b8bb-2e515098c39f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc8517b7-dad8-498e-bca1-920c48000a16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c12eeef6-a811-4776-8d42-2b3f6f8f60e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4702b4b-a8c4-44a6-962e-8935fcbde43a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "351e9e83-6316-46dc-8db3-636f5ffc7c94"
                    }
                  }
                ]
              },
              {
                "id": "36c8f870-78b1-4483-ab50-3841d58ac5db",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0defadb-7460-417f-a0f3-2e123ef7ee2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "060cce0a-7791-4001-a47f-a6542fdf6a78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02142a96-7ab2-448d-a741-da9ff3954bba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d3593661-a3b4-4382-aeb0-75f86af0e388"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52f6b7b0-2810-4077-bbe5-7560f287d86c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "995ac8ba-190e-4c76-a973-50c2e737454a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9644d8bd-9e19-4ccd-a89f-527b4b25d675",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6729083f-c7dd-4eeb-80d2-0b92a6c26742"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c75c63d8-0dfd-4c70-b4d3-68aecb2b27f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a317adc4-a174-4c0a-8ead-4981970abecd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38506d96-8b27-458a-86f2-982977fcef08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63240446-3082-4c9e-ac86-22d194494d3f"
            }
          }
        ]
      },
      {
        "id": "619974c5-e8eb-4bf6-acdd-52cc363b851c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e296ea71-8e25-4e23-a9d0-8b21c273fa78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23871fca-f90d-4f1d-abed-771358ea6580",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b74831e2-f646-4368-a05a-181ee2cd9d66",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95dd0023-3e1b-4f39-8677-ea1162cf6e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d8b431-1efd-44aa-aad1-3c55a687ad04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb45f0d3-3c18-4ba5-91a3-dabb456555ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3b20df-d507-405c-956f-e11a45605bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a96cb2-618b-4410-9c89-8cd83c6fa72a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e0c196-24f2-44cf-ae7a-22aa0be8d276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3c4a51-faf5-4c3a-8916-8ca2fe02602a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bd7d04-1db6-46d6-be63-948fa8fb748e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c42253a-de67-404b-9a73-ed2eee7d2cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f22648-b3dc-47aa-8b4b-83348de3094d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaf5967-7a28-4b7d-8fc8-3ec0e321988c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503c67ef-8ad0-4a18-82f2-a5a9f426bad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e730e99d-2d7d-480e-a016-188a81d2bb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19ff1bbf-3980-415c-bd1f-0caaea331c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a35df69-04db-4c86-85ed-aea8ca29caac",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead067a5-76a7-42cd-bbcb-1eeed9c8165a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d682498a-af9a-4957-b1d9-38cc0ae2dcd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b589c3b-9ce1-4c87-9a4c-718aa81d5bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09d8f4d1-1373-4302-ae12-75f2841764f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8d7e2c-e1f0-4401-b82f-4ac990d6fc1a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150b092a-0861-432c-abdf-b12f198264b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be5bb7e-09c7-468a-8cb2-c0211525259a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de31c52-f842-4ca2-a804-642fd1c1e2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1625b770-9c80-4fac-b2f1-d55b49c95c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39630bce-abb9-4f19-8893-00a38bd276dc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efffb4ca-782f-4890-b5a3-54a574e8526f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce5f84d-cc91-49cc-8d65-77833e56cc71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb0b445-3b00-4304-b132-38333761b05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a58e65ef-269d-455c-98b3-4587077db832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db236d0a-fcf9-4765-8306-661d24f8c169",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d2dacf-9d1d-4f1a-a6b8-3c4a3e83c9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea645f1f-fc64-4b06-a6bd-0d7e137846cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326cf3f7-ee30-4f6c-add3-f6a18e58d68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c8a9cc-b365-46f3-bfce-aa19178c7084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ba6700-c43d-4fbc-9f55-16eeb85cb8f3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac53458-ffd0-4011-9568-7fd97db1d3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c57b52-efd2-40e3-88cc-24ae8cb719c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af513f5-8a00-4225-8b78-9995cdeaca55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce6d19a-c6b2-42ad-8830-62a252ed17f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c968d64a-ab58-4cb7-8349-6a92382ad81f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fc3af6-6354-4852-8cf1-f670e442e12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f67c87-111b-460c-8654-1eae48f9b608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9523b836-9bfc-4a71-a3ef-6aedb3cb7fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12825077-fc4e-4f74-ae3e-4e13bee36a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8d2b3e-726b-47eb-aaab-db32febc4a23",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67f4814-8994-4f1c-86e7-46a9b9a6224f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6367aa0-f0be-4ff7-a37d-aa5181edc1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bc3c62-6c2a-4cd7-a333-b1900e95d236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8589fa-f9d0-4168-85ca-8b0a410b0fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f4261b-bbe4-4816-8a9d-33b3872fe756",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ac26bc-a415-49af-8141-1143e487ced7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf30dca-9c0e-4128-8ebf-3480206bf70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1f96dc-c9f5-4f48-8c51-3dc7989f2d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4743bf87-db83-413a-b6c7-59c4735574af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8b7454-6bcd-4c1d-acb7-7e1f2be92db0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fefa5e0-4fdd-4c79-a03b-fd9f839bce97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56ac12f-c1cd-44cb-9bea-da63d3afaaed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebff9b1-61bb-4192-b9ad-89d8e6806084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bc4069-0044-4b9d-8d8c-55cb5b5073cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda64caf-4333-43cc-9e47-199724b27950",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a0a093-0a75-4152-a9d0-b39a171cbe66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047f4395-5f50-4220-8aa9-6e13dd79bf84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e54cb7e-cf48-4b12-8d65-3151924938a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf39413-886a-4e49-92e5-6a4c4bd515c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6498d106-75b1-41b0-8743-2df3965f19e9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c003f2-1ca8-4467-b7e1-fb7d4668162c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1cd852-a467-406c-a407-93bddc6b1afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df03c8b8-1081-4a11-adac-a1289ce1c71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "faae976e-4c7d-44ee-8405-f9b4e5489bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67297884-6f25-44ab-87d2-25972b814096",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1210da9a-8322-4fd2-9b9a-f1d44707a744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44c7fd9-36fa-405e-8e0d-5b541b560a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a0a66b-9d5f-47a3-b25c-fc80828e3498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "68c7f829-b28e-4048-969a-d70dbdb75464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01a35e3-f9a9-4290-a461-f6c3e1652a6f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853c35bb-0576-416a-a662-8aeaa467fe08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd941fc9-1298-4e23-8221-8b706e843128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1325581f-6388-4dc4-a4ea-e2fc4f0473b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf35e11c-5599-4c4b-9ab2-0837409055cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a3a081-b01c-4498-b6e5-68b99646706e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301be0c8-a839-4662-b7da-7ef40498e3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0e90c3-75ca-4011-8983-9bec46dca1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83217da0-cf71-4f6b-917d-429abd778f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbce7aa7-787a-44ee-ae2c-cb4a32b78b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fd81ed-8862-4458-ad59-7fa450466453",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdd052f-dc93-4617-97e0-88a855057e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f63103-ffd0-4c4b-b6e7-ca4d81e6bf36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a9d434-8872-435a-ab9e-9762476c5a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b37d68f-4d6f-47bf-bbee-97778eb26b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3e8f56-5a52-437c-b8f0-65f34456cab6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce492713-ac6c-4424-8bc0-a3023be2998f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09dfce1f-2a16-41bc-99fb-c1e5da1ddf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44c416d-43f3-4d19-8f3d-fc338f8b339e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd21e31-a008-4282-b0d7-109f1d56a0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f5a830-1078-4ee4-a67b-8ec7faf88e79",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b5e202-d01f-458a-9d57-94932dde10a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2b60c7-25af-4a33-9354-79fa2fac0133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ebc600-8720-40a6-9264-2234c39bdbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7de019f9-522c-4b09-bed2-c7a3d0a496b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ba995a-a129-4597-8cfc-1f151a5ddfaa",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5426c6aa-a70a-4651-9bef-98ba96bb0e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6e450e-7f1b-4df0-bd6c-8515f544cf85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88648a7e-5a31-4493-b0e5-26d5e89e389d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "906446a1-4bca-4b57-9202-d411d3a8d0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df88418-4a27-4154-afbd-55c369f2074e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714bd086-3df1-442f-a02c-b3f7f85e4ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11cac98-58d8-4645-a673-63d0ecd6f0cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c663b94e-9fb6-4758-8dad-edd3efe80c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b19c36c-ae77-4791-83f4-9f9c0eb9908e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e20abaa-acea-40b7-b513-d698f02e08a5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c0743d-a90f-45a4-92d1-e92dfd913a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39451caf-585a-4e71-b8d4-f8415da314bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645781d8-2128-4a2c-9d5c-e97d90d456ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddde07b3-8930-4f94-bbed-a90ded31374e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bc8c56-1579-46a2-9f8d-c9ca58b72436",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a907adc-0955-45b1-ba62-2f479a7557f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8962ee1-71af-46e0-8e07-62e4f5267da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c6ebb6-5576-4266-8858-81ae6e322826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49bc3fe1-2d27-42a8-b9eb-731e0fefb81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f3435e-277a-485b-ae0e-4994146e93f7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1765c94c-1811-4417-bdc7-1ae658f7ad94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d062a01f-df20-475c-b6f6-fb7002b76098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47089ba9-d6e2-4023-8b6f-e68d23101fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d21df9-5ef0-41ea-87ac-ca6f65114b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0072d2-1017-4521-bbf2-e2e00a4731e5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac66d8a-f439-4dee-94a7-44590f0f49e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7815bdc-9193-42be-a345-291cd2447668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40bd8be-1370-4b40-973f-a6760c336131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a735b49a-f0ee-450e-8256-98471047a0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5b1af0-6ca2-4a21-8a11-bbc27a0fbeb5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df532647-6f90-4d82-bcd6-6dab055d3015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8102893f-b3de-4cd3-8004-e6d663e935ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016f9d76-0ffb-4fa3-97b2-85d66282ec42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a220ff8-aa81-47af-a350-c657eb1d989b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dccfff-4397-4ff2-9b6d-47097d52b5a7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8008673f-0c04-4867-bc8b-134eec415c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662652a1-9f9a-40a0-ad21-05a7c0d7d3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33136c38-32af-4583-afe0-22fd6247c6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5e5203-071f-47c7-99d3-208c285cd8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c315383-0995-42e2-9fda-8ea9ad9ccea0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415960c1-8cf3-4ff7-9052-ee8beefd3768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caeefdb3-ac20-4218-9eca-1cd07f4f70fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7849d94-2a1f-4ddd-b9b3-772ea7e688a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "659dd189-4010-4ba5-9f29-81580dbfa1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ad0e0d-0899-4c81-863c-3f1a27d128ed",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d874ff-c6c7-4d26-8f87-41cdda8314ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb5e20b-0d39-4611-a3d6-ea78d159c452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e405aff2-d25e-4e09-9980-cfa6ffcc7c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77aa423f-cf0c-4c23-a32d-abecd7765e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2eddaf-be95-42f3-98bf-adfd28520f70",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16362ac8-e38a-475e-b9f5-3bf515e4c3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90310467-c63f-4bde-a1bd-66ef97cb794d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90efc844-6ab5-407f-8f05-4c5e40dd9e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e89c3bf-0a13-455e-b1b0-b6b81fe7e912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1921da-defb-480c-aca5-dbcea4d1979b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4358ae-a7dc-45d7-becc-7d3f2b0367ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e09e63e-739c-464b-a429-b3894fc78411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a9bdb2-69df-44b6-8a08-d7d082cdfc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f18e253-0eaf-4ae9-a40a-2bc2e74dac61"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1944096c-ea14-4c97-8460-aeb702bb0459",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5d823c61-00cc-46cd-b407-074ca8509486",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad84a43-e54e-4669-a11a-5bb5c00b37b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "abc1d65d-9b9f-4999-938b-2f649bdece9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed89c6d-f53f-44ea-aab9-9369b1311248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "926ddc88-4cd9-4922-bb24-8d4aa31489ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6226f76f-ae65-41a6-86c4-b0aadaab4ae1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a8f95b3-fd14-4faa-8934-2d88735933dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45131921-c822-4540-97fd-bc9f9399b5a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "732d10df-4a30-4221-966e-d5a11ad6699c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d45e63f2-0b4c-4593-9155-144ecc7653af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ff6ae6b4-600a-4f23-ae60-ed25aaba3cf0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d7b5d6b-ee90-49e3-a8c8-ba5acc432a79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "584fa50d-150b-45f6-84d0-26e5ae193bf2"
            }
          }
        ]
      },
      {
        "id": "4f1fbff3-03ff-4930-a9d4-b0a6a7579b5a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "55258bc2-1616-487a-b4cd-f04d8cd85f45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a778d544-06c5-42b3-93bf-8b9eaa9fabc2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "530ee89e-897d-4689-bff3-b42dc6e2225b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2852c42-9feb-493c-bec5-a5a467c66185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f5a757-7653-4cbb-9326-7ef72fca8821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28f6cd4-727b-4989-b4e7-ab4dc6d3fb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "806f68d9-2b99-42d2-8ba6-4b88d59bbb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920b80cd-e5e6-4892-98cd-281fa6c56838",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acc2257-6544-4cad-b00e-f16c16f18605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916b48be-4732-4bf0-9f02-208984fcca3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b75995-72f5-4262-8627-bea45576a1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "195a9e6c-a7cd-42bd-99c5-c9d3b367f2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f9b6eb-80e8-4772-a99b-cfd9382bad72",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0866ef-0fe3-4ac5-a9df-b44751a9ca5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e5f9be-4dba-44fe-a54f-5eaffbc237f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61555b0b-ee56-47eb-8459-cc0a438516b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36829472-0994-47b8-b0e2-8d45997e972f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ffb351-d555-473b-856c-917fee58ff8e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9766f4cf-21ac-42c9-a4d2-4dcf58482eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6674c3a0-832a-42de-a6da-c037acc643e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7e0107-1b89-4d22-b497-1c8f1a2cb845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2775dd-0a20-41b0-8f5e-cda481f60f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b6d547-91a4-4d68-a568-e8093b1a9ac7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f521ad3-b057-4127-a061-e3a2afb7b45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f621a40-1d68-409d-9c9b-ddd9bf2c39de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caad0e09-bf81-40d4-bfbe-90e213ae6d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52df288a-f170-4352-832f-e9bcce4aa1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6725a3b2-4a13-413b-9197-d076c84a9a00",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272e5e73-cbfd-415d-8db1-225134caa797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a14fc7-a14f-4ecc-b4bb-b85f471735d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5b93db-71b0-4b16-8d88-637d524b75d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2d8bf7-aab1-4748-a38f-cdbe2412fa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b87a39-8101-440f-8147-a643b4acd796",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a37802-9a3e-450f-9010-39ba92cdc387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b262b59-014f-4f42-b2a1-44b4de495c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4f30a4-c74b-4072-8c6e-2d1183237ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a514683a-1d96-4ab9-9581-273d13033729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b81a4d6-c235-45cd-8627-27c42f5d37ef",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c60db5c-65af-4820-a829-d5fc739794ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18b8684-8923-4462-bc1d-b97de4e26c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da21238-7055-4747-8b82-e9449c5e008c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ced1ea-fa45-4953-8491-e123d09e500c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0abe96d-d6cc-473c-ad53-2b10bbccba61",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1f6409-7c28-428f-b211-129142f216e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18676789-2073-4b5f-92ed-0a0d30a41605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3916bc-39e1-4563-8917-4646e085c90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c95a7c-7524-4fa3-abfe-20defd22c01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbe16bd-7851-469b-9b92-b0d75f8a3d09",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fea32f5-d56d-41d0-bc85-15c9b6b8a3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910b17b0-dc4b-4f36-b8dc-1c98a6be81ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8dce70-4b5b-4c41-b46a-d62198c93a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a10130bd-7da9-49ff-9577-0f048f7738b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e09a24-3d6d-4668-af78-8df6c3256a1d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fa2194-0438-465d-a139-00190d73c6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e5f031-1751-4772-b72b-92264f324a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e89b48b-5a2e-4486-b53d-9b474d95f4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "977efe69-2e4b-41c3-876f-2b5b0469dedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d346e6ed-8e4b-486a-8349-6804ba8403b4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c14849-34b6-4a92-9943-3ccb7c17977a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d701150a-2a84-46b3-b44c-a6a15a6b1ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7f18f0-4c98-468e-9425-b3d15c3edd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "804fe4c8-6ec8-48a2-bd06-431c11947483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9618833-42fb-4c18-bbef-f8b28282f71d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5ef309-083c-4f1f-ba8e-83459107de7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142230ba-b9a0-40c9-9411-97fcb772dfaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b2c482-b0d0-4d36-be7e-3443e9dbbc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78043120-3d57-431d-bf7d-d180dfd6ce4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47547370-8997-4fb5-8f9e-86289b61aa6c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c46b9f1-937e-4aa8-a3d9-51f534655969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a83eb2-2081-43ae-ab40-e6c2f9d5d2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf79c839-3add-4e76-b693-86a16ad4940e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15d6342-7818-4e07-9e73-9caa3f7fa112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757d1fac-3e28-478a-9100-51a84a49ac0a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9eb82b-df94-4100-ac0a-535293d77326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301639ce-ea48-4e75-8ec7-e552ce5016c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d57683a-86b3-47ea-8144-f6d146a485d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e264bac1-e130-4685-a6b2-9a987768c7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc4f2f3-1f9c-4b36-859d-90a92318e54b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1541e2be-da72-4e1f-bfd2-93967c94e622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c59f40-c10b-4c60-8e11-793793bc8395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8138a3-1fb8-498c-93b6-a9c2344c65e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6390ad50-5d2d-4494-9726-bf59c35a6216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2723a521-4eb9-4fda-aba3-5061af744aa5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f907ee8-c9b2-4995-97c7-d288a7b1ca77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821f6a36-40f2-45f1-b25a-5ec11bcaa238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdac7d62-d880-47be-8f0e-b926b245a7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9bd936-395c-4dc7-b71a-94216b5116b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81898b11-dcf7-4d66-a435-39d7d8cdda00",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab593cf9-916b-4a41-bc75-7d2aa0bd2e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b788df8-6771-42f4-8dc1-8345ad5d447e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1197966-6ae9-4d5c-8c35-11bb19240872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "81d2cb9c-ca61-4372-acb7-0bb624e464e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8223ac-cf25-43a4-953d-11e02485804f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48bbdb6-44a6-481b-8a3b-a7fc40890bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2724caea-3c67-4444-b1ad-ac61c04c5627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4e6654-25a1-4eab-9b97-d14e317d2754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5447fe90-a6a1-4402-b507-eb567fbf601c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dfaa47-67bd-4576-9c2c-4a747bb66833",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3ff2ba-07c9-4e80-87a5-a9eeaf9dc0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038e1a81-b076-4a97-b1a7-ad0afda1ede3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a444593-7484-471c-b28b-bdc21be26e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6972c19-8127-4542-ab4e-2f0043bad821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7146ffbe-4098-4806-a9b3-9364a5638ba8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e4888c-d12f-41f3-89db-d0d4268bc7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b3869a-8d82-45cb-ae36-f3dfdb9d4f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de5a170-1f5a-4b55-bf09-80f01d3fe861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a69eb3db-326a-4867-b7e9-62ac79ede025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2b50c1-ca1f-48e1-abf3-0216249c171b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ef6b83-2edd-444d-a558-a0394ba4bbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6b63ef-5755-45c2-9351-6aa1dac6c08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62020b95-6fea-48e7-8d82-6ecf9830aa96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "667e4176-e285-4824-9273-c5fc188f8dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310b070a-26ab-4b21-8688-84dca399cadf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8259b0-74fe-4541-a2af-fbf047650cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23907cf-6c9d-483b-b085-69959edf326e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcabf6a-aca1-4fb1-9e3c-d8b1f51233cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79c56681-14fe-4b60-8961-ef548bf27333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ff53f9-878c-44a7-aa22-555133443391",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b557641-52e9-469c-8e97-1cd5ab6bb647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f949f0d5-94e4-4fae-a1ba-bee354e5328a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf208c6-b0ec-4845-ab11-792c1213feca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c53e5fd4-1b70-4d6a-8484-fc45afe035cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42baa0ba-f681-4d81-b706-823b5b56aced",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f29f80-0cae-4fe7-9bb3-8dba47b9e15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c73410-b743-4654-9351-b58eb0bbb8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87609ecf-461a-488a-bf4c-d94630c726de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9975c2a-0fc3-4bff-9787-a7d04d0de484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a634dba-c5a2-42f6-99f9-d24022d82e1c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab16b401-fe9f-4821-9813-2be7302b4f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da9a27e-255f-4f37-ae34-5dbdebc24277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68906b76-dece-4f2a-ab73-5141ae356bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a041afd1-42a8-48fb-b116-fc98e47b463c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b78d6d-f8b9-41a4-ae1f-58f6a5dc6e3d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a773e71-6697-421b-81fb-18c119689e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6dd9124-eeb9-42af-ac8b-3abc720a276a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae726a1-fd6f-4986-88da-f36f2a13a6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb5951c-9ef3-4b3f-9bff-74a0e54f0270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4c1281-04ca-4519-813e-c6a7eda9c0de",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54a29f9-c933-4a8a-a2d9-f593b2ee7062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef87046-b728-47e7-822c-d2e6faca538a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dc7eba-ed4b-404a-aaba-0005aee80c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b6c7d0-5375-499e-b4b5-65f797b6e667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07f6ba4-1029-434a-9d49-406668172463",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3197ef25-a5df-4560-a658-364466060b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5425bf95-0230-4eb5-bf14-fb8661849f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa29c49-fa3c-468f-ac55-bba732ae62b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2f2851-b96f-4f91-9773-32fc2afc3833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a97e69-9add-464a-9905-831d357b68dd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501fb691-01db-47e5-ab21-3d2bed7df913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c88a70f-0ea0-4d9c-80b8-88d5ca3cd1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89061c62-b54f-401f-a1e0-aa00912eec3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2ea661-8ee3-4e1b-b2f9-74def249e85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8520685b-8e26-4ec1-b1b0-14f41c933e0f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2e940e-1690-4ab3-8f7b-12940f109910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ede2d4-d0b8-4d6e-815a-f7ac72afff32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bb2a11-e736-49c6-8f1c-82f098f7bcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a424e5cb-c331-4794-9a89-f8aa6a08f18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9773c7a1-aa38-42ce-856a-fd779df27005",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9a6966-4661-4791-b520-42486d6c14e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0be12b-9cf7-4960-8c45-b7d6ae8677c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcf4676-0db2-441e-bb68-ac63b01424ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df94b1d-9b22-4f21-b8d3-a00f1ef4ba68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df266d6f-b3e3-4b6d-b8da-b7e97b079e56",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3255a37-ec9a-4813-99e0-ba03a2147fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4463a2-7199-40e5-a59c-cf7edeb01543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e86e8e-ce11-4ee4-ae95-23c5bb697f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed96d092-5d5a-41cd-8858-b18e89dcc6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9684e360-714e-4d22-8c0e-ae8ce415c631",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a995043-ef50-4690-a5bb-fb4976784152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e122e7-9164-4829-897d-2c29c6652015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c9344e-d77d-4efa-a094-8d69ff423da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae66ef6-f44a-4e41-baab-513042300799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0756d3df-3b75-4a76-b30c-236b2a79f5e5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627e03ea-183b-42bb-9c9c-d4487969b4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f833aa-1ad7-4e52-aff0-a39af3501430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae134db0-4a88-43c6-9617-5944d87510ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0627f7ed-5b1e-4243-b4ee-da6f3222379f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5690c5e-c316-47a0-89b2-203e5320cec6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f49abe-1b5e-4151-8b8a-2940b534d80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a259e8-7348-4b82-8478-bc9d31d15d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f115e7-8480-4b56-8a3e-9e00f8f6b212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "799a7cd4-6f11-41a9-8416-27f6aa848f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c50333-66fb-47b2-909a-b9b44dae0e67",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06c9411-9486-496b-b600-fa258af8f78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa150c8d-0866-4a1e-a6f5-13885dbb9885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bb4123-c519-4b46-9460-7489822aaa98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8671627-fd20-4bbf-bd04-6b9da5f45f1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36314284-7962-4fb3-acb6-df9109991f0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b7387f7-ee2b-4e0f-940c-2c446402b180",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038c28bc-a49e-4d20-aac4-bcbc750daa4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1470f82b-53fe-458e-83c7-d19af352d7f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a351ffa-6e53-4973-a7be-d37fbcfe63fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a133e00f-25a5-41ea-9f92-8d22542e0925"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7967073c-9377-4bd9-ad95-123c435081e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ee581af-ae7b-44a8-a48f-c8eff8c4d29f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74068689-c4d8-4133-9063-11d607ce8ab1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a763ad6d-8956-4f05-8fa4-04103bb4e6d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e59b08d8-00ff-486b-b94c-d606a38df91f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6db5c489-e3f0-4e38-949f-c87307ebf427"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f57f882-6c9d-4fbf-ad98-b8d1a4000512",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "538a51b8-e893-46d2-9418-51d2733d6471"
            }
          }
        ]
      },
      {
        "id": "5f538222-2731-47ca-a8ac-1ea1320d8945",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3e327708-19f8-4c06-aac5-1698979796de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8c95532-4a19-462d-852b-2e3977d86161",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9d275152-47bd-431c-88a1-406c1c3dd729",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f5454d-678b-4df5-90f9-df2c21bf6cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502a72f6-930a-4b59-be1f-944888e42872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcc1356-67bf-4bf0-a36f-099a43328f1c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6295aad5-66b8-4547-aad8-261752924afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335968f8-6881-41b6-864a-6eda1d2a3a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49fcca6-e0ee-4a8b-bf83-a923b68d3350",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e23573-243c-4165-aea9-23667840d457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c14ee74-df0a-4826-b724-317f94dd25fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f8ef22-32d5-45ed-9fb3-dfde025ed643",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7463dc-7829-4fa6-bf44-7245b3044c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcaeaa4-7dc1-43f8-aae3-9f57537f6993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b581082-a03a-4d30-8d85-ae5efcf7fe91",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20174558-f0d1-4106-a0ad-2f067aa6740f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cbac7b-4395-431c-82a9-14eaa4fe3d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7c786f-ebef-4bb5-a61d-414ba2bd168e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa1176e-2cff-4374-acad-a561a6149117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d4e813-f269-4a10-9f42-8e7eaec0715c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768862f3-33f7-4080-8861-f5724396fb35",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228b16f3-2982-4c18-996f-074afb69bd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934ea13d-45da-4f79-99b0-67594be783c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bf26fc-7dec-4f17-9960-d4173e65f22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3b5e48-b6f6-4793-a290-2ab27b7fa750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b806c4ca-74f8-40f0-8c20-97b344528315",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a25a22-6996-4d62-ace4-bad77167b314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "092ee82b-8a1d-42f6-9337-fa2b3aa0f79e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8f3c93-2c76-4734-ac63-3302249274ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9229c4df-6f82-435f-9653-c793811094a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93483dd8-7886-4b57-ac17-85fc8913c0d1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af54a38-8c6b-4496-b707-6a73f4f817cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e9e650-5d81-4923-adec-cf27058507be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c713543-6ac3-4212-9058-8a38d7a3ca9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2031acce-82d7-4105-8c78-50514392e7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92ea157-afdb-437c-8e7f-af954283d604",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2979fd3b-695a-439c-afed-398d849a6594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895dcf51-aa02-4cfd-aee0-28560ecf7876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654a25a3-f7c6-4d2a-a92c-8a3f2762e1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117e4c2c-29b9-4d01-9e5a-faebec6726b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b3c5b5-da39-41d6-8c6c-6d7695d63a85",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1809ec2-8c96-4bfd-92dc-74b974b7d4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9dcdca2-1c64-417c-8c8a-d3c114c7f252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434dfb57-29ab-4b1e-92f8-d363d2712fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f3cf11-d387-4f07-91f7-6da27e3c949a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4495bf78-d691-4b72-bdb3-f5ebe91962a8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6837195-ee34-4be2-bcb3-cd5ebc3bf9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4509eb78-b328-40b1-ba82-f6c930281dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c112b2-7edf-4959-8009-b49789673683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab7d45e-2d71-4162-8b38-f3e02fb62349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310b2d47-7c76-4f49-8754-3b927261e726",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac83fba7-e54f-4947-a4ba-54435ba3615a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b063d652-b6ae-4e39-a913-02d41d5ef820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9ac169-6654-4bd6-8e48-531c75c37c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f35dee5-9e3e-484e-9e32-10eb9c6997e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead4910c-69cf-4fd9-8838-fb93b52afe93",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae072aa-381f-4ecd-a1fc-8ac757b817b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c87abe69-b500-4d69-840c-1b04446a2eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fd781f-5433-4358-9c6c-411958f16335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b83a0b-85b2-42e2-bf8c-ac6676b4feb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9b9110-6b7f-4c59-99c1-fa52ef0039bf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b683a9ad-0519-4936-ae42-7dcf8bfb8839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "005c7115-9446-4f06-b36b-2bd7d4274eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d5db89-8a69-4afe-a672-c91bc361bdca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a51f684-7e46-409c-b365-8fe23614a16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153403b2-1cd1-4fc1-9681-d5a4adaaca45",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753d7cb9-5bba-40dc-949f-c2afc61dbf09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b974907c-3cde-47e9-94f3-fbdc4c431c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc9d958-b777-41b0-a8d6-757b70d5d7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744f011b-9a53-4fbd-b46b-b3d3b62b1e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bc41f6-98d7-4815-9462-6e431015c51a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5cd1ea-3ebf-4592-a146-fd5ff1fd57dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a87531-c240-4de6-801c-ee1bf8c3bee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee52151d-1bb4-419e-b470-fa1b4e55b700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8bc880-6d50-4897-b7a4-d27c7bb964e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc543bd-f110-40e9-a126-c47b67b7b059",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54df4ab9-158c-4d6f-a448-8b8c080cd7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a63e9ad-4b3b-4e50-b1f2-d3037d2e093f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb5ba89-4bd4-4e24-8bf1-a7d14da6de5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ef9109-fe71-4060-b625-30da33327efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e82e22f-93ba-42a0-a8c3-5c092ff08057",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bacb85-b6a6-4ab0-9c9c-d4c40c23fa51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0963a91-7253-4b2c-a23b-f442678f4e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e54665-23da-4bd9-afc2-542673e87cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf0a024-2e1b-4ed2-afc0-58c2f252e431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82be3b98-b034-4d5c-b21f-f65d9573baa3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5233320a-1b56-4cdb-8e50-65de55241d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ce02b8-148c-430a-ae22-357f9afe39ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2636b124-431a-4018-b500-dc90c8fac40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138596f5-b764-4353-94dd-816bdef764e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a816ae-0fb0-46f9-977f-21c6d329626c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae0f707-583b-474a-9ddf-3c2bed9f80f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42af2908-f273-45f7-8a08-44a62b4b7ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab9411a-d1e2-4cbe-84e4-05b8c07e8209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba1746e-9128-471a-a3ef-e68cd5005b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1037cce2-174e-4d37-8c91-4f4178d70350",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d00ec3-4766-4ca5-8236-ccfbfb88b0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a20a23b-5e59-40ac-801b-5f96fe98052e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf2d600-ad1d-4159-bab7-35a46219c28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a263015-3fe8-4952-b8c9-1c0c69cc9154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a019f48a-ae4d-4a87-baf0-1a6c445929a4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1f2aeb-0899-4f7a-8208-e66bed01ac64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a95f5e5-6f8b-4ff6-8cd4-e2029251455c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ca82c8-69b8-4028-a3b5-45e959d2a997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fa4c69-5e8b-4ea0-a2ee-e4506253c8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b21baf-21d2-4851-8baa-5792989cff6a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082a27ba-52f7-4978-865d-08eebc86ca12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4805f3f-721b-4c4b-b18b-fd65268a5ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91059387-a504-480a-8ed7-38a8809091f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2916b56-09f4-4d42-9d70-edcdcc49d6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236067df-e6eb-459e-9ba2-7a821e734716",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00b0101-1c4b-4862-8c90-ec2b51e6885e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a95637d4-1631-4c74-bb9f-218df1d3746b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5dbc53-125c-4982-8f55-d8ba4cd85687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdc4eff-ea51-4c2d-8405-bebe21d1b59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9829072-7e67-4845-9a83-6ff245deaf6a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a01ab83-f236-462f-a802-8a473e050e55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6218a19c-27e1-4e49-bf75-cb840b51fd7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8e411b-d22e-46d0-98e8-a807b268fc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f64533-3717-43e7-b773-8042293625dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7df6fa8-5726-42d2-9754-96e681486901",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab99f692-c838-4186-b8b8-404a05519556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00b02e71-0bfb-401c-a2de-0704a2a6d51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3db4272-884d-48c1-be83-c3e932741756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7771349-57a6-48dc-a88d-4de8dffb5a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66ad687-2938-40ba-b20f-6835dc5c0361",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd96279-f387-4a67-9478-174b00a31083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce844105-a03b-40b5-959c-cec567a76d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94036f6c-2c84-4e47-b91d-7cc1779b2b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3a93b0-69e4-45b6-8d65-ed06f4c82fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dd7d6f-4e19-4fb9-b98e-599ba5a2c9a5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3facef2-0e21-49ce-a18d-a048a1b5e9ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cc77ab6-8d77-40f7-90e2-3d0d226182c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a264b1d-f57f-45aa-8bdf-486aa64a5db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6463b2b2-a770-4be1-a443-d46e4f489857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77df0b3-68de-4672-8bf8-741671cb483e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdd199a-f6e8-4406-b521-f0714e855c5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a7f758-b1df-42d9-9800-22fed1c28c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200769b3-a720-4846-94b5-bbe2f7d78f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1c4513-8968-4bca-b1e7-91a49dfa9a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1de602-e758-4cee-a7bd-15865e5dd0ed",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0eee0c8-b225-4c66-b7ce-2eab5cea5aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b1fc013-b3d8-4046-9d79-ba946a3a3e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d113763-0b99-45f3-8129-27f6184654c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e7cd96-0c5c-4c58-9415-8cd727654a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d050a1-c570-422d-8bc7-85c99c44330b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd19187-9d59-449a-aa35-cfc2503e96c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c21e6f18-88ac-4462-8f7a-909f168af559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e524bf-c96d-4211-bf7a-60d6e0501739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1180fa-e667-4ac5-8e20-1cbfdf266988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bba780-0d12-4294-8490-649069dfdadf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71252d51-1e0e-4764-9e90-c2e66fa7a540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "185147af-f04a-41f0-9a6a-8069f0d10309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4191cd-48e3-4f2e-b382-8eb9ea9f48fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12b04d0-90aa-4b5e-9e46-13471e206d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d8e5ce-7c8e-433e-af37-c76091bc0a62",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa752433-ed39-4165-9a5c-bd757a7f00b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d65583-3519-4895-8723-81d1a178e37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994838f9-5480-4d61-9a79-59a339095f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf6ca744-adff-49b5-969a-ffcceec1717d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccb292a-178e-43ec-9e61-23c022abff04",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83f3f8e-4853-475f-8a55-a216ef98619f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98d095e-e697-46c8-abef-a4fed0180bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ffb0fd-51ed-4117-abcd-67da01821955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a53d4e1-3490-419b-801a-44c1990c0f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc8d2e7-b269-4c7a-9970-3b35d8cfe8c4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b530d20-c4ce-4e3c-ad46-dccdc6c111cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa189e0-9699-44bd-b00a-89200374b0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f68b268-b606-4f4b-b867-1b23a3f4f4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce31a54-d3a3-4e23-9d66-9f6fda0c0798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6e260f-940d-4a84-b1a2-eeb1fbd7c8e4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08467018-9ed3-41bf-96c0-b71a8b6a463f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f54a22-1bd8-4239-9746-65fa48f53b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc3ed79-5e40-41dd-8f98-305d4dbe181e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fd5f98-8239-4059-b546-1035c6b76de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c48b83-b338-4488-8876-b0dd8d355fd0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa504e01-a5d6-4426-8d8c-ad645cd416e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5c83c9-e896-42b2-b8cc-767eec6a0a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc341ff1-b3f0-4c7e-baa7-d178e04eea53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf67c50-40d1-4159-a31c-b28dbfd4c97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf1303f-ef7b-450a-b032-c3626711060d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a563c7-82a6-4e2f-83a0-e190357de4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7cc3eb-af73-4394-880e-71d2f57283a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc1729a-fee5-45b8-b289-ad5f31e22472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc458db5-e435-425b-84ce-92fa6ae2c079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff51f5b4-1df1-42ad-92f8-396da11d9181",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdefd58-c839-48dc-a647-85131949d845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce79cd6-a536-4f4a-8ccd-d3fe529c31e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7d1fa2-5a34-416d-bc41-30199d83c347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583eef57-2409-4d70-8d3d-2ab5937e7868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173e2904-b37f-4469-8d84-d0ae870bc9f2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f4006b-043c-4dee-b2b5-adf2b79254da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a13a95f-9007-4dcf-b62c-5198605bd913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb2ff1b-15d5-47d6-99ac-8a6f81896719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad9040b-97b2-4a6f-b351-8a53874abb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40949c3c-80d1-48ec-bbf8-2a3b563be0fb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8b622e-173d-4c4d-abb1-2df288cf5eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1044e1b-d755-482a-b7cb-9d0cb0c7ce6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609d60ed-8b01-475d-9b19-833f7cbd56e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04561bc-3f47-41d0-9b36-ab5ae1ba34ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e35442-ee58-46a6-b574-7e4daa4e11ea",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f985c0-05e0-426d-97a5-7efc234a6226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a0d8e7-5833-4580-bbb6-cb8fb01b46e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c43b19e-209d-4e3f-bd2c-1cf8c94e1d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbed275-91d0-46d7-a135-84cea7c753a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad445f15-55a0-4997-9d0c-4794ebb18b3a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326e7789-7663-46c8-90b6-c2fbe8d385ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622cd2ac-3ed5-483c-bedb-ce0a5a15f2ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1d23bc-263b-434e-a108-c0b99507608b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26c3abf-ff18-4ecc-a2bb-51bed1178ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52eeb13-f9b2-4c60-844c-ebdc4538085c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcecc578-07d9-424c-84b7-6f650ee36234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7feac76-c442-4832-a783-6831e0c0ffca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb858698-a7ca-4b93-9961-0fe0994d2e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f35897-5c6b-4040-a1da-776a1639953e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d42215-531a-4b18-bb09-76c7b605b9a4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0ae95b-731b-4454-9a27-89bf32d70b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf81632-bb9c-42dd-bf6d-3d1cd2353bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef40d7bd-f7b5-4484-8e73-5c9a3a1563ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72a2540-e29d-4a7c-b18d-f075455d7fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8ba94e-374b-4c38-9eaa-a3110e23f4a5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2c3e1b-5942-4ad5-80c6-5553e1f70926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6558ca1-0955-4ec7-8ed8-666091c75851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b5390c-0162-453d-91d9-dc834822729f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33a5658-1d39-45e5-93ec-7ed2575e01e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedf98a3-c202-4181-ac37-afedf2ccfe8c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae502c87-a202-4640-8e54-0ec28d7dbc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f425b3-47ce-45af-bd1a-14bcf1abb812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fb670e-e628-487a-8c2d-bfa1bc6c3a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1e679d-41a3-44d7-8797-e9732559d85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abff64de-80b0-46a7-ad93-362694e748fe",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437a9be1-991e-4da0-b366-cf4686b9dbe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f64612-6933-4946-9fd5-b2c2036c9a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93221f25-2041-4c1a-b198-11c982af09cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefd8c71-dc88-4952-a590-7ad9fff400ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180229b4-93ab-4a8d-b03c-ed8a13b7c866",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5a1dc9-86ea-4d98-b4f9-0c7a643c6ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533435c2-e2c0-48ab-a3c5-31a4e6f5f9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf58898-23b5-4292-8417-4779260bf424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193acbec-d594-46d8-9348-7b51f6d21c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572375ad-4c4e-4628-9583-bbedc42af278",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aefde42-4b49-470b-ae52-0559527518bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd219d45-688e-44d0-a748-9740f92a1005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39456a1a-06b8-4827-a296-8ad4fa408c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92aa784e-21dd-415d-839c-88cba2d2c5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c429aa-262f-4adb-8554-ac757ae53d99",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7732dbe-e13a-4730-901a-f8ace5d5f389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3f3baf-2065-4ea8-b889-525d996079df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251ded57-d1b8-41dc-ae8f-6c6e570196cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5221d4bb-d2c4-4a3e-8ccd-60cd651e2127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc86df8-7d44-4c64-a7c3-4a5f13a0ba0d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b213a2-7fdb-4a4e-99e2-b384c04617e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ed6853-e83e-44bf-9413-4e5612f32b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac28c5e3-aaf1-4d39-9aad-08d81dbdbd36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be673fb-e3fc-4a0d-af0c-e7898b12add1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27385eb5-d26d-4a6e-9de8-0894eef6f3e6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f213f7-5599-490a-9835-bbada7bd0e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab126b51-d9f5-41b4-8739-3650c65d202a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bc6df0-11e5-4220-865e-271bc1b7eb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a46151-1b5a-4066-92d9-8a7acbad5fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5344547-c79e-42ea-9dcd-69ff37fc18a9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74108828-dbc6-4e76-8ca3-c131ec624af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae8073c-d205-42c2-b91a-798be49a43ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3725af0-0a48-4df9-afc3-9af05e657664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10a13e6-8a9a-444d-9112-ba36c3d13f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd79af74-950c-4cd0-950e-8411704ffd49",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624df7bf-edd5-4229-8a96-18d1db9ca061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e27d95-2007-449b-8df6-749aedd22e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b05c605-fef7-45ef-9bc6-14c10dc2998c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98de724-1e12-4b44-8541-35b68b396444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4869e3-ed0c-483d-ae6b-3525ae6801e9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ecaa9e-efdc-4612-831e-497153de3e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314227f4-4bfb-4d17-b2d1-5a2ac6a10bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f034534-bd87-43d5-9b21-8ae3855a38e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f965499d-3af9-489b-ba15-a9fc3b29b359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e660f732-5170-411a-b3bd-a8526c8f46a8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ee4bd2-49fb-4802-825a-14fe8c8e8d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c6faaf-32b6-4c99-8991-652d8e1d46b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574c0fc9-6cf2-4812-801b-1d3d51f894e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292b1123-4067-405e-901c-c4d676b7fc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93589d5a-0086-4d7f-bc4c-67606c7f6827",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd85cd4-eb94-4502-bdd0-8ee223450f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c87c38-8442-4d13-9e0c-cce397f715d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afd0432-28d3-40f5-aac9-5d6d9b347ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dad14ea-2232-47d9-8b0c-ba21add47bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032d2d46-d1fb-4eca-bfc3-e8651a809860",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309fc9f9-dad4-4310-9e0b-f9316dd2aa6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4746c4-6f19-4523-8a79-1b2bc8808cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8258145-6b13-489c-be8b-19c1c39a0455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea484c6-a57d-46c8-b49d-1d45e7051352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c450c6-48cd-4d88-a6ff-d5cca3eae3ed",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be46b7b7-3dc0-4f6f-9bdd-7a0658712ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b245ff65-187b-4c0a-93c6-66a1170d5a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a6ffa6-0ee4-49a0-bbdf-ac581420df85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728d96ff-f7fd-4db5-b24d-7b10d0a373d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57779c70-bbd9-4c6f-bd4c-d9935f4bbb17",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efcd4c5-ea84-42f9-a9c5-1aa7fb93fbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd9a923-9bc8-4b00-9ac3-ed776819568a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda82ad4-a1dd-4b2b-8f9c-725893a50d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d34e73-9627-4f89-88f7-18f0f38ed0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95195fed-3b51-4e41-9741-f6184aedc8c8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fb7362-d2ac-4f1f-9902-b6a2ad22777d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd0f7c31-83ba-478b-8f2e-603470f89a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b660d7e-4e56-4b95-ab91-b5257e493091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5978b1-f196-44f9-b186-fd24f50d538e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5985035-5a71-4b16-a0c8-bc22fe4e3570",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e762748e-b8bd-4885-8236-7233c86aa0df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66ae7ab-22ed-495b-9b55-b92e90578ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9e5201-2085-4063-b36c-53b7acb07f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f1cdef-cb6a-4c6f-9391-cc1229f785ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3bdca3-eaa5-4072-9a8b-f38cbf7ea6a4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cc4bfd-61fa-4e64-a6b8-f7215b1c7c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb7fdba6-5448-4216-bd20-ead0b36c2ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff4cee1-80c8-43b2-9b2b-efa0f23ba5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de6d7ce-1a15-4ef8-8dde-97ea728bed81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6bf62d-637d-4f07-8be7-2f32151251c2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaec5b86-d160-49b4-a807-64782730e560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf6c5d2-8fb6-42ae-982d-e946c0622599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73771ff-5c6a-44bf-9bbb-283841ce9378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ca8175-aae9-414f-b6e7-d42afb28e1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6581ccd6-669b-465b-aef4-251bf12d31eb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3e25f9-7118-47c2-89ef-f2472f31f100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cec42ebe-6761-425f-a32f-a670da5834ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b3f62e-b484-4def-8275-654a12cd455e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2fddff-e8d2-4077-9108-8d491d726aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72703bcf-4dcf-45a2-9e11-80c02bd6ba1a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b3ea31-959a-41c4-9989-c5d5b83ddce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d91cfbe4-1faf-4364-9431-bf262771aad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3dab54-7f90-4d18-873d-5039a493ec7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c27b4a9-099d-42eb-96bc-712ba0e65923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55c69b7-c2b8-40d8-9a7d-eebf23c720e9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5843941c-985c-4063-99bb-8d0d4668d93b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ca8d06-4d28-4dc2-a0e1-f5b73708bbaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58faa400-9105-42f0-a956-248581d1cf38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f25ae5-c515-49db-8e29-0073f190b62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c26d812-44dd-448f-be74-7b2ee10ff458",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b04ba1-f725-4428-a133-0fe32bfc8585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3239f0ca-51b0-479d-89ef-37776bb4a0c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f72e04-3c1b-42bd-8d4c-55f586beea79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4793da-0764-4b50-b277-4f54b3f84df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d599b7-bb2f-431a-bf6f-6d47388ec3bd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3266d5fb-d344-4291-ad99-65cc2909c592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e3b5b8f-b158-4d33-bfac-24cd9f8e18d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8685c4-6dfb-490b-a315-d05f47443453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddcdba8-c917-4ae3-9a73-0c36c00f6e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b515f29-4a0a-4a47-a0bf-3e6fdd72659a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875fac89-0082-4843-a089-fb545c2cce12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "466c4969-ef6f-41b7-9d0b-28f786bd643d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458bd4d0-495f-4f94-9078-8ec881358b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781fd10c-d79d-4ad3-bf32-9d5f051035eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eaa224b-a3c6-4575-a642-f7d225217639",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b336e3ce-65e3-4a34-83c4-7d00db6a434b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08bab1ed-8a64-490f-bec3-047f42795be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f34f11-ab29-4990-97a1-d3ba2ac36504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116bd084-a597-4cb9-9011-c7d74faf5d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b643b4a4-426b-4836-82b3-3a9c20515dcd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d922f2f3-b7ae-4e5e-8404-cbe718beca8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc554fb1-b0e7-4407-bbc7-a1c2f20f2843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59f62d5-d065-4db4-bf87-96a8b1d85571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc256ac-d645-4f49-a60f-0e0421398b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ae122e-8a29-4359-8b1c-11ebec6f46e5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33e998d-5d8f-4145-b597-2aa0cb5b0d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b289e1-a030-4919-a968-c0c5ca681b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7b1818-5ee0-4633-b0fc-2ffecbadc24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736f0fe9-b312-4eff-873f-91e7f4de92c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04007582-74d7-49ab-bb1f-e8100ae3a2a1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3b975d-32f8-4eb7-a428-76474cabf4e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3119c5c8-6c79-4385-8377-38794b378ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800f5c13-2ce3-48b8-ad63-737811785b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdafb691-c675-48b2-a6fd-66dbe4e9304c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05aaf8ad-4ae2-4019-afd6-c129070e020d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ea9180-934b-4ce8-8c5e-3b22df7acd08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f36c7c7f-74c1-45c6-b8e2-e41b3cba0ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47014bd-d377-45b7-b9e2-32ffd099a68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babe3721-a23c-4b98-ba65-95166d85cd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7781e15a-fe6c-48b1-839f-8e03a1c033ba",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9197fb5-9a06-4dd3-8e9b-cb4458f3e9d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e536e980-84ee-40c3-a49e-e7864be47e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d075eb-5603-4185-9642-752f37ccdc7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d0961d-b4f0-48fa-8007-aa1972ea7955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec5c75e-e5bb-4c99-8288-b0766b548a22",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9238a01e-b92f-45f9-92ce-00931be533bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c16ff31-7048-43dc-b4ab-394140f07b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bea764e-9bb5-4f53-8cd5-0562db183f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c823372-52c3-4b30-a45f-fc433cc584e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d61ecce-cff6-494b-9657-6f87628cc966",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a74fbe3-8af3-4c83-82d9-d4c5f2274283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49aea620-10a2-4905-99d2-693ccfa9e21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbd4a04-19c5-4e0d-8f77-40a7b6f2f417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b6acd0-2f88-4618-b1e3-c9467ba4fca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b0165e-3d5e-4b1e-9b3d-4ce48113051b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b04d16-6129-4356-b4f8-8383717b29f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c457ec-b770-4079-b6c5-0543ab88c12c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ef5e64-0f45-41dd-9dde-9d6d5f034bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e4436a-e4cf-4962-806b-18edc531649b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74413f1-dfb3-4083-9937-439d05e9790a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6d47a5-e8cc-4153-91d1-6ca8638c466e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93ba3f05-bf7e-4e81-845c-f587fba8a48d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "599aadfb-6ef7-4afe-bf67-eb7e68166822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c6f64a-5c47-490a-ab93-45fc64fc89d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acb4f9b-5657-4628-ab28-74fec0f01b39",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd368d9d-1bd2-4b2e-a257-22d88cef4cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b3444ee-0e58-4422-a0b1-1dbea799e7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a13f95-78e8-45bc-b8e0-aa81d96a6144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75b1d08-a920-4e0f-b49b-bac1a56122f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0917f8a9-3e54-48d2-afce-8a1dc4532f8d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d088aa2c-da24-44f2-b71a-98976fa49f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cd26f4c-3d8d-4d01-bb0a-4c229f301240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353a7d55-d2c5-4b61-b47f-7ee853f8cedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d6a0e2-5069-4ce4-9aae-9e75d82ed652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fa09b2-7264-4b30-91b9-1bbe144d1f59",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153ca691-f542-44dd-a5b6-ee3504249f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb378cc-dad7-4dc1-af29-fa4d79568229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91068d31-c2ea-4822-b229-4b3f998beaf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d057004c-1074-40ca-95ca-5845e549d4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbec383-a4d5-41fe-ad74-b14cd1bc6a38",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62dde345-2b24-4a0c-905b-d2a8886b0ea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977b137e-0371-4289-997b-62abe3605287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c01ce1-249a-45c0-a92d-470024a12c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9154ef24-8040-4dbb-8b2b-d016adfd2259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878c51fa-e7a1-4bb9-b822-d7166a711e79",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f211ca-6df5-40fd-924a-e61232dd760e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bffe1305-7337-409c-99e1-9b7884398740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8550929e-6543-49a5-90f7-a3440c486ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6e253e-abef-4a82-9045-fc9fe31301fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bcd4ea-b1bd-4fe5-9926-16fa2e77dd73",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dfcc15-11aa-4a2e-808c-89fbf6403a0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24e1651-09c9-4288-ac6d-85598e02fffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc55082e-f6d6-4ca0-b0a2-a817c1873910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092c4bbd-fc3e-4bdd-a805-528f95d0b87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae12a96a-a8e2-40e1-8737-1d67de3ba9a8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197deb54-b674-4532-b092-4a5dbb44f553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb726dc8-6bae-4bff-9e25-c77416209e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c855995-2471-4992-b154-7cc98d2c2587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71186238-bca2-4e6b-ae54-0953279817c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45605092-6f45-46d2-8dda-d99fc4cc2c0b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f2234c-8bd9-4ce8-8703-3f948181954b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2f8a155-fefa-4b9b-880d-cd16a7c51e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b122158d-be03-4eb4-b45b-585a8a4bff8b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ec929a-f39a-4ede-88a9-f08b2b76ea72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2c089b-14d2-4d1b-998f-311c188ff277",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb4fa43-6791-40e1-bbbc-ff37b9889208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42e1802-3a8e-47f3-84df-3db509aa0191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f0185a-7fc5-434c-9ee6-70cce5293a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78f0c76-5bc8-4a82-b60b-3ed9cbf92a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2217f0-84a1-4299-9ec0-8a334e5f4a0a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab159cc-29b9-4a35-91a0-df64598303e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c90f2cb8-9949-4a91-8c36-c15790984c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ef95bd-3eb3-4876-92f3-11b33f2c55c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc275a3-4f60-4d42-b5db-aa6865a952ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46701c8-f796-4e21-8cc5-d14289eccd76",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5efa4a-ae97-4b82-978e-0b4617dbf2d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2adea1ef-e326-4a60-8d13-69e2c6f4c85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9502e35-6969-45e5-81e5-fe63aff2b207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad1dc6b-fc98-419b-8df3-1613a30fcb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6e8d09-6b24-43a6-9342-2525e6b22c4a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d54e62b-ae8a-49e8-ba8d-1698ea25cba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9ecc5e7-40ba-4b79-8da2-d04dfd7d1ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208996df-0149-410a-bc67-68f121af17c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13097c21-adf5-4a71-add2-432bd8a63939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e483631-b8aa-4797-a554-26b6bb571a61",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da688bab-fe9f-41b5-b7a6-ec26b49a18d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bad4b29d-445f-4717-954f-8fd15048726c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3d829d-bb50-4c04-b8e2-472404991d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a894ed69-19f3-469d-bf80-3e64cbcb98d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a46e1e5-3fc0-454f-b077-c8a4756e3b0a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f46653-eaaf-4633-a7e2-9601bd83a065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6648e28-1c4a-46d5-baad-4543d8d835d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f4a8c2-9254-46be-b9a8-732a27d098d5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13831728-4caf-4717-bb0f-486819027929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff39547-7ffb-4523-9262-b03b9bf53ec9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3524f883-e87b-4a2a-8500-2114b823cdbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b066e61a-055c-4589-9690-ab330871687b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ab9877-be45-4d89-95d9-9601f470644f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f54bc9a-7bf6-45e1-adba-c30831e4aa70"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd597f72-b300-4394-a250-6ef0bb3be181",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49f99b96-1f79-4a54-a935-5a42012e576f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8d0e9b2-0bd2-4962-a36a-4c290aa8d468",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c3462e2-1920-4942-b046-2f7f3a85f340"
                    }
                  }
                ]
              },
              {
                "id": "fb2f53c5-86bd-44a5-8f64-e6fc4c351276",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01d85617-444b-4b9f-a921-ba6023d7b6d2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc07006-874d-4df1-b60c-0b5ef015b0bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "35409801-2e78-48a8-9654-54a1d1646ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36435c08-f853-4044-a6ba-302e16429a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35b5d8aa-d3a0-4b34-9b6e-335aae1c830d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "121b3eca-7875-4701-95c0-556146fae1d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb290ae6-3ec9-4ccd-8fd8-1dfe6abc44f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "036d476a-bcbd-429f-8fe6-201001bdc498",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae5c4ba7-d405-4dc2-af19-e22d8aec7bba"
                    }
                  }
                ]
              },
              {
                "id": "37d96ce4-660a-452e-b539-569bb38e8b33",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "50e77b6e-702b-4770-a8c7-dcf436926f73",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8cf50f-aeac-4f2a-824a-7358e91e5b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "370c1ead-da10-4a2f-bdd4-b14b4df97842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b55c8fa-d862-49e1-ba8d-765114446742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56353c3e-f93d-4c50-bc11-01ce2324cd45"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "24531831-4703-4c8d-9d4d-8eceb7fe3b4c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d08c477d-340a-42f0-8213-75db768395db",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63ead2d3-e389-4aff-bba9-0a6ddbae0d4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a77298f-8d21-4d3a-b705-633d6ed4a652"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "445f651a-d1f5-436f-ac53-b9e4be5b8f97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "206afcef-0540-439c-8992-e19a553b8254"
                    }
                  }
                ]
              },
              {
                "id": "67514683-271e-40d3-b153-32692ec37a13",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16f041af-339d-4297-806b-58d4ad57a077",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ab0b2f2e-f65d-4e8f-9685-47a04f73e6a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3532ffe-3ab1-4e45-beff-ad1b392fd3e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "830e50b9-b409-4f3a-992a-9eabe7bd22f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df881881-809b-48b5-abc7-87586d0b6547",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b777afee-6ce1-4527-a92c-ee42e47cbbfb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b60455b-7a05-462d-ad34-d8abb0e2a0c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "108835d3-a113-4cd5-af44-60cd443db0e2"
            }
          }
        ]
      },
      {
        "id": "76563b01-027a-44f8-a456-236df36f22c1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a562355e-b775-4c6f-984b-a80073a8d6b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adc498c7-c6a9-4375-b38f-c958c4334757",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef2d161b-31ea-44d8-9561-1a3d676b5411",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac9fde8-7c50-4f0b-b196-06a07be9704c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "869173e6-47fa-456d-8fea-b54d6f2cb6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f02426-dfaa-42d8-a944-edc7f2a32b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6eb97c29-ffa1-422f-935a-c5d7c2d0dd63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab644e78-2bb8-4c8f-b813-b4e306edc435",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5270a90-a11f-4ffb-b82e-35788797ff95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a90432e-45b4-41c6-9b95-92536f6391df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c63c5f3-7efb-46eb-ad93-1cf213519612"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7665576a-1432-4136-8f32-6f7f27b12c98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "003e5aee-b75d-498b-a138-c37e27368aa7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f327250-3ccc-453d-9cfd-37eeb1c99afb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5b2bb91-4833-4ed8-933e-855c35108f62"
            }
          }
        ]
      },
      {
        "id": "a43ade23-a92a-4821-9212-7b8f37fad652",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2899050b-8cc1-471e-9244-d70174888db4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af631054-79ff-4dfd-a632-ea190604d5f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "081c88a2-778d-42f5-be0b-fea4d97610e0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df38c8dc-2ddf-4293-b3d1-562e05ddc8e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "244709a7-5679-4d1c-b17a-e5d751baa7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef9e1bc-8180-4e73-8dc3-95596c22664f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3ab105e-b44c-4a1f-ab2a-d34bf4068db2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d959bab3-6b0e-427f-9aa2-91d15cd86370",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a00ce965-2ebc-499c-9890-0327bcbb1fa2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a55a42b-5d05-4ce8-a320-a075cd4f479a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b68bde7a-32f0-458a-8224-022776c1c14b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33808830-a46a-4c07-a0b5-1d977c3caac6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c54c8de-bad2-4a40-be1e-99b51851a440"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a887a72c-bc0b-490c-8a58-c0348f97fb42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7b78be1-ced8-4e1c-ad77-eaa4d17a48aa"
            }
          }
        ]
      },
      {
        "id": "cc91d214-cd40-4ad7-b2a4-fb1123e676f8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2862dadb-a764-4dcf-a793-c74e923669bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6140f0c5-2c35-49aa-b503-deb952ccd24f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36c3dc3a-eb32-458f-b61e-1dc449b48e80",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53566738-53ec-4467-a1f7-58f740f32b44",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e1f33fe-0a06-4da5-b04c-558b63769a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69ee952-33df-4567-afc2-32ec7d992d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc028b41-7645-4d29-b5d4-50924d82ca33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3adffae-da8a-4851-a5a4-ccb6acf84b08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e180baa9-3f50-4c88-bf1c-709361df3010"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01f65344-2fb1-418f-919b-4c78698bafb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "456f9327-db29-407a-aa66-2a30266138a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e6880d2-7c42-494f-b0ea-820f33017144",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c6b7f1b2-2421-4ee1-865f-f88d634d1f58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6684d9d4-586c-41ce-a456-e351a4a514aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5e27877-7860-4470-a0a6-e135bfab1c7f"
            }
          }
        ]
      },
      {
        "id": "015fef95-b769-4282-8620-309b22105ecd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "970a05fc-a32e-4f48-87ea-efbc7d684e33",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f77b29f-04cc-46fb-9393-c26a41fda7f9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4652bfa9-ebb3-4920-8b01-fe60ba9c6def",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3365a93c-09ff-4b08-8896-5544445b96f4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78d0a036-d9d0-45d2-a6b5-f94c19fffc6b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 219.71830985915489,
      "responseMin": 20,
      "responseMax": 6354,
      "responseSd": 409.9439821951147,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690677718652,
      "completed": 1690677793144
    },
    "executions": [
      {
        "id": "eab75fc3-62d1-47de-a023-c63b8bee3a01",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3dac3e75-6bb8-4d1e-a7eb-8912df4564f4",
          "httpRequestId": "0ebe1f5d-8d3f-4808-bf41-034eed899851"
        },
        "item": {
          "id": "eab75fc3-62d1-47de-a023-c63b8bee3a01",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7b97e5a8-0324-40b2-bec3-5df8ec0a5e85",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 0
        }
      },
      {
        "id": "b4bca587-dd04-4195-81e6-5849a14a5cfb",
        "cursor": {
          "ref": "01812355-0a77-44eb-991b-abec16310ea6",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5a3e0a54-750e-4686-a130-956f4ee39357"
        },
        "item": {
          "id": "b4bca587-dd04-4195-81e6-5849a14a5cfb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d540e703-26b6-429f-9ff4-3bf73f0d533a",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "a481b5fc-3a9e-4f4b-81e9-a2eecbec5cdf",
        "cursor": {
          "ref": "f1e89cda-f2cd-4b50-a031-30fe982f9717",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0a5ad040-1071-40af-b34b-d9bdcb9f0680"
        },
        "item": {
          "id": "a481b5fc-3a9e-4f4b-81e9-a2eecbec5cdf",
          "name": "did_json"
        },
        "response": {
          "id": "0f7bb42e-9402-41db-9d98-4c235098d7bc",
          "status": "OK",
          "code": 200,
          "responseTime": 1313,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9c3e0b-4196-4164-846b-6bfd0a8e76e5",
        "cursor": {
          "ref": "65583bd7-9aa9-4a21-9bf2-0ba8aea486ab",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "849139cb-e964-4510-b31f-4851964c69bc"
        },
        "item": {
          "id": "be9c3e0b-4196-4164-846b-6bfd0a8e76e5",
          "name": "did:invalid"
        },
        "response": {
          "id": "13f31d9e-52f3-447a-b199-155dc6b24fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9c3e0b-4196-4164-846b-6bfd0a8e76e5",
        "cursor": {
          "ref": "65583bd7-9aa9-4a21-9bf2-0ba8aea486ab",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "849139cb-e964-4510-b31f-4851964c69bc"
        },
        "item": {
          "id": "be9c3e0b-4196-4164-846b-6bfd0a8e76e5",
          "name": "did:invalid"
        },
        "response": {
          "id": "13f31d9e-52f3-447a-b199-155dc6b24fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d5bbbf-c879-4860-9216-77f479bc61a5",
        "cursor": {
          "ref": "fde7b7a5-e4ec-4950-aae1-e133c88ffe40",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "22db171e-b13a-4b2f-921e-d7f7a48695ac"
        },
        "item": {
          "id": "c4d5bbbf-c879-4860-9216-77f479bc61a5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b99b6efe-fdf2-4bd8-b973-147bc7fd66a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 404,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062cd9fc-9a6f-44e3-b826-42e904c60132",
        "cursor": {
          "ref": "80e9bf13-df51-4eb9-b3a4-46cd15b25151",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ef2a2b7f-c9b3-41d6-875d-d3b46660cb6f"
        },
        "item": {
          "id": "062cd9fc-9a6f-44e3-b826-42e904c60132",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cbd1c3c8-d279-4ebf-ba22-da6ee9a2944d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 243,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30c12e0-c73c-408e-b07f-b4325969e229",
        "cursor": {
          "ref": "033c2c33-cf1f-4ea7-8678-1bf4891ecfcb",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fe4ff4e7-f3fa-4aa8-ae0a-c93b93bc83d8"
        },
        "item": {
          "id": "e30c12e0-c73c-408e-b07f-b4325969e229",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "afc74e37-fecf-4838-93e7-0dcee2b25948",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a1674f-e46e-4b1e-9770-5cd63470d95d",
        "cursor": {
          "ref": "ad735c87-4535-4dc4-a63a-98129cc8beb9",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5feab0a4-544f-43c0-a86d-2126abafb97e"
        },
        "item": {
          "id": "25a1674f-e46e-4b1e-9770-5cd63470d95d",
          "name": "identifiers"
        },
        "response": {
          "id": "896a5614-0f8d-4d8f-bf49-93aee737d48d",
          "status": "OK",
          "code": 200,
          "responseTime": 1107,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8337aec6-0171-4f6e-975f-673f6298951d",
        "cursor": {
          "ref": "7bd55352-6e0e-4df6-8550-1cd5fa1da59d",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "59d69bf2-a68c-4d17-979d-e76c65a1275a"
        },
        "item": {
          "id": "8337aec6-0171-4f6e-975f-673f6298951d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ad0686ef-5f18-41d9-a4a4-c39d34fe4ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b458692-10be-43cc-b094-e9046cb450dd",
        "cursor": {
          "ref": "77a179fe-e2f3-4a92-91ac-c4b8f430eb16",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e888c856-9258-413b-9273-fcb2453d1658"
        },
        "item": {
          "id": "6b458692-10be-43cc-b094-e9046cb450dd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b936d826-c927-4bb2-bb40-b3e4ce993f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d7d6f6-68cd-46bd-a3e8-51217acbee27",
        "cursor": {
          "ref": "b4def772-0992-4744-ac80-6d8a60ca1341",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8a6590ca-7820-4c95-adf8-4135d88de5b8"
        },
        "item": {
          "id": "d6d7d6f6-68cd-46bd-a3e8-51217acbee27",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b0ffec26-2004-415c-bf13-e2a93f0a9670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4929e6a-f465-4143-b90f-4a7d1045b3c4",
        "cursor": {
          "ref": "6a876a8a-7b0a-402e-ba2d-312d19ad42b6",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6db76326-758e-40f4-bd4e-16b5e1a5a5ec"
        },
        "item": {
          "id": "c4929e6a-f465-4143-b90f-4a7d1045b3c4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b95aa705-d474-41e4-b42a-fe2194b3b066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8897c786-1189-4043-b3fe-59bab928bf0f",
        "cursor": {
          "ref": "7a83a5cf-61b5-4f51-9553-1a2fc63fa872",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "11c1ac4c-2c87-4a29-bc46-cd599f9587c9"
        },
        "item": {
          "id": "8897c786-1189-4043-b3fe-59bab928bf0f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dabc6d29-63f9-4839-a464-add664a5e8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0dade3-3b76-4a5c-9c2c-a9f28c69bbbb",
        "cursor": {
          "ref": "7979b41f-32f9-40af-ab31-95448168ad90",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f21febe2-3ae3-45e4-8f7f-d354993be3fa"
        },
        "item": {
          "id": "9e0dade3-3b76-4a5c-9c2c-a9f28c69bbbb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "08e5331c-bd11-4a99-a2df-939910cf8b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0550a5c8-b736-4ad4-a60d-d80c2567ca9e",
        "cursor": {
          "ref": "ef886c56-7d5c-4056-87be-ae1f9ae5156e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9d7358d1-1283-44d1-b69d-f3cd37ddeb75"
        },
        "item": {
          "id": "0550a5c8-b736-4ad4-a60d-d80c2567ca9e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9bcd3561-1d0d-4ee6-9974-e9ec4b2edc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c3396e-6646-4bc9-8fb5-f640ee072ab9",
        "cursor": {
          "ref": "91fe997c-fd1c-455c-aa16-1031f2cab51c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1e9fe6c3-8f76-4374-b09a-07e560297186"
        },
        "item": {
          "id": "d3c3396e-6646-4bc9-8fb5-f640ee072ab9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "98221731-fcb4-4426-82bb-fd2725e7cdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e18ee0d-1b24-445c-82da-11e5d6054086",
        "cursor": {
          "ref": "13a4fd6b-dfe2-4253-8894-cb6a90593020",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3f7e438c-57bc-4dd1-bd96-49d660927d49"
        },
        "item": {
          "id": "0e18ee0d-1b24-445c-82da-11e5d6054086",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1eeb2a93-76ac-4a27-b28a-73df768338c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ea0581-3232-4957-ab93-ddecabe04242",
        "cursor": {
          "ref": "d3031212-9e94-459c-94dd-f27a20435cd7",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d3d910da-427c-46d5-9679-5a8651965f8a"
        },
        "item": {
          "id": "82ea0581-3232-4957-ab93-ddecabe04242",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b8a57ead-7ec0-43f4-9487-b1ea82af392e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed89c01c-2b50-4d6b-bd56-cda24525fec1",
        "cursor": {
          "ref": "cbef68bc-df5c-4a98-9885-b7b2a63bf59b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4e87227d-85cf-44d0-baf3-c59e8c3baa18"
        },
        "item": {
          "id": "ed89c01c-2b50-4d6b-bd56-cda24525fec1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ff61479e-881e-48e2-bd92-f271e816420a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6993c2ae-eb9a-4ef4-bb3f-0d4d2222ab5f",
        "cursor": {
          "ref": "23d22947-5753-4ff3-9290-25049c980bbe",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "01afab00-3e4f-48f3-9109-2034f576e4aa"
        },
        "item": {
          "id": "6993c2ae-eb9a-4ef4-bb3f-0d4d2222ab5f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "07ba81e9-2f51-4b66-a0ac-a00b8362136f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7d667b-68eb-4272-bc32-2d09ed9ae62a",
        "cursor": {
          "ref": "99f46d8d-de9b-4e38-85bf-439b5c3b0198",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9c953f8d-ef37-4b6d-bab1-648b9547ce03"
        },
        "item": {
          "id": "4f7d667b-68eb-4272-bc32-2d09ed9ae62a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7996afc1-dcd3-4480-b666-394f7c420d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cd3d37-7cfb-478a-aeae-a7e66210f73f",
        "cursor": {
          "ref": "daa3c1cc-dbd6-493b-b0a0-94922a66da67",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8449149b-910b-41e2-852a-3a2dfaa0ce50"
        },
        "item": {
          "id": "d7cd3d37-7cfb-478a-aeae-a7e66210f73f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9e7dec92-480c-4c52-92d1-28938cfcf293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49840968-4082-4219-acc6-ac56de7402dc",
        "cursor": {
          "ref": "7fd35cb1-ae09-4e5d-bdd6-3970bb37a9ec",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9d296c52-1f3e-47c4-b66f-cf76ddadd1eb"
        },
        "item": {
          "id": "49840968-4082-4219-acc6-ac56de7402dc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "47c7a8d7-6c15-4b82-8b26-389dccdd2d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b481dd34-4254-4042-b4f3-226fbe9f92dd",
        "cursor": {
          "ref": "ea99cdf8-a654-4e32-8bae-9c0c699f0f55",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cfc643a4-030d-4bff-bec6-35771a7c66ca"
        },
        "item": {
          "id": "b481dd34-4254-4042-b4f3-226fbe9f92dd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "10656874-58d5-4bf9-9762-19a0b0421e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e6740d-756b-461a-a970-23550e685c4e",
        "cursor": {
          "ref": "10345621-9e43-4a4b-b0cf-1990a1379645",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c7daa7f2-be05-4cc8-84dd-7969e1f8e254"
        },
        "item": {
          "id": "16e6740d-756b-461a-a970-23550e685c4e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a530b2da-2d02-4567-9b66-42c573ecb63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8938a47-646c-43aa-af82-a2fad7fc60b0",
        "cursor": {
          "ref": "7be97fdd-bac9-436b-8f12-f8ec612cdfcc",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7a5e1d40-41cb-4a16-a5be-c54af55912b9"
        },
        "item": {
          "id": "e8938a47-646c-43aa-af82-a2fad7fc60b0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5b975104-7293-4d55-a58b-16a5bce128c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64816144-84cb-43ff-bcb0-87b18688712f",
        "cursor": {
          "ref": "8cc0bdac-84f6-4881-9815-f3de517ad4e4",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "18e4e749-8203-42f3-9707-d85e6a37b06e"
        },
        "item": {
          "id": "64816144-84cb-43ff-bcb0-87b18688712f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a03839e1-d512-47c8-8ee5-0d7aa6b62187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67610a1-aaa6-424b-bed2-67c2b8ca269e",
        "cursor": {
          "ref": "8ed5e53e-edf4-4ce9-8599-7dd294e67559",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ae965daf-9f0b-45c4-bfcd-d46cf08007cc"
        },
        "item": {
          "id": "f67610a1-aaa6-424b-bed2-67c2b8ca269e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1775630f-0c26-487b-9544-0b6069c82847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923ae944-72d6-40a2-852b-df27bd1f55b3",
        "cursor": {
          "ref": "dbf244c2-05cd-4541-b4d5-90ed6986078c",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "11dbefb5-55ea-45ee-b87d-69b2f1aaae2a"
        },
        "item": {
          "id": "923ae944-72d6-40a2-852b-df27bd1f55b3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fcadcbd3-4b7f-46b4-9785-146b3808d567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73912500-72b4-427b-b35f-047a2f00c4d7",
        "cursor": {
          "ref": "f3571ef0-6ff7-47cc-89ce-7393c015a0e5",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "18796c36-8d32-43b0-ad6c-598cf5c34a65"
        },
        "item": {
          "id": "73912500-72b4-427b-b35f-047a2f00c4d7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1d92a35a-0f91-475c-8309-39cbc9ba8634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a60d613-a4be-4863-b4cd-5d3a02998f2a",
        "cursor": {
          "ref": "87e89de9-868f-4624-8cdd-9da42f38f255",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9aeb9146-cf8b-4279-837c-3ecaca6fc8da"
        },
        "item": {
          "id": "7a60d613-a4be-4863-b4cd-5d3a02998f2a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d17340fc-8277-4db6-9209-ee22bc31f615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b98dbb-47cb-452a-b6d6-6ddbb5af4602",
        "cursor": {
          "ref": "ed5a3f7a-0c14-4aff-8d2f-aee705987a2e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fc732d57-0ea0-417c-bca7-af58cf457268"
        },
        "item": {
          "id": "f3b98dbb-47cb-452a-b6d6-6ddbb5af4602",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e6d5896d-4e66-4386-a744-23152717a56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0f62fc-998c-4211-a243-8ab2075796b4",
        "cursor": {
          "ref": "94a92e05-766d-47e1-8eae-b65e1632d4f3",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "04e398d3-7c27-45b9-93c6-5f011ff5bd28"
        },
        "item": {
          "id": "8f0f62fc-998c-4211-a243-8ab2075796b4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "13b73c5d-98b1-4428-8b52-ac2784dc4511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667aef10-40c8-4a79-9f8d-05c0a101a681",
        "cursor": {
          "ref": "eb50cc5e-9d66-40d4-94dc-8f8314961f22",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6703aa5e-6a67-449c-a328-1f537a9fbc87"
        },
        "item": {
          "id": "667aef10-40c8-4a79-9f8d-05c0a101a681",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bb3cfd15-29e0-4e94-8f09-2907aae8396f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5510dfe7-956c-48ad-8884-c9204e04d1f7",
        "cursor": {
          "ref": "f257328e-77dc-44ad-9b81-5dc94d4449a7",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ca28909f-a55d-4edf-97ee-57c6ba8567dd"
        },
        "item": {
          "id": "5510dfe7-956c-48ad-8884-c9204e04d1f7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fb4cb97d-3159-4025-a9d7-de92dd1fce0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b212419-55b6-4278-9932-721a2180e058",
        "cursor": {
          "ref": "d173777d-aba3-427c-b322-d02de284063c",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fb95f760-910d-47a2-9887-1dc8dd6a921e"
        },
        "item": {
          "id": "2b212419-55b6-4278-9932-721a2180e058",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6abba46a-5f96-41e6-a3bc-5b275b634f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a693b0f2-87cf-4254-a311-0e5dbc065c93",
        "cursor": {
          "ref": "1c2ac02a-b8ea-4cdc-8878-4dcf9ef0d85d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d8460e61-4c98-43c5-96d7-cae0184f71ed"
        },
        "item": {
          "id": "a693b0f2-87cf-4254-a311-0e5dbc065c93",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "521250ae-f3cc-43a9-9c12-ec41efe270c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c42e18-1b99-480f-a6c1-c7927592c47c",
        "cursor": {
          "ref": "43bbdff1-cb72-41b3-b960-f8c153369e0d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4a90202a-13bd-42c7-8e6b-744dc157eb7a"
        },
        "item": {
          "id": "61c42e18-1b99-480f-a6c1-c7927592c47c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ef8d8c3b-e6be-4f0c-af9a-40d08e81cf24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2b0d74-873f-4584-9083-a64b2e8382cb",
        "cursor": {
          "ref": "5ec9e91d-a90d-40aa-9a91-a2796867bd7a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4e1bec3b-0d3d-4a60-a8f5-6c29b9cc1118"
        },
        "item": {
          "id": "ce2b0d74-873f-4584-9083-a64b2e8382cb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b899bee8-e957-4dce-a65d-d5c8372786d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce93fa83-12ad-4e88-a140-19d0cbc024a7",
        "cursor": {
          "ref": "1cc80e05-3774-46df-aee4-6930613bc409",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0979249b-a9a9-4864-b986-d373aaeff7dc"
        },
        "item": {
          "id": "ce93fa83-12ad-4e88-a140-19d0cbc024a7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e3d1b0b7-6081-4003-9fd6-7440acaa3ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fb3a42-a656-4b7f-8e75-db30a29e1659",
        "cursor": {
          "ref": "3fb53557-832f-4a2e-8e3d-f2df4f5603cc",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bfcc5d10-3c7e-4adf-a570-c07bb3916e3a"
        },
        "item": {
          "id": "32fb3a42-a656-4b7f-8e75-db30a29e1659",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a150a8a0-d1bd-4d61-b911-d6dd47fc05eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65599fe3-dc44-493b-81db-a26802a5e213",
        "cursor": {
          "ref": "5dd7c632-2a35-40d1-85e7-be77cee47731",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ae68b830-41a9-47b9-9624-6ece69b477fa"
        },
        "item": {
          "id": "65599fe3-dc44-493b-81db-a26802a5e213",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "08150353-706e-4f0f-ba27-dd5f7d9328e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c049ed6-cc48-4a6e-a11f-110a93310099",
        "cursor": {
          "ref": "c2c2842a-c18a-44b3-8841-4c91aab0d97e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "52f64c2f-f2f4-42c4-8d3c-63abf451cb75"
        },
        "item": {
          "id": "9c049ed6-cc48-4a6e-a11f-110a93310099",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c7bb2d27-edcf-434f-b686-8e512530ba38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303c6d07-81be-41b8-abd4-2f8b69f59872",
        "cursor": {
          "ref": "255eb562-8fd0-4701-9674-d94a9ca9e900",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "443b024e-a8b7-4c4f-b345-d041cdd369d5"
        },
        "item": {
          "id": "303c6d07-81be-41b8-abd4-2f8b69f59872",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "31019933-f1a2-4a5b-a0cc-da8f62bdba88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b421ccb-d028-472d-88f9-df8e2c78d735",
        "cursor": {
          "ref": "c665277c-6f5f-4073-b907-7dfcf16de73e",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c119a9eb-9763-4da5-a660-8d660d2737de"
        },
        "item": {
          "id": "0b421ccb-d028-472d-88f9-df8e2c78d735",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d718ee92-66da-43ed-b60c-7683cb25b337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99165214-ec3c-44ca-b30e-36311d1e5b1d",
        "cursor": {
          "ref": "d499c1a9-b298-476e-a0ba-3920c4d7b31d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b91d3ef8-5f0c-48f4-a5ee-d76704aaf66b"
        },
        "item": {
          "id": "99165214-ec3c-44ca-b30e-36311d1e5b1d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c12d77a3-9dc1-43b7-8103-3dd673533b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63e9e4a-cb8c-4a0e-8710-0aec4d615bc8",
        "cursor": {
          "ref": "7b49a81f-8c31-49e5-b4fd-133667b1925d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6b76213c-1272-4d76-b978-a87ec50772a2"
        },
        "item": {
          "id": "f63e9e4a-cb8c-4a0e-8710-0aec4d615bc8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b0dc3804-c84f-4adf-a6d0-e8af71a4c735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1613b21e-74e3-49eb-ab64-4fc8df003f83",
        "cursor": {
          "ref": "29d05517-dd4e-4387-a729-3834f2cd1c93",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "06730c6f-3d08-485a-8905-45d9b9e79615"
        },
        "item": {
          "id": "1613b21e-74e3-49eb-ab64-4fc8df003f83",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e01006c6-2824-42a6-bec0-c236f95bfe0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31610c96-e226-4dc3-896a-e06e34e09540",
        "cursor": {
          "ref": "8ceed86d-b02a-4a62-ae70-f0e139018d3a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "676d2db0-669f-4537-97df-86b5dacf803e"
        },
        "item": {
          "id": "31610c96-e226-4dc3-896a-e06e34e09540",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7b27b7ac-8088-4f43-9db6-ba00c3903467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe64639-591b-4504-9faf-458153e5323b",
        "cursor": {
          "ref": "28bf5453-b109-475e-9679-16cda2d3fe5f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8ee69ba5-66a3-4fd7-8b8b-41885dd961ac"
        },
        "item": {
          "id": "ebe64639-591b-4504-9faf-458153e5323b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8bca6903-7814-43b7-bbe7-d8555e3acb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b3283e-b4e2-4ffd-bf07-90891fd96044",
        "cursor": {
          "ref": "e7c17ebf-6c5b-4418-baea-d1beba423a0c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b9aef47f-0da4-488f-8846-e57814d4aa38"
        },
        "item": {
          "id": "51b3283e-b4e2-4ffd-bf07-90891fd96044",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2bd5739b-1100-449c-9cea-216b67e9ee1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d41406-b64d-488a-8659-e7f8fc96b6b5",
        "cursor": {
          "ref": "dfb4cc3c-bf87-470b-9ed9-b6e99364778e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "932d1f13-352c-41c6-9005-a99729886339"
        },
        "item": {
          "id": "a1d41406-b64d-488a-8659-e7f8fc96b6b5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dd720ccd-f2d8-4edb-a9c2-6524eebf9e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b17adb2-ad71-4b0e-bcd5-64127ada29c8",
        "cursor": {
          "ref": "ed97ad51-7060-467c-8298-4f0b1e1bfc51",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4a8414a0-23bb-4ec2-8aea-ee15a03bc060"
        },
        "item": {
          "id": "9b17adb2-ad71-4b0e-bcd5-64127ada29c8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bea4447f-d2d1-41d7-96c4-79b1261e361c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c412b0df-8f01-46d3-90d6-cd06c2a10e43",
        "cursor": {
          "ref": "26029b74-589a-4aa6-9fa4-33dc3abfd2d6",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "371e4dde-cea0-4405-bd60-9d4e6a6793fd"
        },
        "item": {
          "id": "c412b0df-8f01-46d3-90d6-cd06c2a10e43",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b4ee3b9e-dc43-490a-b922-37927523f707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d55d34d-07f1-4095-82f2-030a91c06919",
        "cursor": {
          "ref": "aef2995b-746e-45ea-8032-c0bd3cf33563",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "746e004d-9416-4f18-bd01-0e12bdd5ea60"
        },
        "item": {
          "id": "3d55d34d-07f1-4095-82f2-030a91c06919",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "dde44978-c9de-409e-b52e-60b0725d23fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62609b23-331f-4e14-b059-0f9f53d2cd2f",
        "cursor": {
          "ref": "f1033c00-e0f6-4e57-afb8-5a869b29f3d3",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "876bfa72-d09f-4563-9cb4-c46377cda9aa"
        },
        "item": {
          "id": "62609b23-331f-4e14-b059-0f9f53d2cd2f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7aa2b36a-1a4b-4305-ab3b-cb93097c12e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84274941-2286-4d45-a65b-67753c20fa68",
        "cursor": {
          "ref": "0e0b2994-0e6c-46f2-a0fb-ce7e65b4e4b5",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2e01b3d0-1e14-4d17-9364-25d14f8f617f"
        },
        "item": {
          "id": "84274941-2286-4d45-a65b-67753c20fa68",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "81ed5ed9-f4b8-470b-816b-81652d766c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4365e707-e119-4e5e-9e5b-bb52b74c989a",
        "cursor": {
          "ref": "283396ac-3555-476d-852a-1ca4f7c0a3a5",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "712a58ca-5836-44da-a6f8-6d129d04de9a"
        },
        "item": {
          "id": "4365e707-e119-4e5e-9e5b-bb52b74c989a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5312039e-8b5c-412b-8dcd-9ec4c62a8607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132d5a90-2c02-4ced-967c-65c330eec2f1",
        "cursor": {
          "ref": "1ddc75c1-92bb-47f6-9864-a6db3d5972d4",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f7d775b5-e855-4298-9e27-8d35b6ef5d69"
        },
        "item": {
          "id": "132d5a90-2c02-4ced-967c-65c330eec2f1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3bf32527-2a7c-4e68-9113-e75766bad6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a803e49-fa34-41b3-b8c8-4735adcab8f3",
        "cursor": {
          "ref": "d3f83b5e-bac7-43eb-ad07-c3688e65fa35",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cefed4e8-4c7b-49ff-a7d1-a5fcf6f97e07"
        },
        "item": {
          "id": "8a803e49-fa34-41b3-b8c8-4735adcab8f3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6d34cbbb-6aef-4649-8201-017b6e15f382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af782cd-b0ae-4b73-968d-460277c71f48",
        "cursor": {
          "ref": "4d7353af-fea7-4372-8630-af6dd6f27dc6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bad83a87-98af-4266-a7fa-3460ce68ffa1"
        },
        "item": {
          "id": "4af782cd-b0ae-4b73-968d-460277c71f48",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0b6620b1-f30c-4eb7-bbf5-65013e9c0590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5aa42c-d9fe-46dc-a565-0484a55210e6",
        "cursor": {
          "ref": "cdb21f03-bbdc-4c89-bd28-a8f5d7f57cce",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "27f902e9-eba6-4ceb-95fc-8ea2cde97425"
        },
        "item": {
          "id": "3f5aa42c-d9fe-46dc-a565-0484a55210e6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0eff290b-5c8a-43ba-8f58-4f9c25d81cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd784a79-7e24-4428-89e1-a6193ef9c516",
        "cursor": {
          "ref": "44dedc6b-cefc-4ba1-bd6b-57844e3e4536",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "909bbe98-dae3-4db4-aed5-79d5b76a8f5e"
        },
        "item": {
          "id": "bd784a79-7e24-4428-89e1-a6193ef9c516",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8ebb5bf0-6b31-4aa1-9d50-e0ef3e267470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cfff4a-ee16-41fd-adbe-773671b263a5",
        "cursor": {
          "ref": "edf9a2ad-96f4-404e-b40d-41d72de4849b",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d04bb5cf-d26a-41b8-b13f-3177ae4df377"
        },
        "item": {
          "id": "f7cfff4a-ee16-41fd-adbe-773671b263a5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a865225d-130e-44ac-83d6-876c0102a808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81418cc7-3d67-4e47-aabe-6009d010c338",
        "cursor": {
          "ref": "3773afab-f1e2-408a-896d-0e73f6a62221",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "eaac0209-5fbc-4ec9-8e7c-5c20e9f188ad"
        },
        "item": {
          "id": "81418cc7-3d67-4e47-aabe-6009d010c338",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "df2c17e0-7dbc-4f22-aac2-94f1fcdff579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0aa879b-96c7-4f21-b24e-c1a30cb73866",
        "cursor": {
          "ref": "e541d9ef-c83e-4df9-92ca-ce80de0cd2d3",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "06a55d3a-d01d-401f-a9bc-9da09f3c5771"
        },
        "item": {
          "id": "c0aa879b-96c7-4f21-b24e-c1a30cb73866",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "56b6288f-bed8-4759-8c4a-044432b54db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13302e30-52ec-484f-9b2a-b9805dc1f29a",
        "cursor": {
          "ref": "9a10651e-6347-4772-9187-df673ef3610a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a94ca10f-7fa1-4d63-933f-5ea3baf027fc"
        },
        "item": {
          "id": "13302e30-52ec-484f-9b2a-b9805dc1f29a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bba6b47b-b4e2-4101-8229-fb3240dcd422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2388923-321d-45e4-8e36-ceb921c5d29e",
        "cursor": {
          "ref": "9d3d5903-3578-45ff-bf5a-9f5bea05ca30",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "207516c4-5ea0-425c-a35d-b51649f22428"
        },
        "item": {
          "id": "b2388923-321d-45e4-8e36-ceb921c5d29e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "78db053f-66d7-48a0-8dbe-f4d2669a5298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e869de41-90bb-4bca-b952-7d8ad4a5484b",
        "cursor": {
          "ref": "4125542f-f473-4609-a749-9524b333f9c3",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "52f7f463-114a-48bd-a7b2-407abeb76d68"
        },
        "item": {
          "id": "e869de41-90bb-4bca-b952-7d8ad4a5484b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6317f58d-e0fa-4474-9f0d-34b50bf44062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1ea447-d9b3-43d0-bcd2-3f9a7fac4af4",
        "cursor": {
          "ref": "34cf9b35-cc7d-44df-97c7-9ba698e31efe",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9cbb4404-e230-4a3f-9bc1-33ec4bf2601b"
        },
        "item": {
          "id": "1e1ea447-d9b3-43d0-bcd2-3f9a7fac4af4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "812268a2-b69e-4810-9466-bffd186c4bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147fdcf8-6142-47e9-a00b-f3e0e1b16ee1",
        "cursor": {
          "ref": "c54cb64a-e58f-4f12-ada1-a54c3e50cd2c",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ff310381-b88d-43ed-9c94-75955ae78768"
        },
        "item": {
          "id": "147fdcf8-6142-47e9-a00b-f3e0e1b16ee1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c90a9f94-4c40-401b-9caf-2409eaa5d485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58051c2f-fd56-4108-8c31-7f3f0166d93c",
        "cursor": {
          "ref": "375011c4-4da9-451e-8576-5708db68dcc7",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2c481375-7669-41e3-9e92-35dfff7e07b0"
        },
        "item": {
          "id": "58051c2f-fd56-4108-8c31-7f3f0166d93c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "15890c73-c9b0-4c44-9bd8-660bcaf8ed7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efda7909-fc62-4d75-8ed3-315e57a0f8a9",
        "cursor": {
          "ref": "7f9914d7-107a-44d7-b0e6-7b4fa6c5a0ad",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5afb9e3e-b1e4-4575-8c3a-c10d8a8fb984"
        },
        "item": {
          "id": "efda7909-fc62-4d75-8ed3-315e57a0f8a9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "118cf307-4bd9-4852-94b0-9015e0b7a49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1222b52b-a433-420a-8ba8-8a943487af62",
        "cursor": {
          "ref": "f658a111-c2ee-4ded-9e41-70ef3de69858",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0a8a52f3-f7b3-4c5c-9034-8bef0f19133c"
        },
        "item": {
          "id": "1222b52b-a433-420a-8ba8-8a943487af62",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1b798fbc-70be-4dd8-b699-b5729a196627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c55ab65-1ac5-450e-a807-dcfc4cdd7bba",
        "cursor": {
          "ref": "610de214-fd95-4847-8b28-1cc4d94d45eb",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "68a93fa3-bcaf-4d4d-9216-e5f6a730104c"
        },
        "item": {
          "id": "0c55ab65-1ac5-450e-a807-dcfc4cdd7bba",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d8da16c5-a041-448c-a3e8-8653dbb3cf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0152814f-4aba-446b-b9e7-5bdcce14836c",
        "cursor": {
          "ref": "eef10c0b-5744-4d13-b011-c6eda8b5be9a",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8afb545b-5fc7-4629-a25d-f5be7b0d7b90"
        },
        "item": {
          "id": "0152814f-4aba-446b-b9e7-5bdcce14836c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3546a5f0-5c5b-42c4-9852-92882c4a15ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb582280-7f50-496f-8741-c04910d146c5",
        "cursor": {
          "ref": "cf6ec1c2-5ea8-43c0-86cb-8186a2bf3e41",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "74743c0d-1c12-4d96-af87-4148da947be0"
        },
        "item": {
          "id": "eb582280-7f50-496f-8741-c04910d146c5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b8dc1d84-e07c-4887-9834-ac5f6bedd3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb22bc4-2180-48a8-9821-38cf0a213568",
        "cursor": {
          "ref": "f27ff6ce-19e8-4309-8148-458e971758fa",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8098a200-0f53-447a-99d2-14326f9a892f"
        },
        "item": {
          "id": "deb22bc4-2180-48a8-9821-38cf0a213568",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c8a82cd5-09e5-4d09-981a-98e3b3a19629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e69836-48ab-4ab6-8e08-e8156e03bb87",
        "cursor": {
          "ref": "36f511fc-d012-4824-86de-4c2157ef924f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "65d3a22d-d4de-4159-9ca8-47f76ca3f041"
        },
        "item": {
          "id": "b6e69836-48ab-4ab6-8e08-e8156e03bb87",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0e7c1a92-74ca-45d6-97be-d57ddb4cbab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea45dad5-e806-4a31-8ee4-b5d18edc3e09",
        "cursor": {
          "ref": "48e2f019-489d-446e-a0be-a80d885899ca",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1640adbf-5310-4a7e-a24d-959bcd8917fd"
        },
        "item": {
          "id": "ea45dad5-e806-4a31-8ee4-b5d18edc3e09",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "48db93ec-37ef-4f57-ba48-f93975871845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e953b6-0567-44b1-8e16-2cee10be0b6b",
        "cursor": {
          "ref": "f20a7a0f-47e3-4e95-bf3a-0a17814ca6e6",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e4869644-5914-48a8-b598-2e5d37b9f80f"
        },
        "item": {
          "id": "64e953b6-0567-44b1-8e16-2cee10be0b6b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "478e3323-9dbb-42d5-85fa-e5c275f7cb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbda664-4759-4dfb-bdc8-c6f2496158da",
        "cursor": {
          "ref": "7c42b361-6e0b-4ac8-8bed-167072fcce6e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ada60b15-142b-42d9-a32e-727def3677b7"
        },
        "item": {
          "id": "7bbda664-4759-4dfb-bdc8-c6f2496158da",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ff604ddf-1066-40fa-9c9b-3c9b40651952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2224f544-d0ff-46de-9815-f37d9544c02d",
        "cursor": {
          "ref": "c2ef1768-cb70-4406-83ef-cf3dd71c38df",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0c95d812-7df2-4a09-94fb-498be0718cea"
        },
        "item": {
          "id": "2224f544-d0ff-46de-9815-f37d9544c02d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d7b859af-f029-4c99-b57d-0954abe86e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e77a5e-b320-4ffb-89e1-272d8f7e7d3d",
        "cursor": {
          "ref": "d6a67757-1489-4f16-8f92-56d27704c667",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "be972f5e-1007-4d3d-b44b-b89f954a9c34"
        },
        "item": {
          "id": "c9e77a5e-b320-4ffb-89e1-272d8f7e7d3d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a2c84169-9151-43ff-92f2-6df024659c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3032c34e-bf16-4baf-afdf-46e99c9bd0a9",
        "cursor": {
          "ref": "fc441415-3a23-4a79-a27a-adb2b89e97a3",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f9f7a715-b2d7-42f2-9382-1e106fdd4b96"
        },
        "item": {
          "id": "3032c34e-bf16-4baf-afdf-46e99c9bd0a9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "07208f91-2ddf-4fa8-b14f-ce9484e6d68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59672ac7-696c-4521-b498-0eaf2196c17c",
        "cursor": {
          "ref": "ce4791df-ba90-4fe4-bd6b-c6d32f31278c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4a841d91-37cf-48e9-bc37-9e6a279a26fa"
        },
        "item": {
          "id": "59672ac7-696c-4521-b498-0eaf2196c17c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e9efae96-b49a-4a0f-a3cb-598ef9f3ee46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5929060-dfe9-4261-9797-7299b516dfd8",
        "cursor": {
          "ref": "988293aa-de9f-4eed-8faf-c82fe3ef2d1e",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1611c8c6-566a-4658-85fa-9fadf2d42d51"
        },
        "item": {
          "id": "a5929060-dfe9-4261-9797-7299b516dfd8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "14879906-062d-4b90-a04a-a4fe47f14123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cdb530-a660-4abf-b2c5-e95e9ca84e5e",
        "cursor": {
          "ref": "24c6f4d8-5133-4c8f-8c13-e656480d1cce",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e31ece42-2067-4025-bdc0-88f09715dfc6"
        },
        "item": {
          "id": "88cdb530-a660-4abf-b2c5-e95e9ca84e5e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b0566e8c-f9c0-4fe8-8a15-f443ceb394cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40690e31-7c95-42b6-8a42-3290a48e8c1a",
        "cursor": {
          "ref": "bb140152-b61f-46b7-8a9a-e0ffca6dc0e8",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8a6323c8-1813-4608-8ae5-3a2474236f5c"
        },
        "item": {
          "id": "40690e31-7c95-42b6-8a42-3290a48e8c1a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "97944ca7-e83f-4fdf-9d8c-0f7531be28ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4c2041-5ffa-42fa-93ee-0b6741588ab5",
        "cursor": {
          "ref": "ef39f80b-9607-481a-9b31-550caa721c1e",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a7ee84b7-1176-4fa5-ac40-c35b3da0e2f5"
        },
        "item": {
          "id": "fb4c2041-5ffa-42fa-93ee-0b6741588ab5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0f02e658-e82e-4472-b903-daecb2b1938b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7c4a3b-19ff-45c5-8d19-aed0218d294f",
        "cursor": {
          "ref": "55974587-fd70-4398-8f1e-efb75bc30238",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a016341f-67f2-4c55-97b4-50eb2064a91d"
        },
        "item": {
          "id": "ab7c4a3b-19ff-45c5-8d19-aed0218d294f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "109208df-08d9-48d9-b39e-79d4193f1d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b739c364-bd2f-4ce6-ae88-cca47600f6f9",
        "cursor": {
          "ref": "a892caa5-0dfa-4400-8ea9-0a67f0c67500",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b7be20bf-1352-490f-92aa-3100689a7972"
        },
        "item": {
          "id": "b739c364-bd2f-4ce6-ae88-cca47600f6f9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ae63c03a-6815-4fa2-a0a7-d7ecedf9c186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d206915-0be5-4fc1-b726-1e4a183ff683",
        "cursor": {
          "ref": "441369f1-7527-4997-92a2-bd830cad2175",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bc291523-b5e8-4ef5-b087-80d018d18fd0"
        },
        "item": {
          "id": "3d206915-0be5-4fc1-b726-1e4a183ff683",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f9de09ff-6c6a-4c77-a3ea-8fcd06f23924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9f5758-4e31-4d6a-afce-8b09927e5abf",
        "cursor": {
          "ref": "2b0b67f2-f7fc-4c49-a915-a1315ffe2bbd",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0e592ff2-a05a-4766-acf5-d22e97e7656f"
        },
        "item": {
          "id": "ba9f5758-4e31-4d6a-afce-8b09927e5abf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0da0a5fd-abe9-4d29-a048-fa9f0d5cc702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c939d24-c324-4718-a804-f92b6539b7d2",
        "cursor": {
          "ref": "d72348d0-c45e-4fc7-ac67-d5c7bc9c2582",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "86a343e5-5aff-4cdb-8336-acfa86a4b6a3"
        },
        "item": {
          "id": "6c939d24-c324-4718-a804-f92b6539b7d2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a27b913b-4720-4481-b95b-cc9189437568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f739a9f0-ed41-413b-af1f-5e7073c1810b",
        "cursor": {
          "ref": "f23008e5-deba-40f1-989c-526538e6a17d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8d677b13-ca3c-4dfc-bc68-c91fcb2fcf2a"
        },
        "item": {
          "id": "f739a9f0-ed41-413b-af1f-5e7073c1810b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1217c1a6-4ef2-472a-8eb4-1c902cb70e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c046c4-d551-4c43-82c1-9495c62ef810",
        "cursor": {
          "ref": "4fcfd22b-c9c7-4563-9e44-369b12b3576b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4455f4a6-2e8b-4921-a959-22e5a02db17a"
        },
        "item": {
          "id": "d1c046c4-d551-4c43-82c1-9495c62ef810",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f6ce6fbe-eb9d-42d6-97e2-0aea4e616e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca64780-f7c7-4a88-8087-d541aa3d80a7",
        "cursor": {
          "ref": "9153b204-fa23-4c8a-adb1-ee26df8e8bdf",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ea01310b-e3ee-402a-b415-c8bfe891a7c7"
        },
        "item": {
          "id": "bca64780-f7c7-4a88-8087-d541aa3d80a7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "08f97d73-608b-4c6b-954a-b6d0399ab959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a6c94e-7d46-40dd-8efd-cb5b2174dca8",
        "cursor": {
          "ref": "cbfd076b-a9cc-46b3-8c2b-d57dfad8478e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7f5f406b-50d9-4f45-8bd7-3690b03ae8ae"
        },
        "item": {
          "id": "f4a6c94e-7d46-40dd-8efd-cb5b2174dca8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "04a70af3-93bc-4835-8203-f100d8664fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5206d40f-289c-43af-a403-1b473be93ba5",
        "cursor": {
          "ref": "072c0567-9fbe-4262-bccd-341c166f7760",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "066453a4-ac25-4aee-accc-966bfe902c1a"
        },
        "item": {
          "id": "5206d40f-289c-43af-a403-1b473be93ba5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "84aeb600-e797-4353-892e-598a51a5f7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e24049-da3e-4943-bfa5-f32a21d9aeb6",
        "cursor": {
          "ref": "57ba8991-57d2-436c-98e8-b488651f1429",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ee94971c-6115-4565-9ef1-26a8c0be8308"
        },
        "item": {
          "id": "82e24049-da3e-4943-bfa5-f32a21d9aeb6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "377be17c-219d-47aa-9814-a173bd5f8f91",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29fe25e-1907-4a98-a5a7-10e1a5fbc15b",
        "cursor": {
          "ref": "a82fe2c4-795f-4db2-9308-666444eb4dd6",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "24e63ad6-dd12-44cc-a7c8-773e673577ec"
        },
        "item": {
          "id": "e29fe25e-1907-4a98-a5a7-10e1a5fbc15b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "75d9e3b8-c7d6-4e69-87d8-b0b3ac56767e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "118bb6a6-3729-4187-952a-3f5f4b286b3b",
        "cursor": {
          "ref": "940d67fc-e95e-4fb0-b339-5380ecdfbd9e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7363e992-c150-4dae-aed9-de284fee4aa1"
        },
        "item": {
          "id": "118bb6a6-3729-4187-952a-3f5f4b286b3b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "13527797-d641-497a-b21e-e5a7fd25e97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "12efd68d-ffd2-467c-9837-685517c471fb",
        "cursor": {
          "ref": "f001c5ec-d672-4c0e-be77-fe02a503295e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "160ce35b-70e5-44d6-b9c3-abafa8572728"
        },
        "item": {
          "id": "12efd68d-ffd2-467c-9837-685517c471fb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cae78258-0d4f-4c5b-a05c-e7e8ad3c55d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "55491a01-9967-4bb6-8d08-f9b7333e565f",
        "cursor": {
          "ref": "9020c726-bb44-4093-a826-88602471771d",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2dd7d752-7adb-41a6-bc78-f87f5302a825"
        },
        "item": {
          "id": "55491a01-9967-4bb6-8d08-f9b7333e565f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ead69486-ec66-44a5-88a0-77dea52155ad",
          "status": "Created",
          "code": 201,
          "responseTime": 6354,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe25ad3-e941-40c2-b8bb-2e515098c39f",
        "cursor": {
          "ref": "f3ec2e61-55d8-4768-96de-3f08bc56808d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a8b134bb-8eac-43cc-a2cd-cdfdf67233f7"
        },
        "item": {
          "id": "ffe25ad3-e941-40c2-b8bb-2e515098c39f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ce005e03-2583-43e4-b52d-599105bed1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "36c8f870-78b1-4483-ab50-3841d58ac5db",
        "cursor": {
          "ref": "857d8698-ebd4-4abd-abe1-a80203d7c994",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "be32a6fa-1c01-4519-96b3-3c4f26450a5e"
        },
        "item": {
          "id": "36c8f870-78b1-4483-ab50-3841d58ac5db",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a672a811-41a7-4c2d-a1d5-3687d15d12af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "b74831e2-f646-4368-a05a-181ee2cd9d66",
        "cursor": {
          "ref": "e55ecaf1-74ba-40d6-bfb4-2ac1fb81af86",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2c9de0b2-efd4-4b8a-bbd5-5b4413031934"
        },
        "item": {
          "id": "b74831e2-f646-4368-a05a-181ee2cd9d66",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a5add116-3f6f-4291-ba3a-89a3073bf727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a96cb2-618b-4410-9c89-8cd83c6fa72a",
        "cursor": {
          "ref": "078a62e6-cf3e-4cea-8e99-50efc7740f56",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "78213a87-3ec1-46cb-b978-0c079fcad7de"
        },
        "item": {
          "id": "e7a96cb2-618b-4410-9c89-8cd83c6fa72a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3d4398c5-b8b0-40f9-a28a-5e4fe95dbfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f22648-b3dc-47aa-8b4b-83348de3094d",
        "cursor": {
          "ref": "1cb6bf48-9735-490e-9e69-a192ce81ee4a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c7f0e4aa-fda3-4ec9-b98f-64ed308327d2"
        },
        "item": {
          "id": "b6f22648-b3dc-47aa-8b4b-83348de3094d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dcd24d67-2afe-4dd4-ba2b-6416ecd453d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a35df69-04db-4c86-85ed-aea8ca29caac",
        "cursor": {
          "ref": "4cda978f-b454-4704-a021-f973bc5e4e1f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8824a3e1-4a9d-491a-aaf2-e1cf240df081"
        },
        "item": {
          "id": "7a35df69-04db-4c86-85ed-aea8ca29caac",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d43864cb-7868-4b02-af09-5390302bcb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8d7e2c-e1f0-4401-b82f-4ac990d6fc1a",
        "cursor": {
          "ref": "66d09714-7212-4caf-b7dc-a19213f6e597",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3fba14a4-7de9-47fe-bd88-ddfcb6ec1d3e"
        },
        "item": {
          "id": "cc8d7e2c-e1f0-4401-b82f-4ac990d6fc1a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "502e2ee7-381c-4fb6-bb9c-f1bfe9e52af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39630bce-abb9-4f19-8893-00a38bd276dc",
        "cursor": {
          "ref": "6edb1bce-4834-4c2e-b183-4acfe37963df",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "029eda72-0da7-4128-9ef6-cd13569b62f2"
        },
        "item": {
          "id": "39630bce-abb9-4f19-8893-00a38bd276dc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e0e81719-ec97-4dfc-a5e0-aa53485a1f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db236d0a-fcf9-4765-8306-661d24f8c169",
        "cursor": {
          "ref": "f945b521-6735-418c-a154-b85af76a4229",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0af4be59-4117-4a6f-8238-beb6ec618328"
        },
        "item": {
          "id": "db236d0a-fcf9-4765-8306-661d24f8c169",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4b3ba89d-74bd-4ad7-9eca-8667c21dc1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ba6700-c43d-4fbc-9f55-16eeb85cb8f3",
        "cursor": {
          "ref": "89e13fcf-dc3b-4c7b-b685-ec23375e7ee1",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8faf21c0-f2e9-49bc-9a55-f8d131f067d9"
        },
        "item": {
          "id": "06ba6700-c43d-4fbc-9f55-16eeb85cb8f3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0da0137a-17cd-4fcd-8d18-4e315f2bc8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c968d64a-ab58-4cb7-8349-6a92382ad81f",
        "cursor": {
          "ref": "329b8e8b-a0fa-4462-97d3-465085f15ce0",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5483af29-b413-414e-9ef7-608be80dedd7"
        },
        "item": {
          "id": "c968d64a-ab58-4cb7-8349-6a92382ad81f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "31592a51-8a82-42d3-8acd-d8c2904f28f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8d2b3e-726b-47eb-aaab-db32febc4a23",
        "cursor": {
          "ref": "e3b12415-747e-4e39-9327-c61b16a0b4a1",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "902c1f0f-e93d-4019-908c-60088deef28a"
        },
        "item": {
          "id": "8c8d2b3e-726b-47eb-aaab-db32febc4a23",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4a514d17-6db9-47b8-b03b-33780e4c4351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f4261b-bbe4-4816-8a9d-33b3872fe756",
        "cursor": {
          "ref": "fec2d0cd-8a59-4b3e-924e-7ab864ad24e2",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4fcb9f15-9610-43f5-9bd1-92e811dceeca"
        },
        "item": {
          "id": "e2f4261b-bbe4-4816-8a9d-33b3872fe756",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dca5e43d-e623-422f-87ca-a6ba1bfaef30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8b7454-6bcd-4c1d-acb7-7e1f2be92db0",
        "cursor": {
          "ref": "b6d9cf89-a2d0-4291-8570-1b3df804dea6",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "15e7b903-9afd-43ec-ab83-178676159e87"
        },
        "item": {
          "id": "ff8b7454-6bcd-4c1d-acb7-7e1f2be92db0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3207fcf7-9e00-4a8a-b02e-60c995c7b391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda64caf-4333-43cc-9e47-199724b27950",
        "cursor": {
          "ref": "4635be98-c19b-4a53-baaf-b5d925bbadb5",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "69b2397f-0331-4372-a54c-526725610aa3"
        },
        "item": {
          "id": "fda64caf-4333-43cc-9e47-199724b27950",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7b958299-fa6b-4106-804e-d2f95ad0060a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6498d106-75b1-41b0-8743-2df3965f19e9",
        "cursor": {
          "ref": "776fd7dd-c0db-4f0f-ba87-d5e20adedd8a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7ee9a3f6-e59d-4514-9a5d-6ad5fdf215ad"
        },
        "item": {
          "id": "6498d106-75b1-41b0-8743-2df3965f19e9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ce33e93a-984c-4d22-ace0-37c65b75d4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67297884-6f25-44ab-87d2-25972b814096",
        "cursor": {
          "ref": "0e987a2a-626b-4c92-a774-b08e7a7b9d65",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c21e2f77-f65c-429b-aaea-8754937f1183"
        },
        "item": {
          "id": "67297884-6f25-44ab-87d2-25972b814096",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c5c316f9-69af-44fd-b3d4-dabc9e29c1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01a35e3-f9a9-4290-a461-f6c3e1652a6f",
        "cursor": {
          "ref": "ba343dea-cb8a-45e5-89b2-e70b8569bdd9",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a866476f-09e4-4869-aabb-8e11dcae6377"
        },
        "item": {
          "id": "f01a35e3-f9a9-4290-a461-f6c3e1652a6f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5457ca64-24b6-42db-859e-cb5b7bcfa52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a3a081-b01c-4498-b6e5-68b99646706e",
        "cursor": {
          "ref": "5dab0cb3-040f-490f-adc6-a32cd05d862e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "46b5f169-5a30-4d7c-8b6f-7c1a9080c95b"
        },
        "item": {
          "id": "e4a3a081-b01c-4498-b6e5-68b99646706e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "301885bb-ee33-4082-8f23-9853b84ff3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fd81ed-8862-4458-ad59-7fa450466453",
        "cursor": {
          "ref": "5b292c89-0d2e-4833-9cb9-e2d349935f99",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "98885214-3d14-4ba9-a130-3a49d53861aa"
        },
        "item": {
          "id": "82fd81ed-8862-4458-ad59-7fa450466453",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fa306795-dfb5-4794-b8bf-0fedc0f0b14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3e8f56-5a52-437c-b8f0-65f34456cab6",
        "cursor": {
          "ref": "c365139a-6086-422f-bb86-99e729a6e0a4",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a8e0810a-1fc2-4417-8f85-55c28b8bbad6"
        },
        "item": {
          "id": "5b3e8f56-5a52-437c-b8f0-65f34456cab6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "53ae9ba4-5ecd-46c5-ba02-c8a6fb51ba73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f5a830-1078-4ee4-a67b-8ec7faf88e79",
        "cursor": {
          "ref": "b371bf5b-c067-4597-948f-fd5a9d614648",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fbbb902a-922b-410a-88b8-5a2668c118a1"
        },
        "item": {
          "id": "b8f5a830-1078-4ee4-a67b-8ec7faf88e79",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "789642c2-df4f-46bc-96f3-88f8e1db78b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ba995a-a129-4597-8cfc-1f151a5ddfaa",
        "cursor": {
          "ref": "b220ce97-8bb2-4877-a2ee-660e86fd174e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "96cbb825-5093-4763-93b8-b1eca36efdd5"
        },
        "item": {
          "id": "99ba995a-a129-4597-8cfc-1f151a5ddfaa",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ba6c0fda-1f90-4a7b-8714-2d9507c74679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df88418-4a27-4154-afbd-55c369f2074e",
        "cursor": {
          "ref": "dc0ac024-a25b-41dc-bd48-407ea653e012",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1a91d78d-42f8-4d72-a594-f91de842f476"
        },
        "item": {
          "id": "6df88418-4a27-4154-afbd-55c369f2074e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e49ace45-6120-44b3-8333-fdb815fa6afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e20abaa-acea-40b7-b513-d698f02e08a5",
        "cursor": {
          "ref": "e7f7f5c8-31fc-4a09-958a-c38d8443b979",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1a23a493-4e16-41d0-b275-0b6e02ace0bb"
        },
        "item": {
          "id": "0e20abaa-acea-40b7-b513-d698f02e08a5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "df393b8e-8dd7-45d7-aea7-648ad954093d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bc8c56-1579-46a2-9f8d-c9ca58b72436",
        "cursor": {
          "ref": "9d9f8035-4349-432b-8377-aafc391fdfbd",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5193634e-2996-4334-90db-cd1cb2ec063a"
        },
        "item": {
          "id": "58bc8c56-1579-46a2-9f8d-c9ca58b72436",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "430d8d86-d787-44c5-84f2-7a5da852944f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f3435e-277a-485b-ae0e-4994146e93f7",
        "cursor": {
          "ref": "442d7c43-be51-4c19-971b-8928812862d0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6fcca96a-9295-43d9-8d7c-155f386a5d65"
        },
        "item": {
          "id": "54f3435e-277a-485b-ae0e-4994146e93f7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5d52fab7-e941-4d51-b56e-df032ca6fb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0072d2-1017-4521-bbf2-e2e00a4731e5",
        "cursor": {
          "ref": "bd08c08a-b685-4cce-994a-0f630b7dd424",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "72f8b1aa-597c-4a2c-a778-d26629005ae2"
        },
        "item": {
          "id": "2c0072d2-1017-4521-bbf2-e2e00a4731e5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1f76d297-cd0c-45ee-993b-85429cfaaf3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5b1af0-6ca2-4a21-8a11-bbc27a0fbeb5",
        "cursor": {
          "ref": "1c277960-12da-4347-aabd-2d0e923694a0",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5df85aed-c236-4386-80bd-0bb178ca4f0d"
        },
        "item": {
          "id": "4b5b1af0-6ca2-4a21-8a11-bbc27a0fbeb5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "61491a5f-7e5c-4dfd-aecd-598607db5688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dccfff-4397-4ff2-9b6d-47097d52b5a7",
        "cursor": {
          "ref": "c97e06fe-7eeb-4059-bb62-631de58e6a79",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "982106d8-e9ed-4064-a692-84d93b7045d8"
        },
        "item": {
          "id": "25dccfff-4397-4ff2-9b6d-47097d52b5a7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8f544646-b16b-4aad-894e-f583a61009b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c315383-0995-42e2-9fda-8ea9ad9ccea0",
        "cursor": {
          "ref": "c2eee534-679b-47a9-a7b8-2f2b1e36b948",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b67bf01a-22ff-4f16-bbc8-41dc48333a84"
        },
        "item": {
          "id": "0c315383-0995-42e2-9fda-8ea9ad9ccea0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "37377d66-fc14-4680-9030-8b7e29a77b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ad0e0d-0899-4c81-863c-3f1a27d128ed",
        "cursor": {
          "ref": "978f2c1b-10a5-4672-bfd3-ede2bfd2b48a",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2826651e-7f3f-4d12-89c2-04f3988e1f12"
        },
        "item": {
          "id": "c6ad0e0d-0899-4c81-863c-3f1a27d128ed",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "903eacef-1d27-4e96-9a0f-e8f5832eb2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2eddaf-be95-42f3-98bf-adfd28520f70",
        "cursor": {
          "ref": "4221c04e-8185-4232-8079-8a3858c4a9cd",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "12e0a690-b51e-4e7c-b231-a4f671ea6fb5"
        },
        "item": {
          "id": "ab2eddaf-be95-42f3-98bf-adfd28520f70",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fb5da87d-1786-4dc9-8747-568be83e48be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1921da-defb-480c-aca5-dbcea4d1979b",
        "cursor": {
          "ref": "7d93f839-16a8-4237-b7ef-d26c302ca804",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3680cfbb-89c6-4caf-96d4-297d8ddc15c9"
        },
        "item": {
          "id": "5f1921da-defb-480c-aca5-dbcea4d1979b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a41615e8-f75f-4805-bbd7-001e5b633ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d823c61-00cc-46cd-b407-074ca8509486",
        "cursor": {
          "ref": "d35ce9c5-7c20-462e-bc11-27a13d0d6573",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a3b26fbb-6fcf-4614-acff-3fbc83430b71"
        },
        "item": {
          "id": "5d823c61-00cc-46cd-b407-074ca8509486",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ee7c4edf-10a4-4e6a-b512-65758f3e9bf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530ee89e-897d-4689-bff3-b42dc6e2225b",
        "cursor": {
          "ref": "6abef001-51da-4662-81fc-651945db053b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6c1606a7-c6aa-483f-af40-dce8f434ed5e"
        },
        "item": {
          "id": "530ee89e-897d-4689-bff3-b42dc6e2225b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "27aadb2f-dd76-4d2b-a59d-47a491eea5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920b80cd-e5e6-4892-98cd-281fa6c56838",
        "cursor": {
          "ref": "505c1d29-73cf-4104-b824-7b297ff9fcb5",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3b5dac48-143e-49b1-a233-e79790d5f5b3"
        },
        "item": {
          "id": "920b80cd-e5e6-4892-98cd-281fa6c56838",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "83f7f0a3-07b7-4eb9-87b3-89c6f8c50b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f9b6eb-80e8-4772-a99b-cfd9382bad72",
        "cursor": {
          "ref": "e1f81992-33a9-49dc-b966-e92d92a89bc0",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3707c81e-2567-43da-aef6-259d11110e5e"
        },
        "item": {
          "id": "59f9b6eb-80e8-4772-a99b-cfd9382bad72",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1be54be7-13c8-4e67-9f27-9dd53ec61cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ffb351-d555-473b-856c-917fee58ff8e",
        "cursor": {
          "ref": "677ee4ee-2cb1-4ecb-948e-cf205b158718",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3961760a-17f9-459e-aa12-00372df1ebc7"
        },
        "item": {
          "id": "08ffb351-d555-473b-856c-917fee58ff8e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1e7285a9-fabc-4673-8a65-47daff7fe3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b6d547-91a4-4d68-a568-e8093b1a9ac7",
        "cursor": {
          "ref": "7cd90e16-810e-45c1-a3c6-7fcdb2b5092e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f23611ba-1434-4684-9b15-f67d5847b6b9"
        },
        "item": {
          "id": "69b6d547-91a4-4d68-a568-e8093b1a9ac7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0483b4ce-d75f-4b85-b448-d565794ce038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6725a3b2-4a13-413b-9197-d076c84a9a00",
        "cursor": {
          "ref": "2bf56251-0be5-4e99-9cec-6aebe86bcd88",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "85979178-e1f6-4adb-8ad0-4b3e09b985e1"
        },
        "item": {
          "id": "6725a3b2-4a13-413b-9197-d076c84a9a00",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "52b59b11-3f50-4355-b08a-fdbeb4c1b031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b87a39-8101-440f-8147-a643b4acd796",
        "cursor": {
          "ref": "4733d00f-ac57-4968-839f-7ae01181fec9",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cbcb2b3e-507a-4d70-b39a-2c0d1e65c9d1"
        },
        "item": {
          "id": "c1b87a39-8101-440f-8147-a643b4acd796",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "14e5e84b-d007-42aa-86f2-1e35683d54bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b81a4d6-c235-45cd-8627-27c42f5d37ef",
        "cursor": {
          "ref": "ecbff426-9147-4c19-8cab-5c585ca96b4f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bf38412f-f54a-4c00-bbf8-800f231b20be"
        },
        "item": {
          "id": "6b81a4d6-c235-45cd-8627-27c42f5d37ef",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7085ddb1-563b-4be2-9652-e6bdf3001472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0abe96d-d6cc-473c-ad53-2b10bbccba61",
        "cursor": {
          "ref": "bae7a13a-d9fe-4b59-94bc-fee21b088da2",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6bf22a67-4b0a-409c-aa33-47373b832c17"
        },
        "item": {
          "id": "c0abe96d-d6cc-473c-ad53-2b10bbccba61",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "159b9e27-bcfb-4193-8833-9df88a514a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbe16bd-7851-469b-9b92-b0d75f8a3d09",
        "cursor": {
          "ref": "f5acfe76-24f5-467d-9c08-793f597cae1a",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0ba21623-699e-42fd-b017-7a8d7b4916fb"
        },
        "item": {
          "id": "bcbe16bd-7851-469b-9b92-b0d75f8a3d09",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c6bb88e7-a3d5-4b2f-95a6-0183bf481ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e09a24-3d6d-4668-af78-8df6c3256a1d",
        "cursor": {
          "ref": "f95070a4-af9d-49b7-b9ce-4a07864c3981",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "91385743-97f4-4781-8f7e-f4818e70363b"
        },
        "item": {
          "id": "04e09a24-3d6d-4668-af78-8df6c3256a1d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "71a8ae74-3b70-4a0d-8fb6-c4a4df926010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d346e6ed-8e4b-486a-8349-6804ba8403b4",
        "cursor": {
          "ref": "d38c46d0-a474-4eea-8dc7-5fefd4a17788",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4efa00b9-3d75-4cbb-973a-17cb38abc8d0"
        },
        "item": {
          "id": "d346e6ed-8e4b-486a-8349-6804ba8403b4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bc7c3ecf-25e4-458e-be13-78a5d84a0cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9618833-42fb-4c18-bbef-f8b28282f71d",
        "cursor": {
          "ref": "34c60d52-22f4-450e-9ba7-2c0f7aeb5c33",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5c37c091-12b2-4119-8d07-973b8ce725ad"
        },
        "item": {
          "id": "a9618833-42fb-4c18-bbef-f8b28282f71d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ba1a6437-ca35-4237-83a8-f9bb9ba7162a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47547370-8997-4fb5-8f9e-86289b61aa6c",
        "cursor": {
          "ref": "1cd03575-2083-4eb5-aa84-2939009e8aaa",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "46116073-72a6-4d60-9bc7-cfb14b38e0ea"
        },
        "item": {
          "id": "47547370-8997-4fb5-8f9e-86289b61aa6c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "91b14bb6-d4d4-4ae4-b8b9-d05823067b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757d1fac-3e28-478a-9100-51a84a49ac0a",
        "cursor": {
          "ref": "53e5e9ec-8f3b-4a07-ad98-2fd838747dfd",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e5ac47b6-0da4-4b2f-af05-43f798c963eb"
        },
        "item": {
          "id": "757d1fac-3e28-478a-9100-51a84a49ac0a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dea149cc-151d-4070-9a78-7ee97d1474ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc4f2f3-1f9c-4b36-859d-90a92318e54b",
        "cursor": {
          "ref": "73d3224b-9c37-4a59-8b9f-88ef22a3b977",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "178a802c-ace7-4cb1-9e5e-0af8e418db6c"
        },
        "item": {
          "id": "9bc4f2f3-1f9c-4b36-859d-90a92318e54b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "394d5fad-7b3c-41e6-a1f0-57efd45102ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2723a521-4eb9-4fda-aba3-5061af744aa5",
        "cursor": {
          "ref": "168dfb5d-9236-4a8c-83fb-cf4878d7d584",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "67d99fec-3b33-4ac6-a0c6-85c7c059e5a6"
        },
        "item": {
          "id": "2723a521-4eb9-4fda-aba3-5061af744aa5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c88c7c79-b34b-43eb-8caf-7f4588c90d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81898b11-dcf7-4d66-a435-39d7d8cdda00",
        "cursor": {
          "ref": "73999141-e648-4172-847f-f62b338e1162",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a59d811e-425d-4e53-b0b3-c6772005cfe1"
        },
        "item": {
          "id": "81898b11-dcf7-4d66-a435-39d7d8cdda00",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7dc69730-bc73-4ed9-9466-2500de8d60f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8223ac-cf25-43a4-953d-11e02485804f",
        "cursor": {
          "ref": "e380b043-84d2-4ee4-ba3b-1bc241b810f6",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3ddf931c-1e3d-4ff1-a8c4-2702d31549ff"
        },
        "item": {
          "id": "fe8223ac-cf25-43a4-953d-11e02485804f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5dab3d60-500f-489e-967d-b62312229f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dfaa47-67bd-4576-9c2c-4a747bb66833",
        "cursor": {
          "ref": "92a1766a-f215-4ae8-8b23-1a715787cbfd",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f08f3693-ff3a-4fbd-9966-b710f05bd708"
        },
        "item": {
          "id": "59dfaa47-67bd-4576-9c2c-4a747bb66833",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1b0b7371-946c-4ded-8a6a-8aeaf95e4997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7146ffbe-4098-4806-a9b3-9364a5638ba8",
        "cursor": {
          "ref": "6b13c326-aff8-47e1-bdb8-dbf16ff7b7c9",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a16e93eb-c19c-4073-aebb-860f8d7d4b4d"
        },
        "item": {
          "id": "7146ffbe-4098-4806-a9b3-9364a5638ba8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f28cd15e-13d3-4d53-aa7d-553497916294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2b50c1-ca1f-48e1-abf3-0216249c171b",
        "cursor": {
          "ref": "bd8b2871-69e1-481a-822e-80442c3f3da6",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4ec1f686-f20f-4bc1-817a-40166285ea6d"
        },
        "item": {
          "id": "af2b50c1-ca1f-48e1-abf3-0216249c171b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d4c932f8-787b-4d8c-ad80-dcc379ee70cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310b070a-26ab-4b21-8688-84dca399cadf",
        "cursor": {
          "ref": "c1e20201-12cf-4216-a58e-5e5894fd2355",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "11cdb53f-bb12-4aa4-8f69-c21f7b83af67"
        },
        "item": {
          "id": "310b070a-26ab-4b21-8688-84dca399cadf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "99cd5054-9060-4789-81fa-93c106024f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ff53f9-878c-44a7-aa22-555133443391",
        "cursor": {
          "ref": "44840460-d07d-45fc-989a-915a564dc78c",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4585845b-26f5-469b-b4e4-b7a13f799d93"
        },
        "item": {
          "id": "c7ff53f9-878c-44a7-aa22-555133443391",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "816ca53c-e0a2-4885-b8be-0c82f0a45699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42baa0ba-f681-4d81-b706-823b5b56aced",
        "cursor": {
          "ref": "424b8116-ed5a-49f4-98c2-912acd5b3fd0",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4efd5199-9592-49a1-9d3a-07b8a098a1d5"
        },
        "item": {
          "id": "42baa0ba-f681-4d81-b706-823b5b56aced",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8dc05f84-f4ae-4052-922d-d78c457f30e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a634dba-c5a2-42f6-99f9-d24022d82e1c",
        "cursor": {
          "ref": "0f28a653-b0b8-4975-bb22-72ee13ad6338",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e6e6dc1e-f3ee-4ead-b090-9c8f8cb922d8"
        },
        "item": {
          "id": "2a634dba-c5a2-42f6-99f9-d24022d82e1c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "46981932-e1aa-4620-b1e4-24123f4d2cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b78d6d-f8b9-41a4-ae1f-58f6a5dc6e3d",
        "cursor": {
          "ref": "e49f2879-96c9-417f-a872-a4337f08662c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d0d41f47-6efc-4bc1-92d0-425faf85601a"
        },
        "item": {
          "id": "d4b78d6d-f8b9-41a4-ae1f-58f6a5dc6e3d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cd13e1c2-1d8f-4269-b2db-571e6c915589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4c1281-04ca-4519-813e-c6a7eda9c0de",
        "cursor": {
          "ref": "3f4c2e57-717e-4513-9d2e-cc07a5188a76",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b70495c7-9a96-43b7-bcaa-8f0028a4b592"
        },
        "item": {
          "id": "6c4c1281-04ca-4519-813e-c6a7eda9c0de",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "29f045ea-7064-453d-abba-f79b2f87ff3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07f6ba4-1029-434a-9d49-406668172463",
        "cursor": {
          "ref": "dca7ccfa-a289-4d0c-8c04-b7f91ceaf834",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b3c83213-48ef-4fff-b9dd-7dd3107c752a"
        },
        "item": {
          "id": "f07f6ba4-1029-434a-9d49-406668172463",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9f554731-7dc8-484c-b4cf-b21ade71de7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a97e69-9add-464a-9905-831d357b68dd",
        "cursor": {
          "ref": "1c8b16ca-d5dc-4f1b-87ce-5e8ccd4a7932",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5801d4a6-4fe0-4a6c-b349-4c576583d260"
        },
        "item": {
          "id": "27a97e69-9add-464a-9905-831d357b68dd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c0759b3c-3946-4b9c-a758-21592cfef014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8520685b-8e26-4ec1-b1b0-14f41c933e0f",
        "cursor": {
          "ref": "720e3eca-b464-45de-a3c8-97b891ae984b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5f9569cc-a24e-46a9-8054-f6e279d650df"
        },
        "item": {
          "id": "8520685b-8e26-4ec1-b1b0-14f41c933e0f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "497cdb20-be3a-4af4-8ae9-861c2dd0be61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9773c7a1-aa38-42ce-856a-fd779df27005",
        "cursor": {
          "ref": "9ac5b989-8598-4194-817a-d77617aa3f1f",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5f26e49a-2657-49c8-a386-aca04374c74b"
        },
        "item": {
          "id": "9773c7a1-aa38-42ce-856a-fd779df27005",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8b2fab08-b753-43bf-8ae9-c77758c5d694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df266d6f-b3e3-4b6d-b8da-b7e97b079e56",
        "cursor": {
          "ref": "83e68fba-b1f0-43ad-87aa-c1094c44683f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "72ade8e9-813c-4460-91cc-a6baa34fc837"
        },
        "item": {
          "id": "df266d6f-b3e3-4b6d-b8da-b7e97b079e56",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "21f3d0dd-522e-422d-ab83-babac7b90a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9684e360-714e-4d22-8c0e-ae8ce415c631",
        "cursor": {
          "ref": "bc0c50c8-ee36-4209-9946-532eb44fe683",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b1fd5dc4-c1f1-474e-b98e-dd71b1aa1596"
        },
        "item": {
          "id": "9684e360-714e-4d22-8c0e-ae8ce415c631",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3b83bf4f-bf6f-4ee3-9030-7e86db2bdcba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0756d3df-3b75-4a76-b30c-236b2a79f5e5",
        "cursor": {
          "ref": "dd49c17c-0a7f-45f6-b5f0-042df2dd4647",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d2d5292e-00f3-4598-8db5-78e300d3105d"
        },
        "item": {
          "id": "0756d3df-3b75-4a76-b30c-236b2a79f5e5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c4ae8545-2b54-4bc3-abf4-1615d7fdb5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5690c5e-c316-47a0-89b2-203e5320cec6",
        "cursor": {
          "ref": "e64f8f96-cccb-46f5-a8bf-c740995c2d62",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b01aff0e-4be6-4830-8afb-acacb6fd9ad3"
        },
        "item": {
          "id": "e5690c5e-c316-47a0-89b2-203e5320cec6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "dc5c6d10-7e8c-4dfa-be25-b4b79a00732a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c50333-66fb-47b2-909a-b9b44dae0e67",
        "cursor": {
          "ref": "aa42d955-6fed-48f5-82f4-d8e34654b908",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9ec45a1a-2135-45d4-9360-af4004e4a1ab"
        },
        "item": {
          "id": "47c50333-66fb-47b2-909a-b9b44dae0e67",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fbc0a1d8-cfcc-49e7-bb87-a0df9df01a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7387f7-ee2b-4e0f-940c-2c446402b180",
        "cursor": {
          "ref": "7b13b199-360a-4747-8220-2715019ec7b3",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c6b3f4ab-3dec-401a-b405-9a2858c10733"
        },
        "item": {
          "id": "6b7387f7-ee2b-4e0f-940c-2c446402b180",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9508b9bd-5ce7-484e-a564-9a078e9dcc89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d275152-47bd-431c-88a1-406c1c3dd729",
        "cursor": {
          "ref": "607a3478-075e-4136-9bb4-834dea6dadd3",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ab5e339a-4fbb-4f9a-9b78-1b9bb40263a3"
        },
        "item": {
          "id": "9d275152-47bd-431c-88a1-406c1c3dd729",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "40a6c844-7fd9-4a5d-9c5b-dd1501783673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcc1356-67bf-4bf0-a36f-099a43328f1c",
        "cursor": {
          "ref": "cdc7735d-40dd-4781-8cff-ceb44b1ce633",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8b6264e1-875d-4e92-b896-c07b9f3c9e02"
        },
        "item": {
          "id": "ebcc1356-67bf-4bf0-a36f-099a43328f1c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "233e9bb1-d2b3-490d-b4e8-c362aaefeb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49fcca6-e0ee-4a8b-bf83-a923b68d3350",
        "cursor": {
          "ref": "1025fd85-cd1f-423e-9091-b9427c5648df",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6b6eae5e-e382-4424-bd41-c22de7474651"
        },
        "item": {
          "id": "e49fcca6-e0ee-4a8b-bf83-a923b68d3350",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dbbae882-173b-41e9-ab9d-dacb91484553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f8ef22-32d5-45ed-9fb3-dfde025ed643",
        "cursor": {
          "ref": "8e17d64c-30a8-4420-8085-6294d8920584",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a84efd64-8287-4771-a5b5-59eae5ee4d65"
        },
        "item": {
          "id": "32f8ef22-32d5-45ed-9fb3-dfde025ed643",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "515da88b-dff0-49c1-b1dc-f9bbe2a22c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b581082-a03a-4d30-8d85-ae5efcf7fe91",
        "cursor": {
          "ref": "9f9f05c1-0285-4b88-bf98-2ee8c687cafc",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7d388de3-4219-4755-9a9b-9c5fa972974a"
        },
        "item": {
          "id": "7b581082-a03a-4d30-8d85-ae5efcf7fe91",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ccad3a4c-b090-4ea2-b87d-7f6339d9a532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7c786f-ebef-4bb5-a61d-414ba2bd168e",
        "cursor": {
          "ref": "ed590ec1-61d6-42d9-bad2-2e8177106f0a",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f7fe9d4e-bc66-4c67-9dc1-3cae914e14b4"
        },
        "item": {
          "id": "8e7c786f-ebef-4bb5-a61d-414ba2bd168e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "00f0b218-8e02-4b4e-a024-b5f956a09212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768862f3-33f7-4080-8861-f5724396fb35",
        "cursor": {
          "ref": "851f9a4a-5b80-43d5-af85-8965457af663",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2dc0e8ee-de1e-4023-a380-44e858ad307d"
        },
        "item": {
          "id": "768862f3-33f7-4080-8861-f5724396fb35",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "01ed9910-4e13-4051-947d-318228beb079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b806c4ca-74f8-40f0-8c20-97b344528315",
        "cursor": {
          "ref": "f00ccdc7-81c8-498b-a7bb-a96cb4fcd1d3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "67a783f3-15d2-4763-b784-af6f9e9bd312"
        },
        "item": {
          "id": "b806c4ca-74f8-40f0-8c20-97b344528315",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "69dd394e-7181-4a8a-89cd-96dd1701299c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93483dd8-7886-4b57-ac17-85fc8913c0d1",
        "cursor": {
          "ref": "2920e198-6006-4dc0-9d0d-0f005533f364",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f792ff5d-66df-4929-8328-e8ab96fe454a"
        },
        "item": {
          "id": "93483dd8-7886-4b57-ac17-85fc8913c0d1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dcea7b11-b89c-4806-8436-7284c5a17d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92ea157-afdb-437c-8e7f-af954283d604",
        "cursor": {
          "ref": "85150795-4ca6-4838-b14a-439c23dc67dd",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "28488d2b-e5d1-438d-aa4a-8b90df2ad29c"
        },
        "item": {
          "id": "a92ea157-afdb-437c-8e7f-af954283d604",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f8da8f7f-946f-4b3f-b9a5-644020060c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b3c5b5-da39-41d6-8c6c-6d7695d63a85",
        "cursor": {
          "ref": "75c359cd-6561-44ec-930a-7212cf48c2c9",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "467d22b6-cb0e-4f29-bb7d-b1bf28bf61d3"
        },
        "item": {
          "id": "30b3c5b5-da39-41d6-8c6c-6d7695d63a85",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "98163ffc-87f9-4133-9528-04fe1b5f64ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4495bf78-d691-4b72-bdb3-f5ebe91962a8",
        "cursor": {
          "ref": "540857b1-d95b-4fbd-87e3-80b5a509bac8",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "79dd0506-9f6b-43b7-8bf6-963d3b05c1f6"
        },
        "item": {
          "id": "4495bf78-d691-4b72-bdb3-f5ebe91962a8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a306e3ca-930b-4aa0-a995-e1af98278651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310b2d47-7c76-4f49-8754-3b927261e726",
        "cursor": {
          "ref": "163f40f4-6fb6-4f6d-a135-0286249be554",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cf14caac-f402-4555-b41a-92d1641ea78c"
        },
        "item": {
          "id": "310b2d47-7c76-4f49-8754-3b927261e726",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "75674fd1-1313-4d29-987d-ea98f9a17b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead4910c-69cf-4fd9-8838-fb93b52afe93",
        "cursor": {
          "ref": "c68bc461-886f-4960-a95b-0650a931dfbc",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cd24d84b-e088-4bec-9e76-f7a9e56fe585"
        },
        "item": {
          "id": "ead4910c-69cf-4fd9-8838-fb93b52afe93",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e482eeb8-8723-4376-8727-252f4bda47ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9b9110-6b7f-4c59-99c1-fa52ef0039bf",
        "cursor": {
          "ref": "07cab0cb-1a65-4a7e-88d8-78776b72783e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5479db00-2c92-49e4-a94a-48460cdf510e"
        },
        "item": {
          "id": "ba9b9110-6b7f-4c59-99c1-fa52ef0039bf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1e1fa45e-4ae4-471e-9e4f-ceb8edacca9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153403b2-1cd1-4fc1-9681-d5a4adaaca45",
        "cursor": {
          "ref": "18bf2227-eae2-4f3b-8cbb-3fb59e08e898",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "72d47aa1-a896-4a0a-8bde-03f7b455c68b"
        },
        "item": {
          "id": "153403b2-1cd1-4fc1-9681-d5a4adaaca45",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7e960b07-6921-4d72-a525-ea17a24b84a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bc41f6-98d7-4815-9462-6e431015c51a",
        "cursor": {
          "ref": "5da29438-a9c2-48fe-8299-e99ba9c1833c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0555bd6b-26c9-4de4-911e-90463a33304d"
        },
        "item": {
          "id": "85bc41f6-98d7-4815-9462-6e431015c51a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6efdc73e-fbb4-431b-aa88-1ef235b3e67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc543bd-f110-40e9-a126-c47b67b7b059",
        "cursor": {
          "ref": "626426b0-6aa7-4aad-a27f-b2e93253a89f",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c2e8dde1-c895-4a86-8117-68d1757b209e"
        },
        "item": {
          "id": "8dc543bd-f110-40e9-a126-c47b67b7b059",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f3084fe5-0889-47f6-9c9b-9b4afb606fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e82e22f-93ba-42a0-a8c3-5c092ff08057",
        "cursor": {
          "ref": "0bc7bd96-4764-4675-8678-b3060a3ec45c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5b6795f0-188a-4cb6-8c62-e9b0aafaded8"
        },
        "item": {
          "id": "8e82e22f-93ba-42a0-a8c3-5c092ff08057",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9953ae9e-e2c4-426d-b7b1-78fe867d3ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82be3b98-b034-4d5c-b21f-f65d9573baa3",
        "cursor": {
          "ref": "119c79e5-5e1b-4801-9955-d7e3a680fa40",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "311419ab-42fb-480e-b660-1c48902b6cd4"
        },
        "item": {
          "id": "82be3b98-b034-4d5c-b21f-f65d9573baa3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "11206972-3a76-451e-86f5-217ed3a7e9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a816ae-0fb0-46f9-977f-21c6d329626c",
        "cursor": {
          "ref": "0fecb74d-7567-4ddb-ab79-7b12872dd1a1",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1c01d8a0-2302-4718-8a3d-e005c459d759"
        },
        "item": {
          "id": "79a816ae-0fb0-46f9-977f-21c6d329626c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "278c0cbd-a4b2-4805-8be6-b018acefadd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1037cce2-174e-4d37-8c91-4f4178d70350",
        "cursor": {
          "ref": "eeb255cd-589f-4a93-9f81-04d6e0f41815",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5508dda0-8589-4605-84fd-8ad563aa1f7c"
        },
        "item": {
          "id": "1037cce2-174e-4d37-8c91-4f4178d70350",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "957825a3-4ce0-4764-86a3-ef76a74a4f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a019f48a-ae4d-4a87-baf0-1a6c445929a4",
        "cursor": {
          "ref": "e24c0889-6d4c-4417-92e1-2f87609f136d",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "47f241da-8d96-4d39-a072-2e910989382c"
        },
        "item": {
          "id": "a019f48a-ae4d-4a87-baf0-1a6c445929a4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8c82e4d1-7906-4241-ba50-a181a5fc1998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b21baf-21d2-4851-8baa-5792989cff6a",
        "cursor": {
          "ref": "5a4c21ee-7648-46d7-bb32-02bbfde9af89",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8bf6a0d0-3e2c-4698-a845-35c711c6fc20"
        },
        "item": {
          "id": "86b21baf-21d2-4851-8baa-5792989cff6a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8c94f6c1-feda-4715-860e-691085483382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236067df-e6eb-459e-9ba2-7a821e734716",
        "cursor": {
          "ref": "98e0abaf-f317-4761-8a2c-81ba7905528f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3fe32cac-cd8f-49f5-a555-a8afef75fedb"
        },
        "item": {
          "id": "236067df-e6eb-459e-9ba2-7a821e734716",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fdb35838-74bc-48ef-b55d-da6abd28e2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9829072-7e67-4845-9a83-6ff245deaf6a",
        "cursor": {
          "ref": "e56a0f2c-0fb3-4478-9f3f-9a1e80b21316",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d64cb720-7c34-4744-8aa8-206a4d982e5d"
        },
        "item": {
          "id": "b9829072-7e67-4845-9a83-6ff245deaf6a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b4b9bddb-e1b0-4aae-93cb-2c8d0dca742a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7df6fa8-5726-42d2-9754-96e681486901",
        "cursor": {
          "ref": "0be761de-671b-4117-a04a-fc7dc7969746",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a9397e30-07ee-4228-9e89-954bbb70da71"
        },
        "item": {
          "id": "b7df6fa8-5726-42d2-9754-96e681486901",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "91eb14ef-bbd3-4a49-8aed-51f9647461e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66ad687-2938-40ba-b20f-6835dc5c0361",
        "cursor": {
          "ref": "e0f15bd7-51d4-4b2b-90d7-501bbb1070bc",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fb5d22cd-1cc7-4cb4-9ec9-972dfe6b7a33"
        },
        "item": {
          "id": "d66ad687-2938-40ba-b20f-6835dc5c0361",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "68859f54-c4cf-41cf-967a-22c685e94a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dd7d6f-4e19-4fb9-b98e-599ba5a2c9a5",
        "cursor": {
          "ref": "4aa67c5d-3d58-49b6-86be-38a340f44f4d",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5196f570-4dc3-4cc9-a2d8-6b0abea7f7a4"
        },
        "item": {
          "id": "73dd7d6f-4e19-4fb9-b98e-599ba5a2c9a5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "64863278-8355-47f0-85e7-d9fc0b407ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77df0b3-68de-4672-8bf8-741671cb483e",
        "cursor": {
          "ref": "7685c817-aeba-4fa2-a19b-6dc599faf4bc",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "79efc4bf-8047-4ff0-87e6-464c6c440bd1"
        },
        "item": {
          "id": "d77df0b3-68de-4672-8bf8-741671cb483e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "333ec393-2aa7-426c-a493-a629a38f55f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1de602-e758-4cee-a7bd-15865e5dd0ed",
        "cursor": {
          "ref": "74cb0fc6-143b-48d0-842a-c003064c7007",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7c4a0312-6d48-4f90-a31d-701fe46309e1"
        },
        "item": {
          "id": "1a1de602-e758-4cee-a7bd-15865e5dd0ed",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a7ae123e-0092-4cbd-b2a9-94cecabf97ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d050a1-c570-422d-8bc7-85c99c44330b",
        "cursor": {
          "ref": "1dbd19e5-2db1-49ce-9ad6-54f80d9c2e03",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c3321e94-6870-47cd-a06c-df0b8d8801f0"
        },
        "item": {
          "id": "68d050a1-c570-422d-8bc7-85c99c44330b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e3503401-21b3-4c5f-8480-47d119b917f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bba780-0d12-4294-8490-649069dfdadf",
        "cursor": {
          "ref": "61506fed-b69f-4b68-a4bf-28950fe51b53",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5eddbf2d-aa9f-4e87-9599-9b227fe527f5"
        },
        "item": {
          "id": "12bba780-0d12-4294-8490-649069dfdadf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "474b7add-7c1d-4056-948e-0ec76d97d3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d8e5ce-7c8e-433e-af37-c76091bc0a62",
        "cursor": {
          "ref": "a690454b-bc3f-450b-95bc-79126f594f14",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "94bc5789-cd52-440e-ac18-ee794e5f41a2"
        },
        "item": {
          "id": "51d8e5ce-7c8e-433e-af37-c76091bc0a62",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3809340c-06b4-418e-8801-6b6442218b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccb292a-178e-43ec-9e61-23c022abff04",
        "cursor": {
          "ref": "5f17bd91-355d-4b31-991d-a28a9a3f010b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0caf1383-be33-4b0f-8049-dd18fd7826c1"
        },
        "item": {
          "id": "3ccb292a-178e-43ec-9e61-23c022abff04",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0cd67dae-7e8b-4f2e-bf4e-ca6eb1d3a13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc8d2e7-b269-4c7a-9970-3b35d8cfe8c4",
        "cursor": {
          "ref": "d1662755-064b-46d2-8d68-dcc1caf71b3c",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2ff0f6c0-435e-406e-b404-08a351efd04e"
        },
        "item": {
          "id": "8cc8d2e7-b269-4c7a-9970-3b35d8cfe8c4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e64035be-8465-4a38-81e9-e2a4a8f31456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6e260f-940d-4a84-b1a2-eeb1fbd7c8e4",
        "cursor": {
          "ref": "b5dde029-3b37-40a1-803f-16100de389d4",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "401bb1c3-5e5b-4b87-97b2-f22421e98136"
        },
        "item": {
          "id": "6a6e260f-940d-4a84-b1a2-eeb1fbd7c8e4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7454de41-c53b-47a2-bfea-dc3dc93732cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c48b83-b338-4488-8876-b0dd8d355fd0",
        "cursor": {
          "ref": "716e0831-3b51-4726-8133-be3c3a0873cb",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d3129e3c-c191-4882-94aa-dd622c1090f5"
        },
        "item": {
          "id": "e8c48b83-b338-4488-8876-b0dd8d355fd0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9e461183-6174-4489-8275-aab9e13b7267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf1303f-ef7b-450a-b032-c3626711060d",
        "cursor": {
          "ref": "c585f803-8263-4437-9b99-3482cdec3878",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "899ff5d2-9d5f-4bf3-95ce-d7154b6488ae"
        },
        "item": {
          "id": "fdf1303f-ef7b-450a-b032-c3626711060d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b834fa55-39c6-41ac-bbb2-c216a969d62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff51f5b4-1df1-42ad-92f8-396da11d9181",
        "cursor": {
          "ref": "98623359-dbf3-4284-b75f-f96969f06256",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e9265dab-ccbf-4187-83e0-10dc760c6a22"
        },
        "item": {
          "id": "ff51f5b4-1df1-42ad-92f8-396da11d9181",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2f05d095-d28d-4653-95bd-3258b3c3c017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173e2904-b37f-4469-8d84-d0ae870bc9f2",
        "cursor": {
          "ref": "00ab6fb5-3752-4faa-abb0-aae495286847",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1f0bc6b5-bd09-491f-839e-220b14e80a34"
        },
        "item": {
          "id": "173e2904-b37f-4469-8d84-d0ae870bc9f2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d7ae50ca-c90f-4fc2-8951-ea41e353daa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40949c3c-80d1-48ec-bbf8-2a3b563be0fb",
        "cursor": {
          "ref": "e25c26e3-b874-4740-9248-4071d1345b41",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4cf887d7-28a3-4118-935f-123893e6db38"
        },
        "item": {
          "id": "40949c3c-80d1-48ec-bbf8-2a3b563be0fb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9d2d1aa1-8dbf-45b4-8b51-2facdf056523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e35442-ee58-46a6-b574-7e4daa4e11ea",
        "cursor": {
          "ref": "5c81027d-3f63-4ba9-85ce-35585b2d1049",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b39d6d1b-9525-4844-982f-58ee4da729c0"
        },
        "item": {
          "id": "15e35442-ee58-46a6-b574-7e4daa4e11ea",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "76a721be-54ca-4aaf-94f1-69d4f0a55c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad445f15-55a0-4997-9d0c-4794ebb18b3a",
        "cursor": {
          "ref": "3a16f6e4-606f-4b11-9de5-191910a0f5be",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a367c9d4-dbb0-44bd-87a7-35e9c1e93a65"
        },
        "item": {
          "id": "ad445f15-55a0-4997-9d0c-4794ebb18b3a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2a38dd03-5b9a-4102-9763-991a5691b2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52eeb13-f9b2-4c60-844c-ebdc4538085c",
        "cursor": {
          "ref": "2775c465-abe4-4f20-91cc-cc9c0db7dd4e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2783778e-98ad-4f64-814c-c4f2f9c5e231"
        },
        "item": {
          "id": "f52eeb13-f9b2-4c60-844c-ebdc4538085c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b9c0ec23-5719-403c-bdb6-4d330765a690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d42215-531a-4b18-bb09-76c7b605b9a4",
        "cursor": {
          "ref": "098a90c4-b1a8-4b4c-86f0-7bebdace9fc0",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "07e62286-b278-4717-bace-790422127c5e"
        },
        "item": {
          "id": "32d42215-531a-4b18-bb09-76c7b605b9a4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "391c5114-469a-4507-b032-3fbc1beb7c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8ba94e-374b-4c38-9eaa-a3110e23f4a5",
        "cursor": {
          "ref": "378a28c5-f24d-4c21-9db5-85be274f14fd",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e7fa37b7-0a9d-4e3a-b86e-a028ac1bfc65"
        },
        "item": {
          "id": "5b8ba94e-374b-4c38-9eaa-a3110e23f4a5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4507d338-df49-4260-ac6d-755642dcd811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedf98a3-c202-4181-ac37-afedf2ccfe8c",
        "cursor": {
          "ref": "7d2c6c91-578d-4482-9ffe-63068d00b6b4",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bb6e9b8b-a4b3-48f4-9a9c-6688ba109098"
        },
        "item": {
          "id": "fedf98a3-c202-4181-ac37-afedf2ccfe8c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f7c42956-f8f0-46e8-b256-6b08fe726841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abff64de-80b0-46a7-ad93-362694e748fe",
        "cursor": {
          "ref": "2f7bd562-c3c9-455d-94cc-76fbc29f8655",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a6704f1c-bc31-4ac3-a274-9ad8b835bdc4"
        },
        "item": {
          "id": "abff64de-80b0-46a7-ad93-362694e748fe",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "eb5be561-48f8-45dc-83d7-8071f0e6a3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180229b4-93ab-4a8d-b03c-ed8a13b7c866",
        "cursor": {
          "ref": "00a42314-bbb8-4b7d-903e-c4904d3cbfba",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "066754ce-5c45-4461-97ac-cfe45fc8f37f"
        },
        "item": {
          "id": "180229b4-93ab-4a8d-b03c-ed8a13b7c866",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "21a29ae7-0da7-47e4-adde-abf22b0c350a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572375ad-4c4e-4628-9583-bbedc42af278",
        "cursor": {
          "ref": "303bb237-bfad-4a2a-90c2-1bc4e22cabbf",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c94cab75-9bb3-45b1-bbd1-ca0a49a575a5"
        },
        "item": {
          "id": "572375ad-4c4e-4628-9583-bbedc42af278",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3e22b346-81e7-4820-a48f-8e98dbf6128e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c429aa-262f-4adb-8554-ac757ae53d99",
        "cursor": {
          "ref": "f31fdbd9-84d3-490a-88e9-c986f51283e4",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3dd10732-7445-44a7-a272-45823f61ae1e"
        },
        "item": {
          "id": "04c429aa-262f-4adb-8554-ac757ae53d99",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7fd4183e-f432-45a1-9bf5-2aef8413a05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc86df8-7d44-4c64-a7c3-4a5f13a0ba0d",
        "cursor": {
          "ref": "55d34f19-672a-4a36-9674-00cffc81597f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bd2832be-aa78-4628-adfe-9984955fa761"
        },
        "item": {
          "id": "afc86df8-7d44-4c64-a7c3-4a5f13a0ba0d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "02bf4a84-2b4e-45c4-8524-69120238289c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27385eb5-d26d-4a6e-9de8-0894eef6f3e6",
        "cursor": {
          "ref": "f894eae5-650e-4590-abca-1eed54a03b2e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dfe601b8-2626-4806-aa9a-27b522b44df5"
        },
        "item": {
          "id": "27385eb5-d26d-4a6e-9de8-0894eef6f3e6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4d38a8a3-4ded-43db-9b0a-2f5614edae0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5344547-c79e-42ea-9dcd-69ff37fc18a9",
        "cursor": {
          "ref": "583bc47e-7698-4355-8de9-535a06197c6c",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "27e214cf-9f1d-459b-ab39-7e371448ec4f"
        },
        "item": {
          "id": "f5344547-c79e-42ea-9dcd-69ff37fc18a9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "30d0dedb-356b-4847-9dc2-cf66bd499359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd79af74-950c-4cd0-950e-8411704ffd49",
        "cursor": {
          "ref": "5597b926-5911-4f99-aa9e-a0682b85f368",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5a34fe31-5f31-4df7-a132-66a3175034f5"
        },
        "item": {
          "id": "dd79af74-950c-4cd0-950e-8411704ffd49",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "74cb7524-2cab-476d-8db1-992c4593a240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4869e3-ed0c-483d-ae6b-3525ae6801e9",
        "cursor": {
          "ref": "6e3b2994-a346-401b-b600-a8b8f359fa77",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "41aff73d-d004-442e-b775-99dfe00716f3"
        },
        "item": {
          "id": "ec4869e3-ed0c-483d-ae6b-3525ae6801e9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f6e411ce-4960-434c-9e93-d6c490f70bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e660f732-5170-411a-b3bd-a8526c8f46a8",
        "cursor": {
          "ref": "034a774a-ed48-4188-8ab6-d329d82a6dff",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7d1e0592-e828-4ad9-aece-3e7290108eed"
        },
        "item": {
          "id": "e660f732-5170-411a-b3bd-a8526c8f46a8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "57363853-0f0a-406b-9fe5-febcabf7ac7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93589d5a-0086-4d7f-bc4c-67606c7f6827",
        "cursor": {
          "ref": "3db47429-252e-454c-9f4f-20dad73809d8",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "07d84594-53cf-4493-9d5d-aeee6a057a9e"
        },
        "item": {
          "id": "93589d5a-0086-4d7f-bc4c-67606c7f6827",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0264f302-7c50-4d04-96f9-551c46d11f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032d2d46-d1fb-4eca-bfc3-e8651a809860",
        "cursor": {
          "ref": "2b6ff817-b175-4199-a811-950f124400b3",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6c7166e4-1fb6-48dc-b2a1-c989cb843ff4"
        },
        "item": {
          "id": "032d2d46-d1fb-4eca-bfc3-e8651a809860",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b0a58d7a-218e-4cc7-b59a-64eee8eaaf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c450c6-48cd-4d88-a6ff-d5cca3eae3ed",
        "cursor": {
          "ref": "85db13bc-b170-4e25-b370-37f9a35984c1",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ba01d81e-ff46-4ce3-88df-b262827c815f"
        },
        "item": {
          "id": "b3c450c6-48cd-4d88-a6ff-d5cca3eae3ed",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "680276d9-b8ca-46a2-ac05-7d9cf6e560be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57779c70-bbd9-4c6f-bd4c-d9935f4bbb17",
        "cursor": {
          "ref": "b38dc220-bf26-4803-bf7e-07608e0bda96",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "371049c3-2fc5-43d4-8940-35903916f542"
        },
        "item": {
          "id": "57779c70-bbd9-4c6f-bd4c-d9935f4bbb17",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "457913c0-cbca-4bc9-967d-2d39cfc209b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95195fed-3b51-4e41-9741-f6184aedc8c8",
        "cursor": {
          "ref": "c79942d9-1ccb-4299-a6b4-d5982eb96fb2",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "96dbf356-2287-4f65-8238-a9bda5d3356e"
        },
        "item": {
          "id": "95195fed-3b51-4e41-9741-f6184aedc8c8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "419dccbf-8287-44d6-8b81-8f532a6e5bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5985035-5a71-4b16-a0c8-bc22fe4e3570",
        "cursor": {
          "ref": "f423d995-26b5-432b-9056-6433d595c037",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "46ec6051-a55a-4d3b-b01c-5e23039e94a1"
        },
        "item": {
          "id": "d5985035-5a71-4b16-a0c8-bc22fe4e3570",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d7268718-1a2d-4fe5-bac3-4ab0193b85b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3bdca3-eaa5-4072-9a8b-f38cbf7ea6a4",
        "cursor": {
          "ref": "b10e000e-6afd-4fae-938d-270c89384602",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "306cbe81-0251-4170-af94-2d7860edc592"
        },
        "item": {
          "id": "ed3bdca3-eaa5-4072-9a8b-f38cbf7ea6a4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6943a333-199a-47cf-b594-9df8fb94946f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6bf62d-637d-4f07-8be7-2f32151251c2",
        "cursor": {
          "ref": "6bd18ef5-0b6f-464f-af50-742bba4119fd",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "85b52141-87d1-4e9c-b837-7dbbfbca40fc"
        },
        "item": {
          "id": "2a6bf62d-637d-4f07-8be7-2f32151251c2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "90253f6a-6acb-460d-bae8-efcadeec2b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6581ccd6-669b-465b-aef4-251bf12d31eb",
        "cursor": {
          "ref": "7022daaf-82cc-4d53-9fc1-ba7f022334a2",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "19bc6ca6-2ec4-4413-99b7-e7a0a28fd5ce"
        },
        "item": {
          "id": "6581ccd6-669b-465b-aef4-251bf12d31eb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "69123f5d-571e-49fc-9aee-5f7a42620bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72703bcf-4dcf-45a2-9e11-80c02bd6ba1a",
        "cursor": {
          "ref": "7dbbbd98-9a7a-4b1a-9b38-a28564ce0939",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "04e46963-7618-494d-8ab7-058231fa81e7"
        },
        "item": {
          "id": "72703bcf-4dcf-45a2-9e11-80c02bd6ba1a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "95103328-d9f6-40c1-88bd-62a289e4867c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55c69b7-c2b8-40d8-9a7d-eebf23c720e9",
        "cursor": {
          "ref": "d1022d35-f69d-4303-9c2d-a1a6d7fdbcbe",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8fdf498c-2d15-4b3a-9a66-3f81f1cb8dc3"
        },
        "item": {
          "id": "a55c69b7-c2b8-40d8-9a7d-eebf23c720e9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1d91c32e-593a-4c6b-b966-9d8e719d3f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c26d812-44dd-448f-be74-7b2ee10ff458",
        "cursor": {
          "ref": "e1cc1f48-d64c-44cc-a444-3b836a0c5a77",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4f705774-9570-4d92-879f-a3274c1b6ce7"
        },
        "item": {
          "id": "1c26d812-44dd-448f-be74-7b2ee10ff458",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ba0e5c99-4e4b-40a6-a8f9-4b5ac00955f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d599b7-bb2f-431a-bf6f-6d47388ec3bd",
        "cursor": {
          "ref": "ed78ce43-a533-47a2-9997-0d0b4c0673f1",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dc1809b9-9d6c-4e65-b5c7-45526c25ba7f"
        },
        "item": {
          "id": "04d599b7-bb2f-431a-bf6f-6d47388ec3bd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "71a9f3df-6745-4018-880f-6668d8501d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b515f29-4a0a-4a47-a0bf-3e6fdd72659a",
        "cursor": {
          "ref": "61bda27d-36b0-4cc8-9fa6-dd3460c79874",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b510f600-9c52-44a1-90d5-9b4fcd355c9f"
        },
        "item": {
          "id": "4b515f29-4a0a-4a47-a0bf-3e6fdd72659a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c33e086b-3da8-4dd4-afcb-85b0e857b7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eaa224b-a3c6-4575-a642-f7d225217639",
        "cursor": {
          "ref": "a92583f6-6d3d-43fc-b15a-8ac85f5d2dd5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "45c97cb5-b7a8-4315-8a89-6e0e6b1cf4a6"
        },
        "item": {
          "id": "2eaa224b-a3c6-4575-a642-f7d225217639",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4efe973d-acb9-47c6-b8c3-3e66ae86d9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b643b4a4-426b-4836-82b3-3a9c20515dcd",
        "cursor": {
          "ref": "c100c6b5-e207-4ece-b556-e5c5e7f09ec6",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d8edb681-1aee-4506-b77c-8623b470709e"
        },
        "item": {
          "id": "b643b4a4-426b-4836-82b3-3a9c20515dcd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2cd4955d-8921-4d09-9e55-01ecf8e2c602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ae122e-8a29-4359-8b1c-11ebec6f46e5",
        "cursor": {
          "ref": "fc6f2f78-af2d-49c9-b44f-d2a8d746aff8",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "62f0f5ee-369e-466c-b82a-3ac620aee4a8"
        },
        "item": {
          "id": "b7ae122e-8a29-4359-8b1c-11ebec6f46e5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8982427b-d763-4323-84ad-fba7e0565f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04007582-74d7-49ab-bb1f-e8100ae3a2a1",
        "cursor": {
          "ref": "c569da35-8df3-45ca-92d1-5df6529018da",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "48706df3-959b-4ea6-a255-e0a1c9704d8d"
        },
        "item": {
          "id": "04007582-74d7-49ab-bb1f-e8100ae3a2a1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "434e23b1-c2e0-467b-b7dd-e4fb0ac55e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05aaf8ad-4ae2-4019-afd6-c129070e020d",
        "cursor": {
          "ref": "df1f9d3b-dc46-45cd-961a-37ce8d3d62e3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "546b8c12-34eb-4b2f-9ccd-0f174b700f3f"
        },
        "item": {
          "id": "05aaf8ad-4ae2-4019-afd6-c129070e020d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "838d3d7d-e37e-432e-b689-c406aa8e5ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7781e15a-fe6c-48b1-839f-8e03a1c033ba",
        "cursor": {
          "ref": "fe35d1ec-0f8c-4571-b6b8-613c451650f2",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ce059745-71bd-44f8-9209-46605bb6b171"
        },
        "item": {
          "id": "7781e15a-fe6c-48b1-839f-8e03a1c033ba",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b6f7204b-2efa-467e-8629-2e595a45f687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec5c75e-e5bb-4c99-8288-b0766b548a22",
        "cursor": {
          "ref": "7b1543ec-29b1-4e06-8128-cee80ffd3e1c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ea2bfc85-c4d3-4e69-8d8a-62d541e19a63"
        },
        "item": {
          "id": "3ec5c75e-e5bb-4c99-8288-b0766b548a22",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "aaf4d270-11b4-438c-a45d-bdb94f47e2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d61ecce-cff6-494b-9657-6f87628cc966",
        "cursor": {
          "ref": "7b3cd623-c6d2-4c0a-a767-5a408298932d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5dc9d3db-7e55-48f6-88bf-78b753d78423"
        },
        "item": {
          "id": "4d61ecce-cff6-494b-9657-6f87628cc966",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5ad1311f-40e2-4a3d-9194-c3d19143117f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b0165e-3d5e-4b1e-9b3d-4ce48113051b",
        "cursor": {
          "ref": "9b6d28f8-44d6-4629-989f-d103b9215a60",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "1c47bd42-c91b-4707-a504-e966693f766b"
        },
        "item": {
          "id": "d1b0165e-3d5e-4b1e-9b3d-4ce48113051b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "36b42561-aee8-4a8d-90a4-45aa2c543e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74413f1-dfb3-4083-9937-439d05e9790a",
        "cursor": {
          "ref": "2ca05526-11a6-491d-b2de-863451edc836",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "27529df0-52f1-4bbc-aab0-03c8647510ec"
        },
        "item": {
          "id": "b74413f1-dfb3-4083-9937-439d05e9790a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7844eade-9d63-4d22-92d1-f9bf2b5848d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acb4f9b-5657-4628-ab28-74fec0f01b39",
        "cursor": {
          "ref": "be5ca7f7-c979-45bd-b735-f44acce7fdb4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d17cf182-3eed-4bd9-8c82-1785afddaaf3"
        },
        "item": {
          "id": "0acb4f9b-5657-4628-ab28-74fec0f01b39",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a4b4bab6-4302-4877-a180-45e91d5644f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0917f8a9-3e54-48d2-afce-8a1dc4532f8d",
        "cursor": {
          "ref": "fdd29792-7ead-438b-934e-35c88bdb729f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b1af9547-a5ce-4490-bc11-7a0225dc8d27"
        },
        "item": {
          "id": "0917f8a9-3e54-48d2-afce-8a1dc4532f8d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d56368b3-d4ca-4314-8ee4-87354afb63a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fa09b2-7264-4b30-91b9-1bbe144d1f59",
        "cursor": {
          "ref": "c957b7b0-0664-4306-a015-892ced059f5e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "40ab02da-4fca-49c4-802b-de39912ca2f0"
        },
        "item": {
          "id": "04fa09b2-7264-4b30-91b9-1bbe144d1f59",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8af48c0a-7545-4f2c-ae4e-9c0cf4d09d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbec383-a4d5-41fe-ad74-b14cd1bc6a38",
        "cursor": {
          "ref": "99063e12-c4fa-435b-b5f4-3997985fa925",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b8229f5a-5a09-4641-927f-d7d108e073f6"
        },
        "item": {
          "id": "2bbec383-a4d5-41fe-ad74-b14cd1bc6a38",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b93fd994-6256-42f8-b484-10820dd58d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878c51fa-e7a1-4bb9-b822-d7166a711e79",
        "cursor": {
          "ref": "645c99b0-b9b9-44df-b57d-4ef78c973ee4",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "dd213680-e712-476c-8f84-9031e0633788"
        },
        "item": {
          "id": "878c51fa-e7a1-4bb9-b822-d7166a711e79",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8cff7bc2-ac37-4a1b-8402-dfca660dbda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bcd4ea-b1bd-4fe5-9926-16fa2e77dd73",
        "cursor": {
          "ref": "24045a07-8893-4992-ad87-33f6874063d8",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "48f7ecd4-72d6-4a75-a27e-0729502ecc80"
        },
        "item": {
          "id": "b1bcd4ea-b1bd-4fe5-9926-16fa2e77dd73",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cc964350-cda1-492b-913f-8905179ca183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae12a96a-a8e2-40e1-8737-1d67de3ba9a8",
        "cursor": {
          "ref": "bb3960b6-53b9-44b4-8e4a-721e829187b2",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "60a9d5d8-bd40-4013-bcac-dc07d872a73e"
        },
        "item": {
          "id": "ae12a96a-a8e2-40e1-8737-1d67de3ba9a8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "177b1d82-d254-4986-8cb7-cb227871b893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45605092-6f45-46d2-8dda-d99fc4cc2c0b",
        "cursor": {
          "ref": "b0b28b07-9c67-42eb-bae6-182dada909d0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a9a45a74-413c-4f07-8ed7-59df13e98adf"
        },
        "item": {
          "id": "45605092-6f45-46d2-8dda-d99fc4cc2c0b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "af9b5fd8-dfee-4ffe-b557-30a5b52339ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2c089b-14d2-4d1b-998f-311c188ff277",
        "cursor": {
          "ref": "d19df650-21b5-4ae1-a89e-986b617ad9c7",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "808d7f36-1715-4058-afea-764fbab81689"
        },
        "item": {
          "id": "2d2c089b-14d2-4d1b-998f-311c188ff277",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "52d3f948-c425-4dc6-8ada-98772ad60054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2217f0-84a1-4299-9ec0-8a334e5f4a0a",
        "cursor": {
          "ref": "0f562a7b-55b3-49d1-b4e2-b8099db82f71",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "32eeff2e-e41f-4d08-837f-6fcc975cb2f8"
        },
        "item": {
          "id": "8e2217f0-84a1-4299-9ec0-8a334e5f4a0a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c8336f74-0b84-462e-8c95-e4b7ea12dc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46701c8-f796-4e21-8cc5-d14289eccd76",
        "cursor": {
          "ref": "9b902e2f-e2eb-4afe-84e8-8f18d6fd8ad2",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b72c33fd-8055-44c9-93d0-0e20538ba346"
        },
        "item": {
          "id": "b46701c8-f796-4e21-8cc5-d14289eccd76",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d25ba60b-24bd-4869-a650-eeaf8d9691e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6e8d09-6b24-43a6-9342-2525e6b22c4a",
        "cursor": {
          "ref": "d05b9d16-d872-4c93-b159-a9b59597570d",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9adf66e8-248d-492a-9e8c-5faebe380f18"
        },
        "item": {
          "id": "cb6e8d09-6b24-43a6-9342-2525e6b22c4a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7997a307-4c17-426f-9931-8a401030c79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e483631-b8aa-4797-a554-26b6bb571a61",
        "cursor": {
          "ref": "e6b8d0b5-bdb3-4ca2-8f3d-d16d0b5f9c5e",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1173f6b8-cbaa-4e75-a45a-631d2dbb8360"
        },
        "item": {
          "id": "2e483631-b8aa-4797-a554-26b6bb571a61",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c448e7d8-e047-4427-9214-007c058f8a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a46e1e5-3fc0-454f-b077-c8a4756e3b0a",
        "cursor": {
          "ref": "3d4effea-5ea0-4fb1-8dff-ed432402829e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "520ddf5e-3df1-4144-a1cd-7b98be27704b"
        },
        "item": {
          "id": "2a46e1e5-3fc0-454f-b077-c8a4756e3b0a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5589fe20-57df-48a0-8f8f-4441c0571433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff39547-7ffb-4523-9262-b03b9bf53ec9",
        "cursor": {
          "ref": "4d77c18c-c2d0-4a1f-b62e-24becdd93d1c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f72dde31-4d3f-4886-b492-46b31477ade2"
        },
        "item": {
          "id": "dff39547-7ffb-4523-9262-b03b9bf53ec9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f9b90e62-b277-4a83-bb33-b2164b6d2bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d85617-444b-4b9f-a921-ba6023d7b6d2",
        "cursor": {
          "ref": "ebc69919-7d70-4fa8-8db8-b574b46c58a2",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e9704793-4fa0-4e81-b342-ff13eace1239"
        },
        "item": {
          "id": "01d85617-444b-4b9f-a921-ba6023d7b6d2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a3e4cda9-0791-4d86-b419-b481fe466618",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e77b6e-702b-4770-a8c7-dcf436926f73",
        "cursor": {
          "ref": "87610917-681e-492c-ba4a-3d8e30ce90f8",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d48de395-f831-4d79-9c93-6f073f9dafba"
        },
        "item": {
          "id": "50e77b6e-702b-4770-a8c7-dcf436926f73",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7643190f-c028-49ac-a663-744447903740",
          "status": "OK",
          "code": 200,
          "responseTime": 122,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08c477d-340a-42f0-8213-75db768395db",
        "cursor": {
          "ref": "52e0c62e-0274-479c-9ac3-c035d306f297",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d68371a7-5648-4d2c-a7c3-060f78179370"
        },
        "item": {
          "id": "d08c477d-340a-42f0-8213-75db768395db",
          "name": "credentials_verify"
        },
        "response": {
          "id": "771f8ad4-5630-40e2-a883-a5e70bfc6440",
          "status": "OK",
          "code": 200,
          "responseTime": 1476,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "67514683-271e-40d3-b153-32692ec37a13",
        "cursor": {
          "ref": "40876ce1-02eb-4127-8398-7d547c04fa19",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4b48712f-01e7-4b76-bc8c-b8af20971689"
        },
        "item": {
          "id": "67514683-271e-40d3-b153-32692ec37a13",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b2825c88-df73-4e86-b664-ab1f73afe0a7",
          "status": "OK",
          "code": 200,
          "responseTime": 1952,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2d161b-31ea-44d8-9561-1a3d676b5411",
        "cursor": {
          "ref": "993378ac-5873-4ccf-b0fe-bdc1704c913d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0725d1ac-2c9e-4b7a-8dba-e32d855de704"
        },
        "item": {
          "id": "ef2d161b-31ea-44d8-9561-1a3d676b5411",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ecd4f581-9d35-40e7-9762-1be151a03603",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2d161b-31ea-44d8-9561-1a3d676b5411",
        "cursor": {
          "ref": "993378ac-5873-4ccf-b0fe-bdc1704c913d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0725d1ac-2c9e-4b7a-8dba-e32d855de704"
        },
        "item": {
          "id": "ef2d161b-31ea-44d8-9561-1a3d676b5411",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ecd4f581-9d35-40e7-9762-1be151a03603",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081c88a2-778d-42f5-be0b-fea4d97610e0",
        "cursor": {
          "ref": "266f46c8-3dab-4d69-9a5e-8dd0734903e2",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b7a93aad-37fc-400e-a7f8-c36051782c26"
        },
        "item": {
          "id": "081c88a2-778d-42f5-be0b-fea4d97610e0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2fb12c16-f0e4-4563-b273-01449282b35d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c3dc3a-eb32-458f-b61e-1dc449b48e80",
        "cursor": {
          "ref": "12462b5a-31f7-4e0e-ad00-8fb3e87c72bc",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f5028e91-422e-4511-b95c-4023a7f2451b"
        },
        "item": {
          "id": "36c3dc3a-eb32-458f-b61e-1dc449b48e80",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6a914145-aac0-4c12-a802-2049a67f855d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}